/*
ArvanCloud S3 Services

<p/>

API version: 2006-03-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package storage

import (
	"encoding/json"
)

// checks if the DestinationAccessControlTranslation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DestinationAccessControlTranslation{}

// DestinationAccessControlTranslation struct for DestinationAccessControlTranslation
type DestinationAccessControlTranslation struct {
	Owner OwnerOverride `json:"Owner"`
}

// NewDestinationAccessControlTranslation instantiates a new DestinationAccessControlTranslation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDestinationAccessControlTranslation(owner OwnerOverride) *DestinationAccessControlTranslation {
	this := DestinationAccessControlTranslation{}
	this.Owner = owner
	return &this
}

// NewDestinationAccessControlTranslationWithDefaults instantiates a new DestinationAccessControlTranslation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDestinationAccessControlTranslationWithDefaults() *DestinationAccessControlTranslation {
	this := DestinationAccessControlTranslation{}
	return &this
}

// GetOwner returns the Owner field value
func (o *DestinationAccessControlTranslation) GetOwner() OwnerOverride {
	if o == nil {
		var ret OwnerOverride
		return ret
	}

	return o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value
// and a boolean to check if the value has been set.
func (o *DestinationAccessControlTranslation) GetOwnerOk() (*OwnerOverride, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Owner, true
}

// SetOwner sets field value
func (o *DestinationAccessControlTranslation) SetOwner(v OwnerOverride) {
	o.Owner = v
}

func (o DestinationAccessControlTranslation) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DestinationAccessControlTranslation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["Owner"] = o.Owner
	return toSerialize, nil
}

type NullableDestinationAccessControlTranslation struct {
	value *DestinationAccessControlTranslation
	isSet bool
}

func (v NullableDestinationAccessControlTranslation) Get() *DestinationAccessControlTranslation {
	return v.value
}

func (v *NullableDestinationAccessControlTranslation) Set(val *DestinationAccessControlTranslation) {
	v.value = val
	v.isSet = true
}

func (v NullableDestinationAccessControlTranslation) IsSet() bool {
	return v.isSet
}

func (v *NullableDestinationAccessControlTranslation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDestinationAccessControlTranslation(val *DestinationAccessControlTranslation) *NullableDestinationAccessControlTranslation {
	return &NullableDestinationAccessControlTranslation{value: val, isSet: true}
}

func (v NullableDestinationAccessControlTranslation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDestinationAccessControlTranslation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


