/*
ArvanCloud S3 Services

<p/>

API version: 2006-03-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package storage

import (
	"encoding/json"
)

// checks if the PutBucketWebsiteRequestWebsiteConfigurationErrorDocument type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PutBucketWebsiteRequestWebsiteConfigurationErrorDocument{}

// PutBucketWebsiteRequestWebsiteConfigurationErrorDocument struct for PutBucketWebsiteRequestWebsiteConfigurationErrorDocument
type PutBucketWebsiteRequestWebsiteConfigurationErrorDocument struct {
	Key string `json:"Key"`
}

// NewPutBucketWebsiteRequestWebsiteConfigurationErrorDocument instantiates a new PutBucketWebsiteRequestWebsiteConfigurationErrorDocument object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPutBucketWebsiteRequestWebsiteConfigurationErrorDocument(key string) *PutBucketWebsiteRequestWebsiteConfigurationErrorDocument {
	this := PutBucketWebsiteRequestWebsiteConfigurationErrorDocument{}
	this.Key = key
	return &this
}

// NewPutBucketWebsiteRequestWebsiteConfigurationErrorDocumentWithDefaults instantiates a new PutBucketWebsiteRequestWebsiteConfigurationErrorDocument object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPutBucketWebsiteRequestWebsiteConfigurationErrorDocumentWithDefaults() *PutBucketWebsiteRequestWebsiteConfigurationErrorDocument {
	this := PutBucketWebsiteRequestWebsiteConfigurationErrorDocument{}
	return &this
}

// GetKey returns the Key field value
func (o *PutBucketWebsiteRequestWebsiteConfigurationErrorDocument) GetKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Key
}

// GetKeyOk returns a tuple with the Key field value
// and a boolean to check if the value has been set.
func (o *PutBucketWebsiteRequestWebsiteConfigurationErrorDocument) GetKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Key, true
}

// SetKey sets field value
func (o *PutBucketWebsiteRequestWebsiteConfigurationErrorDocument) SetKey(v string) {
	o.Key = v
}

func (o PutBucketWebsiteRequestWebsiteConfigurationErrorDocument) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PutBucketWebsiteRequestWebsiteConfigurationErrorDocument) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["Key"] = o.Key
	return toSerialize, nil
}

type NullablePutBucketWebsiteRequestWebsiteConfigurationErrorDocument struct {
	value *PutBucketWebsiteRequestWebsiteConfigurationErrorDocument
	isSet bool
}

func (v NullablePutBucketWebsiteRequestWebsiteConfigurationErrorDocument) Get() *PutBucketWebsiteRequestWebsiteConfigurationErrorDocument {
	return v.value
}

func (v *NullablePutBucketWebsiteRequestWebsiteConfigurationErrorDocument) Set(val *PutBucketWebsiteRequestWebsiteConfigurationErrorDocument) {
	v.value = val
	v.isSet = true
}

func (v NullablePutBucketWebsiteRequestWebsiteConfigurationErrorDocument) IsSet() bool {
	return v.isSet
}

func (v *NullablePutBucketWebsiteRequestWebsiteConfigurationErrorDocument) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePutBucketWebsiteRequestWebsiteConfigurationErrorDocument(val *PutBucketWebsiteRequestWebsiteConfigurationErrorDocument) *NullablePutBucketWebsiteRequestWebsiteConfigurationErrorDocument {
	return &NullablePutBucketWebsiteRequestWebsiteConfigurationErrorDocument{value: val, isSet: true}
}

func (v NullablePutBucketWebsiteRequestWebsiteConfigurationErrorDocument) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePutBucketWebsiteRequestWebsiteConfigurationErrorDocument) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


