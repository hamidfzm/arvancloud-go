/*
ArvanCloud S3 Services

<p/>

API version: 2006-03-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package storage

import (
	"encoding/json"
	"fmt"
)

// ExistingObjectReplicationStatus the model 'ExistingObjectReplicationStatus'
type ExistingObjectReplicationStatus string

// List of ExistingObjectReplicationStatus
const (
	EXISTINGOBJECTREPLICATIONSTATUS_ENABLED ExistingObjectReplicationStatus = "Enabled"
	EXISTINGOBJECTREPLICATIONSTATUS_DISABLED ExistingObjectReplicationStatus = "Disabled"
)

// All allowed values of ExistingObjectReplicationStatus enum
var AllowedExistingObjectReplicationStatusEnumValues = []ExistingObjectReplicationStatus{
	"Enabled",
	"Disabled",
}

func (v *ExistingObjectReplicationStatus) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := ExistingObjectReplicationStatus(value)
	for _, existing := range AllowedExistingObjectReplicationStatusEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid ExistingObjectReplicationStatus", value)
}

// NewExistingObjectReplicationStatusFromValue returns a pointer to a valid ExistingObjectReplicationStatus
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewExistingObjectReplicationStatusFromValue(v string) (*ExistingObjectReplicationStatus, error) {
	ev := ExistingObjectReplicationStatus(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for ExistingObjectReplicationStatus: valid values are %v", v, AllowedExistingObjectReplicationStatusEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v ExistingObjectReplicationStatus) IsValid() bool {
	for _, existing := range AllowedExistingObjectReplicationStatusEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to ExistingObjectReplicationStatus value
func (v ExistingObjectReplicationStatus) Ptr() *ExistingObjectReplicationStatus {
	return &v
}

type NullableExistingObjectReplicationStatus struct {
	value *ExistingObjectReplicationStatus
	isSet bool
}

func (v NullableExistingObjectReplicationStatus) Get() *ExistingObjectReplicationStatus {
	return v.value
}

func (v *NullableExistingObjectReplicationStatus) Set(val *ExistingObjectReplicationStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableExistingObjectReplicationStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableExistingObjectReplicationStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableExistingObjectReplicationStatus(val *ExistingObjectReplicationStatus) *NullableExistingObjectReplicationStatus {
	return &NullableExistingObjectReplicationStatus{value: val, isSet: true}
}

func (v NullableExistingObjectReplicationStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableExistingObjectReplicationStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

