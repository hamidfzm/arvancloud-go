/*
ArvanCloud S3 Services

<p/>

API version: 2006-03-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package storage

import (
	"encoding/json"
)

// checks if the InventoryS3BucketDestination type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InventoryS3BucketDestination{}

// InventoryS3BucketDestination Contains the bucket name, file format, bucket owner (optional), and prefix (optional) where inventory results are published.
type InventoryS3BucketDestination struct {
	AccountId *string `json:"AccountId,omitempty"`
	Bucket string `json:"Bucket"`
	Format InventoryFormat `json:"Format"`
	Prefix *string `json:"Prefix,omitempty"`
	Encryption *InventoryS3BucketDestinationEncryption `json:"Encryption,omitempty"`
}

// NewInventoryS3BucketDestination instantiates a new InventoryS3BucketDestination object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInventoryS3BucketDestination(bucket string, format InventoryFormat) *InventoryS3BucketDestination {
	this := InventoryS3BucketDestination{}
	this.Bucket = bucket
	this.Format = format
	return &this
}

// NewInventoryS3BucketDestinationWithDefaults instantiates a new InventoryS3BucketDestination object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInventoryS3BucketDestinationWithDefaults() *InventoryS3BucketDestination {
	this := InventoryS3BucketDestination{}
	return &this
}

// GetAccountId returns the AccountId field value if set, zero value otherwise.
func (o *InventoryS3BucketDestination) GetAccountId() string {
	if o == nil || IsNil(o.AccountId) {
		var ret string
		return ret
	}
	return *o.AccountId
}

// GetAccountIdOk returns a tuple with the AccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InventoryS3BucketDestination) GetAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.AccountId) {
		return nil, false
	}
	return o.AccountId, true
}

// HasAccountId returns a boolean if a field has been set.
func (o *InventoryS3BucketDestination) HasAccountId() bool {
	if o != nil && !IsNil(o.AccountId) {
		return true
	}

	return false
}

// SetAccountId gets a reference to the given string and assigns it to the AccountId field.
func (o *InventoryS3BucketDestination) SetAccountId(v string) {
	o.AccountId = &v
}

// GetBucket returns the Bucket field value
func (o *InventoryS3BucketDestination) GetBucket() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Bucket
}

// GetBucketOk returns a tuple with the Bucket field value
// and a boolean to check if the value has been set.
func (o *InventoryS3BucketDestination) GetBucketOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Bucket, true
}

// SetBucket sets field value
func (o *InventoryS3BucketDestination) SetBucket(v string) {
	o.Bucket = v
}

// GetFormat returns the Format field value
func (o *InventoryS3BucketDestination) GetFormat() InventoryFormat {
	if o == nil {
		var ret InventoryFormat
		return ret
	}

	return o.Format
}

// GetFormatOk returns a tuple with the Format field value
// and a boolean to check if the value has been set.
func (o *InventoryS3BucketDestination) GetFormatOk() (*InventoryFormat, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Format, true
}

// SetFormat sets field value
func (o *InventoryS3BucketDestination) SetFormat(v InventoryFormat) {
	o.Format = v
}

// GetPrefix returns the Prefix field value if set, zero value otherwise.
func (o *InventoryS3BucketDestination) GetPrefix() string {
	if o == nil || IsNil(o.Prefix) {
		var ret string
		return ret
	}
	return *o.Prefix
}

// GetPrefixOk returns a tuple with the Prefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InventoryS3BucketDestination) GetPrefixOk() (*string, bool) {
	if o == nil || IsNil(o.Prefix) {
		return nil, false
	}
	return o.Prefix, true
}

// HasPrefix returns a boolean if a field has been set.
func (o *InventoryS3BucketDestination) HasPrefix() bool {
	if o != nil && !IsNil(o.Prefix) {
		return true
	}

	return false
}

// SetPrefix gets a reference to the given string and assigns it to the Prefix field.
func (o *InventoryS3BucketDestination) SetPrefix(v string) {
	o.Prefix = &v
}

// GetEncryption returns the Encryption field value if set, zero value otherwise.
func (o *InventoryS3BucketDestination) GetEncryption() InventoryS3BucketDestinationEncryption {
	if o == nil || IsNil(o.Encryption) {
		var ret InventoryS3BucketDestinationEncryption
		return ret
	}
	return *o.Encryption
}

// GetEncryptionOk returns a tuple with the Encryption field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *InventoryS3BucketDestination) GetEncryptionOk() (*InventoryS3BucketDestinationEncryption, bool) {
	if o == nil || IsNil(o.Encryption) {
		return nil, false
	}
	return o.Encryption, true
}

// HasEncryption returns a boolean if a field has been set.
func (o *InventoryS3BucketDestination) HasEncryption() bool {
	if o != nil && !IsNil(o.Encryption) {
		return true
	}

	return false
}

// SetEncryption gets a reference to the given InventoryS3BucketDestinationEncryption and assigns it to the Encryption field.
func (o *InventoryS3BucketDestination) SetEncryption(v InventoryS3BucketDestinationEncryption) {
	o.Encryption = &v
}

func (o InventoryS3BucketDestination) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InventoryS3BucketDestination) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AccountId) {
		toSerialize["AccountId"] = o.AccountId
	}
	toSerialize["Bucket"] = o.Bucket
	toSerialize["Format"] = o.Format
	if !IsNil(o.Prefix) {
		toSerialize["Prefix"] = o.Prefix
	}
	if !IsNil(o.Encryption) {
		toSerialize["Encryption"] = o.Encryption
	}
	return toSerialize, nil
}

type NullableInventoryS3BucketDestination struct {
	value *InventoryS3BucketDestination
	isSet bool
}

func (v NullableInventoryS3BucketDestination) Get() *InventoryS3BucketDestination {
	return v.value
}

func (v *NullableInventoryS3BucketDestination) Set(val *InventoryS3BucketDestination) {
	v.value = val
	v.isSet = true
}

func (v NullableInventoryS3BucketDestination) IsSet() bool {
	return v.isSet
}

func (v *NullableInventoryS3BucketDestination) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInventoryS3BucketDestination(val *InventoryS3BucketDestination) *NullableInventoryS3BucketDestination {
	return &NullableInventoryS3BucketDestination{value: val, isSet: true}
}

func (v NullableInventoryS3BucketDestination) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInventoryS3BucketDestination) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


