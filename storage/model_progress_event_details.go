/*
ArvanCloud S3 Services

<p/>

API version: 2006-03-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package storage

import (
	"encoding/json"
)

// checks if the ProgressEventDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ProgressEventDetails{}

// ProgressEventDetails struct for ProgressEventDetails
type ProgressEventDetails struct {
	BytesScanned *int32 `json:"BytesScanned,omitempty"`
	BytesProcessed *int32 `json:"BytesProcessed,omitempty"`
	BytesReturned *int32 `json:"BytesReturned,omitempty"`
}

// NewProgressEventDetails instantiates a new ProgressEventDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewProgressEventDetails() *ProgressEventDetails {
	this := ProgressEventDetails{}
	return &this
}

// NewProgressEventDetailsWithDefaults instantiates a new ProgressEventDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewProgressEventDetailsWithDefaults() *ProgressEventDetails {
	this := ProgressEventDetails{}
	return &this
}

// GetBytesScanned returns the BytesScanned field value if set, zero value otherwise.
func (o *ProgressEventDetails) GetBytesScanned() int32 {
	if o == nil || IsNil(o.BytesScanned) {
		var ret int32
		return ret
	}
	return *o.BytesScanned
}

// GetBytesScannedOk returns a tuple with the BytesScanned field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgressEventDetails) GetBytesScannedOk() (*int32, bool) {
	if o == nil || IsNil(o.BytesScanned) {
		return nil, false
	}
	return o.BytesScanned, true
}

// HasBytesScanned returns a boolean if a field has been set.
func (o *ProgressEventDetails) HasBytesScanned() bool {
	if o != nil && !IsNil(o.BytesScanned) {
		return true
	}

	return false
}

// SetBytesScanned gets a reference to the given int32 and assigns it to the BytesScanned field.
func (o *ProgressEventDetails) SetBytesScanned(v int32) {
	o.BytesScanned = &v
}

// GetBytesProcessed returns the BytesProcessed field value if set, zero value otherwise.
func (o *ProgressEventDetails) GetBytesProcessed() int32 {
	if o == nil || IsNil(o.BytesProcessed) {
		var ret int32
		return ret
	}
	return *o.BytesProcessed
}

// GetBytesProcessedOk returns a tuple with the BytesProcessed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgressEventDetails) GetBytesProcessedOk() (*int32, bool) {
	if o == nil || IsNil(o.BytesProcessed) {
		return nil, false
	}
	return o.BytesProcessed, true
}

// HasBytesProcessed returns a boolean if a field has been set.
func (o *ProgressEventDetails) HasBytesProcessed() bool {
	if o != nil && !IsNil(o.BytesProcessed) {
		return true
	}

	return false
}

// SetBytesProcessed gets a reference to the given int32 and assigns it to the BytesProcessed field.
func (o *ProgressEventDetails) SetBytesProcessed(v int32) {
	o.BytesProcessed = &v
}

// GetBytesReturned returns the BytesReturned field value if set, zero value otherwise.
func (o *ProgressEventDetails) GetBytesReturned() int32 {
	if o == nil || IsNil(o.BytesReturned) {
		var ret int32
		return ret
	}
	return *o.BytesReturned
}

// GetBytesReturnedOk returns a tuple with the BytesReturned field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ProgressEventDetails) GetBytesReturnedOk() (*int32, bool) {
	if o == nil || IsNil(o.BytesReturned) {
		return nil, false
	}
	return o.BytesReturned, true
}

// HasBytesReturned returns a boolean if a field has been set.
func (o *ProgressEventDetails) HasBytesReturned() bool {
	if o != nil && !IsNil(o.BytesReturned) {
		return true
	}

	return false
}

// SetBytesReturned gets a reference to the given int32 and assigns it to the BytesReturned field.
func (o *ProgressEventDetails) SetBytesReturned(v int32) {
	o.BytesReturned = &v
}

func (o ProgressEventDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ProgressEventDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BytesScanned) {
		toSerialize["BytesScanned"] = o.BytesScanned
	}
	if !IsNil(o.BytesProcessed) {
		toSerialize["BytesProcessed"] = o.BytesProcessed
	}
	if !IsNil(o.BytesReturned) {
		toSerialize["BytesReturned"] = o.BytesReturned
	}
	return toSerialize, nil
}

type NullableProgressEventDetails struct {
	value *ProgressEventDetails
	isSet bool
}

func (v NullableProgressEventDetails) Get() *ProgressEventDetails {
	return v.value
}

func (v *NullableProgressEventDetails) Set(val *ProgressEventDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableProgressEventDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableProgressEventDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableProgressEventDetails(val *ProgressEventDetails) *NullableProgressEventDetails {
	return &NullableProgressEventDetails{value: val, isSet: true}
}

func (v NullableProgressEventDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableProgressEventDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


