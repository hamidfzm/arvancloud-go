/*
ArvanCloud S3 Services

Testing MultipartAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package storage

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/hamidfzm/arvancloud-go/storage"
)

func Test_storage_MultipartAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test MultipartAPIService AbortMultipartUpload", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var bucket string
		var key string

		resp, httpRes, err := apiClient.MultipartAPI.AbortMultipartUpload(context.Background(), bucket, key).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test MultipartAPIService CompleteMultipartUpload", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var bucket string
		var key string

		resp, httpRes, err := apiClient.MultipartAPI.CompleteMultipartUpload(context.Background(), bucket, key).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test MultipartAPIService CreateMultipartUpload", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var bucket string
		var key string

		resp, httpRes, err := apiClient.MultipartAPI.CreateMultipartUpload(context.Background(), bucket, key).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test MultipartAPIService ListMultipartUploads", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var bucket string

		resp, httpRes, err := apiClient.MultipartAPI.ListMultipartUploads(context.Background(), bucket).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test MultipartAPIService ListParts", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var bucket string
		var key string

		resp, httpRes, err := apiClient.MultipartAPI.ListParts(context.Background(), bucket, key).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test MultipartAPIService UploadPart", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var bucket string
		var key string

		resp, httpRes, err := apiClient.MultipartAPI.UploadPart(context.Background(), bucket, key).Execute()

		require.Nil(t, err)
		require.NotNil(t, resp)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
