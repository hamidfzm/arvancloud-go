/*
ArvanCloud S3 Services

<p/>

API version: 2006-03-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package storage

import (
	"encoding/json"
)

// checks if the ReplicationRule type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReplicationRule{}

// ReplicationRule Specifies which ArvanCloud S3 objects to replicate and where to store the replicas.
type ReplicationRule struct {
	ID *string `json:"ID,omitempty"`
	Priority *int32 `json:"Priority,omitempty"`
	Prefix *string `json:"Prefix,omitempty"`
	Filter *ReplicationRuleFilter `json:"Filter,omitempty"`
	Status ReplicationRuleStatus `json:"Status"`
	SourceSelectionCriteria *ReplicationRuleSourceSelectionCriteria `json:"SourceSelectionCriteria,omitempty"`
	ExistingObjectReplication *ReplicationRuleExistingObjectReplication `json:"ExistingObjectReplication,omitempty"`
	Destination ReplicationRuleDestination `json:"Destination"`
	DeleteMarkerReplication *DeleteMarkerReplication `json:"DeleteMarkerReplication,omitempty"`
}

// NewReplicationRule instantiates a new ReplicationRule object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReplicationRule(status ReplicationRuleStatus, destination ReplicationRuleDestination) *ReplicationRule {
	this := ReplicationRule{}
	this.Status = status
	this.Destination = destination
	return &this
}

// NewReplicationRuleWithDefaults instantiates a new ReplicationRule object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReplicationRuleWithDefaults() *ReplicationRule {
	this := ReplicationRule{}
	return &this
}

// GetID returns the ID field value if set, zero value otherwise.
func (o *ReplicationRule) GetID() string {
	if o == nil || IsNil(o.ID) {
		var ret string
		return ret
	}
	return *o.ID
}

// GetIDOk returns a tuple with the ID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationRule) GetIDOk() (*string, bool) {
	if o == nil || IsNil(o.ID) {
		return nil, false
	}
	return o.ID, true
}

// HasID returns a boolean if a field has been set.
func (o *ReplicationRule) HasID() bool {
	if o != nil && !IsNil(o.ID) {
		return true
	}

	return false
}

// SetID gets a reference to the given string and assigns it to the ID field.
func (o *ReplicationRule) SetID(v string) {
	o.ID = &v
}

// GetPriority returns the Priority field value if set, zero value otherwise.
func (o *ReplicationRule) GetPriority() int32 {
	if o == nil || IsNil(o.Priority) {
		var ret int32
		return ret
	}
	return *o.Priority
}

// GetPriorityOk returns a tuple with the Priority field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationRule) GetPriorityOk() (*int32, bool) {
	if o == nil || IsNil(o.Priority) {
		return nil, false
	}
	return o.Priority, true
}

// HasPriority returns a boolean if a field has been set.
func (o *ReplicationRule) HasPriority() bool {
	if o != nil && !IsNil(o.Priority) {
		return true
	}

	return false
}

// SetPriority gets a reference to the given int32 and assigns it to the Priority field.
func (o *ReplicationRule) SetPriority(v int32) {
	o.Priority = &v
}

// GetPrefix returns the Prefix field value if set, zero value otherwise.
func (o *ReplicationRule) GetPrefix() string {
	if o == nil || IsNil(o.Prefix) {
		var ret string
		return ret
	}
	return *o.Prefix
}

// GetPrefixOk returns a tuple with the Prefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationRule) GetPrefixOk() (*string, bool) {
	if o == nil || IsNil(o.Prefix) {
		return nil, false
	}
	return o.Prefix, true
}

// HasPrefix returns a boolean if a field has been set.
func (o *ReplicationRule) HasPrefix() bool {
	if o != nil && !IsNil(o.Prefix) {
		return true
	}

	return false
}

// SetPrefix gets a reference to the given string and assigns it to the Prefix field.
func (o *ReplicationRule) SetPrefix(v string) {
	o.Prefix = &v
}

// GetFilter returns the Filter field value if set, zero value otherwise.
func (o *ReplicationRule) GetFilter() ReplicationRuleFilter {
	if o == nil || IsNil(o.Filter) {
		var ret ReplicationRuleFilter
		return ret
	}
	return *o.Filter
}

// GetFilterOk returns a tuple with the Filter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationRule) GetFilterOk() (*ReplicationRuleFilter, bool) {
	if o == nil || IsNil(o.Filter) {
		return nil, false
	}
	return o.Filter, true
}

// HasFilter returns a boolean if a field has been set.
func (o *ReplicationRule) HasFilter() bool {
	if o != nil && !IsNil(o.Filter) {
		return true
	}

	return false
}

// SetFilter gets a reference to the given ReplicationRuleFilter and assigns it to the Filter field.
func (o *ReplicationRule) SetFilter(v ReplicationRuleFilter) {
	o.Filter = &v
}

// GetStatus returns the Status field value
func (o *ReplicationRule) GetStatus() ReplicationRuleStatus {
	if o == nil {
		var ret ReplicationRuleStatus
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *ReplicationRule) GetStatusOk() (*ReplicationRuleStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *ReplicationRule) SetStatus(v ReplicationRuleStatus) {
	o.Status = v
}

// GetSourceSelectionCriteria returns the SourceSelectionCriteria field value if set, zero value otherwise.
func (o *ReplicationRule) GetSourceSelectionCriteria() ReplicationRuleSourceSelectionCriteria {
	if o == nil || IsNil(o.SourceSelectionCriteria) {
		var ret ReplicationRuleSourceSelectionCriteria
		return ret
	}
	return *o.SourceSelectionCriteria
}

// GetSourceSelectionCriteriaOk returns a tuple with the SourceSelectionCriteria field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationRule) GetSourceSelectionCriteriaOk() (*ReplicationRuleSourceSelectionCriteria, bool) {
	if o == nil || IsNil(o.SourceSelectionCriteria) {
		return nil, false
	}
	return o.SourceSelectionCriteria, true
}

// HasSourceSelectionCriteria returns a boolean if a field has been set.
func (o *ReplicationRule) HasSourceSelectionCriteria() bool {
	if o != nil && !IsNil(o.SourceSelectionCriteria) {
		return true
	}

	return false
}

// SetSourceSelectionCriteria gets a reference to the given ReplicationRuleSourceSelectionCriteria and assigns it to the SourceSelectionCriteria field.
func (o *ReplicationRule) SetSourceSelectionCriteria(v ReplicationRuleSourceSelectionCriteria) {
	o.SourceSelectionCriteria = &v
}

// GetExistingObjectReplication returns the ExistingObjectReplication field value if set, zero value otherwise.
func (o *ReplicationRule) GetExistingObjectReplication() ReplicationRuleExistingObjectReplication {
	if o == nil || IsNil(o.ExistingObjectReplication) {
		var ret ReplicationRuleExistingObjectReplication
		return ret
	}
	return *o.ExistingObjectReplication
}

// GetExistingObjectReplicationOk returns a tuple with the ExistingObjectReplication field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationRule) GetExistingObjectReplicationOk() (*ReplicationRuleExistingObjectReplication, bool) {
	if o == nil || IsNil(o.ExistingObjectReplication) {
		return nil, false
	}
	return o.ExistingObjectReplication, true
}

// HasExistingObjectReplication returns a boolean if a field has been set.
func (o *ReplicationRule) HasExistingObjectReplication() bool {
	if o != nil && !IsNil(o.ExistingObjectReplication) {
		return true
	}

	return false
}

// SetExistingObjectReplication gets a reference to the given ReplicationRuleExistingObjectReplication and assigns it to the ExistingObjectReplication field.
func (o *ReplicationRule) SetExistingObjectReplication(v ReplicationRuleExistingObjectReplication) {
	o.ExistingObjectReplication = &v
}

// GetDestination returns the Destination field value
func (o *ReplicationRule) GetDestination() ReplicationRuleDestination {
	if o == nil {
		var ret ReplicationRuleDestination
		return ret
	}

	return o.Destination
}

// GetDestinationOk returns a tuple with the Destination field value
// and a boolean to check if the value has been set.
func (o *ReplicationRule) GetDestinationOk() (*ReplicationRuleDestination, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Destination, true
}

// SetDestination sets field value
func (o *ReplicationRule) SetDestination(v ReplicationRuleDestination) {
	o.Destination = v
}

// GetDeleteMarkerReplication returns the DeleteMarkerReplication field value if set, zero value otherwise.
func (o *ReplicationRule) GetDeleteMarkerReplication() DeleteMarkerReplication {
	if o == nil || IsNil(o.DeleteMarkerReplication) {
		var ret DeleteMarkerReplication
		return ret
	}
	return *o.DeleteMarkerReplication
}

// GetDeleteMarkerReplicationOk returns a tuple with the DeleteMarkerReplication field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationRule) GetDeleteMarkerReplicationOk() (*DeleteMarkerReplication, bool) {
	if o == nil || IsNil(o.DeleteMarkerReplication) {
		return nil, false
	}
	return o.DeleteMarkerReplication, true
}

// HasDeleteMarkerReplication returns a boolean if a field has been set.
func (o *ReplicationRule) HasDeleteMarkerReplication() bool {
	if o != nil && !IsNil(o.DeleteMarkerReplication) {
		return true
	}

	return false
}

// SetDeleteMarkerReplication gets a reference to the given DeleteMarkerReplication and assigns it to the DeleteMarkerReplication field.
func (o *ReplicationRule) SetDeleteMarkerReplication(v DeleteMarkerReplication) {
	o.DeleteMarkerReplication = &v
}

func (o ReplicationRule) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReplicationRule) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ID) {
		toSerialize["ID"] = o.ID
	}
	if !IsNil(o.Priority) {
		toSerialize["Priority"] = o.Priority
	}
	if !IsNil(o.Prefix) {
		toSerialize["Prefix"] = o.Prefix
	}
	if !IsNil(o.Filter) {
		toSerialize["Filter"] = o.Filter
	}
	toSerialize["Status"] = o.Status
	if !IsNil(o.SourceSelectionCriteria) {
		toSerialize["SourceSelectionCriteria"] = o.SourceSelectionCriteria
	}
	if !IsNil(o.ExistingObjectReplication) {
		toSerialize["ExistingObjectReplication"] = o.ExistingObjectReplication
	}
	toSerialize["Destination"] = o.Destination
	if !IsNil(o.DeleteMarkerReplication) {
		toSerialize["DeleteMarkerReplication"] = o.DeleteMarkerReplication
	}
	return toSerialize, nil
}

type NullableReplicationRule struct {
	value *ReplicationRule
	isSet bool
}

func (v NullableReplicationRule) Get() *ReplicationRule {
	return v.value
}

func (v *NullableReplicationRule) Set(val *ReplicationRule) {
	v.value = val
	v.isSet = true
}

func (v NullableReplicationRule) IsSet() bool {
	return v.isSet
}

func (v *NullableReplicationRule) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReplicationRule(val *ReplicationRule) *NullableReplicationRule {
	return &NullableReplicationRule{value: val, isSet: true}
}

func (v NullableReplicationRule) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReplicationRule) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


