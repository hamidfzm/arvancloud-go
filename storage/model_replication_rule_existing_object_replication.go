/*
ArvanCloud S3 Services

<p/>

API version: 2006-03-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package storage

import (
	"encoding/json"
)

// checks if the ReplicationRuleExistingObjectReplication type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReplicationRuleExistingObjectReplication{}

// ReplicationRuleExistingObjectReplication struct for ReplicationRuleExistingObjectReplication
type ReplicationRuleExistingObjectReplication struct {
	Status ExistingObjectReplicationStatus `json:"Status"`
}

// NewReplicationRuleExistingObjectReplication instantiates a new ReplicationRuleExistingObjectReplication object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReplicationRuleExistingObjectReplication(status ExistingObjectReplicationStatus) *ReplicationRuleExistingObjectReplication {
	this := ReplicationRuleExistingObjectReplication{}
	this.Status = status
	return &this
}

// NewReplicationRuleExistingObjectReplicationWithDefaults instantiates a new ReplicationRuleExistingObjectReplication object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReplicationRuleExistingObjectReplicationWithDefaults() *ReplicationRuleExistingObjectReplication {
	this := ReplicationRuleExistingObjectReplication{}
	return &this
}

// GetStatus returns the Status field value
func (o *ReplicationRuleExistingObjectReplication) GetStatus() ExistingObjectReplicationStatus {
	if o == nil {
		var ret ExistingObjectReplicationStatus
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *ReplicationRuleExistingObjectReplication) GetStatusOk() (*ExistingObjectReplicationStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *ReplicationRuleExistingObjectReplication) SetStatus(v ExistingObjectReplicationStatus) {
	o.Status = v
}

func (o ReplicationRuleExistingObjectReplication) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReplicationRuleExistingObjectReplication) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["Status"] = o.Status
	return toSerialize, nil
}

type NullableReplicationRuleExistingObjectReplication struct {
	value *ReplicationRuleExistingObjectReplication
	isSet bool
}

func (v NullableReplicationRuleExistingObjectReplication) Get() *ReplicationRuleExistingObjectReplication {
	return v.value
}

func (v *NullableReplicationRuleExistingObjectReplication) Set(val *ReplicationRuleExistingObjectReplication) {
	v.value = val
	v.isSet = true
}

func (v NullableReplicationRuleExistingObjectReplication) IsSet() bool {
	return v.isSet
}

func (v *NullableReplicationRuleExistingObjectReplication) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReplicationRuleExistingObjectReplication(val *ReplicationRuleExistingObjectReplication) *NullableReplicationRuleExistingObjectReplication {
	return &NullableReplicationRuleExistingObjectReplication{value: val, isSet: true}
}

func (v NullableReplicationRuleExistingObjectReplication) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReplicationRuleExistingObjectReplication) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


