/*
ArvanCloud S3 Services

<p/>

API version: 2006-03-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package storage

import (
	"encoding/json"
)

// checks if the WebsiteConfiguration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WebsiteConfiguration{}

// WebsiteConfiguration Specifies website configuration parameters for an ArvanCloud S3 bucket.
type WebsiteConfiguration struct {
	ErrorDocument *PutBucketWebsiteRequestWebsiteConfigurationErrorDocument `json:"ErrorDocument,omitempty"`
	IndexDocument *PutBucketWebsiteRequestWebsiteConfigurationIndexDocument `json:"IndexDocument,omitempty"`
	RedirectAllRequestsTo *PutBucketWebsiteRequestWebsiteConfigurationRedirectAllRequestsTo `json:"RedirectAllRequestsTo,omitempty"`
	RoutingRules *Array `json:"RoutingRules,omitempty"`
}

// NewWebsiteConfiguration instantiates a new WebsiteConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWebsiteConfiguration() *WebsiteConfiguration {
	this := WebsiteConfiguration{}
	return &this
}

// NewWebsiteConfigurationWithDefaults instantiates a new WebsiteConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWebsiteConfigurationWithDefaults() *WebsiteConfiguration {
	this := WebsiteConfiguration{}
	return &this
}

// GetErrorDocument returns the ErrorDocument field value if set, zero value otherwise.
func (o *WebsiteConfiguration) GetErrorDocument() PutBucketWebsiteRequestWebsiteConfigurationErrorDocument {
	if o == nil || IsNil(o.ErrorDocument) {
		var ret PutBucketWebsiteRequestWebsiteConfigurationErrorDocument
		return ret
	}
	return *o.ErrorDocument
}

// GetErrorDocumentOk returns a tuple with the ErrorDocument field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebsiteConfiguration) GetErrorDocumentOk() (*PutBucketWebsiteRequestWebsiteConfigurationErrorDocument, bool) {
	if o == nil || IsNil(o.ErrorDocument) {
		return nil, false
	}
	return o.ErrorDocument, true
}

// HasErrorDocument returns a boolean if a field has been set.
func (o *WebsiteConfiguration) HasErrorDocument() bool {
	if o != nil && !IsNil(o.ErrorDocument) {
		return true
	}

	return false
}

// SetErrorDocument gets a reference to the given PutBucketWebsiteRequestWebsiteConfigurationErrorDocument and assigns it to the ErrorDocument field.
func (o *WebsiteConfiguration) SetErrorDocument(v PutBucketWebsiteRequestWebsiteConfigurationErrorDocument) {
	o.ErrorDocument = &v
}

// GetIndexDocument returns the IndexDocument field value if set, zero value otherwise.
func (o *WebsiteConfiguration) GetIndexDocument() PutBucketWebsiteRequestWebsiteConfigurationIndexDocument {
	if o == nil || IsNil(o.IndexDocument) {
		var ret PutBucketWebsiteRequestWebsiteConfigurationIndexDocument
		return ret
	}
	return *o.IndexDocument
}

// GetIndexDocumentOk returns a tuple with the IndexDocument field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebsiteConfiguration) GetIndexDocumentOk() (*PutBucketWebsiteRequestWebsiteConfigurationIndexDocument, bool) {
	if o == nil || IsNil(o.IndexDocument) {
		return nil, false
	}
	return o.IndexDocument, true
}

// HasIndexDocument returns a boolean if a field has been set.
func (o *WebsiteConfiguration) HasIndexDocument() bool {
	if o != nil && !IsNil(o.IndexDocument) {
		return true
	}

	return false
}

// SetIndexDocument gets a reference to the given PutBucketWebsiteRequestWebsiteConfigurationIndexDocument and assigns it to the IndexDocument field.
func (o *WebsiteConfiguration) SetIndexDocument(v PutBucketWebsiteRequestWebsiteConfigurationIndexDocument) {
	o.IndexDocument = &v
}

// GetRedirectAllRequestsTo returns the RedirectAllRequestsTo field value if set, zero value otherwise.
func (o *WebsiteConfiguration) GetRedirectAllRequestsTo() PutBucketWebsiteRequestWebsiteConfigurationRedirectAllRequestsTo {
	if o == nil || IsNil(o.RedirectAllRequestsTo) {
		var ret PutBucketWebsiteRequestWebsiteConfigurationRedirectAllRequestsTo
		return ret
	}
	return *o.RedirectAllRequestsTo
}

// GetRedirectAllRequestsToOk returns a tuple with the RedirectAllRequestsTo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebsiteConfiguration) GetRedirectAllRequestsToOk() (*PutBucketWebsiteRequestWebsiteConfigurationRedirectAllRequestsTo, bool) {
	if o == nil || IsNil(o.RedirectAllRequestsTo) {
		return nil, false
	}
	return o.RedirectAllRequestsTo, true
}

// HasRedirectAllRequestsTo returns a boolean if a field has been set.
func (o *WebsiteConfiguration) HasRedirectAllRequestsTo() bool {
	if o != nil && !IsNil(o.RedirectAllRequestsTo) {
		return true
	}

	return false
}

// SetRedirectAllRequestsTo gets a reference to the given PutBucketWebsiteRequestWebsiteConfigurationRedirectAllRequestsTo and assigns it to the RedirectAllRequestsTo field.
func (o *WebsiteConfiguration) SetRedirectAllRequestsTo(v PutBucketWebsiteRequestWebsiteConfigurationRedirectAllRequestsTo) {
	o.RedirectAllRequestsTo = &v
}

// GetRoutingRules returns the RoutingRules field value if set, zero value otherwise.
func (o *WebsiteConfiguration) GetRoutingRules() Array {
	if o == nil || IsNil(o.RoutingRules) {
		var ret Array
		return ret
	}
	return *o.RoutingRules
}

// GetRoutingRulesOk returns a tuple with the RoutingRules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WebsiteConfiguration) GetRoutingRulesOk() (*Array, bool) {
	if o == nil || IsNil(o.RoutingRules) {
		return nil, false
	}
	return o.RoutingRules, true
}

// HasRoutingRules returns a boolean if a field has been set.
func (o *WebsiteConfiguration) HasRoutingRules() bool {
	if o != nil && !IsNil(o.RoutingRules) {
		return true
	}

	return false
}

// SetRoutingRules gets a reference to the given Array and assigns it to the RoutingRules field.
func (o *WebsiteConfiguration) SetRoutingRules(v Array) {
	o.RoutingRules = &v
}

func (o WebsiteConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WebsiteConfiguration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ErrorDocument) {
		toSerialize["ErrorDocument"] = o.ErrorDocument
	}
	if !IsNil(o.IndexDocument) {
		toSerialize["IndexDocument"] = o.IndexDocument
	}
	if !IsNil(o.RedirectAllRequestsTo) {
		toSerialize["RedirectAllRequestsTo"] = o.RedirectAllRequestsTo
	}
	if !IsNil(o.RoutingRules) {
		toSerialize["RoutingRules"] = o.RoutingRules
	}
	return toSerialize, nil
}

type NullableWebsiteConfiguration struct {
	value *WebsiteConfiguration
	isSet bool
}

func (v NullableWebsiteConfiguration) Get() *WebsiteConfiguration {
	return v.value
}

func (v *NullableWebsiteConfiguration) Set(val *WebsiteConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableWebsiteConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableWebsiteConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWebsiteConfiguration(val *WebsiteConfiguration) *NullableWebsiteConfiguration {
	return &NullableWebsiteConfiguration{value: val, isSet: true}
}

func (v NullableWebsiteConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWebsiteConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


