/*
ArvanCloud S3 Services

<p/>

API version: 2006-03-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package storage

import (
	"encoding/json"
)

// checks if the PutBucketAnalyticsConfigurationRequestAnalyticsConfiguration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PutBucketAnalyticsConfigurationRequestAnalyticsConfiguration{}

// PutBucketAnalyticsConfigurationRequestAnalyticsConfiguration struct for PutBucketAnalyticsConfigurationRequestAnalyticsConfiguration
type PutBucketAnalyticsConfigurationRequestAnalyticsConfiguration struct {
	Id AnalyticsId `json:"Id"`
	Filter *AnalyticsFilter `json:"Filter,omitempty"`
	StorageClassAnalysis StorageClassAnalysis `json:"StorageClassAnalysis"`
}

// NewPutBucketAnalyticsConfigurationRequestAnalyticsConfiguration instantiates a new PutBucketAnalyticsConfigurationRequestAnalyticsConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPutBucketAnalyticsConfigurationRequestAnalyticsConfiguration(id AnalyticsId, storageClassAnalysis StorageClassAnalysis) *PutBucketAnalyticsConfigurationRequestAnalyticsConfiguration {
	this := PutBucketAnalyticsConfigurationRequestAnalyticsConfiguration{}
	this.Id = id
	this.StorageClassAnalysis = storageClassAnalysis
	return &this
}

// NewPutBucketAnalyticsConfigurationRequestAnalyticsConfigurationWithDefaults instantiates a new PutBucketAnalyticsConfigurationRequestAnalyticsConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPutBucketAnalyticsConfigurationRequestAnalyticsConfigurationWithDefaults() *PutBucketAnalyticsConfigurationRequestAnalyticsConfiguration {
	this := PutBucketAnalyticsConfigurationRequestAnalyticsConfiguration{}
	return &this
}

// GetId returns the Id field value
func (o *PutBucketAnalyticsConfigurationRequestAnalyticsConfiguration) GetId() AnalyticsId {
	if o == nil {
		var ret AnalyticsId
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *PutBucketAnalyticsConfigurationRequestAnalyticsConfiguration) GetIdOk() (*AnalyticsId, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *PutBucketAnalyticsConfigurationRequestAnalyticsConfiguration) SetId(v AnalyticsId) {
	o.Id = v
}

// GetFilter returns the Filter field value if set, zero value otherwise.
func (o *PutBucketAnalyticsConfigurationRequestAnalyticsConfiguration) GetFilter() AnalyticsFilter {
	if o == nil || IsNil(o.Filter) {
		var ret AnalyticsFilter
		return ret
	}
	return *o.Filter
}

// GetFilterOk returns a tuple with the Filter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PutBucketAnalyticsConfigurationRequestAnalyticsConfiguration) GetFilterOk() (*AnalyticsFilter, bool) {
	if o == nil || IsNil(o.Filter) {
		return nil, false
	}
	return o.Filter, true
}

// HasFilter returns a boolean if a field has been set.
func (o *PutBucketAnalyticsConfigurationRequestAnalyticsConfiguration) HasFilter() bool {
	if o != nil && !IsNil(o.Filter) {
		return true
	}

	return false
}

// SetFilter gets a reference to the given AnalyticsFilter and assigns it to the Filter field.
func (o *PutBucketAnalyticsConfigurationRequestAnalyticsConfiguration) SetFilter(v AnalyticsFilter) {
	o.Filter = &v
}

// GetStorageClassAnalysis returns the StorageClassAnalysis field value
func (o *PutBucketAnalyticsConfigurationRequestAnalyticsConfiguration) GetStorageClassAnalysis() StorageClassAnalysis {
	if o == nil {
		var ret StorageClassAnalysis
		return ret
	}

	return o.StorageClassAnalysis
}

// GetStorageClassAnalysisOk returns a tuple with the StorageClassAnalysis field value
// and a boolean to check if the value has been set.
func (o *PutBucketAnalyticsConfigurationRequestAnalyticsConfiguration) GetStorageClassAnalysisOk() (*StorageClassAnalysis, bool) {
	if o == nil {
		return nil, false
	}
	return &o.StorageClassAnalysis, true
}

// SetStorageClassAnalysis sets field value
func (o *PutBucketAnalyticsConfigurationRequestAnalyticsConfiguration) SetStorageClassAnalysis(v StorageClassAnalysis) {
	o.StorageClassAnalysis = v
}

func (o PutBucketAnalyticsConfigurationRequestAnalyticsConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PutBucketAnalyticsConfigurationRequestAnalyticsConfiguration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["Id"] = o.Id
	if !IsNil(o.Filter) {
		toSerialize["Filter"] = o.Filter
	}
	toSerialize["StorageClassAnalysis"] = o.StorageClassAnalysis
	return toSerialize, nil
}

type NullablePutBucketAnalyticsConfigurationRequestAnalyticsConfiguration struct {
	value *PutBucketAnalyticsConfigurationRequestAnalyticsConfiguration
	isSet bool
}

func (v NullablePutBucketAnalyticsConfigurationRequestAnalyticsConfiguration) Get() *PutBucketAnalyticsConfigurationRequestAnalyticsConfiguration {
	return v.value
}

func (v *NullablePutBucketAnalyticsConfigurationRequestAnalyticsConfiguration) Set(val *PutBucketAnalyticsConfigurationRequestAnalyticsConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullablePutBucketAnalyticsConfigurationRequestAnalyticsConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullablePutBucketAnalyticsConfigurationRequestAnalyticsConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePutBucketAnalyticsConfigurationRequestAnalyticsConfiguration(val *PutBucketAnalyticsConfigurationRequestAnalyticsConfiguration) *NullablePutBucketAnalyticsConfigurationRequestAnalyticsConfiguration {
	return &NullablePutBucketAnalyticsConfigurationRequestAnalyticsConfiguration{value: val, isSet: true}
}

func (v NullablePutBucketAnalyticsConfigurationRequestAnalyticsConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePutBucketAnalyticsConfigurationRequestAnalyticsConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


