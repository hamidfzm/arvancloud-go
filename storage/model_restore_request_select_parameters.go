/*
ArvanCloud S3 Services

<p/>

API version: 2006-03-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package storage

import (
	"encoding/json"
)

// checks if the RestoreRequestSelectParameters type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RestoreRequestSelectParameters{}

// RestoreRequestSelectParameters struct for RestoreRequestSelectParameters
type RestoreRequestSelectParameters struct {
	InputSerialization SelectParametersInputSerialization `json:"InputSerialization"`
	ExpressionType ExpressionType `json:"ExpressionType"`
	Expression string `json:"Expression"`
	OutputSerialization SelectParametersOutputSerialization `json:"OutputSerialization"`
}

// NewRestoreRequestSelectParameters instantiates a new RestoreRequestSelectParameters object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRestoreRequestSelectParameters(inputSerialization SelectParametersInputSerialization, expressionType ExpressionType, expression string, outputSerialization SelectParametersOutputSerialization) *RestoreRequestSelectParameters {
	this := RestoreRequestSelectParameters{}
	this.InputSerialization = inputSerialization
	this.ExpressionType = expressionType
	this.Expression = expression
	this.OutputSerialization = outputSerialization
	return &this
}

// NewRestoreRequestSelectParametersWithDefaults instantiates a new RestoreRequestSelectParameters object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRestoreRequestSelectParametersWithDefaults() *RestoreRequestSelectParameters {
	this := RestoreRequestSelectParameters{}
	return &this
}

// GetInputSerialization returns the InputSerialization field value
func (o *RestoreRequestSelectParameters) GetInputSerialization() SelectParametersInputSerialization {
	if o == nil {
		var ret SelectParametersInputSerialization
		return ret
	}

	return o.InputSerialization
}

// GetInputSerializationOk returns a tuple with the InputSerialization field value
// and a boolean to check if the value has been set.
func (o *RestoreRequestSelectParameters) GetInputSerializationOk() (*SelectParametersInputSerialization, bool) {
	if o == nil {
		return nil, false
	}
	return &o.InputSerialization, true
}

// SetInputSerialization sets field value
func (o *RestoreRequestSelectParameters) SetInputSerialization(v SelectParametersInputSerialization) {
	o.InputSerialization = v
}

// GetExpressionType returns the ExpressionType field value
func (o *RestoreRequestSelectParameters) GetExpressionType() ExpressionType {
	if o == nil {
		var ret ExpressionType
		return ret
	}

	return o.ExpressionType
}

// GetExpressionTypeOk returns a tuple with the ExpressionType field value
// and a boolean to check if the value has been set.
func (o *RestoreRequestSelectParameters) GetExpressionTypeOk() (*ExpressionType, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ExpressionType, true
}

// SetExpressionType sets field value
func (o *RestoreRequestSelectParameters) SetExpressionType(v ExpressionType) {
	o.ExpressionType = v
}

// GetExpression returns the Expression field value
func (o *RestoreRequestSelectParameters) GetExpression() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Expression
}

// GetExpressionOk returns a tuple with the Expression field value
// and a boolean to check if the value has been set.
func (o *RestoreRequestSelectParameters) GetExpressionOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Expression, true
}

// SetExpression sets field value
func (o *RestoreRequestSelectParameters) SetExpression(v string) {
	o.Expression = v
}

// GetOutputSerialization returns the OutputSerialization field value
func (o *RestoreRequestSelectParameters) GetOutputSerialization() SelectParametersOutputSerialization {
	if o == nil {
		var ret SelectParametersOutputSerialization
		return ret
	}

	return o.OutputSerialization
}

// GetOutputSerializationOk returns a tuple with the OutputSerialization field value
// and a boolean to check if the value has been set.
func (o *RestoreRequestSelectParameters) GetOutputSerializationOk() (*SelectParametersOutputSerialization, bool) {
	if o == nil {
		return nil, false
	}
	return &o.OutputSerialization, true
}

// SetOutputSerialization sets field value
func (o *RestoreRequestSelectParameters) SetOutputSerialization(v SelectParametersOutputSerialization) {
	o.OutputSerialization = v
}

func (o RestoreRequestSelectParameters) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RestoreRequestSelectParameters) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["InputSerialization"] = o.InputSerialization
	toSerialize["ExpressionType"] = o.ExpressionType
	toSerialize["Expression"] = o.Expression
	toSerialize["OutputSerialization"] = o.OutputSerialization
	return toSerialize, nil
}

type NullableRestoreRequestSelectParameters struct {
	value *RestoreRequestSelectParameters
	isSet bool
}

func (v NullableRestoreRequestSelectParameters) Get() *RestoreRequestSelectParameters {
	return v.value
}

func (v *NullableRestoreRequestSelectParameters) Set(val *RestoreRequestSelectParameters) {
	v.value = val
	v.isSet = true
}

func (v NullableRestoreRequestSelectParameters) IsSet() bool {
	return v.isSet
}

func (v *NullableRestoreRequestSelectParameters) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestoreRequestSelectParameters(val *RestoreRequestSelectParameters) *NullableRestoreRequestSelectParameters {
	return &NullableRestoreRequestSelectParameters{value: val, isSet: true}
}

func (v NullableRestoreRequestSelectParameters) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestoreRequestSelectParameters) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


