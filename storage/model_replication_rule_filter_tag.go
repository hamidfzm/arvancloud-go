/*
ArvanCloud S3 Services

<p/>

API version: 2006-03-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package storage

import (
	"encoding/json"
)

// checks if the ReplicationRuleFilterTag type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReplicationRuleFilterTag{}

// ReplicationRuleFilterTag struct for ReplicationRuleFilterTag
type ReplicationRuleFilterTag struct {
	Key string `json:"Key"`
	Value string `json:"Value"`
}

// NewReplicationRuleFilterTag instantiates a new ReplicationRuleFilterTag object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReplicationRuleFilterTag(key string, value string) *ReplicationRuleFilterTag {
	this := ReplicationRuleFilterTag{}
	this.Key = key
	this.Value = value
	return &this
}

// NewReplicationRuleFilterTagWithDefaults instantiates a new ReplicationRuleFilterTag object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReplicationRuleFilterTagWithDefaults() *ReplicationRuleFilterTag {
	this := ReplicationRuleFilterTag{}
	return &this
}

// GetKey returns the Key field value
func (o *ReplicationRuleFilterTag) GetKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Key
}

// GetKeyOk returns a tuple with the Key field value
// and a boolean to check if the value has been set.
func (o *ReplicationRuleFilterTag) GetKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Key, true
}

// SetKey sets field value
func (o *ReplicationRuleFilterTag) SetKey(v string) {
	o.Key = v
}

// GetValue returns the Value field value
func (o *ReplicationRuleFilterTag) GetValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *ReplicationRuleFilterTag) GetValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *ReplicationRuleFilterTag) SetValue(v string) {
	o.Value = v
}

func (o ReplicationRuleFilterTag) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReplicationRuleFilterTag) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["Key"] = o.Key
	toSerialize["Value"] = o.Value
	return toSerialize, nil
}

type NullableReplicationRuleFilterTag struct {
	value *ReplicationRuleFilterTag
	isSet bool
}

func (v NullableReplicationRuleFilterTag) Get() *ReplicationRuleFilterTag {
	return v.value
}

func (v *NullableReplicationRuleFilterTag) Set(val *ReplicationRuleFilterTag) {
	v.value = val
	v.isSet = true
}

func (v NullableReplicationRuleFilterTag) IsSet() bool {
	return v.isSet
}

func (v *NullableReplicationRuleFilterTag) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReplicationRuleFilterTag(val *ReplicationRuleFilterTag) *NullableReplicationRuleFilterTag {
	return &NullableReplicationRuleFilterTag{value: val, isSet: true}
}

func (v NullableReplicationRuleFilterTag) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReplicationRuleFilterTag) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


