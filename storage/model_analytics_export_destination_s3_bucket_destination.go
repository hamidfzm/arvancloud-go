/*
ArvanCloud S3 Services

<p/>

API version: 2006-03-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package storage

import (
	"encoding/json"
)

// checks if the AnalyticsExportDestinationS3BucketDestination type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AnalyticsExportDestinationS3BucketDestination{}

// AnalyticsExportDestinationS3BucketDestination struct for AnalyticsExportDestinationS3BucketDestination
type AnalyticsExportDestinationS3BucketDestination struct {
	Format AnalyticsS3ExportFileFormat `json:"Format"`
	BucketAccountId *string `json:"BucketAccountId,omitempty"`
	Bucket string `json:"Bucket"`
	Prefix *string `json:"Prefix,omitempty"`
}

// NewAnalyticsExportDestinationS3BucketDestination instantiates a new AnalyticsExportDestinationS3BucketDestination object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAnalyticsExportDestinationS3BucketDestination(format AnalyticsS3ExportFileFormat, bucket string) *AnalyticsExportDestinationS3BucketDestination {
	this := AnalyticsExportDestinationS3BucketDestination{}
	this.Format = format
	this.Bucket = bucket
	return &this
}

// NewAnalyticsExportDestinationS3BucketDestinationWithDefaults instantiates a new AnalyticsExportDestinationS3BucketDestination object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAnalyticsExportDestinationS3BucketDestinationWithDefaults() *AnalyticsExportDestinationS3BucketDestination {
	this := AnalyticsExportDestinationS3BucketDestination{}
	return &this
}

// GetFormat returns the Format field value
func (o *AnalyticsExportDestinationS3BucketDestination) GetFormat() AnalyticsS3ExportFileFormat {
	if o == nil {
		var ret AnalyticsS3ExportFileFormat
		return ret
	}

	return o.Format
}

// GetFormatOk returns a tuple with the Format field value
// and a boolean to check if the value has been set.
func (o *AnalyticsExportDestinationS3BucketDestination) GetFormatOk() (*AnalyticsS3ExportFileFormat, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Format, true
}

// SetFormat sets field value
func (o *AnalyticsExportDestinationS3BucketDestination) SetFormat(v AnalyticsS3ExportFileFormat) {
	o.Format = v
}

// GetBucketAccountId returns the BucketAccountId field value if set, zero value otherwise.
func (o *AnalyticsExportDestinationS3BucketDestination) GetBucketAccountId() string {
	if o == nil || IsNil(o.BucketAccountId) {
		var ret string
		return ret
	}
	return *o.BucketAccountId
}

// GetBucketAccountIdOk returns a tuple with the BucketAccountId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AnalyticsExportDestinationS3BucketDestination) GetBucketAccountIdOk() (*string, bool) {
	if o == nil || IsNil(o.BucketAccountId) {
		return nil, false
	}
	return o.BucketAccountId, true
}

// HasBucketAccountId returns a boolean if a field has been set.
func (o *AnalyticsExportDestinationS3BucketDestination) HasBucketAccountId() bool {
	if o != nil && !IsNil(o.BucketAccountId) {
		return true
	}

	return false
}

// SetBucketAccountId gets a reference to the given string and assigns it to the BucketAccountId field.
func (o *AnalyticsExportDestinationS3BucketDestination) SetBucketAccountId(v string) {
	o.BucketAccountId = &v
}

// GetBucket returns the Bucket field value
func (o *AnalyticsExportDestinationS3BucketDestination) GetBucket() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Bucket
}

// GetBucketOk returns a tuple with the Bucket field value
// and a boolean to check if the value has been set.
func (o *AnalyticsExportDestinationS3BucketDestination) GetBucketOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Bucket, true
}

// SetBucket sets field value
func (o *AnalyticsExportDestinationS3BucketDestination) SetBucket(v string) {
	o.Bucket = v
}

// GetPrefix returns the Prefix field value if set, zero value otherwise.
func (o *AnalyticsExportDestinationS3BucketDestination) GetPrefix() string {
	if o == nil || IsNil(o.Prefix) {
		var ret string
		return ret
	}
	return *o.Prefix
}

// GetPrefixOk returns a tuple with the Prefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *AnalyticsExportDestinationS3BucketDestination) GetPrefixOk() (*string, bool) {
	if o == nil || IsNil(o.Prefix) {
		return nil, false
	}
	return o.Prefix, true
}

// HasPrefix returns a boolean if a field has been set.
func (o *AnalyticsExportDestinationS3BucketDestination) HasPrefix() bool {
	if o != nil && !IsNil(o.Prefix) {
		return true
	}

	return false
}

// SetPrefix gets a reference to the given string and assigns it to the Prefix field.
func (o *AnalyticsExportDestinationS3BucketDestination) SetPrefix(v string) {
	o.Prefix = &v
}

func (o AnalyticsExportDestinationS3BucketDestination) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AnalyticsExportDestinationS3BucketDestination) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["Format"] = o.Format
	if !IsNil(o.BucketAccountId) {
		toSerialize["BucketAccountId"] = o.BucketAccountId
	}
	toSerialize["Bucket"] = o.Bucket
	if !IsNil(o.Prefix) {
		toSerialize["Prefix"] = o.Prefix
	}
	return toSerialize, nil
}

type NullableAnalyticsExportDestinationS3BucketDestination struct {
	value *AnalyticsExportDestinationS3BucketDestination
	isSet bool
}

func (v NullableAnalyticsExportDestinationS3BucketDestination) Get() *AnalyticsExportDestinationS3BucketDestination {
	return v.value
}

func (v *NullableAnalyticsExportDestinationS3BucketDestination) Set(val *AnalyticsExportDestinationS3BucketDestination) {
	v.value = val
	v.isSet = true
}

func (v NullableAnalyticsExportDestinationS3BucketDestination) IsSet() bool {
	return v.isSet
}

func (v *NullableAnalyticsExportDestinationS3BucketDestination) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAnalyticsExportDestinationS3BucketDestination(val *AnalyticsExportDestinationS3BucketDestination) *NullableAnalyticsExportDestinationS3BucketDestination {
	return &NullableAnalyticsExportDestinationS3BucketDestination{value: val, isSet: true}
}

func (v NullableAnalyticsExportDestinationS3BucketDestination) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAnalyticsExportDestinationS3BucketDestination) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


