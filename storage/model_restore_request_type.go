/*
ArvanCloud S3 Services

<p/>

API version: 2006-03-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package storage

import (
	"encoding/json"
	"fmt"
)

// RestoreRequestType the model 'RestoreRequestType'
type RestoreRequestType string

// List of RestoreRequestType
const (
	RESTOREREQUESTTYPE_SELECT RestoreRequestType = "SELECT"
)

// All allowed values of RestoreRequestType enum
var AllowedRestoreRequestTypeEnumValues = []RestoreRequestType{
	"SELECT",
}

func (v *RestoreRequestType) UnmarshalJSON(src []byte) error {
	var value string
	err := json.Unmarshal(src, &value)
	if err != nil {
		return err
	}
	enumTypeValue := RestoreRequestType(value)
	for _, existing := range AllowedRestoreRequestTypeEnumValues {
		if existing == enumTypeValue {
			*v = enumTypeValue
			return nil
		}
	}

	return fmt.Errorf("%+v is not a valid RestoreRequestType", value)
}

// NewRestoreRequestTypeFromValue returns a pointer to a valid RestoreRequestType
// for the value passed as argument, or an error if the value passed is not allowed by the enum
func NewRestoreRequestTypeFromValue(v string) (*RestoreRequestType, error) {
	ev := RestoreRequestType(v)
	if ev.IsValid() {
		return &ev, nil
	} else {
		return nil, fmt.Errorf("invalid value '%v' for RestoreRequestType: valid values are %v", v, AllowedRestoreRequestTypeEnumValues)
	}
}

// IsValid return true if the value is valid for the enum, false otherwise
func (v RestoreRequestType) IsValid() bool {
	for _, existing := range AllowedRestoreRequestTypeEnumValues {
		if existing == v {
			return true
		}
	}
	return false
}

// Ptr returns reference to RestoreRequestType value
func (v RestoreRequestType) Ptr() *RestoreRequestType {
	return &v
}

type NullableRestoreRequestType struct {
	value *RestoreRequestType
	isSet bool
}

func (v NullableRestoreRequestType) Get() *RestoreRequestType {
	return v.value
}

func (v *NullableRestoreRequestType) Set(val *RestoreRequestType) {
	v.value = val
	v.isSet = true
}

func (v NullableRestoreRequestType) IsSet() bool {
	return v.isSet
}

func (v *NullableRestoreRequestType) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRestoreRequestType(val *RestoreRequestType) *NullableRestoreRequestType {
	return &NullableRestoreRequestType{value: val, isSet: true}
}

func (v NullableRestoreRequestType) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRestoreRequestType) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}

