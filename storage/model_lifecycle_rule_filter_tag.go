/*
ArvanCloud S3 Services

<p/>

API version: 2006-03-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package storage

import (
	"encoding/json"
)

// checks if the LifecycleRuleFilterTag type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &LifecycleRuleFilterTag{}

// LifecycleRuleFilterTag struct for LifecycleRuleFilterTag
type LifecycleRuleFilterTag struct {
	Key string `json:"Key"`
	Value string `json:"Value"`
}

// NewLifecycleRuleFilterTag instantiates a new LifecycleRuleFilterTag object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewLifecycleRuleFilterTag(key string, value string) *LifecycleRuleFilterTag {
	this := LifecycleRuleFilterTag{}
	this.Key = key
	this.Value = value
	return &this
}

// NewLifecycleRuleFilterTagWithDefaults instantiates a new LifecycleRuleFilterTag object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewLifecycleRuleFilterTagWithDefaults() *LifecycleRuleFilterTag {
	this := LifecycleRuleFilterTag{}
	return &this
}

// GetKey returns the Key field value
func (o *LifecycleRuleFilterTag) GetKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Key
}

// GetKeyOk returns a tuple with the Key field value
// and a boolean to check if the value has been set.
func (o *LifecycleRuleFilterTag) GetKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Key, true
}

// SetKey sets field value
func (o *LifecycleRuleFilterTag) SetKey(v string) {
	o.Key = v
}

// GetValue returns the Value field value
func (o *LifecycleRuleFilterTag) GetValue() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Value
}

// GetValueOk returns a tuple with the Value field value
// and a boolean to check if the value has been set.
func (o *LifecycleRuleFilterTag) GetValueOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Value, true
}

// SetValue sets field value
func (o *LifecycleRuleFilterTag) SetValue(v string) {
	o.Value = v
}

func (o LifecycleRuleFilterTag) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o LifecycleRuleFilterTag) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["Key"] = o.Key
	toSerialize["Value"] = o.Value
	return toSerialize, nil
}

type NullableLifecycleRuleFilterTag struct {
	value *LifecycleRuleFilterTag
	isSet bool
}

func (v NullableLifecycleRuleFilterTag) Get() *LifecycleRuleFilterTag {
	return v.value
}

func (v *NullableLifecycleRuleFilterTag) Set(val *LifecycleRuleFilterTag) {
	v.value = val
	v.isSet = true
}

func (v NullableLifecycleRuleFilterTag) IsSet() bool {
	return v.isSet
}

func (v *NullableLifecycleRuleFilterTag) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableLifecycleRuleFilterTag(val *LifecycleRuleFilterTag) *NullableLifecycleRuleFilterTag {
	return &NullableLifecycleRuleFilterTag{value: val, isSet: true}
}

func (v NullableLifecycleRuleFilterTag) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableLifecycleRuleFilterTag) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


