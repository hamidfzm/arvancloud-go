/*
ArvanCloud S3 Services

<p/>

API version: 2006-03-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package storage

import (
	"encoding/json"
)

// checks if the PutObjectLockConfigurationRequestObjectLockConfiguration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PutObjectLockConfigurationRequestObjectLockConfiguration{}

// PutObjectLockConfigurationRequestObjectLockConfiguration struct for PutObjectLockConfigurationRequestObjectLockConfiguration
type PutObjectLockConfigurationRequestObjectLockConfiguration struct {
	ObjectLockEnabled *ObjectLockEnabled `json:"ObjectLockEnabled,omitempty"`
	Rule *ObjectLockConfigurationRule `json:"Rule,omitempty"`
}

// NewPutObjectLockConfigurationRequestObjectLockConfiguration instantiates a new PutObjectLockConfigurationRequestObjectLockConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPutObjectLockConfigurationRequestObjectLockConfiguration() *PutObjectLockConfigurationRequestObjectLockConfiguration {
	this := PutObjectLockConfigurationRequestObjectLockConfiguration{}
	return &this
}

// NewPutObjectLockConfigurationRequestObjectLockConfigurationWithDefaults instantiates a new PutObjectLockConfigurationRequestObjectLockConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPutObjectLockConfigurationRequestObjectLockConfigurationWithDefaults() *PutObjectLockConfigurationRequestObjectLockConfiguration {
	this := PutObjectLockConfigurationRequestObjectLockConfiguration{}
	return &this
}

// GetObjectLockEnabled returns the ObjectLockEnabled field value if set, zero value otherwise.
func (o *PutObjectLockConfigurationRequestObjectLockConfiguration) GetObjectLockEnabled() ObjectLockEnabled {
	if o == nil || IsNil(o.ObjectLockEnabled) {
		var ret ObjectLockEnabled
		return ret
	}
	return *o.ObjectLockEnabled
}

// GetObjectLockEnabledOk returns a tuple with the ObjectLockEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PutObjectLockConfigurationRequestObjectLockConfiguration) GetObjectLockEnabledOk() (*ObjectLockEnabled, bool) {
	if o == nil || IsNil(o.ObjectLockEnabled) {
		return nil, false
	}
	return o.ObjectLockEnabled, true
}

// HasObjectLockEnabled returns a boolean if a field has been set.
func (o *PutObjectLockConfigurationRequestObjectLockConfiguration) HasObjectLockEnabled() bool {
	if o != nil && !IsNil(o.ObjectLockEnabled) {
		return true
	}

	return false
}

// SetObjectLockEnabled gets a reference to the given ObjectLockEnabled and assigns it to the ObjectLockEnabled field.
func (o *PutObjectLockConfigurationRequestObjectLockConfiguration) SetObjectLockEnabled(v ObjectLockEnabled) {
	o.ObjectLockEnabled = &v
}

// GetRule returns the Rule field value if set, zero value otherwise.
func (o *PutObjectLockConfigurationRequestObjectLockConfiguration) GetRule() ObjectLockConfigurationRule {
	if o == nil || IsNil(o.Rule) {
		var ret ObjectLockConfigurationRule
		return ret
	}
	return *o.Rule
}

// GetRuleOk returns a tuple with the Rule field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PutObjectLockConfigurationRequestObjectLockConfiguration) GetRuleOk() (*ObjectLockConfigurationRule, bool) {
	if o == nil || IsNil(o.Rule) {
		return nil, false
	}
	return o.Rule, true
}

// HasRule returns a boolean if a field has been set.
func (o *PutObjectLockConfigurationRequestObjectLockConfiguration) HasRule() bool {
	if o != nil && !IsNil(o.Rule) {
		return true
	}

	return false
}

// SetRule gets a reference to the given ObjectLockConfigurationRule and assigns it to the Rule field.
func (o *PutObjectLockConfigurationRequestObjectLockConfiguration) SetRule(v ObjectLockConfigurationRule) {
	o.Rule = &v
}

func (o PutObjectLockConfigurationRequestObjectLockConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PutObjectLockConfigurationRequestObjectLockConfiguration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ObjectLockEnabled) {
		toSerialize["ObjectLockEnabled"] = o.ObjectLockEnabled
	}
	if !IsNil(o.Rule) {
		toSerialize["Rule"] = o.Rule
	}
	return toSerialize, nil
}

type NullablePutObjectLockConfigurationRequestObjectLockConfiguration struct {
	value *PutObjectLockConfigurationRequestObjectLockConfiguration
	isSet bool
}

func (v NullablePutObjectLockConfigurationRequestObjectLockConfiguration) Get() *PutObjectLockConfigurationRequestObjectLockConfiguration {
	return v.value
}

func (v *NullablePutObjectLockConfigurationRequestObjectLockConfiguration) Set(val *PutObjectLockConfigurationRequestObjectLockConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullablePutObjectLockConfigurationRequestObjectLockConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullablePutObjectLockConfigurationRequestObjectLockConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePutObjectLockConfigurationRequestObjectLockConfiguration(val *PutObjectLockConfigurationRequestObjectLockConfiguration) *NullablePutObjectLockConfigurationRequestObjectLockConfiguration {
	return &NullablePutObjectLockConfigurationRequestObjectLockConfiguration{value: val, isSet: true}
}

func (v NullablePutObjectLockConfigurationRequestObjectLockConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePutObjectLockConfigurationRequestObjectLockConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


