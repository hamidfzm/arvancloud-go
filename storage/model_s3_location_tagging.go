/*
ArvanCloud S3 Services

<p/>

API version: 2006-03-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package storage

import (
	"encoding/json"
)

// checks if the S3LocationTagging type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &S3LocationTagging{}

// S3LocationTagging struct for S3LocationTagging
type S3LocationTagging struct {
	TagSet Array `json:"TagSet"`
}

// NewS3LocationTagging instantiates a new S3LocationTagging object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewS3LocationTagging(tagSet Array) *S3LocationTagging {
	this := S3LocationTagging{}
	this.TagSet = tagSet
	return &this
}

// NewS3LocationTaggingWithDefaults instantiates a new S3LocationTagging object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewS3LocationTaggingWithDefaults() *S3LocationTagging {
	this := S3LocationTagging{}
	return &this
}

// GetTagSet returns the TagSet field value
func (o *S3LocationTagging) GetTagSet() Array {
	if o == nil {
		var ret Array
		return ret
	}

	return o.TagSet
}

// GetTagSetOk returns a tuple with the TagSet field value
// and a boolean to check if the value has been set.
func (o *S3LocationTagging) GetTagSetOk() (*Array, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TagSet, true
}

// SetTagSet sets field value
func (o *S3LocationTagging) SetTagSet(v Array) {
	o.TagSet = v
}

func (o S3LocationTagging) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o S3LocationTagging) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["TagSet"] = o.TagSet
	return toSerialize, nil
}

type NullableS3LocationTagging struct {
	value *S3LocationTagging
	isSet bool
}

func (v NullableS3LocationTagging) Get() *S3LocationTagging {
	return v.value
}

func (v *NullableS3LocationTagging) Set(val *S3LocationTagging) {
	v.value = val
	v.isSet = true
}

func (v NullableS3LocationTagging) IsSet() bool {
	return v.isSet
}

func (v *NullableS3LocationTagging) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableS3LocationTagging(val *S3LocationTagging) *NullableS3LocationTagging {
	return &NullableS3LocationTagging{value: val, isSet: true}
}

func (v NullableS3LocationTagging) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableS3LocationTagging) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


