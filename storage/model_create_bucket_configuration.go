/*
ArvanCloud S3 Services

<p/>

API version: 2006-03-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package storage

import (
	"encoding/json"
)

// checks if the CreateBucketConfiguration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CreateBucketConfiguration{}

// CreateBucketConfiguration The configuration information for the bucket.
type CreateBucketConfiguration struct {
	LocationConstraint *BucketLocationConstraint `json:"LocationConstraint,omitempty"`
}

// NewCreateBucketConfiguration instantiates a new CreateBucketConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCreateBucketConfiguration() *CreateBucketConfiguration {
	this := CreateBucketConfiguration{}
	return &this
}

// NewCreateBucketConfigurationWithDefaults instantiates a new CreateBucketConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCreateBucketConfigurationWithDefaults() *CreateBucketConfiguration {
	this := CreateBucketConfiguration{}
	return &this
}

// GetLocationConstraint returns the LocationConstraint field value if set, zero value otherwise.
func (o *CreateBucketConfiguration) GetLocationConstraint() BucketLocationConstraint {
	if o == nil || IsNil(o.LocationConstraint) {
		var ret BucketLocationConstraint
		return ret
	}
	return *o.LocationConstraint
}

// GetLocationConstraintOk returns a tuple with the LocationConstraint field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CreateBucketConfiguration) GetLocationConstraintOk() (*BucketLocationConstraint, bool) {
	if o == nil || IsNil(o.LocationConstraint) {
		return nil, false
	}
	return o.LocationConstraint, true
}

// HasLocationConstraint returns a boolean if a field has been set.
func (o *CreateBucketConfiguration) HasLocationConstraint() bool {
	if o != nil && !IsNil(o.LocationConstraint) {
		return true
	}

	return false
}

// SetLocationConstraint gets a reference to the given BucketLocationConstraint and assigns it to the LocationConstraint field.
func (o *CreateBucketConfiguration) SetLocationConstraint(v BucketLocationConstraint) {
	o.LocationConstraint = &v
}

func (o CreateBucketConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CreateBucketConfiguration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.LocationConstraint) {
		toSerialize["LocationConstraint"] = o.LocationConstraint
	}
	return toSerialize, nil
}

type NullableCreateBucketConfiguration struct {
	value *CreateBucketConfiguration
	isSet bool
}

func (v NullableCreateBucketConfiguration) Get() *CreateBucketConfiguration {
	return v.value
}

func (v *NullableCreateBucketConfiguration) Set(val *CreateBucketConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableCreateBucketConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableCreateBucketConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCreateBucketConfiguration(val *CreateBucketConfiguration) *NullableCreateBucketConfiguration {
	return &NullableCreateBucketConfiguration{value: val, isSet: true}
}

func (v NullableCreateBucketConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCreateBucketConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


