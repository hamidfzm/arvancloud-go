/*
ArvanCloud S3 Services

<p/>

API version: 2006-03-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package storage

import (
	"encoding/json"
)

// checks if the CopyObjectRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CopyObjectRequest{}

// CopyObjectRequest struct for CopyObjectRequest
type CopyObjectRequest struct {
	Metadata *ModelMap `json:"Metadata,omitempty"`
}

// NewCopyObjectRequest instantiates a new CopyObjectRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCopyObjectRequest() *CopyObjectRequest {
	this := CopyObjectRequest{}
	return &this
}

// NewCopyObjectRequestWithDefaults instantiates a new CopyObjectRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCopyObjectRequestWithDefaults() *CopyObjectRequest {
	this := CopyObjectRequest{}
	return &this
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *CopyObjectRequest) GetMetadata() ModelMap {
	if o == nil || IsNil(o.Metadata) {
		var ret ModelMap
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CopyObjectRequest) GetMetadataOk() (*ModelMap, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *CopyObjectRequest) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given ModelMap and assigns it to the Metadata field.
func (o *CopyObjectRequest) SetMetadata(v ModelMap) {
	o.Metadata = &v
}

func (o CopyObjectRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CopyObjectRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Metadata) {
		toSerialize["Metadata"] = o.Metadata
	}
	return toSerialize, nil
}

type NullableCopyObjectRequest struct {
	value *CopyObjectRequest
	isSet bool
}

func (v NullableCopyObjectRequest) Get() *CopyObjectRequest {
	return v.value
}

func (v *NullableCopyObjectRequest) Set(val *CopyObjectRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableCopyObjectRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableCopyObjectRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCopyObjectRequest(val *CopyObjectRequest) *NullableCopyObjectRequest {
	return &NullableCopyObjectRequest{value: val, isSet: true}
}

func (v NullableCopyObjectRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCopyObjectRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


