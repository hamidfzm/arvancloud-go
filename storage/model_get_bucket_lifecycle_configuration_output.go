/*
ArvanCloud S3 Services

<p/>

API version: 2006-03-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package storage

import (
	"encoding/json"
)

// checks if the GetBucketLifecycleConfigurationOutput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetBucketLifecycleConfigurationOutput{}

// GetBucketLifecycleConfigurationOutput struct for GetBucketLifecycleConfigurationOutput
type GetBucketLifecycleConfigurationOutput struct {
	Rules *Array `json:"Rules,omitempty"`
}

// NewGetBucketLifecycleConfigurationOutput instantiates a new GetBucketLifecycleConfigurationOutput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetBucketLifecycleConfigurationOutput() *GetBucketLifecycleConfigurationOutput {
	this := GetBucketLifecycleConfigurationOutput{}
	return &this
}

// NewGetBucketLifecycleConfigurationOutputWithDefaults instantiates a new GetBucketLifecycleConfigurationOutput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetBucketLifecycleConfigurationOutputWithDefaults() *GetBucketLifecycleConfigurationOutput {
	this := GetBucketLifecycleConfigurationOutput{}
	return &this
}

// GetRules returns the Rules field value if set, zero value otherwise.
func (o *GetBucketLifecycleConfigurationOutput) GetRules() Array {
	if o == nil || IsNil(o.Rules) {
		var ret Array
		return ret
	}
	return *o.Rules
}

// GetRulesOk returns a tuple with the Rules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetBucketLifecycleConfigurationOutput) GetRulesOk() (*Array, bool) {
	if o == nil || IsNil(o.Rules) {
		return nil, false
	}
	return o.Rules, true
}

// HasRules returns a boolean if a field has been set.
func (o *GetBucketLifecycleConfigurationOutput) HasRules() bool {
	if o != nil && !IsNil(o.Rules) {
		return true
	}

	return false
}

// SetRules gets a reference to the given Array and assigns it to the Rules field.
func (o *GetBucketLifecycleConfigurationOutput) SetRules(v Array) {
	o.Rules = &v
}

func (o GetBucketLifecycleConfigurationOutput) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetBucketLifecycleConfigurationOutput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Rules) {
		toSerialize["Rules"] = o.Rules
	}
	return toSerialize, nil
}

type NullableGetBucketLifecycleConfigurationOutput struct {
	value *GetBucketLifecycleConfigurationOutput
	isSet bool
}

func (v NullableGetBucketLifecycleConfigurationOutput) Get() *GetBucketLifecycleConfigurationOutput {
	return v.value
}

func (v *NullableGetBucketLifecycleConfigurationOutput) Set(val *GetBucketLifecycleConfigurationOutput) {
	v.value = val
	v.isSet = true
}

func (v NullableGetBucketLifecycleConfigurationOutput) IsSet() bool {
	return v.isSet
}

func (v *NullableGetBucketLifecycleConfigurationOutput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetBucketLifecycleConfigurationOutput(val *GetBucketLifecycleConfigurationOutput) *NullableGetBucketLifecycleConfigurationOutput {
	return &NullableGetBucketLifecycleConfigurationOutput{value: val, isSet: true}
}

func (v NullableGetBucketLifecycleConfigurationOutput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetBucketLifecycleConfigurationOutput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


