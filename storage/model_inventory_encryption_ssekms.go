/*
ArvanCloud S3 Services

<p/>

API version: 2006-03-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package storage

import (
	"encoding/json"
)

// checks if the InventoryEncryptionSSEKMS type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &InventoryEncryptionSSEKMS{}

// InventoryEncryptionSSEKMS struct for InventoryEncryptionSSEKMS
type InventoryEncryptionSSEKMS struct {
	KeyId string `json:"KeyId"`
}

// NewInventoryEncryptionSSEKMS instantiates a new InventoryEncryptionSSEKMS object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewInventoryEncryptionSSEKMS(keyId string) *InventoryEncryptionSSEKMS {
	this := InventoryEncryptionSSEKMS{}
	this.KeyId = keyId
	return &this
}

// NewInventoryEncryptionSSEKMSWithDefaults instantiates a new InventoryEncryptionSSEKMS object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewInventoryEncryptionSSEKMSWithDefaults() *InventoryEncryptionSSEKMS {
	this := InventoryEncryptionSSEKMS{}
	return &this
}

// GetKeyId returns the KeyId field value
func (o *InventoryEncryptionSSEKMS) GetKeyId() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.KeyId
}

// GetKeyIdOk returns a tuple with the KeyId field value
// and a boolean to check if the value has been set.
func (o *InventoryEncryptionSSEKMS) GetKeyIdOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.KeyId, true
}

// SetKeyId sets field value
func (o *InventoryEncryptionSSEKMS) SetKeyId(v string) {
	o.KeyId = v
}

func (o InventoryEncryptionSSEKMS) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o InventoryEncryptionSSEKMS) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["KeyId"] = o.KeyId
	return toSerialize, nil
}

type NullableInventoryEncryptionSSEKMS struct {
	value *InventoryEncryptionSSEKMS
	isSet bool
}

func (v NullableInventoryEncryptionSSEKMS) Get() *InventoryEncryptionSSEKMS {
	return v.value
}

func (v *NullableInventoryEncryptionSSEKMS) Set(val *InventoryEncryptionSSEKMS) {
	v.value = val
	v.isSet = true
}

func (v NullableInventoryEncryptionSSEKMS) IsSet() bool {
	return v.isSet
}

func (v *NullableInventoryEncryptionSSEKMS) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableInventoryEncryptionSSEKMS(val *InventoryEncryptionSSEKMS) *NullableInventoryEncryptionSSEKMS {
	return &NullableInventoryEncryptionSSEKMS{value: val, isSet: true}
}

func (v NullableInventoryEncryptionSSEKMS) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableInventoryEncryptionSSEKMS) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


