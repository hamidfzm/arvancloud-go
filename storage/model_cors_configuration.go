/*
ArvanCloud S3 Services

<p/>

API version: 2006-03-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package storage

import (
	"encoding/json"
)

// checks if the CORSConfiguration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CORSConfiguration{}

// CORSConfiguration Describes the cross-origin access configuration for objects in an ArvanCloud S3 bucket.
type CORSConfiguration struct {
	CORSRules Array `json:"CORSRules"`
}

// NewCORSConfiguration instantiates a new CORSConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCORSConfiguration(cORSRules Array) *CORSConfiguration {
	this := CORSConfiguration{}
	this.CORSRules = cORSRules
	return &this
}

// NewCORSConfigurationWithDefaults instantiates a new CORSConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCORSConfigurationWithDefaults() *CORSConfiguration {
	this := CORSConfiguration{}
	return &this
}

// GetCORSRules returns the CORSRules field value
func (o *CORSConfiguration) GetCORSRules() Array {
	if o == nil {
		var ret Array
		return ret
	}

	return o.CORSRules
}

// GetCORSRulesOk returns a tuple with the CORSRules field value
// and a boolean to check if the value has been set.
func (o *CORSConfiguration) GetCORSRulesOk() (*Array, bool) {
	if o == nil {
		return nil, false
	}
	return &o.CORSRules, true
}

// SetCORSRules sets field value
func (o *CORSConfiguration) SetCORSRules(v Array) {
	o.CORSRules = v
}

func (o CORSConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CORSConfiguration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["CORSRules"] = o.CORSRules
	return toSerialize, nil
}

type NullableCORSConfiguration struct {
	value *CORSConfiguration
	isSet bool
}

func (v NullableCORSConfiguration) Get() *CORSConfiguration {
	return v.value
}

func (v *NullableCORSConfiguration) Set(val *CORSConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullableCORSConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullableCORSConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCORSConfiguration(val *CORSConfiguration) *NullableCORSConfiguration {
	return &NullableCORSConfiguration{value: val, isSet: true}
}

func (v NullableCORSConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCORSConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


