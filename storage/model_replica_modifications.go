/*
ArvanCloud S3 Services

<p/>

API version: 2006-03-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package storage

import (
	"encoding/json"
)

// checks if the ReplicaModifications type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReplicaModifications{}

// ReplicaModifications <p>A filter that you can specify for selection for modifications on replicas. ArvanCloud S3 doesn't replicate replica modifications by default. In the latest version of replication configuration (when <code>Filter</code> is specified), you can specify this element and set the status to <code>Enabled</code> to replicate modifications on replicas. </p> <note> <p> If you don't specify the <code>Filter</code> element, ArvanCloud S3 assumes that the replication configuration is the earlier version, V1. In the earlier version, this element is not allowed.</p> </note>
type ReplicaModifications struct {
	Status ReplicaModificationsStatus `json:"Status"`
}

// NewReplicaModifications instantiates a new ReplicaModifications object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReplicaModifications(status ReplicaModificationsStatus) *ReplicaModifications {
	this := ReplicaModifications{}
	this.Status = status
	return &this
}

// NewReplicaModificationsWithDefaults instantiates a new ReplicaModifications object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReplicaModificationsWithDefaults() *ReplicaModifications {
	this := ReplicaModifications{}
	return &this
}

// GetStatus returns the Status field value
func (o *ReplicaModifications) GetStatus() ReplicaModificationsStatus {
	if o == nil {
		var ret ReplicaModificationsStatus
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *ReplicaModifications) GetStatusOk() (*ReplicaModificationsStatus, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *ReplicaModifications) SetStatus(v ReplicaModificationsStatus) {
	o.Status = v
}

func (o ReplicaModifications) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReplicaModifications) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["Status"] = o.Status
	return toSerialize, nil
}

type NullableReplicaModifications struct {
	value *ReplicaModifications
	isSet bool
}

func (v NullableReplicaModifications) Get() *ReplicaModifications {
	return v.value
}

func (v *NullableReplicaModifications) Set(val *ReplicaModifications) {
	v.value = val
	v.isSet = true
}

func (v NullableReplicaModifications) IsSet() bool {
	return v.isSet
}

func (v *NullableReplicaModifications) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReplicaModifications(val *ReplicaModifications) *NullableReplicaModifications {
	return &NullableReplicaModifications{value: val, isSet: true}
}

func (v NullableReplicaModifications) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReplicaModifications) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


