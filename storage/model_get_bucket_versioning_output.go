/*
ArvanCloud S3 Services

<p/>

API version: 2006-03-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package storage

import (
	"encoding/json"
)

// checks if the GetBucketVersioningOutput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetBucketVersioningOutput{}

// GetBucketVersioningOutput struct for GetBucketVersioningOutput
type GetBucketVersioningOutput struct {
	Status *BucketVersioningStatus `json:"Status,omitempty"`
	MFADelete *MFADeleteStatus `json:"MFADelete,omitempty"`
}

// NewGetBucketVersioningOutput instantiates a new GetBucketVersioningOutput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetBucketVersioningOutput() *GetBucketVersioningOutput {
	this := GetBucketVersioningOutput{}
	return &this
}

// NewGetBucketVersioningOutputWithDefaults instantiates a new GetBucketVersioningOutput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetBucketVersioningOutputWithDefaults() *GetBucketVersioningOutput {
	this := GetBucketVersioningOutput{}
	return &this
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *GetBucketVersioningOutput) GetStatus() BucketVersioningStatus {
	if o == nil || IsNil(o.Status) {
		var ret BucketVersioningStatus
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetBucketVersioningOutput) GetStatusOk() (*BucketVersioningStatus, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *GetBucketVersioningOutput) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given BucketVersioningStatus and assigns it to the Status field.
func (o *GetBucketVersioningOutput) SetStatus(v BucketVersioningStatus) {
	o.Status = &v
}

// GetMFADelete returns the MFADelete field value if set, zero value otherwise.
func (o *GetBucketVersioningOutput) GetMFADelete() MFADeleteStatus {
	if o == nil || IsNil(o.MFADelete) {
		var ret MFADeleteStatus
		return ret
	}
	return *o.MFADelete
}

// GetMFADeleteOk returns a tuple with the MFADelete field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetBucketVersioningOutput) GetMFADeleteOk() (*MFADeleteStatus, bool) {
	if o == nil || IsNil(o.MFADelete) {
		return nil, false
	}
	return o.MFADelete, true
}

// HasMFADelete returns a boolean if a field has been set.
func (o *GetBucketVersioningOutput) HasMFADelete() bool {
	if o != nil && !IsNil(o.MFADelete) {
		return true
	}

	return false
}

// SetMFADelete gets a reference to the given MFADeleteStatus and assigns it to the MFADelete field.
func (o *GetBucketVersioningOutput) SetMFADelete(v MFADeleteStatus) {
	o.MFADelete = &v
}

func (o GetBucketVersioningOutput) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetBucketVersioningOutput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Status) {
		toSerialize["Status"] = o.Status
	}
	if !IsNil(o.MFADelete) {
		toSerialize["MFADelete"] = o.MFADelete
	}
	return toSerialize, nil
}

type NullableGetBucketVersioningOutput struct {
	value *GetBucketVersioningOutput
	isSet bool
}

func (v NullableGetBucketVersioningOutput) Get() *GetBucketVersioningOutput {
	return v.value
}

func (v *NullableGetBucketVersioningOutput) Set(val *GetBucketVersioningOutput) {
	v.value = val
	v.isSet = true
}

func (v NullableGetBucketVersioningOutput) IsSet() bool {
	return v.isSet
}

func (v *NullableGetBucketVersioningOutput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetBucketVersioningOutput(val *GetBucketVersioningOutput) *NullableGetBucketVersioningOutput {
	return &NullableGetBucketVersioningOutput{value: val, isSet: true}
}

func (v NullableGetBucketVersioningOutput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetBucketVersioningOutput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


