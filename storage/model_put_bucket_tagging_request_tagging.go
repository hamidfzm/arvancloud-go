/*
ArvanCloud S3 Services

<p/>

API version: 2006-03-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package storage

import (
	"encoding/json"
)

// checks if the PutBucketTaggingRequestTagging type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PutBucketTaggingRequestTagging{}

// PutBucketTaggingRequestTagging struct for PutBucketTaggingRequestTagging
type PutBucketTaggingRequestTagging struct {
	TagSet Array `json:"TagSet"`
}

// NewPutBucketTaggingRequestTagging instantiates a new PutBucketTaggingRequestTagging object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPutBucketTaggingRequestTagging(tagSet Array) *PutBucketTaggingRequestTagging {
	this := PutBucketTaggingRequestTagging{}
	this.TagSet = tagSet
	return &this
}

// NewPutBucketTaggingRequestTaggingWithDefaults instantiates a new PutBucketTaggingRequestTagging object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPutBucketTaggingRequestTaggingWithDefaults() *PutBucketTaggingRequestTagging {
	this := PutBucketTaggingRequestTagging{}
	return &this
}

// GetTagSet returns the TagSet field value
func (o *PutBucketTaggingRequestTagging) GetTagSet() Array {
	if o == nil {
		var ret Array
		return ret
	}

	return o.TagSet
}

// GetTagSetOk returns a tuple with the TagSet field value
// and a boolean to check if the value has been set.
func (o *PutBucketTaggingRequestTagging) GetTagSetOk() (*Array, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TagSet, true
}

// SetTagSet sets field value
func (o *PutBucketTaggingRequestTagging) SetTagSet(v Array) {
	o.TagSet = v
}

func (o PutBucketTaggingRequestTagging) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PutBucketTaggingRequestTagging) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["TagSet"] = o.TagSet
	return toSerialize, nil
}

type NullablePutBucketTaggingRequestTagging struct {
	value *PutBucketTaggingRequestTagging
	isSet bool
}

func (v NullablePutBucketTaggingRequestTagging) Get() *PutBucketTaggingRequestTagging {
	return v.value
}

func (v *NullablePutBucketTaggingRequestTagging) Set(val *PutBucketTaggingRequestTagging) {
	v.value = val
	v.isSet = true
}

func (v NullablePutBucketTaggingRequestTagging) IsSet() bool {
	return v.isSet
}

func (v *NullablePutBucketTaggingRequestTagging) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePutBucketTaggingRequestTagging(val *PutBucketTaggingRequestTagging) *NullablePutBucketTaggingRequestTagging {
	return &NullablePutBucketTaggingRequestTagging{value: val, isSet: true}
}

func (v NullablePutBucketTaggingRequestTagging) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePutBucketTaggingRequestTagging) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


