/*
ArvanCloud S3 Services

<p/>

API version: 2006-03-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package storage

import (
	"encoding/json"
)

// checks if the PutBucketAnalyticsConfigurationRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PutBucketAnalyticsConfigurationRequest{}

// PutBucketAnalyticsConfigurationRequest struct for PutBucketAnalyticsConfigurationRequest
type PutBucketAnalyticsConfigurationRequest struct {
	AnalyticsConfiguration PutBucketAnalyticsConfigurationRequestAnalyticsConfiguration `json:"AnalyticsConfiguration"`
}

// NewPutBucketAnalyticsConfigurationRequest instantiates a new PutBucketAnalyticsConfigurationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPutBucketAnalyticsConfigurationRequest(analyticsConfiguration PutBucketAnalyticsConfigurationRequestAnalyticsConfiguration) *PutBucketAnalyticsConfigurationRequest {
	this := PutBucketAnalyticsConfigurationRequest{}
	this.AnalyticsConfiguration = analyticsConfiguration
	return &this
}

// NewPutBucketAnalyticsConfigurationRequestWithDefaults instantiates a new PutBucketAnalyticsConfigurationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPutBucketAnalyticsConfigurationRequestWithDefaults() *PutBucketAnalyticsConfigurationRequest {
	this := PutBucketAnalyticsConfigurationRequest{}
	return &this
}

// GetAnalyticsConfiguration returns the AnalyticsConfiguration field value
func (o *PutBucketAnalyticsConfigurationRequest) GetAnalyticsConfiguration() PutBucketAnalyticsConfigurationRequestAnalyticsConfiguration {
	if o == nil {
		var ret PutBucketAnalyticsConfigurationRequestAnalyticsConfiguration
		return ret
	}

	return o.AnalyticsConfiguration
}

// GetAnalyticsConfigurationOk returns a tuple with the AnalyticsConfiguration field value
// and a boolean to check if the value has been set.
func (o *PutBucketAnalyticsConfigurationRequest) GetAnalyticsConfigurationOk() (*PutBucketAnalyticsConfigurationRequestAnalyticsConfiguration, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AnalyticsConfiguration, true
}

// SetAnalyticsConfiguration sets field value
func (o *PutBucketAnalyticsConfigurationRequest) SetAnalyticsConfiguration(v PutBucketAnalyticsConfigurationRequestAnalyticsConfiguration) {
	o.AnalyticsConfiguration = v
}

func (o PutBucketAnalyticsConfigurationRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PutBucketAnalyticsConfigurationRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["AnalyticsConfiguration"] = o.AnalyticsConfiguration
	return toSerialize, nil
}

type NullablePutBucketAnalyticsConfigurationRequest struct {
	value *PutBucketAnalyticsConfigurationRequest
	isSet bool
}

func (v NullablePutBucketAnalyticsConfigurationRequest) Get() *PutBucketAnalyticsConfigurationRequest {
	return v.value
}

func (v *NullablePutBucketAnalyticsConfigurationRequest) Set(val *PutBucketAnalyticsConfigurationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePutBucketAnalyticsConfigurationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePutBucketAnalyticsConfigurationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePutBucketAnalyticsConfigurationRequest(val *PutBucketAnalyticsConfigurationRequest) *NullablePutBucketAnalyticsConfigurationRequest {
	return &NullablePutBucketAnalyticsConfigurationRequest{value: val, isSet: true}
}

func (v NullablePutBucketAnalyticsConfigurationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePutBucketAnalyticsConfigurationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


