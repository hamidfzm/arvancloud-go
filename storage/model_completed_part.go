/*
ArvanCloud S3 Services

<p/>

API version: 2006-03-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package storage

import (
	"encoding/json"
)

// checks if the CompletedPart type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &CompletedPart{}

// CompletedPart Details of the parts that were uploaded.
type CompletedPart struct {
	ETag *string `json:"ETag,omitempty"`
	PartNumber *int32 `json:"PartNumber,omitempty"`
}

// NewCompletedPart instantiates a new CompletedPart object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewCompletedPart() *CompletedPart {
	this := CompletedPart{}
	return &this
}

// NewCompletedPartWithDefaults instantiates a new CompletedPart object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewCompletedPartWithDefaults() *CompletedPart {
	this := CompletedPart{}
	return &this
}

// GetETag returns the ETag field value if set, zero value otherwise.
func (o *CompletedPart) GetETag() string {
	if o == nil || IsNil(o.ETag) {
		var ret string
		return ret
	}
	return *o.ETag
}

// GetETagOk returns a tuple with the ETag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompletedPart) GetETagOk() (*string, bool) {
	if o == nil || IsNil(o.ETag) {
		return nil, false
	}
	return o.ETag, true
}

// HasETag returns a boolean if a field has been set.
func (o *CompletedPart) HasETag() bool {
	if o != nil && !IsNil(o.ETag) {
		return true
	}

	return false
}

// SetETag gets a reference to the given string and assigns it to the ETag field.
func (o *CompletedPart) SetETag(v string) {
	o.ETag = &v
}

// GetPartNumber returns the PartNumber field value if set, zero value otherwise.
func (o *CompletedPart) GetPartNumber() int32 {
	if o == nil || IsNil(o.PartNumber) {
		var ret int32
		return ret
	}
	return *o.PartNumber
}

// GetPartNumberOk returns a tuple with the PartNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *CompletedPart) GetPartNumberOk() (*int32, bool) {
	if o == nil || IsNil(o.PartNumber) {
		return nil, false
	}
	return o.PartNumber, true
}

// HasPartNumber returns a boolean if a field has been set.
func (o *CompletedPart) HasPartNumber() bool {
	if o != nil && !IsNil(o.PartNumber) {
		return true
	}

	return false
}

// SetPartNumber gets a reference to the given int32 and assigns it to the PartNumber field.
func (o *CompletedPart) SetPartNumber(v int32) {
	o.PartNumber = &v
}

func (o CompletedPart) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o CompletedPart) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ETag) {
		toSerialize["ETag"] = o.ETag
	}
	if !IsNil(o.PartNumber) {
		toSerialize["PartNumber"] = o.PartNumber
	}
	return toSerialize, nil
}

type NullableCompletedPart struct {
	value *CompletedPart
	isSet bool
}

func (v NullableCompletedPart) Get() *CompletedPart {
	return v.value
}

func (v *NullableCompletedPart) Set(val *CompletedPart) {
	v.value = val
	v.isSet = true
}

func (v NullableCompletedPart) IsSet() bool {
	return v.isSet
}

func (v *NullableCompletedPart) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableCompletedPart(val *CompletedPart) *NullableCompletedPart {
	return &NullableCompletedPart{value: val, isSet: true}
}

func (v NullableCompletedPart) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableCompletedPart) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


