/*
ArvanCloud S3 Services

<p/>

API version: 2006-03-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package storage

import (
	"encoding/json"
)

// checks if the PutBucketInventoryConfigurationRequestInventoryConfiguration type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PutBucketInventoryConfigurationRequestInventoryConfiguration{}

// PutBucketInventoryConfigurationRequestInventoryConfiguration struct for PutBucketInventoryConfigurationRequestInventoryConfiguration
type PutBucketInventoryConfigurationRequestInventoryConfiguration struct {
	Destination InventoryDestination `json:"Destination"`
	IsEnabled IsEnabled `json:"IsEnabled"`
	Filter *InventoryFilter `json:"Filter,omitempty"`
	Id InventoryId `json:"Id"`
	IncludedObjectVersions InventoryIncludedObjectVersions `json:"IncludedObjectVersions"`
	OptionalFields *InventoryOptionalFields `json:"OptionalFields,omitempty"`
	Schedule InventorySchedule `json:"Schedule"`
}

// NewPutBucketInventoryConfigurationRequestInventoryConfiguration instantiates a new PutBucketInventoryConfigurationRequestInventoryConfiguration object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPutBucketInventoryConfigurationRequestInventoryConfiguration(destination InventoryDestination, isEnabled IsEnabled, id InventoryId, includedObjectVersions InventoryIncludedObjectVersions, schedule InventorySchedule) *PutBucketInventoryConfigurationRequestInventoryConfiguration {
	this := PutBucketInventoryConfigurationRequestInventoryConfiguration{}
	this.Destination = destination
	this.IsEnabled = isEnabled
	this.Id = id
	this.IncludedObjectVersions = includedObjectVersions
	this.Schedule = schedule
	return &this
}

// NewPutBucketInventoryConfigurationRequestInventoryConfigurationWithDefaults instantiates a new PutBucketInventoryConfigurationRequestInventoryConfiguration object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPutBucketInventoryConfigurationRequestInventoryConfigurationWithDefaults() *PutBucketInventoryConfigurationRequestInventoryConfiguration {
	this := PutBucketInventoryConfigurationRequestInventoryConfiguration{}
	return &this
}

// GetDestination returns the Destination field value
func (o *PutBucketInventoryConfigurationRequestInventoryConfiguration) GetDestination() InventoryDestination {
	if o == nil {
		var ret InventoryDestination
		return ret
	}

	return o.Destination
}

// GetDestinationOk returns a tuple with the Destination field value
// and a boolean to check if the value has been set.
func (o *PutBucketInventoryConfigurationRequestInventoryConfiguration) GetDestinationOk() (*InventoryDestination, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Destination, true
}

// SetDestination sets field value
func (o *PutBucketInventoryConfigurationRequestInventoryConfiguration) SetDestination(v InventoryDestination) {
	o.Destination = v
}

// GetIsEnabled returns the IsEnabled field value
func (o *PutBucketInventoryConfigurationRequestInventoryConfiguration) GetIsEnabled() IsEnabled {
	if o == nil {
		var ret IsEnabled
		return ret
	}

	return o.IsEnabled
}

// GetIsEnabledOk returns a tuple with the IsEnabled field value
// and a boolean to check if the value has been set.
func (o *PutBucketInventoryConfigurationRequestInventoryConfiguration) GetIsEnabledOk() (*IsEnabled, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IsEnabled, true
}

// SetIsEnabled sets field value
func (o *PutBucketInventoryConfigurationRequestInventoryConfiguration) SetIsEnabled(v IsEnabled) {
	o.IsEnabled = v
}

// GetFilter returns the Filter field value if set, zero value otherwise.
func (o *PutBucketInventoryConfigurationRequestInventoryConfiguration) GetFilter() InventoryFilter {
	if o == nil || IsNil(o.Filter) {
		var ret InventoryFilter
		return ret
	}
	return *o.Filter
}

// GetFilterOk returns a tuple with the Filter field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PutBucketInventoryConfigurationRequestInventoryConfiguration) GetFilterOk() (*InventoryFilter, bool) {
	if o == nil || IsNil(o.Filter) {
		return nil, false
	}
	return o.Filter, true
}

// HasFilter returns a boolean if a field has been set.
func (o *PutBucketInventoryConfigurationRequestInventoryConfiguration) HasFilter() bool {
	if o != nil && !IsNil(o.Filter) {
		return true
	}

	return false
}

// SetFilter gets a reference to the given InventoryFilter and assigns it to the Filter field.
func (o *PutBucketInventoryConfigurationRequestInventoryConfiguration) SetFilter(v InventoryFilter) {
	o.Filter = &v
}

// GetId returns the Id field value
func (o *PutBucketInventoryConfigurationRequestInventoryConfiguration) GetId() InventoryId {
	if o == nil {
		var ret InventoryId
		return ret
	}

	return o.Id
}

// GetIdOk returns a tuple with the Id field value
// and a boolean to check if the value has been set.
func (o *PutBucketInventoryConfigurationRequestInventoryConfiguration) GetIdOk() (*InventoryId, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Id, true
}

// SetId sets field value
func (o *PutBucketInventoryConfigurationRequestInventoryConfiguration) SetId(v InventoryId) {
	o.Id = v
}

// GetIncludedObjectVersions returns the IncludedObjectVersions field value
func (o *PutBucketInventoryConfigurationRequestInventoryConfiguration) GetIncludedObjectVersions() InventoryIncludedObjectVersions {
	if o == nil {
		var ret InventoryIncludedObjectVersions
		return ret
	}

	return o.IncludedObjectVersions
}

// GetIncludedObjectVersionsOk returns a tuple with the IncludedObjectVersions field value
// and a boolean to check if the value has been set.
func (o *PutBucketInventoryConfigurationRequestInventoryConfiguration) GetIncludedObjectVersionsOk() (*InventoryIncludedObjectVersions, bool) {
	if o == nil {
		return nil, false
	}
	return &o.IncludedObjectVersions, true
}

// SetIncludedObjectVersions sets field value
func (o *PutBucketInventoryConfigurationRequestInventoryConfiguration) SetIncludedObjectVersions(v InventoryIncludedObjectVersions) {
	o.IncludedObjectVersions = v
}

// GetOptionalFields returns the OptionalFields field value if set, zero value otherwise.
func (o *PutBucketInventoryConfigurationRequestInventoryConfiguration) GetOptionalFields() InventoryOptionalFields {
	if o == nil || IsNil(o.OptionalFields) {
		var ret InventoryOptionalFields
		return ret
	}
	return *o.OptionalFields
}

// GetOptionalFieldsOk returns a tuple with the OptionalFields field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PutBucketInventoryConfigurationRequestInventoryConfiguration) GetOptionalFieldsOk() (*InventoryOptionalFields, bool) {
	if o == nil || IsNil(o.OptionalFields) {
		return nil, false
	}
	return o.OptionalFields, true
}

// HasOptionalFields returns a boolean if a field has been set.
func (o *PutBucketInventoryConfigurationRequestInventoryConfiguration) HasOptionalFields() bool {
	if o != nil && !IsNil(o.OptionalFields) {
		return true
	}

	return false
}

// SetOptionalFields gets a reference to the given InventoryOptionalFields and assigns it to the OptionalFields field.
func (o *PutBucketInventoryConfigurationRequestInventoryConfiguration) SetOptionalFields(v InventoryOptionalFields) {
	o.OptionalFields = &v
}

// GetSchedule returns the Schedule field value
func (o *PutBucketInventoryConfigurationRequestInventoryConfiguration) GetSchedule() InventorySchedule {
	if o == nil {
		var ret InventorySchedule
		return ret
	}

	return o.Schedule
}

// GetScheduleOk returns a tuple with the Schedule field value
// and a boolean to check if the value has been set.
func (o *PutBucketInventoryConfigurationRequestInventoryConfiguration) GetScheduleOk() (*InventorySchedule, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Schedule, true
}

// SetSchedule sets field value
func (o *PutBucketInventoryConfigurationRequestInventoryConfiguration) SetSchedule(v InventorySchedule) {
	o.Schedule = v
}

func (o PutBucketInventoryConfigurationRequestInventoryConfiguration) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PutBucketInventoryConfigurationRequestInventoryConfiguration) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["Destination"] = o.Destination
	toSerialize["IsEnabled"] = o.IsEnabled
	if !IsNil(o.Filter) {
		toSerialize["Filter"] = o.Filter
	}
	toSerialize["Id"] = o.Id
	toSerialize["IncludedObjectVersions"] = o.IncludedObjectVersions
	if !IsNil(o.OptionalFields) {
		toSerialize["OptionalFields"] = o.OptionalFields
	}
	toSerialize["Schedule"] = o.Schedule
	return toSerialize, nil
}

type NullablePutBucketInventoryConfigurationRequestInventoryConfiguration struct {
	value *PutBucketInventoryConfigurationRequestInventoryConfiguration
	isSet bool
}

func (v NullablePutBucketInventoryConfigurationRequestInventoryConfiguration) Get() *PutBucketInventoryConfigurationRequestInventoryConfiguration {
	return v.value
}

func (v *NullablePutBucketInventoryConfigurationRequestInventoryConfiguration) Set(val *PutBucketInventoryConfigurationRequestInventoryConfiguration) {
	v.value = val
	v.isSet = true
}

func (v NullablePutBucketInventoryConfigurationRequestInventoryConfiguration) IsSet() bool {
	return v.isSet
}

func (v *NullablePutBucketInventoryConfigurationRequestInventoryConfiguration) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePutBucketInventoryConfigurationRequestInventoryConfiguration(val *PutBucketInventoryConfigurationRequestInventoryConfiguration) *NullablePutBucketInventoryConfigurationRequestInventoryConfiguration {
	return &NullablePutBucketInventoryConfigurationRequestInventoryConfiguration{value: val, isSet: true}
}

func (v NullablePutBucketInventoryConfigurationRequestInventoryConfiguration) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePutBucketInventoryConfigurationRequestInventoryConfiguration) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


