/*
ArvanCloud S3 Services

<p/>

API version: 2006-03-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package storage

import (
	"encoding/json"
)

// checks if the PutBucketReplicationRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PutBucketReplicationRequest{}

// PutBucketReplicationRequest struct for PutBucketReplicationRequest
type PutBucketReplicationRequest struct {
	ReplicationConfiguration ReplicationConfiguration `json:"ReplicationConfiguration"`
}

// NewPutBucketReplicationRequest instantiates a new PutBucketReplicationRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPutBucketReplicationRequest(replicationConfiguration ReplicationConfiguration) *PutBucketReplicationRequest {
	this := PutBucketReplicationRequest{}
	this.ReplicationConfiguration = replicationConfiguration
	return &this
}

// NewPutBucketReplicationRequestWithDefaults instantiates a new PutBucketReplicationRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPutBucketReplicationRequestWithDefaults() *PutBucketReplicationRequest {
	this := PutBucketReplicationRequest{}
	return &this
}

// GetReplicationConfiguration returns the ReplicationConfiguration field value
func (o *PutBucketReplicationRequest) GetReplicationConfiguration() ReplicationConfiguration {
	if o == nil {
		var ret ReplicationConfiguration
		return ret
	}

	return o.ReplicationConfiguration
}

// GetReplicationConfigurationOk returns a tuple with the ReplicationConfiguration field value
// and a boolean to check if the value has been set.
func (o *PutBucketReplicationRequest) GetReplicationConfigurationOk() (*ReplicationConfiguration, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ReplicationConfiguration, true
}

// SetReplicationConfiguration sets field value
func (o *PutBucketReplicationRequest) SetReplicationConfiguration(v ReplicationConfiguration) {
	o.ReplicationConfiguration = v
}

func (o PutBucketReplicationRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PutBucketReplicationRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["ReplicationConfiguration"] = o.ReplicationConfiguration
	return toSerialize, nil
}

type NullablePutBucketReplicationRequest struct {
	value *PutBucketReplicationRequest
	isSet bool
}

func (v NullablePutBucketReplicationRequest) Get() *PutBucketReplicationRequest {
	return v.value
}

func (v *NullablePutBucketReplicationRequest) Set(val *PutBucketReplicationRequest) {
	v.value = val
	v.isSet = true
}

func (v NullablePutBucketReplicationRequest) IsSet() bool {
	return v.isSet
}

func (v *NullablePutBucketReplicationRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePutBucketReplicationRequest(val *PutBucketReplicationRequest) *NullablePutBucketReplicationRequest {
	return &NullablePutBucketReplicationRequest{value: val, isSet: true}
}

func (v NullablePutBucketReplicationRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePutBucketReplicationRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


