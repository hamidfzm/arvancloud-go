/*
ArvanCloud S3 Services

<p/>

API version: 2006-03-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package storage

import (
	"encoding/json"
	"time"
)

// checks if the PutObjectRetentionRequestRetention type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &PutObjectRetentionRequestRetention{}

// PutObjectRetentionRequestRetention struct for PutObjectRetentionRequestRetention
type PutObjectRetentionRequestRetention struct {
	Mode *ObjectLockRetentionMode `json:"Mode,omitempty"`
	RetainUntilDate *time.Time `json:"RetainUntilDate,omitempty"`
}

// NewPutObjectRetentionRequestRetention instantiates a new PutObjectRetentionRequestRetention object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewPutObjectRetentionRequestRetention() *PutObjectRetentionRequestRetention {
	this := PutObjectRetentionRequestRetention{}
	return &this
}

// NewPutObjectRetentionRequestRetentionWithDefaults instantiates a new PutObjectRetentionRequestRetention object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewPutObjectRetentionRequestRetentionWithDefaults() *PutObjectRetentionRequestRetention {
	this := PutObjectRetentionRequestRetention{}
	return &this
}

// GetMode returns the Mode field value if set, zero value otherwise.
func (o *PutObjectRetentionRequestRetention) GetMode() ObjectLockRetentionMode {
	if o == nil || IsNil(o.Mode) {
		var ret ObjectLockRetentionMode
		return ret
	}
	return *o.Mode
}

// GetModeOk returns a tuple with the Mode field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PutObjectRetentionRequestRetention) GetModeOk() (*ObjectLockRetentionMode, bool) {
	if o == nil || IsNil(o.Mode) {
		return nil, false
	}
	return o.Mode, true
}

// HasMode returns a boolean if a field has been set.
func (o *PutObjectRetentionRequestRetention) HasMode() bool {
	if o != nil && !IsNil(o.Mode) {
		return true
	}

	return false
}

// SetMode gets a reference to the given ObjectLockRetentionMode and assigns it to the Mode field.
func (o *PutObjectRetentionRequestRetention) SetMode(v ObjectLockRetentionMode) {
	o.Mode = &v
}

// GetRetainUntilDate returns the RetainUntilDate field value if set, zero value otherwise.
func (o *PutObjectRetentionRequestRetention) GetRetainUntilDate() time.Time {
	if o == nil || IsNil(o.RetainUntilDate) {
		var ret time.Time
		return ret
	}
	return *o.RetainUntilDate
}

// GetRetainUntilDateOk returns a tuple with the RetainUntilDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *PutObjectRetentionRequestRetention) GetRetainUntilDateOk() (*time.Time, bool) {
	if o == nil || IsNil(o.RetainUntilDate) {
		return nil, false
	}
	return o.RetainUntilDate, true
}

// HasRetainUntilDate returns a boolean if a field has been set.
func (o *PutObjectRetentionRequestRetention) HasRetainUntilDate() bool {
	if o != nil && !IsNil(o.RetainUntilDate) {
		return true
	}

	return false
}

// SetRetainUntilDate gets a reference to the given time.Time and assigns it to the RetainUntilDate field.
func (o *PutObjectRetentionRequestRetention) SetRetainUntilDate(v time.Time) {
	o.RetainUntilDate = &v
}

func (o PutObjectRetentionRequestRetention) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o PutObjectRetentionRequestRetention) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Mode) {
		toSerialize["Mode"] = o.Mode
	}
	if !IsNil(o.RetainUntilDate) {
		toSerialize["RetainUntilDate"] = o.RetainUntilDate
	}
	return toSerialize, nil
}

type NullablePutObjectRetentionRequestRetention struct {
	value *PutObjectRetentionRequestRetention
	isSet bool
}

func (v NullablePutObjectRetentionRequestRetention) Get() *PutObjectRetentionRequestRetention {
	return v.value
}

func (v *NullablePutObjectRetentionRequestRetention) Set(val *PutObjectRetentionRequestRetention) {
	v.value = val
	v.isSet = true
}

func (v NullablePutObjectRetentionRequestRetention) IsSet() bool {
	return v.isSet
}

func (v *NullablePutObjectRetentionRequestRetention) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullablePutObjectRetentionRequestRetention(val *PutObjectRetentionRequestRetention) *NullablePutObjectRetentionRequestRetention {
	return &NullablePutObjectRetentionRequestRetention{value: val, isSet: true}
}

func (v NullablePutObjectRetentionRequestRetention) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullablePutObjectRetentionRequestRetention) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


