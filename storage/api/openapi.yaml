openapi: 3.0.1
info:
  description: <p/>
  termsOfService: https://www.arvancloud.com/en/legal/terms
  title: ArvanCloud S3 Services
  version: 2006-03-01
  x-release: s3
  x-logo:
    url: /images/other/arvan-api-docs-logo.svg
    backgroundColor: 00BABA
    altText: arvancloud
  x-providerName: Arvancloud.com
  x-serviceName: s3
externalDocs:
  description: API Guide
  url: https://docs.arvancloud.com/fa/developer-tools/api/api-usage#%D8%A7%D8%B3%D8%AA%D9%81%D8%A7%D8%AF%D9%87-%D8%A7%D8%B2-api-%D9%85%D8%AD%D8%B5%D9%88%D9%84-%D9%81%D8%B6%D8%A7%DB%8C-%D8%A7%D8%A8%D8%B1%DB%8C
servers:
- description: The ArvanCloud S3 multi-region endpoint
  url: "https://s3.{region}.arvanstorage.com"
  variables:
    region:
      default: ir-thr-at1
      description: The ArvanCloud region
      enum:
      - ir-thr-at1
      - ir-tbz-sh1
- description: The general Arvancloud S3 endpoint for Iran Tehran-Asiatech
  url: https://s3.ir-thr-at1.arvanstorage.com
- description: The general Arvancloud S3 endpoint for Iran Tabriz-shahriar
  url: https://s3.ir-tbz-sh1.arvanstorage.com
security:
- hmac: []
tags:
- description: APIs related to bucket
  name: Bucket
- description: APIs related to bucket policy
  name: Bucket Policy
- description: APIs related to bucket ACL
  name: Bucket ACL
- description: APIs related to bucket tagging
  name: Bucket Tagging
- description: APIs related to bucket CORS
  name: Bucket CORS
- description: APIs related to bucket versioning
  name: Bucket Versioning
- description: APIs related to bucket lifecycle configuration
  name: Bucket Lifecycle Configuration
- description: APIs related to bucket website configuration
  name: Bucket Website Configuration
- description: APIs related to objects
  name: Object
- description: APIs related to object ACL
  name: Object ACL
- description: APIs related to object Tagging
  name: Object Tagging
- description: APIs related to object multipart operations
  name: Multipart
paths:
  /{Bucket}/{Key}#uploadId:
    delete:
      description: "<p>This action aborts a multipart upload. After a multipart upload\
        \ is aborted, no additional parts can be uploaded using that upload ID. The\
        \ storage consumed by any previously uploaded parts will be freed. However,\
        \ if any part uploads are currently in progress, those part uploads might\
        \ or might not succeed. As a result, it might be necessary to abort a given\
        \ multipart upload multiple times in order to completely free all storage\
        \ consumed by all parts. </p> <p>To verify that all parts have been removed,\
        \ so you don't get charged for the part storage, you should call the <a href=\"\
        https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListParts.html\">ListParts</a>\
        \ action and ensure that the parts list is empty.</p> <p>For information about\
        \ permissions required to use the multipart upload, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/mpuAndPermissions.html\"\
        >Multipart Upload and Permissions</a>.</p> <p>The following operations are\
        \ related to <code>AbortMultipartUpload</code>:</p> <ul> <li> <p> <a href=\"\
        https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateMultipartUpload.html\"\
        >CreateMultipartUpload</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_UploadPart.html\"\
        >UploadPart</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_CompleteMultipartUpload.html\"\
        >CompleteMultipartUpload</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListParts.html\"\
        >ListParts</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListMultipartUploads.html\"\
        >ListMultipartUploads</a> </p> </li> </ul>"
      operationId: AbortMultipartUpload
      parameters:
      - description: This parameter is currently not supported and is not required.
        explode: false
        in: header
        name: x-amz-security-token
        required: false
        schema:
          type: string
        style: simple
      - description: <p>The bucket name to which the upload was taking place. </p>
        explode: false
        in: path
        name: Bucket
        required: true
        schema:
          type: string
        style: simple
      - description: Key of the object for which the multipart upload was initiated.
        explode: false
        in: path
        name: Key
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      - description: Upload ID that identifies the multipart upload.
        explode: true
        in: query
        name: uploadId
        required: true
        schema:
          type: string
        style: form
      - description: ""
        explode: false
        in: header
        name: x-amz-request-payer
        required: false
        schema:
          description: "Confirms that the requester knows that they will be charged\
            \ for the request. Bucket owners need not specify this parameter in their\
            \ requests. For information about downloading objects from requester pays\
            \ buckets, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html\"\
            >Downloading Objects in Requestor Pays Buckets</a> in the <i>S3 User Guide</i>."
          enum:
          - requester
          type: string
        style: simple
      - description: "The account ID of the expected bucket owner. If the bucket is\
          \ owned by a different account, the request will fail with an HTTP <code>403\
          \ (Access Denied)</code> error."
        explode: false
        in: header
        name: x-amz-expected-bucket-owner
        required: false
        schema:
          type: string
        style: simple
      responses:
        "204":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/AbortMultipartUploadOutput'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchUpload'
          description: NoSuchUpload
      tags:
      - Multipart
    get:
      description: "<p>Lists the parts that have been uploaded for a specific multipart\
        \ upload. This operation must include the upload ID, which you obtain by sending\
        \ the initiate multipart upload request (see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateMultipartUpload.html\"\
        >CreateMultipartUpload</a>). This request returns a maximum of 1,000 uploaded\
        \ parts. The default number of parts returned is 1,000 parts. You can restrict\
        \ the number of parts returned by specifying the <code>max-parts</code> request\
        \ parameter. If your multipart upload consists of more than 1,000 parts, the\
        \ response returns an <code>IsTruncated</code> field with the value of true,\
        \ and a <code>NextPartNumberMarker</code> element. In subsequent <code>ListParts</code>\
        \ requests you can include the part-number-marker query string parameter and\
        \ set its value to the <code>NextPartNumberMarker</code> field value from\
        \ the previous response.</p> <p>For more information on multipart uploads,\
        \ see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/uploadobjusingmpu.html\"\
        >Uploading Objects Using Multipart Upload</a>.</p> <p>For information on permissions\
        \ required to use the multipart upload API, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/mpuAndPermissions.html\"\
        >Multipart Upload and Permissions</a>.</p> <p>The following operations are\
        \ related to <code>ListParts</code>:</p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateMultipartUpload.html\"\
        >CreateMultipartUpload</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_UploadPart.html\"\
        >UploadPart</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_CompleteMultipartUpload.html\"\
        >CompleteMultipartUpload</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_AbortMultipartUpload.html\"\
        >AbortMultipartUpload</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListMultipartUploads.html\"\
        >ListMultipartUploads</a> </p> </li> </ul>"
      operationId: ListParts
      parameters:
      - description: This parameter is currently not supported and is not required.
        explode: false
        in: header
        name: x-amz-security-token
        required: false
        schema:
          type: string
        style: simple
      - description: <p>The name of the bucket to which the parts are being uploaded.
          </p> </p>
        explode: false
        in: path
        name: Bucket
        required: true
        schema:
          type: string
        style: simple
      - description: Object key for which the multipart upload was initiated.
        explode: false
        in: path
        name: Key
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      - description: Sets the maximum number of parts to return.
        explode: true
        in: query
        name: max-parts
        required: false
        schema:
          type: integer
        style: form
      - description: Specifies the part after which listing should begin. Only parts
          with higher part numbers will be listed.
        explode: true
        in: query
        name: part-number-marker
        required: false
        schema:
          type: integer
        style: form
      - description: Upload ID identifying the multipart upload whose parts are being
          listed.
        explode: true
        in: query
        name: uploadId
        required: true
        schema:
          type: string
        style: form
      - description: ""
        explode: false
        in: header
        name: x-amz-request-payer
        required: false
        schema:
          description: "Confirms that the requester knows that they will be charged\
            \ for the request. Bucket owners need not specify this parameter in their\
            \ requests. For information about downloading objects from requester pays\
            \ buckets, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html\"\
            >Downloading Objects in Requestor Pays Buckets</a> in the <i>S3 User Guide</i>."
          enum:
          - requester
          type: string
        style: simple
      - description: "The account ID of the expected bucket owner. If the bucket is\
          \ owned by a different account, the request will fail with an HTTP <code>403\
          \ (Access Denied)</code> error."
        explode: false
        in: header
        name: x-amz-expected-bucket-owner
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxParts
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: PartNumberMarker
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListPartsOutput'
          description: Success
      tags:
      - Multipart
    post:
      description: "<p>Completes a multipart upload by assembling previously uploaded\
        \ parts.</p> <p>You first initiate the multipart upload and then upload all\
        \ parts using the <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_UploadPart.html\"\
        >UploadPart</a> operation. After successfully uploading all relevant parts\
        \ of an upload, you call this action to complete the upload. Upon receiving\
        \ this request, ArvanCloud S3 concatenates all the parts in ascending order\
        \ by part number to create a new object. In the Complete Multipart Upload\
        \ request, you must provide the parts list. You must ensure that the parts\
        \ list is complete. This action concatenates the parts that you provide in\
        \ the list. For each part in the list, you must provide the part number and\
        \ the <code>ETag</code> value, returned after that part was uploaded.</p>\
        \ <p>Processing of a Complete Multipart Upload request could take several\
        \ minutes to complete. After ArvanCloud S3 begins processing the request,\
        \ it sends an HTTP response header that specifies a 200 OK response. While\
        \ processing is in progress, ArvanCloud S3 periodically sends white space\
        \ characters to keep the connection from timing out. Because a request could\
        \ fail after the initial 200 OK response has been sent, it is important that\
        \ you check the response body to determine whether the request succeeded.</p>\
        \ <p>Note that if <code>CompleteMultipartUpload</code> fails, applications\
        \ should be prepared to retry the failed requests. For more information, see\
        \ <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/ErrorBestPractices.html\"\
        >ArvanCloud S3 Error Best Practices</a>.</p> <p>For more information about\
        \ multipart uploads, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/uploadobjusingmpu.html\"\
        >Uploading Objects Using Multipart Upload</a>.</p> <p>For information about\
        \ permissions required to use the multipart upload API, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/mpuAndPermissions.html\"\
        >Multipart Upload and Permissions</a>.</p> <p> <code>CompleteMultipartUpload</code>\
        \ has the following special errors:</p> <ul> <li> <p>Error code: <code>EntityTooSmall</code>\
        \ </p> <ul> <li> <p>Description: Your proposed upload is smaller than the\
        \ minimum allowed object size. Each part must be at least 5 MB in size, except\
        \ the last part.</p> </li> <li> <p>400 Bad Request</p> </li> </ul> </li> <li>\
        \ <p>Error code: <code>InvalidPart</code> </p> <ul> <li> <p>Description: One\
        \ or more of the specified parts could not be found. The part might not have\
        \ been uploaded, or the specified entity tag might not have matched the part's\
        \ entity tag.</p> </li> <li> <p>400 Bad Request</p> </li> </ul> </li> <li>\
        \ <p>Error code: <code>InvalidPartOrder</code> </p> <ul> <li> <p>Description:\
        \ The list of parts was not in ascending order. The parts list must be specified\
        \ in order by part number.</p> </li> <li> <p>400 Bad Request</p> </li> </ul>\
        \ </li> <li> <p>Error code: <code>NoSuchUpload</code> </p> <ul> <li> <p>Description:\
        \ The specified multipart upload does not exist. The upload ID might be invalid,\
        \ or the multipart upload might have been aborted or completed.</p> </li>\
        \ <li> <p>404 Not Found</p> </li> </ul> </li> </ul> <p>The following operations\
        \ are related to <code>CompleteMultipartUpload</code>:</p> <ul> <li> <p> <a\
        \ href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateMultipartUpload.html\"\
        >CreateMultipartUpload</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_UploadPart.html\"\
        >UploadPart</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_AbortMultipartUpload.html\"\
        >AbortMultipartUpload</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListParts.html\"\
        >ListParts</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListMultipartUploads.html\"\
        >ListMultipartUploads</a> </p> </li> </ul>"
      operationId: CompleteMultipartUpload
      parameters:
      - description: This parameter is currently not supported and is not required.
        explode: false
        in: header
        name: x-amz-security-token
        required: false
        schema:
          type: string
        style: simple
      - description: <p>Name of the bucket to which the multipart upload was initiated.</p>
          </p>
        explode: false
        in: path
        name: Bucket
        required: true
        schema:
          type: string
        style: simple
      - description: Object key for which the multipart upload was initiated.
        explode: false
        in: path
        name: Key
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      - description: ID for the initiated multipart upload.
        explode: true
        in: query
        name: uploadId
        required: true
        schema:
          type: string
        style: form
      - description: ""
        explode: false
        in: header
        name: x-amz-request-payer
        required: false
        schema:
          description: "Confirms that the requester knows that they will be charged\
            \ for the request. Bucket owners need not specify this parameter in their\
            \ requests. For information about downloading objects from requester pays\
            \ buckets, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html\"\
            >Downloading Objects in Requestor Pays Buckets</a> in the <i>S3 User Guide</i>."
          enum:
          - requester
          type: string
        style: simple
      - description: "The account ID of the expected bucket owner. If the bucket is\
          \ owned by a different account, the request will fail with an HTTP <code>403\
          \ (Access Denied)</code> error."
        explode: false
        in: header
        name: x-amz-expected-bucket-owner
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CompleteMultipartUpload_request'
        required: true
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CompleteMultipartUploadOutput'
          description: Success
      tags:
      - Multipart
  /{Bucket}:
    delete:
      description: <p>Deletes the S3 bucket. All objects (including all object versions
        and delete markers) in the bucket must be deleted before the bucket itself
        can be deleted.</p> <p class="title"> <b>Related Resources</b> </p> <ul> <li>
        <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateBucket.html">CreateBucket</a>
        </p> </li> <li> <p> <a href="https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteObject.html">DeleteObject</a>
        </p> </li> </ul>
      operationId: DeleteBucket
      parameters:
      - description: This parameter is currently not supported and is not required.
        explode: false
        in: header
        name: x-amz-security-token
        required: false
        schema:
          type: string
        style: simple
      - description: Specifies the bucket being deleted.
        explode: false
        in: path
        name: Bucket
        required: true
        schema:
          type: string
        style: simple
      - description: "The account ID of the expected bucket owner. If the bucket is\
          \ owned by a different account, the request will fail with an HTTP <code>403\
          \ (Access Denied)</code> error."
        explode: false
        in: header
        name: x-amz-expected-bucket-owner
        required: false
        schema:
          type: string
        style: simple
      responses:
        "204":
          description: Success
      tags:
      - Bucket
    get:
      description: Returns a list of all buckets owned by the authenticated sender
        of the request.
      operationId: ListBuckets
      parameters:
      - description: This parameter is currently not supported and is not required.
        explode: false
        in: header
        name: x-amz-security-token
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListBucketsOutput'
          description: Success
      tags:
      - Bucket
    head:
      description: "<p>This action is useful to determine if a bucket exists and you\
        \ have permission to access it. The action returns a <code>200 OK</code> if\
        \ the bucket exists and you have permission to access it.</p> <p>If the bucket\
        \ does not exist or you do not have permission to access it, the <code>HEAD</code>\
        \ request returns a generic <code>404 Not Found</code> or <code>403 Forbidden</code>\
        \ code. A message body is not included, so you cannot determine the exception\
        \ beyond these error codes.</p>"
      operationId: HeadBucket
      parameters:
      - description: This parameter is currently not supported and is not required.
        explode: false
        in: header
        name: x-amz-security-token
        required: false
        schema:
          type: string
        style: simple
      - description: <p>The bucket name.</p>
        explode: false
        in: path
        name: Bucket
        required: true
        schema:
          type: string
        style: simple
      - description: "The account ID of the expected bucket owner. If the bucket is\
          \ owned by a different account, the request will fail with an HTTP <code>403\
          \ (Access Denied)</code> error."
        explode: false
        in: header
        name: x-amz-expected-bucket-owner
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchBucket'
          description: NoSuchBucket
      tags:
      - Bucket
    put:
      description: "<p>Creates a new S3 bucket. To create a bucket, you must register\
        \ with ArvanCloud S3 and have a valid  Access Key ID to authenticate requests.\
        \ Anonymous requests are never allowed to create buckets. By creating the\
        \ bucket, you become the bucket owner.</p> <p>Not every string is an acceptable\
        \ bucket name. For information about bucket naming restrictions, see <a href=\"\
        https://docs.aws.amazon.com/AmazonS3/latest/userguide/bucketnamingrules.html\"\
        >Bucket naming rules</a>.</p> <p>If you want to create an ArvanCloud S3 bucket,\
        \ see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_control_CreateBucket.html\"\
        >Create Bucket</a>."
      operationId: CreateBucket
      parameters:
      - description: This parameter is currently not supported and is not required.
        explode: false
        in: header
        name: x-amz-security-token
        required: false
        schema:
          type: string
        style: simple
      - description: The canned ACL to apply to the bucket.
        explode: false
        in: header
        name: x-amz-acl
        required: false
        schema:
          enum:
          - private
          - public-read
          - public-read-write
          - authenticated-read
          type: string
        style: simple
      - description: The name of the bucket to create.
        explode: false
        in: path
        name: Bucket
        required: true
        schema:
          type: string
        style: simple
      - description: "Allows grantee the read, write, read ACP, and write ACP permissions\
          \ on the bucket."
        explode: false
        in: header
        name: x-amz-grant-full-control
        required: false
        schema:
          type: string
        style: simple
      - description: Allows grantee to list the objects in the bucket.
        explode: false
        in: header
        name: x-amz-grant-read
        required: false
        schema:
          type: string
        style: simple
      - description: Allows grantee to read the bucket ACL.
        explode: false
        in: header
        name: x-amz-grant-read-acp
        required: false
        schema:
          type: string
        style: simple
      - description: "<p>Allows grantee to create new objects in the bucket.</p> <p>For\
          \ the bucket and object owners of existing objects, also allows deletions\
          \ and overwrites of those objects.</p>"
        explode: false
        in: header
        name: x-amz-grant-write
        required: false
        schema:
          type: string
        style: simple
      - description: Allows grantee to write the ACL for the applicable bucket.
        explode: false
        in: header
        name: x-amz-grant-write-acp
        required: false
        schema:
          type: string
        style: simple
      - description: Specifies whether you want S3 Object Lock to be enabled for the
          new bucket.
        explode: false
        in: header
        name: x-amz-bucket-object-lock-enabled
        required: false
        schema:
          type: boolean
        style: simple
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateBucket_request'
        required: true
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateBucketOutput'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/BucketAlreadyExists'
          description: BucketAlreadyExists
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/BucketAlreadyOwnedByYou'
          description: BucketAlreadyOwnedByYou
      tags:
      - Bucket
  /{Bucket}#Listobjects:
    get:
      description: "<p>Returns some or all (up to 1,000) of the objects in a bucket.\
        \ You can use the request parameters as selection criteria to return a subset\
        \ of the objects in a bucket. A 200 OK response can contain valid or invalid\
        \ XML. Be sure to design your application to parse the contents of the response\
        \ and handle it appropriately.</p> <important> <p>This action has been revised.\
        \ We recommend that you use the newer version, <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListObjectsV2.html\"\
        >ListObjectsV2</a>, when developing applications. For backward compatibility,\
        \ ArvanCloud S3 continues to support <code>ListObjects</code>.</p> </important>\
        \ <p>The following operations are related to <code>ListObjects</code>:</p>\
        \ <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListObjectsV2.html\"\
        >ListObjectsV2</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObject.html\"\
        >GetObject</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObject.html\"\
        >PutObject</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateBucket.html\"\
        >CreateBucket</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListBuckets.html\"\
        >ListBuckets</a> </p> </li> </ul>"
      operationId: ListObjects
      parameters:
      - description: <p>The name of the bucket containing the objects.</p>
        explode: false
        in: path
        name: Bucket
        required: true
        schema:
          type: string
        style: simple
      - description: A delimiter is a character you use to group keys.
        explode: true
        in: query
        name: delimiter
        required: false
        schema:
          type: string
        style: form
      - description: ""
        explode: true
        in: query
        name: encoding-type
        required: false
        schema:
          description: "Requests ArvanCloud S3 to encode the object keys in the response\
            \ and specifies the encoding method to use. An object key may contain\
            \ any Unicode character; however, XML 1.0 parser cannot parse some characters,\
            \ such as characters with an ASCII value from 0 to 10. For characters\
            \ that are not supported in XML 1.0, you can add this parameter to request\
            \ that ArvanCloud S3 encode the keys in the response."
          enum:
          - url
          type: string
        style: form
      - description: Marker is where you want ArvanCloud S3 to start listing from.
          ArvanCloud S3 starts listing after this specified key. Marker can be any
          key in the bucket.
        explode: true
        in: query
        name: marker
        required: false
        schema:
          type: string
        style: form
      - description: "Sets the maximum number of keys returned in the response. By\
          \ default the action returns up to 1,000 key names. The response might contain\
          \ fewer keys but will never contain more. "
        explode: true
        in: query
        name: max-keys
        required: false
        schema:
          type: integer
        style: form
      - description: Limits the response to keys that begin with the specified prefix.
        explode: true
        in: query
        name: prefix
        required: false
        schema:
          type: string
        style: form
      - description: Confirms that the requester knows that she or he will be charged
          for the list objects request. Bucket owners need not specify this parameter
          in their requests.
        explode: false
        in: header
        name: x-amz-request-payer
        required: false
        schema:
          description: "Confirms that the requester knows that they will be charged\
            \ for the request. Bucket owners need not specify this parameter in their\
            \ requests. For information about downloading objects from requester pays\
            \ buckets, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html\"\
            >Downloading Objects in Requestor Pays Buckets</a> in the <i>S3 User Guide</i>."
          enum:
          - requester
          type: string
        style: simple
      - description: "The account ID of the expected bucket owner. If the bucket is\
          \ owned by a different account, the request will fail with an HTTP <code>403\
          \ (Access Denied)</code> error."
        explode: false
        in: header
        name: x-amz-expected-bucket-owner
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxKeys
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: Marker
        required: false
        schema:
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListObjectsOutput'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchBucket'
          description: NoSuchBucket
      tags:
      - Bucket
  /{Bucket}/{Key}#uploads:
    post:
      description: "<p>This action initiates a multipart upload and returns an upload\
        \ ID. This upload ID is used to associate all of the parts in the specific\
        \ multipart upload. You specify this upload ID in each of your subsequent\
        \ upload part requests (see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_UploadPart.html\"\
        >UploadPart</a>). You also include this upload ID in the final request to\
        \ either complete or abort the multipart upload request.</p> <p>For more information\
        \ about multipart uploads, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/mpuoverview.html\"\
        >Multipart Upload Overview</a>.</p> <p>If you have configured a lifecycle\
        \ rule to abort incomplete multipart uploads, the upload must complete within\
        \ the number of days specified in the bucket lifecycle configuration. Otherwise,\
        \ the incomplete multipart upload becomes eligible for an abort action and\
        \ ArvanCloud S3 aborts the multipart upload. For more information, see <a\
        \ href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/mpuoverview.html#mpu-abort-incomplete-mpu-lifecycle-config\"\
        >Aborting Incomplete Multipart Uploads Using a Bucket Lifecycle Policy</a>.</p>\
        \ <p>For information about the permissions required to use the multipart upload\
        \ API, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/mpuAndPermissions.html\"\
        >Multipart Upload and Permissions</a>.</p> <p>For request signing, multipart\
        \ upload is just a series of regular requests. You initiate a multipart upload,\
        \ send one or more requests to upload parts, and then complete the multipart\
        \ upload process. You sign each request individually. There is nothing special\
        \ about signing multipart upload requests. For more information about signing,\
        \ see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/sig-v4-authenticating-requests.html\"\
        >Authenticating Requests (Amazon Web Services Signature Version 4)</a>.</p>\
        \ <note> <p> After you initiate a multipart upload and upload one or more\
        \ parts, to stop being charged for storing the uploaded parts, you must either\
        \ complete or abort the multipart upload. ArvanCloud S3 frees up the space\
        \ used to store the parts and stop charging you for storing them only after\
        \ you either complete or abort a multipart upload. </p> </note> <p>You can\
        \ optionally request server-side encryption. For server-side encryption, ArvanCloud\
        \ S3 encrypts your data as it writes it to disks in its data centers and decrypts\
        \ it when you access it. You can provide your own encryption key, or use Amazon\
        \ Web Services KMS keys or ArvanCloud S3-managed encryption keys. If you choose\
        \ to provide your own encryption key, the request headers you provide in <a\
        \ href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_UploadPart.html\"\
        >UploadPart</a> and <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_UploadPartCopy.html\"\
        >UploadPartCopy</a> requests must match the headers you used in the request\
        \ to initiate the upload by using <code>CreateMultipartUpload</code>. </p>\
        \ <p>To perform a multipart upload with encryption using an Amazon Web Services\
        \ KMS key, the requester must have permission to the <code>kms:Decrypt</code>\
        \ and <code>kms:GenerateDataKey*</code> actions on the key. These permissions\
        \ are required because ArvanCloud S3 must decrypt and read data from the encrypted\
        \ file parts before it completes the multipart upload. For more information,\
        \ see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/mpuoverview.html#mpuAndPermissions\"\
        >Multipart upload API and permissions</a> in the <i>S3 User Guide</i>.</p>\
        \ <p>If your Identity and Access Management (IAM) user or role is in the same\
        \ Amazon Web Services account as the KMS key, then you must have these permissions\
        \ on the key policy. If your IAM user or role belongs to a different account\
        \ than the key, then you must have the permissions on both the key policy\
        \ and your IAM user or role.</p> <p> For more information, see <a href=\"\
        https://docs.aws.amazon.com/AmazonS3/latest/dev/serv-side-encryption.html\"\
        >Protecting Data Using Server-Side Encryption</a>.</p> <dl> <dt>Access Permissions</dt>\
        \ <dd> <p>When copying an object, you can optionally specify the accounts\
        \ or groups that should be granted specific permissions on the new object.\
        \ There are two ways to grant the permissions using the request headers:</p>\
        \ <ul> <li> <p>Specify a canned ACL with the <code>x-amz-acl</code> request\
        \ header. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#CannedACL\"\
        >Canned ACL</a>.</p> </li> <li> <p>Specify access permissions explicitly with\
        \ the <code>x-amz-grant-read</code>, <code>x-amz-grant-read-acp</code>, <code>x-amz-grant-write-acp</code>,\
        \ and <code>x-amz-grant-full-control</code> headers. These parameters map\
        \ to the set of permissions that ArvanCloud S3 supports in an ACL. For more\
        \ information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html\"\
        >Access Control List (ACL) Overview</a>.</p> </li> </ul> <p>You can use either\
        \ a canned ACL or specify access permissions explicitly. You cannot do both.</p>\
        \ </dd> <dt>Server-Side- Encryption-Specific Request Headers</dt> <dd> <p>You\
        \ can optionally tell ArvanCloud S3 to encrypt data at rest using server-side\
        \ encryption. Server-side encryption is for data encryption at rest. ArvanCloud\
        \ S3 encrypts your data as it writes it to disks in its data centers and decrypts\
        \ it when you access it. The option you use depends on whether you want to\
        \ use Amazon Web Services managed encryption keys or provide your own encryption\
        \ key. </p> <ul> <li> <p>Use encryption keys managed by ArvanCloud S3 or customer\
        \ managed key stored in Amazon Web Services Key Management Service (Amazon\
        \ Web Services KMS) – If you want Amazon Web Services to manage the keys used\
        \ to encrypt data, specify the following headers in the request.</p> <ul>\
        \ <li> <p>x-amz-server-side-encryption</p> </li> <li> <p>x-amz-server-side-encryption-aws-kms-key-id</p>\
        \ </li> <li> <p>x-amz-server-side-encryption-context</p> </li> </ul> <note>\
        \ <p>If you specify <code>x-amz-server-side-encryption:aws:kms</code>, but\
        \ don't provide <code>x-amz-server-side-encryption-aws-kms-key-id</code>,\
        \ ArvanCloud S3 uses the Amazon Web Services managed key in Amazon Web Services\
        \ KMS to protect the data.</p> </note> <important> <p>All GET and PUT requests\
        \ for an object protected by Amazon Web Services KMS fail if you don't make\
        \ them with SSL or by using SigV4.</p> </important> <p>For more information\
        \ about server-side encryption with KMS key (SSE-KMS), see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingKMSEncryption.html\"\
        >Protecting Data Using Server-Side Encryption with KMS keys</a>.</p> </li>\
        \ <li> <p>Use customer-provided encryption keys – If you want to manage your\
        \ own encryption keys, provide all the following headers in the request.</p>\
        \ <ul> <li> <p>x-amz-server-side-encryption-customer-algorithm</p> </li> <li>\
        \ <p>x-amz-server-side-encryption-customer-key</p> </li> <li> <p>x-amz-server-side-encryption-customer-key-MD5</p>\
        \ </li> </ul> <p>For more information about server-side encryption with KMS\
        \ keys (SSE-KMS), see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingKMSEncryption.html\"\
        >Protecting Data Using Server-Side Encryption with KMS keys</a>.</p> </li>\
        \ </ul> </dd> <dt>Access-Control-List (ACL)-Specific Request Headers</dt>\
        \ <dd> <p>You also can use the following access control–related headers with\
        \ this operation. By default, all objects are private. Only the owner has\
        \ full access control. When adding a new object, you can grant permissions\
        \ to individual Amazon Web Services accounts or to predefined groups defined\
        \ by ArvanCloud S3. These permissions are then added to the access control\
        \ list (ACL) on the object. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/S3_ACLs_UsingACLs.html\"\
        >Using ACLs</a>. With this operation, you can grant access permissions using\
        \ one of the following two methods:</p> <ul> <li> <p>Specify a canned ACL\
        \ (<code>x-amz-acl</code>) — ArvanCloud S3 supports a set of predefined ACLs,\
        \ known as <i>canned ACLs</i>. Each canned ACL has a predefined set of grantees\
        \ and permissions. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#CannedACL\"\
        >Canned ACL</a>.</p> </li> <li> <p>Specify access permissions explicitly —\
        \ To explicitly grant access permissions to specific Amazon Web Services accounts\
        \ or groups, use the following headers. Each header maps to specific permissions\
        \ that ArvanCloud S3 supports in an ACL. For more information, see <a href=\"\
        https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html\">Access\
        \ Control List (ACL) Overview</a>. In the header, you specify a list of grantees\
        \ who get the specific permission. To grant permissions explicitly, use:</p>\
        \ <ul> <li> <p>x-amz-grant-read</p> </li> <li> <p>x-amz-grant-write</p> </li>\
        \ <li> <p>x-amz-grant-read-acp</p> </li> <li> <p>x-amz-grant-write-acp</p>\
        \ </li> <li> <p>x-amz-grant-full-control</p> </li> </ul> <p>You specify each\
        \ grantee as a type=value pair, where the type is one of the following:</p>\
        \ <ul> <li> <p> <code>id</code> – if the value specified is the canonical\
        \ user ID of an Amazon Web Services account</p> </li> <li> <p> <code>uri</code>\
        \ – if you are granting permissions to a predefined group</p> </li> <li> <p>\
        \ <code>emailAddress</code> – if the value specified is the email address\
        \ of an Amazon Web Services account</p> <note> <p>"
      operationId: CreateMultipartUpload
      parameters:
      - description: This parameter is currently not supported and is not required.
        explode: false
        in: header
        name: x-amz-security-token
        required: false
        schema:
          type: string
        style: simple
      - description: <p>The canned ACL to apply to the object.</p> </p>
        explode: false
        in: header
        name: x-amz-acl
        required: false
        schema:
          enum:
          - private
          - public-read
          - public-read-write
          - authenticated-read
          - aws-exec-read
          - bucket-owner-read
          - bucket-owner-full-control
          type: string
        style: simple
      - description: <p>The name of the bucket to which to initiate the upload</p>
          <p>
        explode: false
        in: path
        name: Bucket
        required: true
        schema:
          type: string
        style: simple
      - description: Specifies caching behavior along the request/reply chain.
        explode: false
        in: header
        name: Cache-Control
        required: false
        schema:
          type: string
        style: simple
      - description: Specifies presentational information for the object.
        explode: false
        in: header
        name: Content-Disposition
        required: false
        schema:
          type: string
        style: simple
      - description: Specifies what content encodings have been applied to the object
          and thus what decoding mechanisms must be applied to obtain the media-type
          referenced by the Content-Type header field.
        explode: false
        in: header
        name: Content-Encoding
        required: false
        schema:
          type: string
        style: simple
      - description: The language the content is in.
        explode: false
        in: header
        name: Content-Language
        required: false
        schema:
          type: string
        style: simple
      - description: A standard MIME type describing the format of the object data.
        explode: false
        in: header
        name: Content-Type
        required: false
        schema:
          type: string
        style: simple
      - description: The date and time at which the object is no longer cacheable.
        explode: false
        in: header
        name: Expires
        required: false
        schema:
          format: date-time
          type: string
        style: simple
      - description: "<p>Gives the grantee READ, READ_ACP, and WRITE_ACP permissions\
          \ on the object.</p> </p>"
        explode: false
        in: header
        name: x-amz-grant-full-control
        required: false
        schema:
          type: string
        style: simple
      - description: <p>Allows grantee to read the object data and its metadata.</p>
          </p>
        explode: false
        in: header
        name: x-amz-grant-read
        required: false
        schema:
          type: string
        style: simple
      - description: <p>Allows grantee to read the object ACL.</p> </p>
        explode: false
        in: header
        name: x-amz-grant-read-acp
        required: false
        schema:
          type: string
        style: simple
      - description: <p>Allows grantee to write the ACL for the applicable object.</p>
          </p>
        explode: false
        in: header
        name: x-amz-grant-write-acp
        required: false
        schema:
          type: string
        style: simple
      - description: Object key for which the multipart upload is to be initiated.
        explode: false
        in: path
        name: Key
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      - description: "The server-side encryption algorithm used when storing this\
          \ object in ArvanCloud S3 (for example, AES256, aws:kms)."
        explode: false
        in: header
        name: x-amz-server-side-encryption
        required: false
        schema:
          enum:
          - AES256
          - aws:kms
          type: string
        style: simple
      - description: "By default, ArvanCloud S3 uses the STANDARD Storage Class to\
          \ store newly created objects. The STANDARD storage class provides high\
          \ durability and high availability. Depending on performance needs, you\
          \ can specify a different Storage Class."
        explode: false
        in: header
        name: x-amz-storage-class
        required: false
        schema:
          enum:
          - STANDARD
          - REDUCED_REDUNDANCY
          - STANDARD_IA
          - ONEZONE_IA
          - INTELLIGENT_TIERING
          - GLACIER
          - DEEP_ARCHIVE
          type: string
        style: simple
      - description: "If the bucket is configured as a website, redirects requests\
          \ for this object to another object in the same bucket or to an external\
          \ URL. ArvanCloud S3 stores the value of this header in the object metadata."
        explode: false
        in: header
        name: x-amz-website-redirect-location
        required: false
        schema:
          type: string
        style: simple
      - description: "Specifies the algorithm to use to when encrypting the object\
          \ (for example, AES256)."
        explode: false
        in: header
        name: x-amz-server-side-encryption-customer-algorithm
        required: false
        schema:
          type: string
        style: simple
      - description: Specifies the customer-provided encryption key for ArvanCloud
          S3 to use in encrypting data. This value is used to store the object and
          then it is discarded; ArvanCloud S3 does not store the encryption key. The
          key must be appropriate for use with the algorithm specified in the <code>x-amz-server-side-encryption-customer-algorithm</code>
          header.
        explode: false
        in: header
        name: x-amz-server-side-encryption-customer-key
        required: false
        schema:
          format: password
          type: string
        style: simple
      - description: Specifies the 128-bit MD5 digest of the encryption key according
          to RFC 1321. ArvanCloud S3 uses this header for a message integrity check
          to ensure that the encryption key was transmitted without error.
        explode: false
        in: header
        name: x-amz-server-side-encryption-customer-key-MD5
        required: false
        schema:
          type: string
        style: simple
      - description: "Specifies the ID of the symmetric customer managed key to use\
          \ for object encryption. All GET and PUT requests for an object protected\
          \ by Amazon Web Services KMS will fail if not made via SSL or using SigV4.\
          \ For information about configuring using any of the officially supported\
          \ Amazon Web Services SDKs and Amazon Web Services CLI, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingAWSSDK.html#specify-signature-version\"\
          >Specifying the Signature Version in Request Authentication</a> in the <i>S3\
          \ User Guide</i>."
        explode: false
        in: header
        name: x-amz-server-side-encryption-aws-kms-key-id
        required: false
        schema:
          format: password
          type: string
        style: simple
      - description: Specifies the Amazon Web Services KMS Encryption Context to use
          for object encryption. The value of this header is a base64-encoded UTF-8
          string holding JSON with the encryption context key-value pairs.
        explode: false
        in: header
        name: x-amz-server-side-encryption-context
        required: false
        schema:
          format: password
          type: string
        style: simple
      - description: <p>Specifies whether ArvanCloud S3 should use an S3 Bucket Key
          for object encryption with server-side encryption using AWS KMS (SSE-KMS).
          Setting this header to <code>true</code> causes ArvanCloud S3 to use an
          S3 Bucket Key for object encryption with SSE-KMS.</p> <p>Specifying this
          header with an object action doesn’t affect bucket-level settings for S3
          Bucket Key.</p>
        explode: false
        in: header
        name: x-amz-server-side-encryption-bucket-key-enabled
        required: false
        schema:
          type: boolean
        style: simple
      - description: ""
        explode: false
        in: header
        name: x-amz-request-payer
        required: false
        schema:
          description: "Confirms that the requester knows that they will be charged\
            \ for the request. Bucket owners need not specify this parameter in their\
            \ requests. For information about downloading objects from requester pays\
            \ buckets, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html\"\
            >Downloading Objects in Requestor Pays Buckets</a> in the <i>S3 User Guide</i>."
          enum:
          - requester
          type: string
        style: simple
      - description: The tag-set for the object. The tag-set must be encoded as URL
          Query parameters.
        explode: false
        in: header
        name: x-amz-tagging
        required: false
        schema:
          type: string
        style: simple
      - description: Specifies the Object Lock mode that you want to apply to the
          uploaded object.
        explode: false
        in: header
        name: x-amz-object-lock-mode
        required: false
        schema:
          enum:
          - GOVERNANCE
          - COMPLIANCE
          type: string
        style: simple
      - description: Specifies the date and time when you want the Object Lock to
          expire.
        explode: false
        in: header
        name: x-amz-object-lock-retain-until-date
        required: false
        schema:
          format: date-time
          type: string
        style: simple
      - description: Specifies whether you want to apply a Legal Hold to the uploaded
          object.
        explode: false
        in: header
        name: x-amz-object-lock-legal-hold
        required: false
        schema:
          enum:
          - "ON"
          - "OFF"
          type: string
        style: simple
      - description: "The account ID of the expected bucket owner. If the bucket is\
          \ owned by a different account, the request will fail with an HTTP <code>403\
          \ (Access Denied)</code> error."
        explode: false
        in: header
        name: x-amz-expected-bucket-owner
        required: false
        schema:
          type: string
        style: simple
      - allowEmptyValue: true
        explode: true
        in: query
        name: uploads
        required: true
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/CreateMultipartUpload_request'
        required: true
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/CreateMultipartUploadOutput'
          description: Success
      tags:
      - Multipart
  /{Bucket}#cors:
    delete:
      description: "<p>Deletes the <code>cors</code> configuration information set\
        \ for the bucket.</p> <p>To use this operation, you must have permission to\
        \ perform the <code>s3:PutBucketCORS</code> action. The bucket owner has this\
        \ permission by default and can grant this permission to others. </p>"
      operationId: DeleteBucketCors
      parameters:
      - description: This parameter is currently not supported and is not required.
        explode: false
        in: header
        name: x-amz-security-token
        required: false
        schema:
          type: string
        style: simple
      - description: Specifies the bucket whose <code>cors</code> configuration is
          being deleted.
        explode: false
        in: path
        name: Bucket
        required: true
        schema:
          type: string
        style: simple
      - description: "The account ID of the expected bucket owner. If the bucket is\
          \ owned by a different account, the request will fail with an HTTP <code>403\
          \ (Access Denied)</code> error."
        explode: false
        in: header
        name: x-amz-expected-bucket-owner
        required: false
        schema:
          type: string
        style: simple
      - allowEmptyValue: true
        explode: true
        in: query
        name: cors
        required: true
        schema:
          type: boolean
        style: form
      responses:
        "204":
          description: Success
      tags:
      - Bucket CORS
    get:
      description: "<p>Returns the cors configuration information set for the bucket.</p>\
        \ <p> To use this operation, you must have permission to perform the s3:GetBucketCORS\
        \ action. By default, the bucket owner has this permission and can grant it\
        \ to others.</p>"
      operationId: GetBucketCors
      parameters:
      - description: This parameter is currently not supported and is not required.
        explode: false
        in: header
        name: x-amz-security-token
        required: false
        schema:
          type: string
        style: simple
      - description: The bucket name for which to get the cors configuration.
        explode: false
        in: path
        name: Bucket
        required: true
        schema:
          type: string
        style: simple
      - description: "The account ID of the expected bucket owner. If the bucket is\
          \ owned by a different account, the request will fail with an HTTP <code>403\
          \ (Access Denied)</code> error."
        explode: false
        in: header
        name: x-amz-expected-bucket-owner
        required: false
        schema:
          type: string
        style: simple
      - allowEmptyValue: true
        explode: true
        in: query
        name: cors
        required: true
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetBucketCorsOutput'
          description: Success
      tags:
      - Bucket CORS
    put:
      description: "<p>Sets the <code>cors</code> configuration for your bucket. If\
        \ the configuration exists, ArvanCloud S3 replaces it.</p> <p>To use this\
        \ operation, you must be allowed to perform the <code>s3:PutBucketCORS</code>\
        \ action. By default, the bucket owner has this permission and can grant it\
        \ to others.</p> <p>You set this configuration on a bucket so that the bucket\
        \ can service cross-origin requests. For example, you might want to enable\
        \ a request whose origin is <code>http://www.example.com</code> to access\
        \ your ArvanCloud S3 bucket at <code>my.example.bucket.com</code> by using\
        \ the browser's <code>XMLHttpRequest</code> capability.</p> <p>To enable cross-origin\
        \ resource sharing (CORS) on a bucket, you add the <code>cors</code> subresource\
        \ to the bucket. The <code>cors</code> subresource is an XML document in which\
        \ you configure rules that identify origins and the HTTP methods that can\
        \ be executed on your bucket. The document is limited to 64 KB in size. </p>\
        \ <p>When ArvanCloud S3 receives a cross-origin request (or a pre-flight OPTIONS\
        \ request) against a bucket, it evaluates the <code>cors</code> configuration\
        \ on the bucket and uses the first <code>CORSRule</code> rule that matches\
        \ the incoming browser request to enable a cross-origin request. For a rule\
        \ to match, the following conditions must be met:</p> <ul> <li> <p>The request's\
        \ <code>Origin</code> header must match <code>AllowedOrigin</code> elements.</p>\
        \ </li> <li> <p>The request method (for example, GET, PUT, HEAD, and so on)\
        \ or the <code>Access-Control-Request-Method</code> header in case of a pre-flight\
        \ <code>OPTIONS</code> request must be one of the <code>AllowedMethod</code>\
        \ elements. </p> </li> <li> <p>Every header specified in the <code>Access-Control-Request-Headers</code>\
        \ request header of a pre-flight request must match an <code>AllowedHeader</code>\
        \ element. </p>"
      operationId: PutBucketCors
      parameters:
      - description: This parameter is currently not supported and is not required.
        explode: false
        in: header
        name: x-amz-security-token
        required: false
        schema:
          type: string
        style: simple
      - description: Specifies the bucket impacted by the <code>cors</code>configuration.
        explode: false
        in: path
        name: Bucket
        required: true
        schema:
          type: string
        style: simple
      - description: "<p>The base64-encoded 128-bit MD5 digest of the data. This header\
          \ must be used as a message integrity check to verify that the request body\
          \ was not corrupted in transit. For more information, go to <a href=\"http://www.ietf.org/rfc/rfc1864.txt\"\
          >RFC 1864.</a> </p> <p>For requests made using the Amazon Web Services Command\
          \ Line Interface (CLI) or Amazon Web Services SDKs, this field is calculated\
          \ automatically.</p>"
        explode: false
        in: header
        name: Content-MD5
        required: false
        schema:
          type: string
        style: simple
      - description: "The account ID of the expected bucket owner. If the bucket is\
          \ owned by a different account, the request will fail with an HTTP <code>403\
          \ (Access Denied)</code> error."
        explode: false
        in: header
        name: x-amz-expected-bucket-owner
        required: false
        schema:
          type: string
        style: simple
      - allowEmptyValue: true
        explode: true
        in: query
        name: cors
        required: true
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/PutBucketCors_request'
        required: true
      responses:
        "200":
          description: Success
      tags:
      - Bucket CORS
  /{Bucket}#lifecycle:
    delete:
      description: "<p>Deletes the lifecycle configuration from the specified bucket.\
        \ ArvanCloud S3 removes all the lifecycle configuration rules in the lifecycle\
        \ subresource associated with the bucket. Your objects never expire, and ArvanCloud\
        \ S3 no longer automatically deletes any objects on the basis of rules contained\
        \ in the deleted lifecycle configuration.</p> <p>To use this operation, you\
        \ must have permission to perform the <code>s3:PutLifecycleConfiguration</code>\
        \ action. By default, the bucket owner has this permission and the bucket\
        \ owner can grant this permission to others.</p> <p>There is usually some\
        \ time lag before lifecycle configuration deletion is fully propagated to\
        \ all the ArvanCloud S3 systems.</p> <p>For more information about the object\
        \ expiration, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/intro-lifecycle-rules.html#intro-lifecycle-rules-actions\"\
        >Elements to Describe Lifecycle Actions</a>.</p> <p>Related actions include:</p>\
        \ <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketLifecycleConfiguration.html\"\
        >PutBucketLifecycleConfiguration</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketLifecycleConfiguration.html\"\
        >GetBucketLifecycleConfiguration</a> </p> </li> </ul>"
      operationId: DeleteBucketLifecycle
      parameters:
      - description: This parameter is currently not supported and is not required.
        explode: false
        in: header
        name: x-amz-security-token
        required: false
        schema:
          type: string
        style: simple
      - description: The bucket name of the lifecycle to delete.
        explode: false
        in: path
        name: Bucket
        required: true
        schema:
          type: string
        style: simple
      - description: "The account ID of the expected bucket owner. If the bucket is\
          \ owned by a different account, the request will fail with an HTTP <code>403\
          \ (Access Denied)</code> error."
        explode: false
        in: header
        name: x-amz-expected-bucket-owner
        required: false
        schema:
          type: string
        style: simple
      - allowEmptyValue: true
        explode: true
        in: query
        name: lifecycle
        required: true
        schema:
          type: boolean
        style: form
      responses:
        "204":
          description: Success
      tags:
      - Bucket Lifecycle Configuration
    get:
      description: "<note> <p>Bucket lifecycle configuration now supports specifying\
        \ a lifecycle rule using an object key name prefix, one or more object tags,\
        \ or a combination of both. Accordingly, this section describes the latest\
        \ API. The response describes the new filter element that you can use to specify\
        \ a filter to select a subset of objects to which the rule applies. If you\
        \ are using a previous version of the lifecycle configuration, it still works.\
        \ For the earlier action, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketLifecycle.html\"\
        >GetBucketLifecycle</a>.</p> </note> <p>Returns the lifecycle configuration\
        \ information set on the bucket. For information about lifecycle configuration,\
        \ see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html\"\
        >Object Lifecycle Management</a>.</p> <p>To use this operation, you must have\
        \ permission to perform the <code>s3:GetLifecycleConfiguration</code> action.<p>\
        \ <code>GetBucketLifecycleConfiguration</code> has the following special error:</p>\
        \ <ul> <li> <p>Error code: <code>NoSuchLifecycleConfiguration</code> </p>\
        \ <ul> <li> <p>Description: The lifecycle configuration does not exist.</p>\
        \ </li> <li> <p>HTTP Status Code: 404 Not Found</p> </li> <li> <p>SOAP Fault\
        \ Code Prefix: Client</p> </li> </ul> </li> </ul> <p>The following operations\
        \ are related to <code>GetBucketLifecycleConfiguration</code>:</p> <ul> <li>\
        \ <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketLifecycle.html\"\
        >GetBucketLifecycle</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketLifecycle.html\"\
        >PutBucketLifecycle</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketLifecycle.html\"\
        >DeleteBucketLifecycle</a> </p> </li> </ul>"
      operationId: GetBucketLifecycleConfiguration
      parameters:
      - description: This parameter is currently not supported and is not required.
        explode: false
        in: header
        name: x-amz-security-token
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the bucket for which to get the lifecycle information.
        explode: false
        in: path
        name: Bucket
        required: true
        schema:
          type: string
        style: simple
      - description: "The account ID of the expected bucket owner. If the bucket is\
          \ owned by a different account, the request will fail with an HTTP <code>403\
          \ (Access Denied)</code> error."
        explode: false
        in: header
        name: x-amz-expected-bucket-owner
        required: false
        schema:
          type: string
        style: simple
      - allowEmptyValue: true
        explode: true
        in: query
        name: lifecycle
        required: true
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetBucketLifecycleConfigurationOutput'
          description: Success
      tags:
      - Bucket Lifecycle Configuration
    put:
      description: "<p>Creates a new lifecycle configuration for the bucket or replaces\
        \ an existing lifecycle configuration. For information about lifecycle configuration,\
        \ see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-lifecycle-mgmt.html\"\
        >Managing your storage lifecycle</a>.</p> <note> <p>Bucket lifecycle configuration\
        \ now supports specifying a lifecycle rule using an object key name prefix,\
        \ one or more object tags, or a combination of both. Accordingly, this section\
        \ describes the latest API. The previous version of the API supported filtering\
        \ based only on an object key name prefix, which is supported for backward\
        \ compatibility. For the related API description, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketLifecycle.html\"\
        >PutBucketLifecycle</a>.</p> </note> <p> <b>Rules</b> </p> <p>You specify\
        \ the lifecycle configuration in your request body. The lifecycle configuration\
        \ is specified as XML consisting of one or more rules. Each rule consists\
        \ of the following:</p> <ul> <li> <p>Filter identifying a subset of objects\
        \ to which the rule applies. The filter can be based on a key name prefix,\
        \ object tags, or a combination of both.</p> </li> <li> <p>Status whether\
        \ the rule is in effect.</p> </li> <li> <p>One or more lifecycle transition\
        \ and expiration actions that you want ArvanCloud S3 to perform on the objects\
        \ identified by the filter. If the state of your bucket is versioning-enabled\
        \ or versioning-suspended, you can have many versions of the same object (one\
        \ current version and zero or more noncurrent versions). ArvanCloud S3 provides\
        \ predefined actions that you can specify for current and noncurrent object\
        \ versions.</p> </li> </ul> <p>For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html\"\
        >Object Lifecycle Management</a> and <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/intro-lifecycle-rules.html\"\
        >Lifecycle Configuration Elements</a>.</p> <p> <b>Permissions</b> </p> <p>By\
        \ default, all ArvanCloud S3 resources are private, including buckets, objects,\
        \ and related subresources (for example, lifecycle configuration and website\
        \ configuration). Only the resource owner (that is, the Amazon Web Services\
        \ account that created it) can access the resource. The resource owner can\
        \ optionally grant access permissions to others by writing an access policy.\
        \ For this operation, a user must get the s3:PutLifecycleConfiguration permission.</p>\
        \ <p>You can also explicitly deny permissions. Explicit deny also supersedes\
        \ any other permissions. If you want to block users or accounts from removing\
        \ or deleting objects from your bucket, you must deny them permissions for\
        \ the following actions:</p> <ul> <li> <p>s3:DeleteObject</p> </li> <li> <p>s3:DeleteObjectVersion</p>\
        \ </li> <li> <p>s3:PutLifecycleConfiguration</p> </li> </ul> <p>For more information\
        \ about permissions, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-access-control.html\"\
        >Managing Access Permissions to Your ArvanCloud S3 Resources</a>.</p> <p>The\
        \ following are related to <code>PutBucketLifecycleConfiguration</code>:</p>\
        \ <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/lifecycle-configuration-examples.html\"\
        >Examples of Lifecycle Configuration</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketLifecycleConfiguration.html\"\
        >GetBucketLifecycleConfiguration</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketLifecycle.html\"\
        >DeleteBucketLifecycle</a> </p> </li> </ul>"
      operationId: PutBucketLifecycleConfiguration
      parameters:
      - description: This parameter is currently not supported and is not required.
        explode: false
        in: header
        name: x-amz-security-token
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the bucket for which to set the configuration.
        explode: false
        in: path
        name: Bucket
        required: true
        schema:
          type: string
        style: simple
      - description: "The account ID of the expected bucket owner. If the bucket is\
          \ owned by a different account, the request will fail with an HTTP <code>403\
          \ (Access Denied)</code> error."
        explode: false
        in: header
        name: x-amz-expected-bucket-owner
        required: false
        schema:
          type: string
        style: simple
      - allowEmptyValue: true
        explode: true
        in: query
        name: lifecycle
        required: true
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/PutBucketLifecycleConfiguration_request'
        required: true
      responses:
        "200":
          description: Success
      tags:
      - Bucket Lifecycle Configuration
  /{Bucket}#policy:
    delete:
      description: "<p>This implementation of the DELETE action uses the policy subresource\
        \ to delete the policy of a specified bucket. If you are using an identity\
        \ other than the root user of the Amazon Web Services account that owns the\
        \ bucket, the calling identity must have the <code>DeleteBucketPolicy</code>\
        \ permissions on the specified bucket and belong to the bucket owner's account\
        \ to use this operation. </p> <p>If you don't have <code>DeleteBucketPolicy</code>\
        \ permissions, ArvanCloud S3 returns a <code>403 Access Denied</code> error.\
        \ If you have the correct permissions, but you're not using an identity that\
        \ belongs to the bucket owner's account, ArvanCloud S3 returns a <code>405\
        \ Method Not Allowed</code> error. </p> <important> <p>"
      operationId: DeleteBucketPolicy
      parameters:
      - description: This parameter is currently not supported and is not required.
        explode: false
        in: header
        name: x-amz-security-token
        required: false
        schema:
          type: string
        style: simple
      - description: The bucket name.
        explode: false
        in: path
        name: Bucket
        required: true
        schema:
          type: string
        style: simple
      - description: "The account ID of the expected bucket owner. If the bucket is\
          \ owned by a different account, the request will fail with an HTTP <code>403\
          \ (Access Denied)</code> error."
        explode: false
        in: header
        name: x-amz-expected-bucket-owner
        required: false
        schema:
          type: string
        style: simple
      - allowEmptyValue: true
        explode: true
        in: query
        name: policy
        required: true
        schema:
          type: boolean
        style: form
      responses:
        "204":
          description: Success
      tags:
      - Bucket Policy
    get:
      description: "<p>Returns the policy of a specified bucket. If you are using\
        \ an identity other than the root user of the Amazon Web Services account\
        \ that owns the bucket, the calling identity must have the <code>GetBucketPolicy</code>\
        \ permissions on the specified bucket and belong to the bucket owner's account\
        \ in order to use this operation.</p> <p>If you don't have <code>GetBucketPolicy</code>\
        \ permissions, ArvanCloud S3 returns a <code>403 Access Denied</code> error.\
        \ If you have the correct permissions, but you're not using an identity that\
        \ belongs to the bucket owner's account, ArvanCloud S3 returns a <code>405\
        \ Method Not Allowed</code> error.</p> <important> <p>"
      operationId: GetBucketPolicy
      parameters:
      - description: This parameter is currently not supported and is not required.
        explode: false
        in: header
        name: x-amz-security-token
        required: false
        schema:
          type: string
        style: simple
      - description: The bucket name for which to get the bucket policy.
        explode: false
        in: path
        name: Bucket
        required: true
        schema:
          type: string
        style: simple
      - description: "The account ID of the expected bucket owner. If the bucket is\
          \ owned by a different account, the request will fail with an HTTP <code>403\
          \ (Access Denied)</code> error."
        explode: false
        in: header
        name: x-amz-expected-bucket-owner
        required: false
        schema:
          type: string
        style: simple
      - allowEmptyValue: true
        explode: true
        in: query
        name: policy
        required: true
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetBucketPolicyOutput'
          description: Success
      tags:
      - Bucket Policy
    put:
      description: "<p>Applies an ArvanCloud S3 bucket policy to an ArvanCloud S3\
        \ bucket. If you are using an identity other than the root user of the Amazon\
        \ Web Services account that owns the bucket, the calling identity must have\
        \ the <code>PutBucketPolicy</code> permissions on the specified bucket and\
        \ belong to the bucket owner's account in order to use this operation.</p>\
        \ <p>If you don't have <code>PutBucketPolicy</code> permissions, ArvanCloud\
        \ S3 returns a <code>403 Access Denied</code> error. If you have the correct\
        \ permissions, but you're not using an identity that belongs to the bucket\
        \ owner's account, ArvanCloud S3 returns a <code>405 Method Not Allowed</code>\
        \ error.</p> <important> <p> "
      operationId: PutBucketPolicy
      parameters:
      - description: This parameter is currently not supported and is not required.
        explode: false
        in: header
        name: x-amz-security-token
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the bucket.
        explode: false
        in: path
        name: Bucket
        required: true
        schema:
          type: string
        style: simple
      - description: "<p>The MD5 hash of the request body.</p> <p>For requests made\
          \ using the Amazon Web Services Command Line Interface (CLI) or Amazon Web\
          \ Services SDKs, this field is calculated automatically.</p>"
        explode: false
        in: header
        name: Content-MD5
        required: false
        schema:
          type: string
        style: simple
      - description: Set this parameter to true to confirm that you want to remove
          your permissions to change this bucket policy in the future.
        explode: false
        in: header
        name: x-amz-confirm-remove-self-bucket-access
        required: false
        schema:
          type: boolean
        style: simple
      - description: "The account ID of the expected bucket owner. If the bucket is\
          \ owned by a different account, the request will fail with an HTTP <code>403\
          \ (Access Denied)</code> error."
        explode: false
        in: header
        name: x-amz-expected-bucket-owner
        required: false
        schema:
          type: string
        style: simple
      - allowEmptyValue: true
        explode: true
        in: query
        name: policy
        required: true
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/PutBucketPolicy_request'
        required: true
      responses:
        "200":
          description: Success
      tags:
      - Bucket Policy
  /{Bucket}#tagging:
    delete:
      description: "<p>Deletes the tags from the bucket.</p> <p>To use this operation,\
        \ you must have permission to perform the <code>s3:PutBucketTagging</code>\
        \ action. By default, the bucket owner has this permission and can grant this\
        \ permission to others. </p> <p>The following operations are related to <code>DeleteBucketTagging</code>:</p>\
        \ <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketTagging.html\"\
        >GetBucketTagging</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketTagging.html\"\
        >PutBucketTagging</a> </p> </li> </ul>"
      operationId: DeleteBucketTagging
      parameters:
      - description: This parameter is currently not supported and is not required.
        explode: false
        in: header
        name: x-amz-security-token
        required: false
        schema:
          type: string
        style: simple
      - description: The bucket that has the tag set to be removed.
        explode: false
        in: path
        name: Bucket
        required: true
        schema:
          type: string
        style: simple
      - description: "The account ID of the expected bucket owner. If the bucket is\
          \ owned by a different account, the request will fail with an HTTP <code>403\
          \ (Access Denied)</code> error."
        explode: false
        in: header
        name: x-amz-expected-bucket-owner
        required: false
        schema:
          type: string
        style: simple
      - allowEmptyValue: true
        explode: true
        in: query
        name: tagging
        required: true
        schema:
          type: boolean
        style: form
      responses:
        "204":
          description: Success
      tags:
      - Bucket Tagging
    get:
      description: "<p>Returns the tag set associated with the bucket.</p> <p>To use\
        \ this operation, you must have permission to perform the <code>s3:GetBucketTagging</code>\
        \ action. By default, the bucket owner has this permission and can grant this\
        \ permission to others.</p> <p> <code>GetBucketTagging</code> has the following\
        \ special error:</p> <ul> <li> <p>Error code: <code>NoSuchTagSetError</code>\
        \ </p> <ul> <li> <p>Description: There is no tag set associated with the bucket.</p>\
        \ </li> </ul> </li> </ul> <p>The following operations are related to <code>GetBucketTagging</code>:</p>\
        \ <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketTagging.html\"\
        >PutBucketTagging</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketTagging.html\"\
        >DeleteBucketTagging</a> </p> </li> </ul>"
      operationId: GetBucketTagging
      parameters:
      - description: This parameter is currently not supported and is not required.
        explode: false
        in: header
        name: x-amz-security-token
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the bucket for which to get the tagging information.
        explode: false
        in: path
        name: Bucket
        required: true
        schema:
          type: string
        style: simple
      - description: "The account ID of the expected bucket owner. If the bucket is\
          \ owned by a different account, the request will fail with an HTTP <code>403\
          \ (Access Denied)</code> error."
        explode: false
        in: header
        name: x-amz-expected-bucket-owner
        required: false
        schema:
          type: string
        style: simple
      - allowEmptyValue: true
        explode: true
        in: query
        name: tagging
        required: true
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetBucketTaggingOutput'
          description: Success
      tags:
      - Bucket Tagging
    put:
      description: "<p>Sets the tags for a bucket.</p> <p>Use tags to organize your\
        \ Amazon Web Services bill to reflect your own cost structure. To do this,\
        \ sign up to get your Amazon Web Services account bill with tag key values\
        \ included. Then, to see the cost of combined resources, organize your billing\
        \ information according to resources with the same tag key values. For example,\
        \ you can tag several resources with a specific application name, and then\
        \ organize your billing information to see the total cost of that application\
        \ across several services. </p> <note> <p> When this operation sets the tags\
        \ for a bucket, it will overwrite any current tags the bucket already has.\
        \ You cannot use this operation to add tags to an existing list of tags.</p>"
      operationId: PutBucketTagging
      parameters:
      - description: This parameter is currently not supported and is not required.
        explode: false
        in: header
        name: x-amz-security-token
        required: false
        schema:
          type: string
        style: simple
      - description: The bucket name.
        explode: false
        in: path
        name: Bucket
        required: true
        schema:
          type: string
        style: simple
      - description: "<p>The base64-encoded 128-bit MD5 digest of the data. You must\
          \ use this header as a message integrity check to verify that the request\
          \ body was not corrupted in transit. For more information, see <a href=\"\
          http://www.ietf.org/rfc/rfc1864.txt\">RFC 1864</a>.</p> <p>For requests\
          \ made using the Amazon Web Services Command Line Interface (CLI) or Amazon\
          \ Web Services SDKs, this field is calculated automatically.</p>"
        explode: false
        in: header
        name: Content-MD5
        required: false
        schema:
          type: string
        style: simple
      - description: "The account ID of the expected bucket owner. If the bucket is\
          \ owned by a different account, the request will fail with an HTTP <code>403\
          \ (Access Denied)</code> error."
        explode: false
        in: header
        name: x-amz-expected-bucket-owner
        required: false
        schema:
          type: string
        style: simple
      - allowEmptyValue: true
        explode: true
        in: query
        name: tagging
        required: true
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/PutBucketTagging_request'
        required: true
      responses:
        "200":
          description: Success
      tags:
      - Bucket Tagging
  /{Bucket}#website:
    delete:
      description: "<p>This action removes the website configuration for a bucket.\
        \ ArvanCloud S3 returns a <code>200 OK</code> response upon successfully deleting\
        \ a website configuration on the specified bucket. You will get a <code>200\
        \ OK</code> response if the website configuration you are trying to delete\
        \ does not exist on the bucket. ArvanCloud S3 returns a <code>404</code> response\
        \ if the bucket specified in the request does not exist.</p> <p>This DELETE\
        \ action requires the <code>S3:DeleteBucketWebsite</code> permission. By default,\
        \ only the bucket owner can delete the website configuration attached to a\
        \ bucket. However, bucket owners can grant other users permission to delete\
        \ the website configuration by writing a bucket policy granting them the <code>S3:DeleteBucketWebsite</code>\
        \ permission. </p> <p> <p>The following operations are related to <code>DeleteBucketWebsite</code>:</p>\
        \ <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketWebsite.html\"\
        >GetBucketWebsite</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketWebsite.html\"\
        >PutBucketWebsite</a> </p> </li> </ul>"
      operationId: DeleteBucketWebsite
      parameters:
      - description: This parameter is currently not supported and is not required.
        explode: false
        in: header
        name: x-amz-security-token
        required: false
        schema:
          type: string
        style: simple
      - description: 'The bucket name for which you want to remove the website configuration. '
        explode: false
        in: path
        name: Bucket
        required: true
        schema:
          type: string
        style: simple
      - description: "The account ID of the expected bucket owner. If the bucket is\
          \ owned by a different account, the request will fail with an HTTP <code>403\
          \ (Access Denied)</code> error."
        explode: false
        in: header
        name: x-amz-expected-bucket-owner
        required: false
        schema:
          type: string
        style: simple
      - allowEmptyValue: true
        explode: true
        in: query
        name: website
        required: true
        schema:
          type: boolean
        style: form
      responses:
        "204":
          description: Success
      tags:
      - Bucket Website Configuration
    get:
      description: "<p>Returns the website configuration for a bucket. To host website\
        \ on ArvanCloud S3, you can configure a bucket as website by adding a website\
        \ configuration. <p>This GET action requires the <code>S3:GetBucketWebsite</code>\
        \ permission. By default, only the bucket owner can read the bucket website\
        \ configuration. However, bucket owners can allow other users to read the\
        \ website configuration by writing a bucket policy granting them the <code>S3:GetBucketWebsite</code>\
        \ permission.</p> <p>The following operations are related to <code>DeleteBucketWebsite</code>:</p>\
        \ <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucketWebsite.html\"\
        >DeleteBucketWebsite</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketWebsite.html\"\
        >PutBucketWebsite</a> </p> </li> </ul>"
      operationId: GetBucketWebsite
      parameters:
      - description: This parameter is currently not supported and is not required.
        explode: false
        in: header
        name: x-amz-security-token
        required: false
        schema:
          type: string
        style: simple
      - description: The bucket name for which to get the website configuration.
        explode: false
        in: path
        name: Bucket
        required: true
        schema:
          type: string
        style: simple
      - description: "The account ID of the expected bucket owner. If the bucket is\
          \ owned by a different account, the request will fail with an HTTP <code>403\
          \ (Access Denied)</code> error."
        explode: false
        in: header
        name: x-amz-expected-bucket-owner
        required: false
        schema:
          type: string
        style: simple
      - allowEmptyValue: true
        explode: true
        in: query
        name: website
        required: true
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetBucketWebsiteOutput'
          description: Success
      tags:
      - Bucket Website Configuration
    put:
      description: "<p>Sets the configuration of the website that is specified in\
        \ the <code>website</code> subresource. To configure a bucket as a website,\
        \ you can add this subresource on the bucket with website configuration information\
        \ such as the file name of the index document and any redirect rules. <p>This\
        \ PUT action requires the <code>S3:PutBucketWebsite</code> permission. By\
        \ default, only the bucket owner can configure the website attached to a bucket;\
        \ however, bucket owners can allow other users to set the website configuration\
        \ by writing a bucket policy that grants them the <code>S3:PutBucketWebsite</code>\
        \ permission.</p> <p>To redirect all website requests sent to the bucket's\
        \ website endpoint, you add a website configuration with the following elements.\
        \ Because all requests are sent to another website, you don't need to provide\
        \ index document name for the bucket.</p> <ul> <li> <p> <code>WebsiteConfiguration</code>\
        \ </p> </li> <li> <p> <code>RedirectAllRequestsTo</code> </p> </li> <li> <p>\
        \ <code>HostName</code> </p> </li> <li> <p> <code>Protocol</code> </p> </li>\
        \ </ul> <p>If you want granular control over redirects, you can use the following\
        \ elements to add routing rules that describe conditions for redirecting requests\
        \ and information about the redirect destination. In this case, the website\
        \ configuration must provide an index document for the bucket, because some\
        \ requests might not be redirected. </p> <ul> <li> <p> <code>WebsiteConfiguration</code>\
        \ </p> </li> <li> <p> <code>IndexDocument</code> </p> </li> <li> <p> <code>Suffix</code>\
        \ </p> </li> <li> <p> <code>ErrorDocument</code> </p> </li> <li> <p> <code>Key</code>\
        \ </p> </li> <li> <p> <code>RoutingRules</code> </p> </li> <li> <p> <code>RoutingRule</code>\
        \ </p> </li> <li> <p> <code>Condition</code> </p> </li> <li> <p> <code>HttpErrorCodeReturnedEquals</code>\
        \ </p> </li> <li> <p> <code>KeyPrefixEquals</code> </p> </li> <li> <p> <code>Redirect</code>\
        \ </p> </li> <li> <p> <code>Protocol</code> </p> </li> <li> <p> <code>HostName</code>\
        \ </p> </li> <li> <p> <code>ReplaceKeyPrefixWith</code> </p> </li> <li> <p>\
        \ <code>ReplaceKeyWith</code> </p> </li> <li> <p> <code>HttpRedirectCode</code>\
        \ </p> </li> </ul> <p>ArvanCloud S3 has a limitation of 50 routing rules per\
        \ website configuration. If you require more than 50 routing rules, you can\
        \ use object redirect."
      operationId: PutBucketWebsite
      parameters:
      - description: This parameter is currently not supported and is not required.
        explode: false
        in: header
        name: x-amz-security-token
        required: false
        schema:
          type: string
        style: simple
      - description: The bucket name.
        explode: false
        in: path
        name: Bucket
        required: true
        schema:
          type: string
        style: simple
      - description: "<p>The base64-encoded 128-bit MD5 digest of the data. You must\
          \ use this header as a message integrity check to verify that the request\
          \ body was not corrupted in transit. For more information, see <a href=\"\
          http://www.ietf.org/rfc/rfc1864.txt\">RFC 1864</a>.</p> <p>For requests\
          \ made using the Amazon Web Services Command Line Interface (CLI) or Amazon\
          \ Web Services SDKs, this field is calculated automatically.</p>"
        explode: false
        in: header
        name: Content-MD5
        required: false
        schema:
          type: string
        style: simple
      - description: "The account ID of the expected bucket owner. If the bucket is\
          \ owned by a different account, the request will fail with an HTTP <code>403\
          \ (Access Denied)</code> error."
        explode: false
        in: header
        name: x-amz-expected-bucket-owner
        required: false
        schema:
          type: string
        style: simple
      - allowEmptyValue: true
        explode: true
        in: query
        name: website
        required: true
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/PutBucketWebsite_request'
        required: true
      responses:
        "200":
          description: Success
      tags:
      - Bucket Website Configuration
  /{Bucket}/{Key}:
    delete:
      description: "<p>Removes the null version (if there is one) of an object and\
        \ inserts a delete marker, which becomes the latest version of the object.\
        \ If there isn't a null version, ArvanCloud S3 does not remove any objects\
        \ but will still respond that the command was successful.</p> <p>To remove\
        \ a specific version, you must be the bucket owner and you must use the version\
        \ Id subresource. Using this subresource permanently deletes the version.\
        \ If the object deleted is a delete marker, ArvanCloud S3 sets the response\
        \ header, <code>x-amz-delete-marker</code>, to true. </p> <p>If the object\
        \ you want to delete is in a bucket where the bucket versioning configuration\
        \ is MFA Delete enabled, you must include the <code>x-amz-mfa</code> request\
        \ header in the DELETE <code>versionId</code> request. Requests that include\
        \ <code>x-amz-mfa</code> must use HTTPS. </p>  <p>You can delete objects by\
        \ explicitly calling DELETE Object or configure its lifecycle (<a href=\"\
        https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutBucketLifecycle.html\"\
        >PutBucketLifecycle</a>) to enable ArvanCloud S3 to remove them for you. If\
        \ you want to block users or accounts from removing or deleting objects from\
        \ your bucket, you must deny them the <code>s3:DeleteObject</code>, <code>s3:DeleteObjectVersion</code>,\
        \ and <code>s3:PutLifeCycleConfiguration</code> actions. </p> <p>The following\
        \ action is related to <code>DeleteObject</code>:</p> <ul> <li> <p> <a href=\"\
        https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObject.html\">PutObject</a>\
        \ </p> </li> </ul>"
      operationId: DeleteObject
      parameters:
      - description: This parameter is currently not supported and is not required.
        explode: false
        in: header
        name: x-amz-security-token
        required: false
        schema:
          type: string
        style: simple
      - description: <p>The bucket name of the bucket containing the object. </p>
        explode: false
        in: path
        name: Bucket
        required: true
        schema:
          type: string
        style: simple
      - description: Key name of the object to delete.
        explode: false
        in: path
        name: Key
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      - description: "The concatenation of the authentication device's serial number,\
          \ a space, and the value that is displayed on your authentication device.\
          \ Required to permanently delete a versioned object if versioning is configured\
          \ with MFA delete enabled."
        explode: false
        in: header
        name: x-amz-mfa
        required: false
        schema:
          type: string
        style: simple
      - description: VersionId used to reference a specific version of the object.
        explode: true
        in: query
        name: versionId
        required: false
        schema:
          type: string
        style: form
      - description: ""
        explode: false
        in: header
        name: x-amz-request-payer
        required: false
        schema:
          description: "Confirms that the requester knows that they will be charged\
            \ for the request. Bucket owners need not specify this parameter in their\
            \ requests. For information about downloading objects from requester pays\
            \ buckets, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html\"\
            >Downloading Objects in Requestor Pays Buckets</a> in the <i>S3 User Guide</i>."
          enum:
          - requester
          type: string
        style: simple
      - description: "Indicates whether S3 Object Lock should bypass Governance-mode\
          \ restrictions to process this operation. To use this header, you must have\
          \ the <code>s3:PutBucketPublicAccessBlock</code> permission."
        explode: false
        in: header
        name: x-amz-bypass-governance-retention
        required: false
        schema:
          type: boolean
        style: simple
      - description: "The account ID of the expected bucket owner. If the bucket is\
          \ owned by a different account, the request will fail with an HTTP <code>403\
          \ (Access Denied)</code> error."
        explode: false
        in: header
        name: x-amz-expected-bucket-owner
        required: false
        schema:
          type: string
        style: simple
      responses:
        "204":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteObjectOutput'
          description: Success
      tags:
      - Object
    get:
      description: "<p>Retrieves objects from ArvanCloud S3. To use <code>GET</code>,\
        \ you must have <code>READ</code> access to the object. If you grant <code>READ</code>\
        \ access to the anonymous user, you can return the object without using an\
        \ authorization header.</p> <p>An ArvanCloud S3 bucket has no directory hierarchy\
        \ such as you would find in a typical computer file system. You can, however,\
        \ create a logical hierarchy by using object key names that imply a folder\
        \ structure. For example, instead of naming an object <code>sample.jpg</code>,\
        \ you can name it <code>photos/2006/February/sample.jpg</code>.</p> <p>To\
        \ get an object from such a logical hierarchy, specify the full key name for\
        \ the object in the <code>GET</code> operation. For a virtual hosted-style\
        \ request example, if you have the object <code>photos/2006/February/sample.jpg</code>,\
        \ specify the resource as <code>/photos/2006/February/sample.jpg</code>. For\
        \ a path-style request example, if you have the object <code>photos/2006/February/sample.jpg</code>\
        \ in the bucket named <code>examplebucket</code>, specify the resource as\
        \ <code>/examplebucket/photos/2006/February/sample.jpg</code>. For more information\
        \ about request types, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/VirtualHosting.html#VirtualHostingSpecifyBucket\"\
        >HTTP Host Header Bucket Specification</a>.</p>"
      operationId: GetObject
      parameters:
      - description: This parameter is currently not supported and is not required.
        explode: false
        in: header
        name: x-amz-security-token
        required: false
        schema:
          type: string
        style: simple
      - description: <p>The bucket name containing the object. </p>
        explode: false
        in: path
        name: Bucket
        required: true
        schema:
          type: string
        style: simple
      - description: "Return the object only if its entity tag (ETag) is the same\
          \ as the one specified, otherwise return a 412 (precondition failed)."
        explode: false
        in: header
        name: If-Match
        required: false
        schema:
          type: string
        style: simple
      - description: "Return the object only if it has been modified since the specified\
          \ time, otherwise return a 304 (not modified)."
        explode: false
        in: header
        name: If-Modified-Since
        required: false
        schema:
          format: date-time
          type: string
        style: simple
      - description: "Return the object only if its entity tag (ETag) is different\
          \ from the one specified, otherwise return a 304 (not modified)."
        explode: false
        in: header
        name: If-None-Match
        required: false
        schema:
          type: string
        style: simple
      - description: "Return the object only if it has not been modified since the\
          \ specified time, otherwise return a 412 (precondition failed)."
        explode: false
        in: header
        name: If-Unmodified-Since
        required: false
        schema:
          format: date-time
          type: string
        style: simple
      - description: Key of the object to get.
        explode: false
        in: path
        name: Key
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      - description: "<p>Downloads the specified range bytes of an object. For more\
          \ information about the HTTP Range header, see <a href=\"https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35\"\
          >https://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35</a>.</p>\
          \ <note> <p>ArvanCloud S3 doesn't support retrieving multiple ranges of\
          \ data per <code>GET</code> request.</p> </note>"
        explode: false
        in: header
        name: Range
        required: false
        schema:
          type: string
        style: simple
      - description: Sets the <code>Cache-Control</code> header of the response.
        explode: true
        in: query
        name: response-cache-control
        required: false
        schema:
          type: string
        style: form
      - description: Sets the <code>Content-Disposition</code> header of the response
        explode: true
        in: query
        name: response-content-disposition
        required: false
        schema:
          type: string
        style: form
      - description: Sets the <code>Content-Encoding</code> header of the response.
        explode: true
        in: query
        name: response-content-encoding
        required: false
        schema:
          type: string
        style: form
      - description: Sets the <code>Content-Language</code> header of the response.
        explode: true
        in: query
        name: response-content-language
        required: false
        schema:
          type: string
        style: form
      - description: Sets the <code>Content-Type</code> header of the response.
        explode: true
        in: query
        name: response-content-type
        required: false
        schema:
          type: string
        style: form
      - description: Sets the <code>Expires</code> header of the response.
        explode: true
        in: query
        name: response-expires
        required: false
        schema:
          format: date-time
          type: string
        style: form
      - description: VersionId used to reference a specific version of the object.
        explode: true
        in: query
        name: versionId
        required: false
        schema:
          type: string
        style: form
      - description: "Specifies the algorithm to use to when decrypting the object\
          \ (for example, AES256)."
        explode: false
        in: header
        name: x-amz-server-side-encryption-customer-algorithm
        required: false
        schema:
          type: string
        style: simple
      - description: Specifies the customer-provided encryption key for ArvanCloud
          S3 used to encrypt the data. This value is used to decrypt the object when
          recovering it and must match the one used when storing the data. The key
          must be appropriate for use with the algorithm specified in the <code>x-amz-server-side-encryption-customer-algorithm</code>
          header.
        explode: false
        in: header
        name: x-amz-server-side-encryption-customer-key
        required: false
        schema:
          format: password
          type: string
        style: simple
      - description: Specifies the 128-bit MD5 digest of the encryption key according
          to RFC 1321. ArvanCloud S3 uses this header for a message integrity check
          to ensure that the encryption key was transmitted without error.
        explode: false
        in: header
        name: x-amz-server-side-encryption-customer-key-MD5
        required: false
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: header
        name: x-amz-request-payer
        required: false
        schema:
          description: "Confirms that the requester knows that they will be charged\
            \ for the request. Bucket owners need not specify this parameter in their\
            \ requests. For information about downloading objects from requester pays\
            \ buckets, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html\"\
            >Downloading Objects in Requestor Pays Buckets</a> in the <i>S3 User Guide</i>."
          enum:
          - requester
          type: string
        style: simple
      - description: "Part number of the object being read. This is a positive integer\
          \ between 1 and 10,000. Effectively performs a 'ranged' GET request for\
          \ the part specified. Useful for downloading just a part of an object."
        explode: true
        in: query
        name: partNumber
        required: false
        schema:
          type: integer
        style: form
      - description: "The account ID of the expected bucket owner. If the bucket is\
          \ owned by a different account, the request will fail with an HTTP <code>403\
          \ (Access Denied)</code> error."
        explode: false
        in: header
        name: x-amz-expected-bucket-owner
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetObjectOutput'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchKey'
          description: NoSuchKey
        "481":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/InvalidObjectState'
          description: InvalidObjectState
      tags:
      - Object
    head:
      description: "<p>The HEAD action retrieves metadata from an object without returning\
        \ the object itself. This action is useful if you're only interested in an\
        \ object's metadata. To use HEAD, you must have READ access to the object.</p>\
        \ <p>A <code>HEAD</code> request has the same options as a <code>GET</code>\
        \ action on an object. The response is identical to the <code>GET</code> response\
        \ except that there is no response body. Because of this, if the <code>HEAD</code>\
        \ request generates an error, it returns a generic <code>404 Not Found</code>\
        \ or <code>403 Forbidden</code> code. It is not possible to retrieve the exact\
        \ exception beyond these error codes.</p>"
      operationId: HeadObject
      parameters:
      - description: This parameter is currently not supported and is not required.
        explode: false
        in: header
        name: x-amz-security-token
        required: false
        schema:
          type: string
        style: simple
      - description: <p>The name of the bucket containing the object.</p>
        explode: false
        in: path
        name: Bucket
        required: true
        schema:
          type: string
        style: simple
      - description: "Return the object only if its entity tag (ETag) is the same\
          \ as the one specified, otherwise return a 412 (precondition failed)."
        explode: false
        in: header
        name: If-Match
        required: false
        schema:
          type: string
        style: simple
      - description: "Return the object only if it has been modified since the specified\
          \ time, otherwise return a 304 (not modified)."
        explode: false
        in: header
        name: If-Modified-Since
        required: false
        schema:
          format: date-time
          type: string
        style: simple
      - description: "Return the object only if its entity tag (ETag) is different\
          \ from the one specified, otherwise return a 304 (not modified)."
        explode: false
        in: header
        name: If-None-Match
        required: false
        schema:
          type: string
        style: simple
      - description: "Return the object only if it has not been modified since the\
          \ specified time, otherwise return a 412 (precondition failed)."
        explode: false
        in: header
        name: If-Unmodified-Since
        required: false
        schema:
          format: date-time
          type: string
        style: simple
      - description: The object key.
        explode: false
        in: path
        name: Key
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      - description: "<p>Downloads the specified range bytes of an object. For more\
          \ information about the HTTP Range header, see <a href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35\"\
          >http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.35</a>.</p>\
          \ <note> <p>ArvanCloud S3 doesn't support retrieving multiple ranges of\
          \ data per <code>GET</code> request.</p> </note>"
        explode: false
        in: header
        name: Range
        required: false
        schema:
          type: string
        style: simple
      - description: VersionId used to reference a specific version of the object.
        explode: true
        in: query
        name: versionId
        required: false
        schema:
          type: string
        style: form
      - description: "Specifies the algorithm to use to when encrypting the object\
          \ (for example, AES256)."
        explode: false
        in: header
        name: x-amz-server-side-encryption-customer-algorithm
        required: false
        schema:
          type: string
        style: simple
      - description: Specifies the customer-provided encryption key for ArvanCloud
          S3 to use in encrypting data. This value is used to store the object and
          then it is discarded; ArvanCloud S3 does not store the encryption key. The
          key must be appropriate for use with the algorithm specified in the <code>x-amz-server-side-encryption-customer-algorithm</code>
          header.
        explode: false
        in: header
        name: x-amz-server-side-encryption-customer-key
        required: false
        schema:
          format: password
          type: string
        style: simple
      - description: Specifies the 128-bit MD5 digest of the encryption key according
          to RFC 1321. ArvanCloud S3 uses this header for a message integrity check
          to ensure that the encryption key was transmitted without error.
        explode: false
        in: header
        name: x-amz-server-side-encryption-customer-key-MD5
        required: false
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: header
        name: x-amz-request-payer
        required: false
        schema:
          description: "Confirms that the requester knows that they will be charged\
            \ for the request. Bucket owners need not specify this parameter in their\
            \ requests. For information about downloading objects from requester pays\
            \ buckets, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html\"\
            >Downloading Objects in Requestor Pays Buckets</a> in the <i>S3 User Guide</i>."
          enum:
          - requester
          type: string
        style: simple
      - description: "Part number of the object being read. This is a positive integer\
          \ between 1 and 10,000. Effectively performs a 'ranged' HEAD request for\
          \ the part specified. Useful querying about the size of the part and the\
          \ number of parts in this object."
        explode: true
        in: query
        name: partNumber
        required: false
        schema:
          type: integer
        style: form
      - description: "The account ID of the expected bucket owner. If the bucket is\
          \ owned by a different account, the request will fail with an HTTP <code>403\
          \ (Access Denied)</code> error."
        explode: false
        in: header
        name: x-amz-expected-bucket-owner
        required: false
        schema:
          type: string
        style: simple
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/HeadObjectOutput'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchKey'
          description: NoSuchKey
      tags:
      - Object
    put:
      description: "<p>Adds an object to a bucket. You must have WRITE permissions\
        \ on a bucket to add an object to it.</p> <p>ArvanCloud S3 never adds partial\
        \ objects; if you receive a success response, ArvanCloud S3 added the entire\
        \ object to the bucket.</p> <p>ArvanCloud S3 is a distributed system. If it\
        \ receives multiple write requests for the same object simultaneously, it\
        \ overwrites all but the last object written. ArvanCloud S3 does not provide\
        \ object locking; if you need this, make sure to build it into your application\
        \ layer or use versioning instead.</p>"
      operationId: PutObject
      parameters:
      - description: This parameter is currently not supported and is not required.
        explode: false
        in: header
        name: x-amz-security-token
        required: false
        schema:
          type: string
        style: simple
      - description: "<p>The canned ACL to apply to the object. For more information,\
          \ see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#CannedACL\"\
          >Canned ACL</a>.</p> </p>"
        explode: false
        in: header
        name: x-amz-acl
        required: false
        schema:
          enum:
          - private
          - public-read
          - public-read-write
          - authenticated-read
          - aws-exec-read
          - bucket-owner-read
          - bucket-owner-full-control
          type: string
        style: simple
      - description: <p>The bucket name to which the PUT action was initiated. </p>
          <p>
        explode: false
        in: path
        name: Bucket
        required: true
        schema:
          type: string
        style: simple
      - description: " Can be used to specify caching behavior along the request/reply\
          \ chain. For more information, see <a href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9\"\
          >http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.9</a>."
        explode: false
        in: header
        name: Cache-Control
        required: false
        schema:
          type: string
        style: simple
      - description: "Specifies presentational information for the object. For more\
          \ information, see <a href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec19.html#sec19.5.1\"\
          >http://www.w3.org/Protocols/rfc2616/rfc2616-sec19.html#sec19.5.1</a>."
        explode: false
        in: header
        name: Content-Disposition
        required: false
        schema:
          type: string
        style: simple
      - description: "Specifies what content encodings have been applied to the object\
          \ and thus what decoding mechanisms must be applied to obtain the media-type\
          \ referenced by the Content-Type header field. For more information, see\
          \ <a href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.11\"\
          >http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.11</a>."
        explode: false
        in: header
        name: Content-Encoding
        required: false
        schema:
          type: string
        style: simple
      - description: The language the content is in.
        explode: false
        in: header
        name: Content-Language
        required: false
        schema:
          type: string
        style: simple
      - description: "Size of the body in bytes. This parameter is useful when the\
          \ size of the body cannot be determined automatically. For more information,\
          \ see <a href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.13\"\
          >http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.13</a>."
        explode: false
        in: header
        name: Content-Length
        required: false
        schema:
          type: integer
        style: simple
      - description: "The base64-encoded 128-bit MD5 digest of the message (without\
          \ the headers) according to RFC 1864. This header can be used as a message\
          \ integrity check to verify that the data is the same data that was originally\
          \ sent. Although it is optional, we recommend using the Content-MD5 mechanism\
          \ as an end-to-end integrity check. For more information about REST request\
          \ authentication, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/RESTAuthentication.html\"\
          >REST Authentication</a>."
        explode: false
        in: header
        name: Content-MD5
        required: false
        schema:
          type: string
        style: simple
      - description: "A standard MIME type describing the format of the contents.\
          \ For more information, see <a href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.17\"\
          >http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.17</a>."
        explode: false
        in: header
        name: Content-Type
        required: false
        schema:
          type: string
        style: simple
      - description: "The date and time at which the object is no longer cacheable.\
          \ For more information, see <a href=\"http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.21\"\
          >http://www.w3.org/Protocols/rfc2616/rfc2616-sec14.html#sec14.21</a>."
        explode: false
        in: header
        name: Expires
        required: false
        schema:
          format: date-time
          type: string
        style: simple
      - description: "<p>Gives the grantee READ, READ_ACP, and WRITE_ACP permissions\
          \ on the object.</p> </p>"
        explode: false
        in: header
        name: x-amz-grant-full-control
        required: false
        schema:
          type: string
        style: simple
      - description: <p>Allows grantee to read the object data and its metadata.</p>
          </p>
        explode: false
        in: header
        name: x-amz-grant-read
        required: false
        schema:
          type: string
        style: simple
      - description: <p>Allows grantee to read the object ACL.</p> </p>
        explode: false
        in: header
        name: x-amz-grant-read-acp
        required: false
        schema:
          type: string
        style: simple
      - description: <p>Allows grantee to write the ACL for the applicable object.</p>
          </p>
        explode: false
        in: header
        name: x-amz-grant-write-acp
        required: false
        schema:
          type: string
        style: simple
      - description: Object key for which the PUT action was initiated.
        explode: false
        in: path
        name: Key
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      - description: "The server-side encryption algorithm used when storing this\
          \ object in ArvanCloud S3 (for example, AES256, aws:kms)."
        explode: false
        in: header
        name: x-amz-server-side-encryption
        required: false
        schema:
          enum:
          - AES256
          - aws:kms
          type: string
        style: simple
      - description: "By default, ArvanCloud S3 uses the STANDARD Storage Class to\
          \ store newly created objects. The STANDARD storage class provides high\
          \ durability and high availability. Depending on performance needs, you\
          \ can specify a different Storage Class."
        explode: false
        in: header
        name: x-amz-storage-class
        required: false
        schema:
          enum:
          - STANDARD
          - REDUCED_REDUNDANCY
          - STANDARD_IA
          - ONEZONE_IA
          - INTELLIGENT_TIERING
          - GLACIER
          - DEEP_ARCHIVE
          type: string
        style: simple
      - description: "<p>If the bucket is configured as a website, redirects requests\
          \ for this object to another object in the same bucket or to an external\
          \ URL. ArvanCloud S3 stores the value of this header in the object metadata.\
          \ For information about object metadata, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingMetadata.html\"\
          >Object Key and Metadata</a>.</p> <p>In the following example, the request\
          \ header sets the redirect to an object (anotherPage.html) in the same bucket:</p>\
          \ <p> <code>x-amz-website-redirect-location: /anotherPage.html</code> </p>\
          \ <p>In the following example, the request header sets the object redirect\
          \ to another website:</p> <p> <code>x-amz-website-redirect-location: http://www.example.com/</code>\
          \ </p> </p>"
        explode: false
        in: header
        name: x-amz-website-redirect-location
        required: false
        schema:
          type: string
        style: simple
      - description: "Specifies the algorithm to use to when encrypting the object\
          \ (for example, AES256)."
        explode: false
        in: header
        name: x-amz-server-side-encryption-customer-algorithm
        required: false
        schema:
          type: string
        style: simple
      - description: Specifies the customer-provided encryption key for ArvanCloud
          S3 to use in encrypting data. This value is used to store the object and
          then it is discarded; ArvanCloud S3 does not store the encryption key. The
          key must be appropriate for use with the algorithm specified in the <code>x-amz-server-side-encryption-customer-algorithm</code>
          header.
        explode: false
        in: header
        name: x-amz-server-side-encryption-customer-key
        required: false
        schema:
          format: password
          type: string
        style: simple
      - description: Specifies the 128-bit MD5 digest of the encryption key according
          to RFC 1321. ArvanCloud S3 uses this header for a message integrity check
          to ensure that the encryption key was transmitted without error.
        explode: false
        in: header
        name: x-amz-server-side-encryption-customer-key-MD5
        required: false
        schema:
          type: string
        style: simple
      - description: "If <code>x-amz-server-side-encryption</code> is present and\
          \ has the value of <code>aws:kms</code>, this header specifies the ID of\
          \ the Amazon Web Services Key Management Service (Amazon Web Services KMS)\
          \ symmetrical customer managed key that was used for the object. If you\
          \ specify <code>x-amz-server-side-encryption:aws:kms</code>, but do not\
          \ provide<code> x-amz-server-side-encryption-aws-kms-key-id</code>, ArvanCloud\
          \ S3 uses the Amazon Web Services managed key to protect the data. If the\
          \ KMS key does not exist in the same account issuing the command, you must\
          \ use the full ARN and not just the ID. "
        explode: false
        in: header
        name: x-amz-server-side-encryption-aws-kms-key-id
        required: false
        schema:
          format: password
          type: string
        style: simple
      - description: Specifies the Amazon Web Services KMS Encryption Context to use
          for object encryption. The value of this header is a base64-encoded UTF-8
          string holding JSON with the encryption context key-value pairs.
        explode: false
        in: header
        name: x-amz-server-side-encryption-context
        required: false
        schema:
          format: password
          type: string
        style: simple
      - description: <p>Specifies whether ArvanCloud S3 should use an S3 Bucket Key
          for object encryption with server-side encryption using AWS KMS (SSE-KMS).
          Setting this header to <code>true</code> causes ArvanCloud S3 to use an
          S3 Bucket Key for object encryption with SSE-KMS.</p> <p>Specifying this
          header with a PUT action doesn’t affect bucket-level settings for S3 Bucket
          Key.</p>
        explode: false
        in: header
        name: x-amz-server-side-encryption-bucket-key-enabled
        required: false
        schema:
          type: boolean
        style: simple
      - description: ""
        explode: false
        in: header
        name: x-amz-request-payer
        required: false
        schema:
          description: "Confirms that the requester knows that they will be charged\
            \ for the request. Bucket owners need not specify this parameter in their\
            \ requests. For information about downloading objects from requester pays\
            \ buckets, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html\"\
            >Downloading Objects in Requestor Pays Buckets</a> in the <i>S3 User Guide</i>."
          enum:
          - requester
          type: string
        style: simple
      - description: "The tag-set for the object. The tag-set must be encoded as URL\
          \ Query parameters. (For example, \"Key1=Value1\")"
        explode: false
        in: header
        name: x-amz-tagging
        required: false
        schema:
          type: string
        style: simple
      - description: The Object Lock mode that you want to apply to this object.
        explode: false
        in: header
        name: x-amz-object-lock-mode
        required: false
        schema:
          enum:
          - GOVERNANCE
          - COMPLIANCE
          type: string
        style: simple
      - description: The date and time when you want this object's Object Lock to
          expire. Must be formatted as a timestamp parameter.
        explode: false
        in: header
        name: x-amz-object-lock-retain-until-date
        required: false
        schema:
          format: date-time
          type: string
        style: simple
      - description: "Specifies whether a legal hold will be applied to this object.\
          \ For more information about S3 Object Lock, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lock.html\"\
          >Object Lock</a>."
        explode: false
        in: header
        name: x-amz-object-lock-legal-hold
        required: false
        schema:
          enum:
          - "ON"
          - "OFF"
          type: string
        style: simple
      - description: "The account ID of the expected bucket owner. If the bucket is\
          \ owned by a different account, the request will fail with an HTTP <code>403\
          \ (Access Denied)</code> error."
        explode: false
        in: header
        name: x-amz-expected-bucket-owner
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/PutObject_request'
        required: true
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PutObjectOutput'
          description: Success
      tags:
      - Object
  /{Bucket}/{Key}#tagging:
    delete:
      description: "<p>Removes the entire tag set from the specified object. For more\
        \ information about managing object tags, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/object-tagging.html\"\
        > Object Tagging</a>.</p> <p>To use this operation, you must have permission\
        \ to perform the <code>s3:DeleteObjectTagging</code> action.</p> <p>To delete\
        \ tags of a specific object version, add the <code>versionId</code> query\
        \ parameter in the request. You will need permission for the <code>s3:DeleteObjectVersionTagging</code>\
        \ action.</p> <p>The following operations are related to <code>DeleteBucketMetricsConfiguration</code>:</p>\
        \ <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObjectTagging.html\"\
        >PutObjectTagging</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectTagging.html\"\
        >GetObjectTagging</a> </p> </li> </ul>"
      operationId: DeleteObjectTagging
      parameters:
      - description: This parameter is currently not supported and is not required.
        explode: false
        in: header
        name: x-amz-security-token
        required: false
        schema:
          type: string
        style: simple
      - description: <p>The bucket name containing the objects from which to remove
          the tags. </p>
        explode: false
        in: path
        name: Bucket
        required: true
        schema:
          type: string
        style: simple
      - description: The key that identifies the object in the bucket from which to
          remove all tags.
        explode: false
        in: path
        name: Key
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      - description: The versionId of the object that the tag-set will be removed
          from.
        explode: true
        in: query
        name: versionId
        required: false
        schema:
          type: string
        style: form
      - description: "The account ID of the expected bucket owner. If the bucket is\
          \ owned by a different account, the request will fail with an HTTP <code>403\
          \ (Access Denied)</code> error."
        explode: false
        in: header
        name: x-amz-expected-bucket-owner
        required: false
        schema:
          type: string
        style: simple
      - allowEmptyValue: true
        explode: true
        in: query
        name: tagging
        required: true
        schema:
          type: boolean
        style: form
      responses:
        "204":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteObjectTaggingOutput'
          description: Success
      tags:
      - Object Tagging
    get:
      description: "<p>Returns the tag-set of an object. You send the GET request\
        \ against the tagging subresource associated with the object.</p> <p>To use\
        \ this operation, you must have permission to perform the <code>s3:GetObjectTagging</code>\
        \ action. By default, the GET action returns information about current version\
        \ of an object. For a versioned bucket, you can have multiple versions of\
        \ an object in your bucket. To retrieve tags of any other version, use the\
        \ versionId query parameter. You also need permission for the <code>s3:GetObjectVersionTagging</code>\
        \ action.</p> <p> By default, the bucket owner has this permission and can\
        \ grant this permission to others.</p> <p> For information about the ArvanCloud\
        \ S3 object tagging feature, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/object-tagging.html\"\
        >Object Tagging</a>.</p> <p>The following action is related to <code>GetObjectTagging</code>:</p>\
        \ <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObjectTagging.html\"\
        >PutObjectTagging</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteObjectTagging.html\"\
        >DeleteObjectTagging</a> </p> </li> </ul>"
      operationId: GetObjectTagging
      parameters:
      - description: This parameter is currently not supported and is not required.
        explode: false
        in: header
        name: x-amz-security-token
        required: false
        schema:
          type: string
        style: simple
      - description: <p>The bucket name containing the object for which to get the
          tagging information. </p> </p>
        explode: false
        in: path
        name: Bucket
        required: true
        schema:
          type: string
        style: simple
      - description: Object key for which to get the tagging information.
        explode: false
        in: path
        name: Key
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      - description: The versionId of the object for which to get the tagging information.
        explode: true
        in: query
        name: versionId
        required: false
        schema:
          type: string
        style: form
      - description: "The account ID of the expected bucket owner. If the bucket is\
          \ owned by a different account, the request will fail with an HTTP <code>403\
          \ (Access Denied)</code> error."
        explode: false
        in: header
        name: x-amz-expected-bucket-owner
        required: false
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: header
        name: x-amz-request-payer
        required: false
        schema:
          description: "Confirms that the requester knows that they will be charged\
            \ for the request. Bucket owners need not specify this parameter in their\
            \ requests. For information about downloading objects from requester pays\
            \ buckets, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html\"\
            >Downloading Objects in Requestor Pays Buckets</a> in the <i>S3 User Guide</i>."
          enum:
          - requester
          type: string
        style: simple
      - allowEmptyValue: true
        explode: true
        in: query
        name: tagging
        required: true
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetObjectTaggingOutput'
          description: Success
      tags:
      - Object Tagging
    put:
      description: "<p>Sets the supplied tag-set to an object that already exists\
        \ in a bucket.</p> <p>A tag is a key-value pair. You can associate tags with\
        \ an object by sending a PUT request against the tagging subresource that\
        \ is associated with the object. You can retrieve tags by sending a GET request.\
        \ For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectTagging.html\"\
        >GetObjectTagging</a>.</p> <p>For tagging-related restrictions related to\
        \ characters and encodings, see <a href=\"https://docs.aws.amazon.com/awsaccountbilling/latest/aboutv2/allocation-tag-restrictions.html\"\
        >Tag Restrictions</a>. Note that ArvanCloud S3 limits the maximum number of\
        \ tags to 10 tags per object.</p> <p>To use this operation, you must have\
        \ permission to perform the <code>s3:PutObjectTagging</code> action. By default,\
        \ the bucket owner has this permission and can grant this permission to others.</p>\
        \ <p>To put tags of any other version, use the <code>versionId</code> query\
        \ parameter. You also need permission for the <code>s3:PutObjectVersionTagging</code>\
        \ action.</p> <p>For information about the ArvanCloud S3 object tagging feature,\
        \ see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/object-tagging.html\"\
        >Object Tagging</a>.</p> <p class=\"title\"> <b>Special Errors</b> </p> <ul>\
        \ <li> <ul> <li> <p> <i>Code: InvalidTagError </i> </p> </li> <li> <p> <i>Cause:\
        \ The tag provided was not a valid tag. This error can occur if the tag did\
        \ not pass input validation. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/object-tagging.html\"\
        >Object Tagging</a>.</i> </p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:\
        \ MalformedXMLError </i> </p> </li> <li> <p> <i>Cause: The XML provided does\
        \ not match the schema.</i> </p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:\
        \ OperationAbortedError </i> </p> </li> <li> <p> <i>Cause: A conflicting conditional\
        \ action is currently in progress against this resource. Please try again.</i>\
        \ </p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code: InternalError</i> </p>\
        \ </li> <li> <p> <i>Cause: The service was unable to apply the provided tag\
        \ to the object.</i> </p> </li> </ul> </li> </ul> <p class=\"title\"> <b>Related\
        \ Resources</b> </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObjectTagging.html\"\
        >GetObjectTagging</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteObjectTagging.html\"\
        >DeleteObjectTagging</a> </p> </li> </ul>"
      operationId: PutObjectTagging
      parameters:
      - description: This parameter is currently not supported and is not required.
        explode: false
        in: header
        name: x-amz-security-token
        required: false
        schema:
          type: string
        style: simple
      - description: <p>The bucket name containing the object. </p> </p>
        explode: false
        in: path
        name: Bucket
        required: true
        schema:
          type: string
        style: simple
      - description: Name of the object key.
        explode: false
        in: path
        name: Key
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      - description: The versionId of the object that the tag-set will be added to.
        explode: true
        in: query
        name: versionId
        required: false
        schema:
          type: string
        style: form
      - description: "<p>The MD5 hash for the request body.</p> <p>For requests made\
          \ using the Amazon Web Services Command Line Interface (CLI) or Amazon Web\
          \ Services SDKs, this field is calculated automatically.</p>"
        explode: false
        in: header
        name: Content-MD5
        required: false
        schema:
          type: string
        style: simple
      - description: "The account ID of the expected bucket owner. If the bucket is\
          \ owned by a different account, the request will fail with an HTTP <code>403\
          \ (Access Denied)</code> error."
        explode: false
        in: header
        name: x-amz-expected-bucket-owner
        required: false
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: header
        name: x-amz-request-payer
        required: false
        schema:
          description: "Confirms that the requester knows that they will be charged\
            \ for the request. Bucket owners need not specify this parameter in their\
            \ requests. For information about downloading objects from requester pays\
            \ buckets, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html\"\
            >Downloading Objects in Requestor Pays Buckets</a> in the <i>S3 User Guide</i>."
          enum:
          - requester
          type: string
        style: simple
      - allowEmptyValue: true
        explode: true
        in: query
        name: tagging
        required: true
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/PutBucketTagging_request'
        required: true
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PutObjectTaggingOutput'
          description: Success
      tags:
      - Object Tagging
  /{Bucket}#delete:
    post:
      description: "<p>This action enables you to delete multiple objects from a bucket\
        \ using a single HTTP request. If you know the object keys that you want to\
        \ delete, then this action provides a suitable alternative to sending individual\
        \ delete requests, reducing per-request overhead.</p>"
      operationId: DeleteObjects
      parameters:
      - description: This parameter is currently not supported and is not required.
        explode: false
        in: header
        name: x-amz-security-token
        required: false
        schema:
          type: string
        style: simple
      - description: <p>The bucket name containing the objects to delete. </p>
        explode: false
        in: path
        name: Bucket
        required: true
        schema:
          type: string
        style: simple
      - description: "The concatenation of the authentication device's serial number,\
          \ a space, and the value that is displayed on your authentication device.\
          \ Required to permanently delete a versioned object if versioning is configured\
          \ with MFA delete enabled."
        explode: false
        in: header
        name: x-amz-mfa
        required: false
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: header
        name: x-amz-request-payer
        required: false
        schema:
          description: "Confirms that the requester knows that they will be charged\
            \ for the request. Bucket owners need not specify this parameter in their\
            \ requests. For information about downloading objects from requester pays\
            \ buckets, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html\"\
            >Downloading Objects in Requestor Pays Buckets</a> in the <i>S3 User Guide</i>."
          enum:
          - requester
          type: string
        style: simple
      - description: "Specifies whether you want to delete this object even if it\
          \ has a Governance-type Object Lock in place. To use this header, you must\
          \ have the <code>s3:PutBucketPublicAccessBlock</code> permission."
        explode: false
        in: header
        name: x-amz-bypass-governance-retention
        required: false
        schema:
          type: boolean
        style: simple
      - description: "The account ID of the expected bucket owner. If the bucket is\
          \ owned by a different account, the request will fail with an HTTP <code>403\
          \ (Access Denied)</code> error."
        explode: false
        in: header
        name: x-amz-expected-bucket-owner
        required: false
        schema:
          type: string
        style: simple
      - allowEmptyValue: true
        explode: true
        in: query
        name: delete
        required: true
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/DeleteObjects_request'
        required: true
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/DeleteObjectsOutput'
          description: Success
      tags:
      - Bucket
  /{Bucket}#publicAccessBlock:
    delete:
      description: "<p>Removes the <code>PublicAccessBlock</code> configuration for\
        \ an ArvanCloud S3 bucket. To use this operation, you must have the <code>s3:PutBucketPublicAccessBlock</code>\
        \ permission. "
      operationId: DeletePublicAccessBlock
      parameters:
      - description: This parameter is currently not supported and is not required.
        explode: false
        in: header
        name: x-amz-security-token
        required: false
        schema:
          type: string
        style: simple
      - description: 'the ArvanCloud S3 bucket whose <code>PublicAccessBlock</code>
          configuration you want to delete. '
        explode: false
        in: path
        name: Bucket
        required: true
        schema:
          type: string
        style: simple
      - description: "The account ID of the expected bucket owner. If the bucket is\
          \ owned by a different account, the request will fail with an HTTP <code>403\
          \ (Access Denied)</code> error."
        explode: false
        in: header
        name: x-amz-expected-bucket-owner
        required: false
        schema:
          type: string
        style: simple
      - allowEmptyValue: true
        explode: true
        in: query
        name: publicAccessBlock
        required: true
        schema:
          type: boolean
        style: form
      responses:
        "204":
          description: Success
      tags:
      - Bucket
    get:
      description: "<p>Retrieves the <code>PublicAccessBlock</code> configuration\
        \ for an ArvanCloud S3 bucket. To use this operation, you must have the <code>s3:GetBucketPublicAccessBlock</code>\
        \ permission. "
      operationId: GetPublicAccessBlock
      parameters:
      - description: This parameter is currently not supported and is not required.
        explode: false
        in: header
        name: x-amz-security-token
        required: false
        schema:
          type: string
        style: simple
      - description: 'The name of the ArvanCloud S3 bucket whose <code>PublicAccessBlock</code>
          configuration you want to retrieve. '
        explode: false
        in: path
        name: Bucket
        required: true
        schema:
          type: string
        style: simple
      - description: "The account ID of the expected bucket owner. If the bucket is\
          \ owned by a different account, the request will fail with an HTTP <code>403\
          \ (Access Denied)</code> error."
        explode: false
        in: header
        name: x-amz-expected-bucket-owner
        required: false
        schema:
          type: string
        style: simple
      - allowEmptyValue: true
        explode: true
        in: query
        name: publicAccessBlock
        required: true
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetPublicAccessBlockOutput'
          description: Success
      tags:
      - Bucket
    put:
      description: "<p>Creates or modifies the <code>PublicAccessBlock</code> configuration\
        \ for an ArvanCloud S3 bucket. To use this operation, you must have the <code>s3:PutBucketPublicAccessBlock</code>\
        \ permission. "
      operationId: PutPublicAccessBlock
      parameters:
      - description: This parameter is currently not supported and is not required.
        explode: false
        in: header
        name: x-amz-security-token
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the ArvanCloud S3 bucket whose <code>PublicAccessBlock</code>
          configuration you want to set.
        explode: false
        in: path
        name: Bucket
        required: true
        schema:
          type: string
        style: simple
      - description: "<p>The MD5 hash of the <code>PutPublicAccessBlock</code> request\
          \ body. </p> <p>For requests made using the Amazon Web Services Command\
          \ Line Interface (CLI) or Amazon Web Services SDKs, this field is calculated\
          \ automatically.</p>"
        explode: false
        in: header
        name: Content-MD5
        required: false
        schema:
          type: string
        style: simple
      - description: "The account ID of the expected bucket owner. If the bucket is\
          \ owned by a different account, the request will fail with an HTTP <code>403\
          \ (Access Denied)</code> error."
        explode: false
        in: header
        name: x-amz-expected-bucket-owner
        required: false
        schema:
          type: string
        style: simple
      - allowEmptyValue: true
        explode: true
        in: query
        name: publicAccessBlock
        required: true
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/PutPublicAccessBlock_request'
        required: true
      responses:
        "200":
          description: Success
      tags:
      - Bucket
  /{Bucket}#acl:
    get:
      description: "<p>This implementation of the <code>GET</code> action uses the\
        \ <code>acl</code> subresource to return the access control list (ACL) of\
        \ a bucket. To use <code>GET</code> to return the ACL of the bucket, you must\
        \ have <code>READ_ACP</code> access to the bucket. If <code>READ_ACP</code>\
        \ permission is granted to the anonymous user, you can return the ACL of the\
        \ bucket without using an authorization header.</p> <p class=\"title\"> <b>Related\
        \ Resources</b> </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListObjects.html\"\
        >ListObjects</a> </p> </li> </ul>"
      operationId: GetBucketAcl
      parameters:
      - description: This parameter is currently not supported and is not required.
        explode: false
        in: header
        name: x-amz-security-token
        required: false
        schema:
          type: string
        style: simple
      - description: Specifies the S3 bucket whose ACL is being requested.
        explode: false
        in: path
        name: Bucket
        required: true
        schema:
          type: string
        style: simple
      - description: "The account ID of the expected bucket owner. If the bucket is\
          \ owned by a different account, the request will fail with an HTTP <code>403\
          \ (Access Denied)</code> error."
        explode: false
        in: header
        name: x-amz-expected-bucket-owner
        required: false
        schema:
          type: string
        style: simple
      - allowEmptyValue: true
        explode: true
        in: query
        name: acl
        required: true
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetBucketAclOutput'
          description: Success
      tags:
      - Bucket ACL
    put:
      description: "<p>Sets the permissions on an existing bucket using access control\
        \ lists (ACL). For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/S3_ACLs_UsingACLs.html\"\
        >Using ACLs</a>. To set the ACL of a bucket, you must have <code>WRITE_ACP</code>\
        \ permission.</p> <p>You can use one of the following two ways to set a bucket's\
        \ permissions:</p> <ul> <li> <p>Specify the ACL in the request body</p> </li>\
        \ <li> <p>Specify permissions using request headers</p> </li> </ul> <note>\
        \ <p>You cannot specify access permission using both the body and the request\
        \ headers.</p> </note> <p>Depending on your application needs, you may choose\
        \ to set the ACL on a bucket using either the request body or the headers.\
        \ For example, if you have an existing application that updates a bucket ACL\
        \ using the request body, then you can continue to use that approach.</p>\
        \ <p> <b>Access Permissions</b> </p> <p>You can set access permissions using\
        \ one of the following methods:</p> <ul> <li> <p>Specify a canned ACL with\
        \ the <code>x-amz-acl</code> request header. ArvanCloud S3 supports a set\
        \ of predefined ACLs, known as <i>canned ACLs</i>. Each canned ACL has a predefined\
        \ set of grantees and permissions. Specify the canned ACL name as the value\
        \ of <code>x-amz-acl</code>. If you use this header, you cannot use other\
        \ access control-specific headers in your request. For more information, see\
        \ <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#CannedACL\"\
        >Canned ACL</a>.</p> </li> <li> <p>Specify access permissions explicitly with\
        \ the <code>x-amz-grant-read</code>, <code>x-amz-grant-read-acp</code>, <code>x-amz-grant-write-acp</code>,\
        \ and <code>x-amz-grant-full-control</code> headers. When using these headers,\
        \ you specify explicit access permissions and grantees (Amazon Web Services\
        \ accounts or ArvanCloud S3 groups) who will receive the permission. If you\
        \ use these ACL-specific headers, you cannot use the <code>x-amz-acl</code>\
        \ header to set a canned ACL. These parameters map to the set of permissions\
        \ that ArvanCloud S3 supports in an ACL. For more information, see <a href=\"\
        https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html\">Access\
        \ Control List (ACL) Overview</a>.</p> <p>You specify each grantee as a type=value\
        \ pair, where the type is one of the following:</p> <ul> <li> <p> <code>id</code>\
        \ – if the value specified is the canonical user ID of an Amazon Web Services\
        \ account</p> </li> <li> <p> <code>uri</code> – if you are granting permissions\
        \ to a predefined group</p> </li> <li> <p> <code>emailAddress</code> – if\
        \ the value specified is the email address of an Amazon Web Services account</p>\
        \ <note> <p>"
      operationId: PutBucketAcl
      parameters:
      - description: This parameter is currently not supported and is not required.
        explode: false
        in: header
        name: x-amz-security-token
        required: false
        schema:
          type: string
        style: simple
      - description: The canned ACL to apply to the bucket.
        explode: false
        in: header
        name: x-amz-acl
        required: false
        schema:
          enum:
          - private
          - public-read
          - public-read-write
          - authenticated-read
          type: string
        style: simple
      - description: The bucket to which to apply the ACL.
        explode: false
        in: path
        name: Bucket
        required: true
        schema:
          type: string
        style: simple
      - description: "<p>The base64-encoded 128-bit MD5 digest of the data. This header\
          \ must be used as a message integrity check to verify that the request body\
          \ was not corrupted in transit. For more information, go to <a href=\"http://www.ietf.org/rfc/rfc1864.txt\"\
          >RFC 1864.</a> </p> <p>For requests made using the Amazon Web Services Command\
          \ Line Interface (CLI) or Amazon Web Services SDKs, this field is calculated\
          \ automatically.</p>"
        explode: false
        in: header
        name: Content-MD5
        required: false
        schema:
          type: string
        style: simple
      - description: "Allows grantee the read, write, read ACP, and write ACP permissions\
          \ on the bucket."
        explode: false
        in: header
        name: x-amz-grant-full-control
        required: false
        schema:
          type: string
        style: simple
      - description: Allows grantee to list the objects in the bucket.
        explode: false
        in: header
        name: x-amz-grant-read
        required: false
        schema:
          type: string
        style: simple
      - description: Allows grantee to read the bucket ACL.
        explode: false
        in: header
        name: x-amz-grant-read-acp
        required: false
        schema:
          type: string
        style: simple
      - description: "<p>Allows grantee to create new objects in the bucket.</p> <p>For\
          \ the bucket and object owners of existing objects, also allows deletions\
          \ and overwrites of those objects.</p>"
        explode: false
        in: header
        name: x-amz-grant-write
        required: false
        schema:
          type: string
        style: simple
      - description: Allows grantee to write the ACL for the applicable bucket.
        explode: false
        in: header
        name: x-amz-grant-write-acp
        required: false
        schema:
          type: string
        style: simple
      - description: "The account ID of the expected bucket owner. If the bucket is\
          \ owned by a different account, the request will fail with an HTTP <code>403\
          \ (Access Denied)</code> error."
        explode: false
        in: header
        name: x-amz-expected-bucket-owner
        required: false
        schema:
          type: string
        style: simple
      - allowEmptyValue: true
        explode: true
        in: query
        name: acl
        required: true
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/PutBucketAcl_request'
        required: true
      responses:
        "200":
          description: Success
      tags:
      - Bucket ACL
  /{Bucket}#policyStatus:
    get:
      description: "<p>Retrieves the policy status for an ArvanCloud S3 bucket, indicating\
        \ whether the bucket is public. In order to use this operation, you must have\
        \ the <code>s3:GetBucketPolicyStatus</code> permission. "
      operationId: GetBucketPolicyStatus
      parameters:
      - description: This parameter is currently not supported and is not required.
        explode: false
        in: header
        name: x-amz-security-token
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the ArvanCloud S3 bucket whose policy status you
          want to retrieve.
        explode: false
        in: path
        name: Bucket
        required: true
        schema:
          type: string
        style: simple
      - description: "The account ID of the expected bucket owner. If the bucket is\
          \ owned by a different account, the request will fail with an HTTP <code>403\
          \ (Access Denied)</code> error."
        explode: false
        in: header
        name: x-amz-expected-bucket-owner
        required: false
        schema:
          type: string
        style: simple
      - allowEmptyValue: true
        explode: true
        in: query
        name: policyStatus
        required: true
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetBucketPolicyStatusOutput'
          description: Success
      tags:
      - Bucket Policy
  /{Bucket}#versioning:
    get:
      description: "<p>Returns the versioning state of a bucket.</p> <p>To retrieve\
        \ the versioning state of a bucket, you must be the bucket owner.</p> <p>This\
        \ implementation also returns the MFA Delete status of the versioning state.\
        \ If the MFA Delete status is <code>enabled</code>, the bucket owner must\
        \ use an authentication device to change the versioning state of the bucket.</p>"
      operationId: GetBucketVersioning
      parameters:
      - description: This parameter is currently not supported and is not required.
        explode: false
        in: header
        name: x-amz-security-token
        required: false
        schema:
          type: string
        style: simple
      - description: The name of the bucket for which to get the versioning information.
        explode: false
        in: path
        name: Bucket
        required: true
        schema:
          type: string
        style: simple
      - description: "The account ID of the expected bucket owner. If the bucket is\
          \ owned by a different account, the request will fail with an HTTP <code>403\
          \ (Access Denied)</code> error."
        explode: false
        in: header
        name: x-amz-expected-bucket-owner
        required: false
        schema:
          type: string
        style: simple
      - allowEmptyValue: true
        explode: true
        in: query
        name: versioning
        required: true
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetBucketVersioningOutput'
          description: Success
      tags:
      - Bucket Versioning
    put:
      description: "<p>Sets the versioning state of an existing bucket. To set the\
        \ versioning state, you must be the bucket owner.</p> <p>You can set the versioning\
        \ state with one of the following values:</p> <p> <b>Enabled</b>—Enables versioning\
        \ for the objects in the bucket. All objects added to the bucket receive a\
        \ unique version ID.</p> <p> <b>Suspended</b>—Disables versioning for the\
        \ objects in the bucket. All objects added to the bucket receive the version\
        \ ID null.</p> <p>If the versioning state has never been set on a bucket,\
        \ it has no versioning state; a <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketVersioning.html\"\
        >GetBucketVersioning</a> request does not return a versioning state value.</p>\
        \ <p>If the bucket owner enables MFA Delete in the bucket versioning configuration,\
        \ the bucket owner must include the <code>x-amz-mfa request</code> header\
        \ and the <code>Status</code> and the <code>MfaDelete</code> request elements\
        \ in a request to set the versioning state of the bucket.</p> <important>\
        \ <p>If you have an object expiration lifecycle policy in your non-versioned\
        \ bucket and you want to maintain the same permanent delete behavior when\
        \ you enable versioning, you must add a noncurrent expiration policy. The\
        \ noncurrent expiration lifecycle policy will manage the deletes of the noncurrent\
        \ object versions in the version-enabled bucket. (A version-enabled bucket\
        \ maintains one current and zero or more noncurrent object versions.) For\
        \ more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html#lifecycle-and-other-bucket-config\"\
        >Lifecycle and Versioning</a>.</p> </important> <p class=\"title\"> <b>Related\
        \ Resources</b> </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateBucket.html\"\
        >CreateBucket</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_DeleteBucket.html\"\
        >DeleteBucket</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetBucketVersioning.html\"\
        >GetBucketVersioning</a> </p> </li> </ul>"
      operationId: PutBucketVersioning
      parameters:
      - description: This parameter is currently not supported and is not required.
        explode: false
        in: header
        name: x-amz-security-token
        required: false
        schema:
          type: string
        style: simple
      - description: The bucket name.
        explode: false
        in: path
        name: Bucket
        required: true
        schema:
          type: string
        style: simple
      - description: "<p>&gt;The base64-encoded 128-bit MD5 digest of the data. You\
          \ must use this header as a message integrity check to verify that the request\
          \ body was not corrupted in transit. For more information, see <a href=\"\
          http://www.ietf.org/rfc/rfc1864.txt\">RFC 1864</a>.</p> <p>For requests\
          \ made using the Amazon Web Services Command Line Interface (CLI) or Amazon\
          \ Web Services SDKs, this field is calculated automatically.</p>"
        explode: false
        in: header
        name: Content-MD5
        required: false
        schema:
          type: string
        style: simple
      - description: "The concatenation of the authentication device's serial number,\
          \ a space, and the value that is displayed on your authentication device."
        explode: false
        in: header
        name: x-amz-mfa
        required: false
        schema:
          type: string
        style: simple
      - description: "The account ID of the expected bucket owner. If the bucket is\
          \ owned by a different account, the request will fail with an HTTP <code>403\
          \ (Access Denied)</code> error."
        explode: false
        in: header
        name: x-amz-expected-bucket-owner
        required: false
        schema:
          type: string
        style: simple
      - allowEmptyValue: true
        explode: true
        in: query
        name: versioning
        required: true
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/PutBucketVersioning_request'
        required: true
      responses:
        "200":
          description: Success
      tags:
      - Bucket Versioning
  /{Bucket}/{Key}#acl:
    get:
      description: "<p>Returns the access control list (ACL) of an object. To use\
        \ this operation, you must have <code>READ_ACP</code> access to the object.</p>\
        \ <p>"
      operationId: GetObjectAcl
      parameters:
      - description: This parameter is currently not supported and is not required.
        explode: false
        in: header
        name: x-amz-security-token
        required: false
        schema:
          type: string
        style: simple
      - description: <p>The bucket name that contains the object for which to get
          the ACL information. </p> <p>
        explode: false
        in: path
        name: Bucket
        required: true
        schema:
          type: string
        style: simple
      - description: The key of the object for which to get the ACL information.
        explode: false
        in: path
        name: Key
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      - description: VersionId used to reference a specific version of the object.
        explode: true
        in: query
        name: versionId
        required: false
        schema:
          type: string
        style: form
      - description: ""
        explode: false
        in: header
        name: x-amz-request-payer
        required: false
        schema:
          description: "Confirms that the requester knows that they will be charged\
            \ for the request. Bucket owners need not specify this parameter in their\
            \ requests. For information about downloading objects from requester pays\
            \ buckets, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html\"\
            >Downloading Objects in Requestor Pays Buckets</a> in the <i>S3 User Guide</i>."
          enum:
          - requester
          type: string
        style: simple
      - description: "The account ID of the expected bucket owner. If the bucket is\
          \ owned by a different account, the request will fail with an HTTP <code>403\
          \ (Access Denied)</code> error."
        explode: false
        in: header
        name: x-amz-expected-bucket-owner
        required: false
        schema:
          type: string
        style: simple
      - allowEmptyValue: true
        explode: true
        in: query
        name: acl
        required: true
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/GetObjectAclOutput'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchKey'
          description: NoSuchKey
      tags:
      - Object ACL
    put:
      description: "<p>Uses the <code>acl</code> subresource to set the access control\
        \ list (ACL) permissions for a new or existing object in an S3 bucket. You\
        \ must have <code>WRITE_ACP</code> permission to set the ACL of an object.\
        \ For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#permissions\"\
        >What permissions can I grant?</a> in the <i>User Guide</i>.</p> </p> <p>Depending\
        \ on your application needs, you can choose to set the ACL on an object using\
        \ either the request body or the headers. For example, if you have an existing\
        \ application that updates a bucket ACL using the request body, you can continue\
        \ to use that approach. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html\"\
        >Access Control List (ACL) Overview</a> in the <i>S3 User Guide</i>.</p> <p>\
        \ <b>Access Permissions</b> </p> <p>You can set access permissions using one\
        \ of the following methods:</p> <ul> <li> <p>Specify a canned ACL with the\
        \ <code>x-amz-acl</code> request header. ArvanCloud S3 supports a set of predefined\
        \ ACLs, known as canned ACLs. Each canned ACL has a predefined set of grantees\
        \ and permissions. Specify the canned ACL name as the value of <code>x-amz-ac</code>l.\
        \ If you use this header, you cannot use other access control-specific headers\
        \ in your request. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#CannedACL\"\
        >Canned ACL</a>.</p> </li> <li> <p>Specify access permissions explicitly with\
        \ the <code>x-amz-grant-read</code>, <code>x-amz-grant-read-acp</code>, <code>x-amz-grant-write-acp</code>,\
        \ and <code>x-amz-grant-full-control</code> headers. When using these headers,\
        \ you specify explicit access permissions and grantees (Amazon Web Services\
        \ accounts or ArvanCloud S3 groups) who will receive the permission. If you\
        \ use these ACL-specific headers, you cannot use <code>x-amz-acl</code> header\
        \ to set a canned ACL. <p>You specify each grantee as a type=value pair, where\
        \ the type is one of the following:</p> <ul> <li> <p> <code>id</code> – if\
        \ the value specified is the canonical user ID of an Amazon Web Services account</p>\
        \ </li> <li> <p> <code>uri</code> – if you are granting permissions to a predefined\
        \ group</p> </li> <li> <p> <code>emailAddress</code> – if the value specified\
        \ is the email address of an Amazon Web Services account</p> <note> <p>"
      operationId: PutObjectAcl
      parameters:
      - description: This parameter is currently not supported and is not required.
        explode: false
        in: header
        name: x-amz-security-token
        required: false
        schema:
          type: string
        style: simple
      - description: "The canned ACL to apply to the object. For more information,\
          \ see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/acl-overview.html#CannedACL\"\
          >Canned ACL</a>."
        explode: false
        in: header
        name: x-amz-acl
        required: false
        schema:
          enum:
          - private
          - public-read
          - public-read-write
          - authenticated-read
          - aws-exec-read
          - bucket-owner-read
          - bucket-owner-full-control
          type: string
        style: simple
      - description: <p>The bucket name that contains the object to which you want
          to attach the ACL. </p> <p>
        explode: false
        in: path
        name: Bucket
        required: true
        schema:
          type: string
        style: simple
      - description: "<p>The base64-encoded 128-bit MD5 digest of the data. This header\
          \ must be used as a message integrity check to verify that the request body\
          \ was not corrupted in transit. For more information, go to <a href=\"http://www.ietf.org/rfc/rfc1864.txt\"\
          >RFC 1864.&gt;</a> </p> <p>For requests made using the Amazon Web Services\
          \ Command Line Interface (CLI) or Amazon Web Services SDKs, this field is\
          \ calculated automatically.</p>"
        explode: false
        in: header
        name: Content-MD5
        required: false
        schema:
          type: string
        style: simple
      - description: "<p>Allows grantee the read, write, read ACP, and write ACP permissions\
          \ on the bucket.</p> </p>"
        explode: false
        in: header
        name: x-amz-grant-full-control
        required: false
        schema:
          type: string
        style: simple
      - description: <p>Allows grantee to list the objects in the bucket.</p> </p>
        explode: false
        in: header
        name: x-amz-grant-read
        required: false
        schema:
          type: string
        style: simple
      - description: <p>Allows grantee to read the bucket ACL.</p> </p>
        explode: false
        in: header
        name: x-amz-grant-read-acp
        required: false
        schema:
          type: string
        style: simple
      - description: "<p>Allows grantee to create new objects in the bucket.</p> <p>For\
          \ the bucket and object owners of existing objects, also allows deletions\
          \ and overwrites of those objects.</p>"
        explode: false
        in: header
        name: x-amz-grant-write
        required: false
        schema:
          type: string
        style: simple
      - description: <p>Allows grantee to write the ACL for the applicable bucket.</p>
          </p>
        explode: false
        in: header
        name: x-amz-grant-write-acp
        required: false
        schema:
          type: string
        style: simple
      - description: <p>Key for which the PUT action was initiated.</p> <p>W
        explode: false
        in: path
        name: Key
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      - description: ""
        explode: false
        in: header
        name: x-amz-request-payer
        required: false
        schema:
          description: "Confirms that the requester knows that they will be charged\
            \ for the request. Bucket owners need not specify this parameter in their\
            \ requests. For information about downloading objects from requester pays\
            \ buckets, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html\"\
            >Downloading Objects in Requestor Pays Buckets</a> in the <i>S3 User Guide</i>."
          enum:
          - requester
          type: string
        style: simple
      - description: VersionId used to reference a specific version of the object.
        explode: true
        in: query
        name: versionId
        required: false
        schema:
          type: string
        style: form
      - description: "The account ID of the expected bucket owner. If the bucket is\
          \ owned by a different account, the request will fail with an HTTP <code>403\
          \ (Access Denied)</code> error."
        explode: false
        in: header
        name: x-amz-expected-bucket-owner
        required: false
        schema:
          type: string
        style: simple
      - allowEmptyValue: true
        explode: true
        in: query
        name: acl
        required: true
        schema:
          type: boolean
        style: form
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/PutBucketAcl_request'
        required: true
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/PutObjectAclOutput'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchKey'
          description: NoSuchKey
      tags:
      - Object ACL
  /{Bucket}#uploads:
    get:
      description: "<p>This action lists in-progress multipart uploads. An in-progress\
        \ multipart upload is a multipart upload that has been initiated using the\
        \ Initiate Multipart Upload request, but has not yet been completed or aborted.</p>\
        \ <p>This action returns at most 1,000 multipart uploads in the response.\
        \ 1,000 multipart uploads is the maximum number of uploads a response can\
        \ include, which is also the default value. You can further limit the number\
        \ of uploads in a response by specifying the <code>max-uploads</code> parameter\
        \ in the response. If additional multipart uploads satisfy the list criteria,\
        \ the response will contain an <code>IsTruncated</code> element with the value\
        \ true. To list the additional multipart uploads, use the <code>key-marker</code>\
        \ and <code>upload-id-marker</code> request parameters.</p> <p>In the response,\
        \ the uploads are sorted by key. If your application has initiated more than\
        \ one multipart upload using the same object key, then uploads in the response\
        \ are first sorted by key. Additionally, uploads are sorted in ascending order\
        \ within each key by the upload initiation time.</p> <p>For more information\
        \ on multipart uploads, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/uploadobjusingmpu.html\"\
        >Uploading Objects Using Multipart Upload</a>.</p> <p>For information on permissions\
        \ required to use the multipart upload API, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/mpuAndPermissions.html\"\
        >Multipart Upload and Permissions</a>.</p> <p>The following operations are\
        \ related to <code>ListMultipartUploads</code>:</p> <ul> <li> <p> <a href=\"\
        https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateMultipartUpload.html\"\
        >CreateMultipartUpload</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_UploadPart.html\"\
        >UploadPart</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_CompleteMultipartUpload.html\"\
        >CompleteMultipartUpload</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListParts.html\"\
        >ListParts</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_AbortMultipartUpload.html\"\
        >AbortMultipartUpload</a> </p> </li> </ul>"
      operationId: ListMultipartUploads
      parameters:
      - description: This parameter is currently not supported and is not required.
        explode: false
        in: header
        name: x-amz-security-token
        required: false
        schema:
          type: string
        style: simple
      - description: <p>The name of the bucket to which the multipart upload was initiated.
          </p>
        explode: false
        in: path
        name: Bucket
        required: true
        schema:
          type: string
        style: simple
      - description: "<p>Character you use to group keys.</p> <p>All keys that contain\
          \ the same string between the prefix, if specified, and the first occurrence\
          \ of the delimiter after the prefix are grouped under a single result element,\
          \ <code>CommonPrefixes</code>. If you don't specify the prefix parameter,\
          \ then the substring starts at the beginning of the key. The keys that are\
          \ grouped under <code>CommonPrefixes</code> result element are not returned\
          \ elsewhere in the response.</p>"
        explode: true
        in: query
        name: delimiter
        required: false
        schema:
          type: string
        style: form
      - description: ""
        explode: true
        in: query
        name: encoding-type
        required: false
        schema:
          description: "Requests ArvanCloud S3 to encode the object keys in the response\
            \ and specifies the encoding method to use. An object key may contain\
            \ any Unicode character; however, XML 1.0 parser cannot parse some characters,\
            \ such as characters with an ASCII value from 0 to 10. For characters\
            \ that are not supported in XML 1.0, you can add this parameter to request\
            \ that ArvanCloud S3 encode the keys in the response."
          enum:
          - url
          type: string
        style: form
      - description: "<p>Together with upload-id-marker, this parameter specifies\
          \ the multipart upload after which listing should begin.</p> <p>If <code>upload-id-marker</code>\
          \ is not specified, only the keys lexicographically greater than the specified\
          \ <code>key-marker</code> will be included in the list.</p> <p>If <code>upload-id-marker</code>\
          \ is specified, any multipart uploads for a key equal to the <code>key-marker</code>\
          \ might also be included, provided those multipart uploads have upload IDs\
          \ lexicographically greater than the specified <code>upload-id-marker</code>.</p>"
        explode: true
        in: query
        name: key-marker
        required: false
        schema:
          type: string
        style: form
      - description: "Sets the maximum number of multipart uploads, from 1 to 1,000,\
          \ to return in the response body. 1,000 is the maximum number of uploads\
          \ that can be returned in a response."
        explode: true
        in: query
        name: max-uploads
        required: false
        schema:
          type: integer
        style: form
      - description: Lists in-progress uploads only for those keys that begin with
          the specified prefix. You can use prefixes to separate a bucket into different
          grouping of keys. (You can think of using prefix to make groups in the same
          way you'd use a folder in a file system.)
        explode: true
        in: query
        name: prefix
        required: false
        schema:
          type: string
        style: form
      - description: "Together with key-marker, specifies the multipart upload after\
          \ which listing should begin. If key-marker is not specified, the upload-id-marker\
          \ parameter is ignored. Otherwise, any multipart uploads for a key equal\
          \ to the key-marker might be included in the list only if they have an upload\
          \ ID lexicographically greater than the specified <code>upload-id-marker</code>."
        explode: true
        in: query
        name: upload-id-marker
        required: false
        schema:
          type: string
        style: form
      - description: "The account ID of the expected bucket owner. If the bucket is\
          \ owned by a different account, the request will fail with an HTTP <code>403\
          \ (Access Denied)</code> error."
        explode: false
        in: header
        name: x-amz-expected-bucket-owner
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxUploads
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: KeyMarker
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: UploadIdMarker
        required: false
        schema:
          type: string
        style: form
      - allowEmptyValue: true
        explode: true
        in: query
        name: uploads
        required: true
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListMultipartUploadsOutput'
          description: Success
      tags:
      - Multipart
  /{Bucket}#versions:
    get:
      description: "<p>Returns metadata about all versions of the objects in a bucket.\
        \ You can also use request parameters as selection criteria to return metadata\
        \ about a subset of all the object versions.</p> <important> <p> To use this\
        \ operation, you must have permissions to perform the <code>s3:ListBucketVersions</code>\
        \ action. Be aware of the name difference. </p> </important> <note> <p> A\
        \ 200 OK response can contain valid or invalid XML. Make sure to design your\
        \ application to parse the contents of the response and handle it appropriately.</p>\
        \ </note> <p>To use this operation, you must have READ access to the bucket."
      operationId: ListObjectVersions
      parameters:
      - description: This parameter is currently not supported and is not required.
        explode: false
        in: header
        name: x-amz-security-token
        required: false
        schema:
          type: string
        style: simple
      - description: 'The bucket name that contains the objects. '
        explode: false
        in: path
        name: Bucket
        required: true
        schema:
          type: string
        style: simple
      - description: A delimiter is a character that you specify to group keys. All
          keys that contain the same string between the <code>prefix</code> and the
          first occurrence of the delimiter are grouped under a single result element
          in CommonPrefixes. These groups are counted as one result against the max-keys
          limitation. These keys are not returned elsewhere in the response.
        explode: true
        in: query
        name: delimiter
        required: false
        schema:
          type: string
        style: form
      - description: ""
        explode: true
        in: query
        name: encoding-type
        required: false
        schema:
          description: "Requests ArvanCloud S3 to encode the object keys in the response\
            \ and specifies the encoding method to use. An object key may contain\
            \ any Unicode character; however, XML 1.0 parser cannot parse some characters,\
            \ such as characters with an ASCII value from 0 to 10. For characters\
            \ that are not supported in XML 1.0, you can add this parameter to request\
            \ that ArvanCloud S3 encode the keys in the response."
          enum:
          - url
          type: string
        style: form
      - description: Specifies the key to start with when listing objects in a bucket.
        explode: true
        in: query
        name: key-marker
        required: false
        schema:
          type: string
        style: form
      - description: "Sets the maximum number of keys returned in the response. By\
          \ default the action returns up to 1,000 key names. The response might contain\
          \ fewer keys but will never contain more. If additional keys satisfy the\
          \ search criteria, but were not returned because max-keys was exceeded,\
          \ the response contains &lt;isTruncated&gt;true&lt;/isTruncated&gt;. To\
          \ return the additional keys, see key-marker and version-id-marker."
        explode: true
        in: query
        name: max-keys
        required: false
        schema:
          type: integer
        style: form
      - description: 'Use this parameter to select only those keys that begin with
          the specified prefix. You can use prefixes to separate a bucket into different
          groupings of keys. (You can think of using prefix to make groups in the
          same way you''d use a folder in a file system.) You can use prefix with
          delimiter to roll up numerous objects into a single result under CommonPrefixes. '
        explode: true
        in: query
        name: prefix
        required: false
        schema:
          type: string
        style: form
      - description: Specifies the object version you want to start listing from.
        explode: true
        in: query
        name: version-id-marker
        required: false
        schema:
          type: string
        style: form
      - description: "The account ID of the expected bucket owner. If the bucket is\
          \ owned by a different account, the request will fail with an HTTP <code>403\
          \ (Access Denied)</code> error."
        explode: false
        in: header
        name: x-amz-expected-bucket-owner
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxKeys
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: KeyMarker
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: VersionIdMarker
        required: false
        schema:
          type: string
        style: form
      - allowEmptyValue: true
        explode: true
        in: query
        name: versions
        required: true
        schema:
          type: boolean
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListObjectVersionsOutput'
          description: Success
      tags:
      - Bucket
  /{Bucket}#list-type=2:
    get:
      description: "<p>Returns some or all (up to 1,000) of the objects in a bucket\
        \ with each request. You can use the request parameters as selection criteria\
        \ to return a subset of the objects in a bucket. A <code>200 OK</code> response\
        \ can contain valid or invalid XML. Make sure to design your application to\
        \ parse the contents of the response and handle it appropriately. Objects\
        \ are returned sorted in an ascending order of the respective key names in\
        \ the list. For more information about listing objects, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/ListingKeysUsingAPIs.html\"\
        >Listing object keys programmatically</a> </p> <p>To use this operation, you\
        \ must have READ access to the bucket.</p> <p>To use this action in an Identity\
        \ and Access Management (IAM) policy, you must have permissions to perform\
        \ the <code>s3:ListBucket</code> action. The bucket owner has this permission\
        \ by default and can grant this permission to others. For more information\
        \ about permissions, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/using-with-s3-actions.html#using-with-s3-actions-related-to-bucket-subresources\"\
        >Permissions Related to Bucket Subresource Operations</a> and <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/s3-access-control.html\"\
        >Managing Access Permissions to Your ArvanCloud S3 Resources</a>.</p> <important>\
        \ <p>This section describes the latest revision of this action. We recommend\
        \ that you use this revised API for application development. For backward\
        \ compatibility, ArvanCloud S3 continues to support the prior version of this\
        \ API, <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListObjects.html\"\
        >ListObjects</a>.</p> </important> <p>To get a list of your buckets, see <a\
        \ href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListBuckets.html\"\
        >ListBuckets</a>.</p> <p>The following operations are related to <code>ListObjectsV2</code>:</p>\
        \ <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_GetObject.html\"\
        >GetObject</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_PutObject.html\"\
        >PutObject</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateBucket.html\"\
        >CreateBucket</a> </p> </li> </ul>"
      operationId: ListObjectsV2
      parameters:
      - description: This parameter is currently not supported and is not required.
        explode: false
        in: header
        name: x-amz-security-token
        required: false
        schema:
          type: string
        style: simple
      - description: <p>Bucket name to list. </p> </p>
        explode: false
        in: path
        name: Bucket
        required: true
        schema:
          type: string
        style: simple
      - description: A delimiter is a character you use to group keys.
        explode: true
        in: query
        name: delimiter
        required: false
        schema:
          type: string
        style: form
      - description: Encoding type used by ArvanCloud S3 to encode object keys in
          the response.
        explode: true
        in: query
        name: encoding-type
        required: false
        schema:
          description: "Requests ArvanCloud S3 to encode the object keys in the response\
            \ and specifies the encoding method to use. An object key may contain\
            \ any Unicode character; however, XML 1.0 parser cannot parse some characters,\
            \ such as characters with an ASCII value from 0 to 10. For characters\
            \ that are not supported in XML 1.0, you can add this parameter to request\
            \ that ArvanCloud S3 encode the keys in the response."
          enum:
          - url
          type: string
        style: form
      - description: "Sets the maximum number of keys returned in the response. By\
          \ default the action returns up to 1,000 key names. The response might contain\
          \ fewer keys but will never contain more."
        explode: true
        in: query
        name: max-keys
        required: false
        schema:
          type: integer
        style: form
      - description: Limits the response to keys that begin with the specified prefix.
        explode: true
        in: query
        name: prefix
        required: false
        schema:
          type: string
        style: form
      - description: ContinuationToken indicates ArvanCloud S3 that the list is being
          continued on this bucket with a token. ContinuationToken is obfuscated and
          is not a real key.
        explode: true
        in: query
        name: continuation-token
        required: false
        schema:
          type: string
        style: form
      - description: "The owner field is not present in listV2 by default, if you\
          \ want to return owner field with each key in the result then set the fetch\
          \ owner field to true."
        explode: true
        in: query
        name: fetch-owner
        required: false
        schema:
          type: boolean
        style: form
      - description: StartAfter is where you want ArvanCloud S3 to start listing from.
          ArvanCloud S3 starts listing after this specified key. StartAfter can be
          any key in the bucket.
        explode: true
        in: query
        name: start-after
        required: false
        schema:
          type: string
        style: form
      - description: Confirms that the requester knows that she or he will be charged
          for the list objects request in V2 style. Bucket owners need not specify
          this parameter in their requests.
        explode: false
        in: header
        name: x-amz-request-payer
        required: false
        schema:
          description: "Confirms that the requester knows that they will be charged\
            \ for the request. Bucket owners need not specify this parameter in their\
            \ requests. For information about downloading objects from requester pays\
            \ buckets, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html\"\
            >Downloading Objects in Requestor Pays Buckets</a> in the <i>S3 User Guide</i>."
          enum:
          - requester
          type: string
        style: simple
      - description: "The account ID of the expected bucket owner. If the bucket is\
          \ owned by a different account, the request will fail with an HTTP <code>403\
          \ (Access Denied)</code> error."
        explode: false
        in: header
        name: x-amz-expected-bucket-owner
        required: false
        schema:
          type: string
        style: simple
      - description: Pagination limit
        explode: true
        in: query
        name: MaxKeys
        required: false
        schema:
          type: string
        style: form
      - description: Pagination token
        explode: true
        in: query
        name: ContinuationToken
        required: false
        schema:
          type: string
        style: form
      - explode: true
        in: query
        name: list-type
        required: true
        schema:
          enum:
          - "2"
          type: string
        style: form
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/ListObjectsV2Output'
          description: Success
        "480":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/NoSuchBucket'
          description: NoSuchBucket
      tags:
      - Bucket
  /{Bucket}/{Key}#partNumber&uploadId:
    put:
      description: "<p>Uploads a part in a multipart upload.</p> <note> <p>In this\
        \ operation, you provide part data in your request. However, you have an option\
        \ to specify your existing ArvanCloud S3 object as a data source for the part\
        \ you are uploading. To upload a part from an existing object, you use the\
        \ <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_UploadPartCopy.html\"\
        >UploadPartCopy</a> operation. </p> </note> <p>You must initiate a multipart\
        \ upload (see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateMultipartUpload.html\"\
        >CreateMultipartUpload</a>) before you can upload any part. In response to\
        \ your initiate request, ArvanCloud S3 returns an upload ID, a unique identifier,\
        \ that you must include in your upload part request.</p> <p>Part numbers can\
        \ be any number from 1 to 10,000, inclusive. A part number uniquely identifies\
        \ a part and also defines its position within the object being created. If\
        \ you upload a new part using the same part number that was used with a previous\
        \ part, the previously uploaded part is overwritten. Each part must be at\
        \ least 5 MB in size, except the last part. There is no size limit on the\
        \ last part of your multipart upload.</p> <p>To ensure that data is not corrupted\
        \ when traversing the network, specify the <code>Content-MD5</code> header\
        \ in the upload part request. ArvanCloud S3 checks the part data against the\
        \ provided MD5 value. If they do not match, ArvanCloud S3 returns an error.\
        \ </p> <p>If the upload request is signed with Signature Version 4, then Amazon\
        \ Web Services S3 uses the <code>x-amz-content-sha256</code> header as a checksum\
        \ instead of <code>Content-MD5</code>. For more information see <a href=\"\
        https://docs.aws.amazon.com/AmazonS3/latest/API/sigv4-auth-using-authorization-header.html\"\
        >Authenticating Requests: Using the Authorization Header (Amazon Web Services\
        \ Signature Version 4)</a>. </p> <p> <b>Note:</b> After you initiate multipart\
        \ upload and upload one or more parts, you must either complete or abort multipart\
        \ upload in order to stop getting charged for storage of the uploaded parts.\
        \ Only after you either complete or abort multipart upload, ArvanCloud S3\
        \ frees up the parts storage and stops charging you for the parts storage.</p>\
        \ <p>For more information on multipart uploads, go to <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/mpuoverview.html\"\
        >Multipart Upload Overview</a> in the <i>S3 User Guide </i>.</p> <p>For information\
        \ on the permissions required to use the multipart upload API, go to <a href=\"\
        https://docs.aws.amazon.com/AmazonS3/latest/dev/mpuAndPermissions.html\">Multipart\
        \ Upload and Permissions</a> in the <i>S3 User Guide</i>.</p> <p>You can optionally\
        \ request server-side encryption where ArvanCloud S3 encrypts your data as\
        \ it writes it to disks in its data centers and decrypts it for you when you\
        \ access it. You have the option of providing your own encryption key, or\
        \ you can use the Amazon Web Services managed encryption keys. If you choose\
        \ to provide your own encryption key, the request headers you provide in the\
        \ request must match the headers you used in the request to initiate the upload\
        \ by using <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateMultipartUpload.html\"\
        >CreateMultipartUpload</a>. For more information, go to <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingServerSideEncryption.html\"\
        >Using Server-Side Encryption</a> in the <i>S3 User Guide</i>.</p> <p>Server-side\
        \ encryption is supported by the S3 Multipart Upload actions. Unless you are\
        \ using a customer-provided encryption key, you don't need to specify the\
        \ encryption parameters in each UploadPart request. Instead, you only need\
        \ to specify the server-side encryption parameters in the initial Initiate\
        \ Multipart request. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateMultipartUpload.html\"\
        >CreateMultipartUpload</a>.</p> <p>If you requested server-side encryption\
        \ using a customer-provided encryption key in your initiate multipart upload\
        \ request, you must provide identical encryption information in each part\
        \ upload using the following headers.</p> <ul> <li> <p>x-amz-server-side-encryption-customer-algorithm</p>\
        \ </li> <li> <p>x-amz-server-side-encryption-customer-key</p> </li> <li> <p>x-amz-server-side-encryption-customer-key-MD5</p>\
        \ </li> </ul> <p class=\"title\"> <b>Special Errors</b> </p> <ul> <li> <ul>\
        \ <li> <p> <i>Code: NoSuchUpload</i> </p> </li> <li> <p> <i>Cause: The specified\
        \ multipart upload does not exist. The upload ID might be invalid, or the\
        \ multipart upload might have been aborted or completed.</i> </p> </li> <li>\
        \ <p> <i> HTTP Status Code: 404 Not Found </i> </p> </li> <li> <p> <i>SOAP\
        \ Fault Code Prefix: Client</i> </p> </li> </ul> </li> </ul> <p class=\"title\"\
        > <b>Related Resources</b> </p> <ul> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_CreateMultipartUpload.html\"\
        >CreateMultipartUpload</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_CompleteMultipartUpload.html\"\
        >CompleteMultipartUpload</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_AbortMultipartUpload.html\"\
        >AbortMultipartUpload</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListParts.html\"\
        >ListParts</a> </p> </li> <li> <p> <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/API_ListMultipartUploads.html\"\
        >ListMultipartUploads</a> </p> </li> </ul>"
      operationId: UploadPart
      parameters:
      - description: This parameter is currently not supported and is not required.
        explode: false
        in: header
        name: x-amz-security-token
        required: false
        schema:
          type: string
        style: simple
      - description: <p>The name of the bucket to which the multipart upload was initiated.</p>
          </p>
        explode: false
        in: path
        name: Bucket
        required: true
        schema:
          type: string
        style: simple
      - description: Size of the body in bytes. This parameter is useful when the
          size of the body cannot be determined automatically.
        explode: false
        in: header
        name: Content-Length
        required: false
        schema:
          type: integer
        style: simple
      - description: The base64-encoded 128-bit MD5 digest of the part data. This
          parameter is auto-populated when using the command from the CLI. This parameter
          is required if object lock parameters are specified.
        explode: false
        in: header
        name: Content-MD5
        required: false
        schema:
          type: string
        style: simple
      - description: Object key for which the multipart upload was initiated.
        explode: false
        in: path
        name: Key
        required: true
        schema:
          minLength: 1
          type: string
        style: simple
      - description: "Part number of part being uploaded. This is a positive integer\
          \ between 1 and 10,000."
        explode: true
        in: query
        name: partNumber
        required: true
        schema:
          type: integer
        style: form
      - description: Upload ID identifying the multipart upload whose part is being
          uploaded.
        explode: true
        in: query
        name: uploadId
        required: true
        schema:
          type: string
        style: form
      - description: "Specifies the algorithm to use to when encrypting the object\
          \ (for example, AES256)."
        explode: false
        in: header
        name: x-amz-server-side-encryption-customer-algorithm
        required: false
        schema:
          type: string
        style: simple
      - description: Specifies the customer-provided encryption key for ArvanCloud
          S3 to use in encrypting data. This value is used to store the object and
          then it is discarded; ArvanCloud S3 does not store the encryption key. The
          key must be appropriate for use with the algorithm specified in the <code>x-amz-server-side-encryption-customer-algorithm
          header</code>. This must be the same encryption key specified in the initiate
          multipart upload request.
        explode: false
        in: header
        name: x-amz-server-side-encryption-customer-key
        required: false
        schema:
          format: password
          type: string
        style: simple
      - description: Specifies the 128-bit MD5 digest of the encryption key according
          to RFC 1321. ArvanCloud S3 uses this header for a message integrity check
          to ensure that the encryption key was transmitted without error.
        explode: false
        in: header
        name: x-amz-server-side-encryption-customer-key-MD5
        required: false
        schema:
          type: string
        style: simple
      - description: ""
        explode: false
        in: header
        name: x-amz-request-payer
        required: false
        schema:
          description: "Confirms that the requester knows that they will be charged\
            \ for the request. Bucket owners need not specify this parameter in their\
            \ requests. For information about downloading objects from requester pays\
            \ buckets, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html\"\
            >Downloading Objects in Requestor Pays Buckets</a> in the <i>S3 User Guide</i>."
          enum:
          - requester
          type: string
        style: simple
      - description: "The account ID of the expected bucket owner. If the bucket is\
          \ owned by a different account, the request will fail with an HTTP <code>403\
          \ (Access Denied)</code> error."
        explode: false
        in: header
        name: x-amz-expected-bucket-owner
        required: false
        schema:
          type: string
        style: simple
      requestBody:
        content:
          text/xml:
            schema:
              $ref: '#/components/schemas/UploadPart_request'
        required: true
      responses:
        "200":
          content:
            text/xml:
              schema:
                $ref: '#/components/schemas/UploadPartOutput'
          description: Success
      tags:
      - Multipart
components:
  parameters:
    x-amz-security-token:
      description: This parameter is currently not supported and is not required.
      explode: false
      in: header
      name: x-amz-security-token
      required: false
      schema:
        type: string
      style: simple
  schemas:
    AbortMultipartUploadOutput:
      example: {}
      properties: {}
      type: object
    NoSuchUpload: {}
    CompleteMultipartUploadOutput:
      example:
        Bucket: acexamplebucket
        ETag: '"4d9031c7644d8081c2829f4ea23c55f7-2"'
        Key: bigobject
        Location: https://examplebucket.s3.<Region>.arvanstorage.com/bigobject
      properties:
        Location:
          allOf:
          - $ref: '#/components/schemas/Location'
          - description: The URI that identifies the newly created object.
        Bucket:
          allOf:
          - $ref: '#/components/schemas/BucketName'
          - description: '<p>The name of the bucket that contains the newly created
              object. '
        Key:
          allOf:
          - $ref: '#/components/schemas/ObjectKey'
          - description: The object key of the newly created object.
        ETag:
          allOf:
          - $ref: '#/components/schemas/ETag'
          - description: "Entity tag that identifies the newly created object's data.\
              \ Objects with different object data will have different entity tags.\
              \ The entity tag is an opaque string. The entity tag may or may not\
              \ be an MD5 digest of the object data. If the entity tag is not an MD5\
              \ digest of the object data, it will contain one or more nonhexadecimal\
              \ characters and/or will consist of less than 32 or more than 32 hexadecimal\
              \ digits."
      type: object
    CompletedPartList:
      items:
        $ref: '#/components/schemas/CompletedPart'
      type: array
      xml:
        wrapped: false
    CopyObjectOutput:
      example:
        CopyObjectResult:
          ETag: '"6805f2cfc46c0f04559748bb039d69ae"'
          LastModified: 2016-12-15T17:38:53.000Z
      properties:
        CopyObjectResult:
          $ref: '#/components/schemas/CopyObjectOutput_CopyObjectResult'
      type: object
    MetadataValue:
      type: string
    CreateBucketOutput:
      example:
        Location: https://examplebucket.s3.<Region>.arvanstorage.com/
      properties: {}
      type: object
    BucketLocationConstraint:
      enum:
      - ir-thr-at1
      - ir-tbz-sh1
      type: string
    BucketAlreadyExists: {}
    BucketAlreadyOwnedByYou: {}
    CreateMultipartUploadOutput:
      example:
        Bucket: examplebucket
        Key: largeobject
        UploadId: ibZBv_75gd9r8lH_gqXatLdxMVpAlj6ZQjEs.OwyF3953YdwbcQnMA2BLGn8Lx12fQNICtMw5KyteFeHw.Sjng--
      properties:
        Bucket:
          allOf:
          - $ref: '#/components/schemas/BucketName'
          - description: '<p>The name of the bucket to which the multipart upload
              was initiated. '
        Key:
          allOf:
          - $ref: '#/components/schemas/ObjectKey'
          - description: Object key for which the multipart upload was initiated.
        UploadId:
          allOf:
          - $ref: '#/components/schemas/MultipartUploadId'
          - description: ID for the initiated multipart upload.
      type: object
    DeleteObjectOutput:
      example: {}
      properties: {}
      type: object
    DeleteObjectTaggingOutput:
      example:
        VersionId: "null"
      properties: {}
      type: object
    DeleteObjectsOutput:
      example:
        Deleted:
        - DeleteMarker: "true"
          DeleteMarkerVersionId: A._w1z6EFiCF5uhtQMDal9JDkID9tQ7F
          Key: objectkey1
        - DeleteMarker: "true"
          DeleteMarkerVersionId: iOd_ORxhkKe_e8G8_oSGxt2PjsCZKlkt
          Key: objectkey2
      properties:
        Deleted:
          allOf:
          - $ref: '#/components/schemas/DeletedObjects'
          - description: Container element for a successful delete. It identifies
              the object that was successfully deleted.
        Errors:
          allOf:
          - $ref: '#/components/schemas/Errors'
          - description: Container for a failed delete action that describes the object
              that ArvanCloud S3 attempted to delete and the error it encountered.
            xml:
              name: Error
      type: object
    ObjectIdentifierList:
      items:
        $ref: '#/components/schemas/ObjectIdentifier'
      type: array
      xml:
        wrapped: false
    Quiet:
      type: boolean
    GetBucketAclOutput:
      properties:
        Owner:
          allOf:
          - $ref: '#/components/schemas/Owner'
          - description: Container for the bucket owner's display name and ID.
        Grants:
          allOf:
          - $ref: '#/components/schemas/Grants'
          - description: A list of grants.
            xml:
              name: AccessControlList
      type: object
    GetBucketCorsOutput:
      example:
        CORSRules:
        - AllowedHeaders:
          - Authorization
          AllowedMethods:
          - GET
          AllowedOrigins:
          - '*'
          MaxAgeSeconds: 3000
      properties:
        CORSRules:
          allOf:
          - $ref: '#/components/schemas/CORSRules'
          - description: A set of origins and methods (cross-origin access that you
              want to allow). You can add up to 100 rules to the configuration.
            xml:
              name: CORSRule
      type: object
    GetBucketLifecycleOutput:
      example:
        Rules:
        - Expiration:
            Days: 1
          ID: delete logs
          Prefix: 123/
          Status: Enabled
      properties:
        Rules:
          allOf:
          - $ref: '#/components/schemas/Rules'
          - description: Container for a lifecycle rule.
            xml:
              name: Rule
      type: object
    GetBucketLifecycleConfigurationOutput:
      example:
        Rules:
        - ID: Rule for TaxDocs/
          Prefix: TaxDocs
          Status: Enabled
          Transitions:
          - Days: 365
            StorageClass: STANDARD_IA
      properties:
        Rules:
          allOf:
          - $ref: '#/components/schemas/LifecycleRules'
          - description: Container for a lifecycle rule.
            xml:
              name: Rule
      type: object
    GetBucketPolicyOutput:
      example:
        Policy: "{\"Version\":\"2008-10-17\",\"Id\":\"LogPolicy\",\"Statement\":[{\"\
          Sid\":\"Enables the log delivery group to publish logs to your bucket \"\
          ,\"Effect\":\"Allow\",\"Principal\":{\"AWS\":\"111122223333\"},\"Action\"\
          :[\"s3:GetBucketAcl\",\"s3:GetObjectAcl\",\"s3:PutObject\"],\"Resource\"\
          :[\"arn:aws:s3:::policytest1/*\",\"arn:aws:s3:::policytest1\"]}]}"
      properties:
        Policy:
          allOf:
          - $ref: '#/components/schemas/Policy'
          - description: The bucket policy as a JSON document.
      type: object
    GetBucketPolicyStatusOutput:
      properties:
        PolicyStatus:
          $ref: '#/components/schemas/GetBucketPolicyStatusOutput_PolicyStatus'
      type: object
    GetBucketTaggingOutput:
      example:
        TagSet:
        - Key: key1
          Value: value1
        - Key: key2
          Value: value2
      properties:
        TagSet:
          allOf:
          - $ref: '#/components/schemas/TagSet'
          - description: Contains the tag set.
      required:
      - TagSet
      type: object
    GetBucketVersioningOutput:
      example:
        MFADelete: Disabled
        Status: Enabled
      properties:
        Status:
          allOf:
          - $ref: '#/components/schemas/BucketVersioningStatus'
          - description: The versioning state of the bucket.
        MFADelete:
          allOf:
          - $ref: '#/components/schemas/MFADeleteStatus'
          - description: "Specifies whether MFA delete is enabled in the bucket versioning\
              \ configuration. This element is only returned if the bucket has been\
              \ configured with MFA delete. If the bucket has never been so configured,\
              \ this element is not returned."
            xml:
              name: MfaDelete
      type: object
    GetBucketWebsiteOutput:
      example:
        ErrorDocument:
          Key: error.html
        IndexDocument:
          Suffix: index.html
      properties:
        RedirectAllRequestsTo:
          $ref: '#/components/schemas/GetBucketWebsiteOutput_RedirectAllRequestsTo'
        IndexDocument:
          $ref: '#/components/schemas/GetBucketWebsiteOutput_IndexDocument'
        ErrorDocument:
          $ref: '#/components/schemas/GetBucketWebsiteOutput_ErrorDocument'
        RoutingRules:
          allOf:
          - $ref: '#/components/schemas/RoutingRules'
          - description: Rules that define when a redirect is applied and the redirect
              behavior.
      type: object
    GetObjectOutput:
      example:
        AcceptRanges: bytes
        ContentLength: "10"
        ContentRange: bytes 0-9/43
        ContentType: text/plain
        ETag: '"0d94420ffd0bc68cd3d152506b97a9cc"'
        LastModified: "Thu, 09 Oct 2014 22:57:28 GMT"
        Metadata: {}
        VersionId: "null"
      properties:
        Body:
          allOf:
          - $ref: '#/components/schemas/Body'
          - description: Object data.
        Metadata:
          allOf:
          - $ref: '#/components/schemas/Metadata'
          - description: A map of metadata to store with the object in S3.
            xml:
              name: x-amz-meta-
      type: object
    NoSuchKey: {}
    InvalidObjectState: {}
    GetObjectAclOutput:
      example:
        Grants:
        - Grantee:
            DisplayName: owner-display-name
            ID: examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc
            Type: CanonicalUser
          Permission: WRITE
        - Grantee:
            DisplayName: owner-display-name
            ID: examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc
            Type: CanonicalUser
          Permission: WRITE_ACP
        - Grantee:
            DisplayName: owner-display-name
            ID: examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc
            Type: CanonicalUser
          Permission: READ
        - Grantee:
            DisplayName: owner-display-name
            ID: 852b113eexamplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc
            Type: CanonicalUser
          Permission: READ_ACP
        Owner:
          DisplayName: owner-display-name
          ID: examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc
      properties:
        Owner:
          allOf:
          - $ref: '#/components/schemas/Owner'
          - description: ' Container for the bucket owner''s display name and ID.'
        Grants:
          allOf:
          - $ref: '#/components/schemas/Grants'
          - description: A list of grants.
            xml:
              name: AccessControlList
      type: object
    GetObjectTaggingOutput:
      example:
        TagSet:
        - Key: Key4
          Value: Value4
        - Key: Key3
          Value: Value3
        VersionId: "null"
      properties:
        TagSet:
          allOf:
          - $ref: '#/components/schemas/TagSet'
          - description: Contains the tag set.
      required:
      - TagSet
      type: object
    NoSuchBucket: {}
    HeadObjectOutput:
      example:
        AcceptRanges: bytes
        ContentLength: "3191"
        ContentType: image/jpeg
        ETag: '"6805f2cfc46c0f04559748bb039d69ae"'
        LastModified: "Thu, 15 Dec 2016 01:19:41 GMT"
        Metadata: {}
        VersionId: "null"
      properties:
        Metadata:
          allOf:
          - $ref: '#/components/schemas/Metadata'
          - description: A map of metadata to store with the object in S3.
            xml:
              name: x-amz-meta-
      type: object
    ListBucketsOutput:
      example:
        Buckets:
        - CreationDate: "2012-02-15T21: 03: 02.000Z"
          Name: examplebucket
        - CreationDate: "2011-07-24T19: 33: 50.000Z"
          Name: examplebucket2
        - CreationDate: "2010-12-17T00: 56: 49.000Z"
          Name: examplebucket3
        Owner:
          DisplayName: own-display-name
          ID: examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31
      properties:
        Buckets:
          allOf:
          - $ref: '#/components/schemas/Buckets'
          - description: The list of buckets owned by the requestor.
        Owner:
          allOf:
          - $ref: '#/components/schemas/Owner'
          - description: The owner of the buckets listed.
      type: object
    ListMultipartUploadsOutput:
      example:
        Bucket: acl1
        IsTruncated: true
        KeyMarker: ""
        MaxUploads: "2"
        NextKeyMarker: someobjectkey
        NextUploadIdMarker: examplelo91lv1iwvWpvCiJWugw2xXLPAD7Z8cJyX9.WiIRgNrdG6Ldsn.9FtS63TCl1Uf5faTB.1U5Ckcbmdw--
        UploadIdMarker: ""
        Uploads:
        - Initiated: 2014-05-01T05:40:58.000Z
          Initiator:
            DisplayName: ownder-display-name
            ID: examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc
          Key: JavaFile
          Owner:
            DisplayName: mohanataws
            ID: 852b113e7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc
          StorageClass: STANDARD
          UploadId: gZ30jIqlUa.CInXklLQtSMJITdUnoZ1Y5GACB5UckOtspm5zbDMCkPF_qkfZzMiFZ6dksmcnqxJyIBvQMG9X9Q--
        - Initiated: 2014-05-01T05:41:27.000Z
          Initiator:
            DisplayName: ownder-display-name
            ID: examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc
          Key: JavaFile
          Owner:
            DisplayName: ownder-display-name
            ID: examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc
          StorageClass: STANDARD
          UploadId: b7tZSqIlo91lv1iwvWpvCiJWugw2xXLPAD7Z8cJyX9.WiIRgNrdG6Ldsn.9FtS63TCl1Uf5faTB.1U5Ckcbmdw--
      properties:
        Bucket:
          allOf:
          - $ref: '#/components/schemas/BucketName'
          - description: The name of the bucket to which the multipart upload was
              initiated. Does not return the access point ARN or access point alias
              if used.
        KeyMarker:
          allOf:
          - $ref: '#/components/schemas/KeyMarker'
          - description: The key at or after which the listing began.
        UploadIdMarker:
          allOf:
          - $ref: '#/components/schemas/UploadIdMarker'
          - description: Upload ID after which listing began.
        NextKeyMarker:
          allOf:
          - $ref: '#/components/schemas/NextKeyMarker'
          - description: "When a list is truncated, this element specifies the value\
              \ that should be used for the key-marker request parameter in a subsequent\
              \ request."
        Prefix:
          allOf:
          - $ref: '#/components/schemas/Prefix'
          - description: "When a prefix is provided in the request, this field contains\
              \ the specified prefix. The result contains only keys starting with\
              \ the specified prefix."
        Delimiter:
          allOf:
          - $ref: '#/components/schemas/Delimiter'
          - description: "Contains the delimiter you specified in the request. If\
              \ you don't specify a delimiter in your request, this element is absent\
              \ from the response."
        NextUploadIdMarker:
          allOf:
          - $ref: '#/components/schemas/NextUploadIdMarker'
          - description: "When a list is truncated, this element specifies the value\
              \ that should be used for the <code>upload-id-marker</code> request\
              \ parameter in a subsequent request."
        MaxUploads:
          allOf:
          - $ref: '#/components/schemas/MaxUploads'
          - description: Maximum number of multipart uploads that could have been
              included in the response.
        IsTruncated:
          allOf:
          - $ref: '#/components/schemas/IsTruncated'
          - description: Indicates whether the returned list of multipart uploads
              is truncated. A value of true indicates that the list was truncated.
              The list can be truncated if the number of multipart uploads exceeds
              the limit allowed or specified by max uploads.
        Uploads:
          allOf:
          - $ref: '#/components/schemas/MultipartUploadList'
          - description: Container for elements related to a particular multipart
              upload. A response can contain zero or more <code>Upload</code> elements.
            xml:
              name: Upload
        CommonPrefixes:
          allOf:
          - $ref: '#/components/schemas/CommonPrefixList'
          - description: "If you specify a delimiter in the request, then the result\
              \ returns each distinct key prefix containing the delimiter in a <code>CommonPrefixes</code>\
              \ element. The distinct key prefixes are returned in the <code>Prefix</code>\
              \ child element."
        EncodingType:
          allOf:
          - $ref: '#/components/schemas/EncodingType'
          - description: "<p>Encoding type used by ArvanCloud S3 to encode object\
              \ keys in the response.</p> <p>If you specify <code>encoding-type</code>\
              \ request parameter, ArvanCloud S3 includes this element in the response,\
              \ and returns encoded key name values in the following response elements:</p>\
              \ <p> <code>Delimiter</code>, <code>KeyMarker</code>, <code>Prefix</code>,\
              \ <code>NextKeyMarker</code>, <code>Key</code>.</p>"
      type: object
    ListObjectVersionsOutput:
      example:
        Versions:
        - ETag: '"6805f2cfc46c0f04559748bb039d69ae"'
          IsLatest: true
          Key: HappyFace.jpg
          LastModified: 2016-12-15T01:19:41.000Z
          Owner:
            DisplayName: owner-display-name
            ID: examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc
          Size: 3191
          StorageClass: STANDARD
          VersionId: "null"
        - ETag: '"6805f2cfc46c0f04559748bb039d69ae"'
          IsLatest: false
          Key: HappyFace.jpg
          LastModified: 2016-12-13T00:58:26.000Z
          Owner:
            DisplayName: owner-display-name
            ID: examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc
          Size: 3191
          StorageClass: STANDARD
          VersionId: PHtexPGjH2y.zBgT8LmB7wwLI2mpbz.k
      properties:
        IsTruncated:
          allOf:
          - $ref: '#/components/schemas/IsTruncated'
          - description: "A flag that indicates whether ArvanCloud S3 returned all\
              \ of the results that satisfied the search criteria. If your results\
              \ were truncated, you can make a follow-up paginated request using the\
              \ NextKeyMarker and NextVersionIdMarker response parameters as a starting\
              \ place in another request to return the rest of the results."
        KeyMarker:
          allOf:
          - $ref: '#/components/schemas/KeyMarker'
          - description: Marks the last key returned in a truncated response.
        VersionIdMarker:
          allOf:
          - $ref: '#/components/schemas/VersionIdMarker'
          - description: Marks the last version of the key returned in a truncated
              response.
        NextKeyMarker:
          allOf:
          - $ref: '#/components/schemas/NextKeyMarker'
          - description: "When the number of responses exceeds the value of <code>MaxKeys</code>,\
              \ <code>NextKeyMarker</code> specifies the first key not returned that\
              \ satisfies the search criteria. Use this value for the key-marker request\
              \ parameter in a subsequent request."
        NextVersionIdMarker:
          allOf:
          - $ref: '#/components/schemas/NextVersionIdMarker'
          - description: "When the number of responses exceeds the value of <code>MaxKeys</code>,\
              \ <code>NextVersionIdMarker</code> specifies the first object version\
              \ not returned that satisfies the search criteria. Use this value for\
              \ the version-id-marker request parameter in a subsequent request."
        Versions:
          allOf:
          - $ref: '#/components/schemas/ObjectVersionList'
          - description: Container for version information.
            xml:
              name: Version
        DeleteMarkers:
          allOf:
          - $ref: '#/components/schemas/DeleteMarkers'
          - description: Container for an object that is a delete marker.
            xml:
              name: DeleteMarker
        Name:
          allOf:
          - $ref: '#/components/schemas/BucketName'
          - description: The bucket name.
        Prefix:
          allOf:
          - $ref: '#/components/schemas/Prefix'
          - description: Selects objects that start with the value supplied by this
              parameter.
        Delimiter:
          allOf:
          - $ref: '#/components/schemas/Delimiter'
          - description: The delimiter grouping the included keys. A delimiter is
              a character that you specify to group keys. All keys that contain the
              same string between the prefix and the first occurrence of the delimiter
              are grouped under a single result element in <code>CommonPrefixes</code>.
              These groups are counted as one result against the max-keys limitation.
              These keys are not returned elsewhere in the response.
        MaxKeys:
          allOf:
          - $ref: '#/components/schemas/MaxKeys'
          - description: Specifies the maximum number of objects to return.
        CommonPrefixes:
          allOf:
          - $ref: '#/components/schemas/CommonPrefixList'
          - description: All of the keys rolled up into a common prefix count as a
              single return when calculating the number of returns.
        EncodingType:
          allOf:
          - $ref: '#/components/schemas/EncodingType'
          - description: "<p> Encoding type used by ArvanCloud S3 to encode object\
              \ key names in the XML response.</p> <p>If you specify encoding-type\
              \ request parameter, ArvanCloud S3 includes this element in the response,\
              \ and returns encoded key name values in the following response elements:</p>\
              \ <p> <code>KeyMarker, NextKeyMarker, Prefix, Key</code>, and <code>Delimiter</code>.</p>"
      type: object
    ListObjectsOutput:
      example:
        Contents:
        - ETag: '"70ee1738b6b21e2c8a43f3a5ab0eee71"'
          Key: example1.jpg
          LastModified: 2014-11-21T19:40:05.000Z
          Owner:
            DisplayName: myname
            ID: 12345example25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc
          Size: 11
          StorageClass: STANDARD
        - ETag: '"9c8af9a76df052144598c115ef33e511"'
          Key: example2.jpg
          LastModified: 2013-11-15T01:10:49.000Z
          Owner:
            DisplayName: myname
            ID: 12345example25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc
          Size: 713193
          StorageClass: STANDARD
        NextMarker: eyJNYXJrZXIiOiBudWxsLCAiYm90b190cnVuY2F0ZV9hbW91bnQiOiAyfQ==
      properties:
        IsTruncated:
          allOf:
          - $ref: '#/components/schemas/IsTruncated'
          - description: A flag that indicates whether ArvanCloud S3 returned all
              of the results that satisfied the search criteria.
        Marker:
          allOf:
          - $ref: '#/components/schemas/Marker'
          - description: Indicates where in the bucket listing begins. Marker is included
              in the response if it was sent with the request.
        NextMarker:
          allOf:
          - $ref: '#/components/schemas/NextMarker'
          - description: "When response is truncated (the IsTruncated element value\
              \ in the response is true), you can use the key name in this field as\
              \ marker in the subsequent request to get next set of objects. ArvanCloud\
              \ S3 lists objects in alphabetical order Note: This element is returned\
              \ only if you have delimiter request parameter specified. If response\
              \ does not include the NextMarker and it is truncated, you can use the\
              \ value of the last Key in the response as the marker in the subsequent\
              \ request to get the next set of object keys."
        Contents:
          allOf:
          - $ref: '#/components/schemas/ObjectList'
          - description: Metadata about each object returned.
        Name:
          allOf:
          - $ref: '#/components/schemas/BucketName'
          - description: The bucket name.
        Prefix:
          allOf:
          - $ref: '#/components/schemas/Prefix'
          - description: Keys that begin with the indicated prefix.
        Delimiter:
          allOf:
          - $ref: '#/components/schemas/Delimiter'
          - description: Causes keys that contain the same string between the prefix
              and the first occurrence of the delimiter to be rolled up into a single
              result element in the <code>CommonPrefixes</code> collection. These
              rolled-up keys are not returned elsewhere in the response. Each rolled-up
              result counts as only one return against the <code>MaxKeys</code> value.
        MaxKeys:
          allOf:
          - $ref: '#/components/schemas/MaxKeys'
          - description: The maximum number of keys returned in the response body.
        CommonPrefixes:
          allOf:
          - $ref: '#/components/schemas/CommonPrefixList'
          - description: "<p>All of the keys (up to 1,000) rolled up in a common prefix\
              \ count as a single return when calculating the number of returns. </p>\
              \ <p>A response can contain CommonPrefixes only if you specify a delimiter.</p>\
              \ <p>CommonPrefixes contains all (if there are any) keys between Prefix\
              \ and the next occurrence of the string specified by the delimiter.</p>\
              \ <p> CommonPrefixes lists keys that act like subdirectories in the\
              \ directory specified by Prefix.</p> <p>For example, if the prefix is\
              \ notes/ and the delimiter is a slash (/) as in notes/summer/july, the\
              \ common prefix is notes/summer/. All of the keys that roll up into\
              \ a common prefix count as a single return when calculating the number\
              \ of returns.</p>"
        EncodingType:
          allOf:
          - $ref: '#/components/schemas/EncodingType'
          - description: Encoding type used by ArvanCloud S3 to encode object keys
              in the response.
      type: object
    ListObjectsV2Output:
      example:
        Contents:
        - ETag: '"70ee1738b6b21e2c8a43f3a5ab0eee71"'
          Key: happyface.jpg
          LastModified: 2014-11-21T19:40:05.000Z
          Size: 11
          StorageClass: STANDARD
        - ETag: '"becf17f89c30367a9a44495d62ed521a-1"'
          Key: test.jpg
          LastModified: 2014-05-02T04:51:50.000Z
          Size: 4192256
          StorageClass: STANDARD
        IsTruncated: true
        KeyCount: "2"
        MaxKeys: "2"
        Name: examplebucket
        NextContinuationToken: 1w41l63U0xa8q7smH50vCxyTQqdxo69O3EmK28Bi5PcROI4wI/EyIJg==
        Prefix: ""
      properties:
        IsTruncated:
          allOf:
          - $ref: '#/components/schemas/IsTruncated'
          - description: "Set to false if all of the results were returned. Set to\
              \ true if more keys are available to return. If the number of results\
              \ exceeds that specified by MaxKeys, all of the results might not be\
              \ returned."
        Contents:
          allOf:
          - $ref: '#/components/schemas/ObjectList'
          - description: Metadata about each object returned.
        Name:
          allOf:
          - $ref: '#/components/schemas/BucketName'
          - description: <p>The bucket name.</p> <p>
        Prefix:
          allOf:
          - $ref: '#/components/schemas/Prefix'
          - description: ' Keys that begin with the indicated prefix.'
        Delimiter:
          allOf:
          - $ref: '#/components/schemas/Delimiter'
          - description: Causes keys that contain the same string between the prefix
              and the first occurrence of the delimiter to be rolled up into a single
              result element in the CommonPrefixes collection. These rolled-up keys
              are not returned elsewhere in the response. Each rolled-up result counts
              as only one return against the <code>MaxKeys</code> value.
        MaxKeys:
          allOf:
          - $ref: '#/components/schemas/MaxKeys'
          - description: "Sets the maximum number of keys returned in the response.\
              \ By default the action returns up to 1,000 key names. The response\
              \ might contain fewer keys but will never contain more."
        CommonPrefixes:
          allOf:
          - $ref: '#/components/schemas/CommonPrefixList'
          - description: "<p>All of the keys (up to 1,000) rolled up into a common\
              \ prefix count as a single return when calculating the number of returns.</p>\
              \ <p>A response can contain <code>CommonPrefixes</code> only if you\
              \ specify a delimiter.</p> <p> <code>CommonPrefixes</code> contains\
              \ all (if there are any) keys between <code>Prefix</code> and the next\
              \ occurrence of the string specified by a delimiter.</p> <p> <code>CommonPrefixes</code>\
              \ lists keys that act like subdirectories in the directory specified\
              \ by <code>Prefix</code>.</p> <p>For example, if the prefix is <code>notes/</code>\
              \ and the delimiter is a slash (<code>/</code>) as in <code>notes/summer/july</code>,\
              \ the common prefix is <code>notes/summer/</code>. All of the keys that\
              \ roll up into a common prefix count as a single return when calculating\
              \ the number of returns. </p>"
        EncodingType:
          allOf:
          - $ref: '#/components/schemas/EncodingType'
          - description: "<p>Encoding type used by ArvanCloud S3 to encode object\
              \ key names in the XML response.</p> <p>If you specify the encoding-type\
              \ request parameter, ArvanCloud S3 includes this element in the response,\
              \ and returns encoded key name values in the following response elements:</p>\
              \ <p> <code>Delimiter, Prefix, Key,</code> and <code>StartAfter</code>.</p>"
        KeyCount:
          allOf:
          - $ref: '#/components/schemas/KeyCount'
          - description: "KeyCount is the number of keys returned with this request.\
              \ KeyCount will always be less than or equals to MaxKeys field. Say\
              \ you ask for 50 keys, your result will include less than equals 50\
              \ keys "
        ContinuationToken:
          allOf:
          - $ref: '#/components/schemas/Token'
          - description: " If ContinuationToken was sent with the request, it is included\
              \ in the response."
        NextContinuationToken:
          allOf:
          - $ref: '#/components/schemas/NextToken'
          - description: " <code>NextContinuationToken</code> is sent when <code>isTruncated</code>\
              \ is true, which means there are more keys in the bucket that can be\
              \ listed. The next list requests to ArvanCloud S3 can be continued with\
              \ this <code>NextContinuationToken</code>. <code>NextContinuationToken</code>\
              \ is obfuscated and is not a real key"
        StartAfter:
          allOf:
          - $ref: '#/components/schemas/StartAfter'
          - description: "If StartAfter was sent with the request, it is included\
              \ in the response."
      type: object
    ListPartsOutput:
      example:
        Initiator:
          DisplayName: owner-display-name
          ID: examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc
        Owner:
          DisplayName: owner-display-name
          ID: examplee7a2f25102679df27bb0ae12b3f85be6f290b936c4393484be31bebcc
        Parts:
        - ETag: '"d8c2eafd90c266e19ab9dcacc479f8af"'
          LastModified: 2016-12-16T00:11:42.000Z
          PartNumber: "1"
          Size: 26246026
        - ETag: '"d8c2eafd90c266e19ab9dcacc479f8af"'
          LastModified: 2016-12-16T00:15:01.000Z
          PartNumber: "2"
          Size: 26246026
        StorageClass: STANDARD
      properties:
        Bucket:
          allOf:
          - $ref: '#/components/schemas/BucketName'
          - description: The name of the bucket to which the multipart upload was
              initiated. Does not return the access point ARN or access point alias
              if used.
        Key:
          allOf:
          - $ref: '#/components/schemas/ObjectKey'
          - description: Object key for which the multipart upload was initiated.
        UploadId:
          allOf:
          - $ref: '#/components/schemas/MultipartUploadId'
          - description: Upload ID identifying the multipart upload whose parts are
              being listed.
        PartNumberMarker:
          allOf:
          - $ref: '#/components/schemas/PartNumberMarker'
          - description: "When a list is truncated, this element specifies the last\
              \ part in the list, as well as the value to use for the part-number-marker\
              \ request parameter in a subsequent request."
        NextPartNumberMarker:
          allOf:
          - $ref: '#/components/schemas/NextPartNumberMarker'
          - description: "When a list is truncated, this element specifies the last\
              \ part in the list, as well as the value to use for the part-number-marker\
              \ request parameter in a subsequent request."
        MaxParts:
          allOf:
          - $ref: '#/components/schemas/MaxParts'
          - description: Maximum number of parts that were allowed in the response.
        IsTruncated:
          allOf:
          - $ref: '#/components/schemas/IsTruncated'
          - description: ' Indicates whether the returned list of parts is truncated.
              A true value indicates that the list was truncated. A list can be truncated
              if the number of parts exceeds the limit returned in the MaxParts element.'
        Parts:
          allOf:
          - $ref: '#/components/schemas/Parts'
          - description: ' Container for elements related to a particular part. A
              response can contain zero or more <code>Part</code> elements.'
            xml:
              name: Part
        Initiator:
          $ref: '#/components/schemas/ListPartsOutput_Initiator'
        Owner:
          allOf:
          - $ref: '#/components/schemas/Owner'
          - description: " Container element that identifies the object owner, after\
              \ the object is created. If multipart upload is initiated by an IAM\
              \ user, this element provides the parent account ID and display name."
        StorageClass:
          allOf:
          - $ref: '#/components/schemas/StorageClass'
          - description: Class of storage (STANDARD or REDUCED_REDUNDANCY) used to
              store the uploaded object.
      type: object
    CORSRules:
      items:
        $ref: '#/components/schemas/CORSRule'
      type: array
      xml:
        wrapped: false
    ServerSideEncryptionRules:
      items:
        $ref: '#/components/schemas/ServerSideEncryptionRule'
      type: array
      xml:
        wrapped: false
    LifecycleRules:
      items:
        $ref: '#/components/schemas/LifecycleRule'
      type: array
      xml:
        wrapped: false
    TagSet:
      items:
        $ref: '#/components/schemas/TagSet_inner'
      type: array
    MFADelete:
      enum:
      - Enabled
      - Disabled
      type: string
    BucketVersioningStatus:
      enum:
      - Enabled
      - Suspended
      type: string
    ErrorDocument:
      description: The error information.
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/ObjectKey'
          - description: <p>The object key name to use when a 4XX class error occurs.</p>
              <important> <p>Replacement must be made for object keys containing special
              characters (such as carriage returns) when using XML requests.
      required:
      - Key
      type: object
    IndexDocument:
      description: Container for the <code>Suffix</code> element.
      properties:
        Suffix:
          allOf:
          - $ref: '#/components/schemas/Suffix'
          - description: "<p>A suffix that is appended to a request that is for a\
              \ directory on the website endpoint (for example,if the suffix is index.html\
              \ and you make a request to samplebucket/images/ the data that is returned\
              \ will be for the object with the key name images/index.html) The suffix\
              \ must not be empty and must not include a slash character.</p> <important>\
              \ <p>Replacement must be made for object keys containing special characters\
              \ (such as carriage returns) when using XML requests. For more information,\
              \ see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints\"\
              > XML related object key constraints</a>.</p> </important>"
      required:
      - Suffix
      type: object
    RedirectAllRequestsTo:
      description: Specifies the redirect behavior of all requests to a website endpoint
        of an ArvanCloud S3 bucket.
      properties:
        HostName:
          allOf:
          - $ref: '#/components/schemas/HostName'
          - description: Name of the host where requests are redirected.
        Protocol:
          allOf:
          - $ref: '#/components/schemas/Protocol'
          - description: Protocol to use when redirecting requests. The default is
              the protocol that is used in the original request.
      required:
      - HostName
      type: object
    RoutingRules:
      items:
        $ref: '#/components/schemas/RoutingRules_inner'
      type: array
    PutObjectOutput:
      example:
        ETag: '"6805f2cfc46c0f04559748bb039d69ae"'
        VersionId: pSKidl4pHBiNwukdbcPXAIs.sshFFOc0
      properties: {}
      type: object
    PutObjectAclOutput:
      example: {}
      properties: {}
      type: object
    PutObjectLegalHoldOutput:
      properties: {}
      type: object
    ObjectLockLegalHoldStatus:
      enum:
      - "ON"
      - "OFF"
      type: string
    PutObjectLockConfigurationOutput:
      properties: {}
      type: object
    ObjectLockEnabled:
      enum:
      - Enabled
      type: string
    ObjectLockRule:
      description: The container element for an Object Lock rule.
      properties:
        DefaultRetention:
          $ref: '#/components/schemas/ObjectLockRule_DefaultRetention'
      type: object
    PutObjectRetentionOutput:
      properties: {}
      type: object
    ObjectLockRetentionMode:
      enum:
      - GOVERNANCE
      - COMPLIANCE
      type: string
    Date:
      format: date-time
      type: string
    PutObjectTaggingOutput:
      example:
        VersionId: "null"
      properties: {}
      type: object
    Setting:
      type: boolean
    RestoreObjectOutput:
      example: {}
      properties: {}
      type: object
    Days:
      type: integer
    GlacierJobParameters:
      description: Container for S3 Glacier job parameters.
      properties:
        Tier:
          allOf:
          - $ref: '#/components/schemas/Tier'
          - description: Retrieval tier at which the restore will be processed.
      required:
      - Tier
      type: object
    RestoreRequestType:
      enum:
      - SELECT
      type: string
    Tier:
      enum:
      - Standard
      - Bulk
      - Expedited
      type: string
    Description:
      type: string
    SelectParameters:
      description: Describes the parameters for Select job types.
      properties:
        InputSerialization:
          $ref: '#/components/schemas/SelectParameters_InputSerialization'
        ExpressionType:
          allOf:
          - $ref: '#/components/schemas/ExpressionType'
          - description: "The type of the provided expression (for example, SQL)."
        Expression:
          allOf:
          - $ref: '#/components/schemas/Expression'
          - description: The expression that is used to query the object.
        OutputSerialization:
          $ref: '#/components/schemas/SelectParameters_OutputSerialization'
      required:
      - Expression
      - ExpressionType
      - InputSerialization
      - OutputSerialization
      type: object
    OutputLocation:
      description: Describes the location where the restore job's output is stored.
      properties:
        S3:
          $ref: '#/components/schemas/OutputLocation_S3'
      type: object
    ObjectAlreadyInActiveTierError: {}
    SelectObjectContentOutput:
      properties:
        Payload:
          $ref: '#/components/schemas/SelectObjectContentOutput_Payload'
      type: object
    EnableRequestProgress:
      type: boolean
    CSVInput:
      description: Describes how an uncompressed comma-separated values (CSV)-formatted
        input object is formatted.
      properties:
        FileHeaderInfo:
          allOf:
          - $ref: '#/components/schemas/FileHeaderInfo'
          - description: "<p>Describes the first line of input. Valid values are:</p>\
              \ <ul> <li> <p> <code>NONE</code>: First line is not a header.</p> </li>\
              \ <li> <p> <code>IGNORE</code>: First line is a header, but you can't\
              \ use the header values to indicate the column in an expression. You\
              \ can use column position (such as _1, _2, …) to indicate the column\
              \ (<code>SELECT s._1 FROM OBJECT s</code>).</p> </li> <li> <p> <code>Use</code>:\
              \ First line is a header, and you can use the header value to identify\
              \ a column in an expression (<code>SELECT \"name\" FROM OBJECT</code>).\
              \ </p> </li> </ul>"
        Comments:
          allOf:
          - $ref: '#/components/schemas/Comments'
          - description: A single character used to indicate that a row should be
              ignored when the character is present at the start of that row. You
              can specify any character to indicate a comment line.
        QuoteEscapeCharacter:
          allOf:
          - $ref: '#/components/schemas/QuoteEscapeCharacter'
          - description: "A single character used for escaping the quotation mark\
              \ character inside an already escaped value. For example, the value\
              \ \"\"\" a , b \"\"\" is parsed as \" a , b \"."
        RecordDelimiter:
          allOf:
          - $ref: '#/components/schemas/RecordDelimiter'
          - description: "A single character used to separate individual records in\
              \ the input. Instead of the default value, you can specify an arbitrary\
              \ delimiter."
        FieldDelimiter:
          allOf:
          - $ref: '#/components/schemas/FieldDelimiter'
          - description: A single character used to separate individual fields in
              a record. You can specify an arbitrary delimiter.
        QuoteCharacter:
          allOf:
          - $ref: '#/components/schemas/QuoteCharacter'
          - description: "<p>A single character used for escaping when the field delimiter\
              \ is part of the value. For example, if the value is <code>a, b</code>,\
              \ ArvanCloud S3 wraps this field value in quotation marks, as follows:\
              \ <code>\" a , b \"</code>.</p> <p>Type: String</p> <p>Default: <code>\"\
              </code> </p> <p>Ancestors: <code>CSV</code> </p>"
        AllowQuotedRecordDelimiter:
          allOf:
          - $ref: '#/components/schemas/AllowQuotedRecordDelimiter'
          - description: Specifies that CSV field values may contain quoted record
              delimiters and such records should be allowed. Default value is FALSE.
              Setting this value to TRUE may lower performance.
      type: object
    CompressionType:
      enum:
      - NONE
      - GZIP
      - BZIP2
      type: string
    JSONInput:
      description: Specifies JSON as object's input serialization format.
      properties:
        Type:
          allOf:
          - $ref: '#/components/schemas/JSONType'
          - description: "The type of JSON. Valid values: Document, Lines."
      type: object
    ParquetInput:
      description: Container for Parquet.
      properties: {}
      type: object
    CSVOutput:
      description: Describes how uncompressed comma-separated values (CSV)-formatted
        results are formatted.
      properties:
        QuoteFields:
          allOf:
          - $ref: '#/components/schemas/QuoteFields'
          - description: "<p>Indicates whether to use quotation marks around output\
              \ fields. </p> <ul> <li> <p> <code>ALWAYS</code>: Always use quotation\
              \ marks for output fields.</p> </li> <li> <p> <code>ASNEEDED</code>:\
              \ Use quotation marks for output fields when needed.</p> </li> </ul>"
        QuoteEscapeCharacter:
          allOf:
          - $ref: '#/components/schemas/QuoteEscapeCharacter'
          - description: The single character used for escaping the quote character
              inside an already escaped value.
        RecordDelimiter:
          allOf:
          - $ref: '#/components/schemas/RecordDelimiter'
          - description: "A single character used to separate individual records in\
              \ the output. Instead of the default value, you can specify an arbitrary\
              \ delimiter."
        FieldDelimiter:
          allOf:
          - $ref: '#/components/schemas/FieldDelimiter'
          - description: The value used to separate individual fields in a record.
              You can specify an arbitrary delimiter.
        QuoteCharacter:
          allOf:
          - $ref: '#/components/schemas/QuoteCharacter'
          - description: "A single character used for escaping when the field delimiter\
              \ is part of the value. For example, if the value is <code>a, b</code>,\
              \ ArvanCloud S3 wraps this field value in quotation marks, as follows:\
              \ <code>\" a , b \"</code>."
      type: object
    JSONOutput:
      description: Specifies JSON as request's output serialization format.
      properties:
        RecordDelimiter:
          allOf:
          - $ref: '#/components/schemas/RecordDelimiter'
          - description: "The value used to separate individual records in the output.\
              \ If no value is specified, ArvanCloud S3 uses a newline character ('\\\
              n')."
      type: object
    Start:
      type: integer
    End:
      type: integer
    UploadPartOutput:
      example:
        ETag: '"d8c2eafd90c266e19ab9dcacc479f8af"'
      properties: {}
      type: object
    UploadPartCopyOutput:
      example:
        CopyPartResult:
          ETag: '"65d16d19e65a7508a51f043180edcc36"'
          LastModified: 2016-12-29T21:44:28.000Z
      properties:
        CopyPartResult:
          $ref: '#/components/schemas/UploadPartCopyOutput_CopyPartResult'
      type: object
    AbortDate:
      format: date-time
      type: string
    DaysAfterInitiation:
      type: integer
    AbortIncompleteMultipartUpload:
      description: "Specifies the days since the initiation of an incomplete multipart\
        \ upload that ArvanCloud S3 will wait before permanently removing all parts\
        \ of the upload. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/mpuoverview.html#mpu-abort-incomplete-mpu-lifecycle-config\"\
        > Aborting Incomplete Multipart Uploads Using a Bucket Lifecycle Policy</a>\
        \ in the <i>S3 User Guide</i>."
      properties:
        DaysAfterInitiation:
          allOf:
          - $ref: '#/components/schemas/DaysAfterInitiation'
          - description: Specifies the number of days after which ArvanCloud S3 aborts
              an incomplete multipart upload.
      type: object
    RequestCharged:
      description: "If present, indicates that the requester was successfully charged\
        \ for the request."
      enum:
      - requester
      type: string
    BucketName:
      type: string
    ObjectKey:
      minLength: 1
      type: string
    MultipartUploadId:
      type: string
    RequestPayer:
      description: "Confirms that the requester knows that they will be charged for\
        \ the request. Bucket owners need not specify this parameter in their requests.\
        \ For information about downloading objects from requester pays buckets, see\
        \ <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/ObjectsinRequesterPaysBuckets.html\"\
        >Downloading Objects in Requestor Pays Buckets</a> in the <i>S3 User Guide</i>."
      enum:
      - requester
      type: string
    AccountId:
      type: string
    AbortMultipartUploadRequest:
      properties: {}
      title: AbortMultipartUploadRequest
      type: object
    AbortRuleId:
      type: string
    AccelerateConfiguration:
      description: Configures the transfer acceleration state for an ArvanCloud S3
        bucket.
      properties:
        Status:
          allOf:
          - $ref: '#/components/schemas/BucketAccelerateStatus'
          - description: Specifies the transfer acceleration status of the bucket.
      type: object
    AcceptRanges:
      type: string
    AccessControlPolicy:
      description: Contains the elements that set the ACL permissions for an object
        per grantee.
      properties:
        Grants:
          allOf:
          - $ref: '#/components/schemas/Grants'
          - description: A list of grants.
            xml:
              name: AccessControlList
        Owner:
          allOf:
          - $ref: '#/components/schemas/Owner'
          - description: Container for the bucket owner's display name and ID.
      type: object
    OwnerOverride:
      enum:
      - Destination
      type: string
    AccessControlTranslation:
      description: A container for information about access control for replicas.
      properties:
        Owner:
          allOf:
          - $ref: '#/components/schemas/OwnerOverride'
          - description: Specifies the replica ownership.
      required:
      - Owner
      type: object
    AccessPointArn:
      type: string
    AllowQuotedRecordDelimiter:
      type: boolean
    AllowedHeader:
      type: string
    AllowedHeaders:
      items:
        $ref: '#/components/schemas/AllowedHeader'
      type: array
      xml:
        wrapped: false
    AllowedMethod:
      type: string
    AllowedMethods:
      items:
        $ref: '#/components/schemas/AllowedMethod'
      type: array
      xml:
        wrapped: false
    AllowedOrigin:
      type: string
    AllowedOrigins:
      items:
        $ref: '#/components/schemas/AllowedOrigin'
      type: array
      xml:
        wrapped: false
    Prefix:
      type: string
    AnalyticsAndOperator:
      description: "A conjunction (logical AND) of predicates, which is used in evaluating\
        \ a metrics filter. The operator must have at least two predicates in any\
        \ combination, and an object must match all of the predicates for the filter\
        \ to apply."
      properties:
        Prefix:
          allOf:
          - $ref: '#/components/schemas/Prefix'
          - description: "The prefix to use when evaluating an AND predicate: The\
              \ prefix that an object must have to be included in the metrics results."
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagSet'
          - description: The list of tags to use when evaluating an AND predicate.
            xml:
              name: Tag
      type: object
      xml:
        wrapped: false
    AnalyticsConfiguration:
      description: Specifies the configuration and any analyses for the analytics
        filter of an ArvanCloud S3 bucket.
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/AnalyticsId'
          - description: The ID that identifies the analytics configuration.
        Filter:
          allOf:
          - $ref: '#/components/schemas/AnalyticsFilter'
          - description: "The filter used to describe a set of objects for analyses.\
              \ A filter must have exactly one prefix, one tag, or one conjunction\
              \ (AnalyticsAndOperator). If no filter is provided, all objects will\
              \ be considered in any analysis."
        StorageClassAnalysis:
          allOf:
          - $ref: '#/components/schemas/StorageClassAnalysis'
          - description: ' Contains data related to access patterns to be collected
              and made available to analyze the tradeoffs between different storage
              classes. '
      required:
      - Id
      - StorageClassAnalysis
      type: object
    AnalyticsConfigurationList:
      items:
        $ref: '#/components/schemas/AnalyticsConfiguration'
      type: array
      xml:
        wrapped: false
    AnalyticsS3BucketDestination:
      description: Contains information about where to publish the analytics results.
      properties:
        Format:
          allOf:
          - $ref: '#/components/schemas/AnalyticsS3ExportFileFormat'
          - description: Specifies the file format used when exporting data to ArvanCloud
              S3.
        BucketAccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: "<p>The account ID that owns the destination S3 bucket. If\
              \ no account ID is provided, the owner is not validated before exporting\
              \ data.</p> <note> <p> Although this value is optional, we strongly\
              \ recommend that you set it to help prevent problems if the destination\
              \ bucket ownership changes. </p> </note>"
        Bucket:
          allOf:
          - $ref: '#/components/schemas/BucketName'
          - description: The Amazon Resource Name (ARN) of the bucket to which data
              is exported.
        Prefix:
          allOf:
          - $ref: '#/components/schemas/Prefix'
          - description: The prefix to use when exporting data. The prefix is prepended
              to all results.
      required:
      - Bucket
      - Format
      type: object
    AnalyticsExportDestination:
      description: Where to publish the analytics results.
      properties:
        S3BucketDestination:
          $ref: '#/components/schemas/AnalyticsExportDestination_S3BucketDestination'
      required:
      - S3BucketDestination
      type: object
    Tag:
      description: A container of a key value name pair.
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/ObjectKey'
          - description: Name of the object key.
        Value:
          allOf:
          - $ref: '#/components/schemas/Value'
          - description: Value of the tag.
      required:
      - Key
      - Value
      type: object
    AnalyticsS3ExportFileFormat:
      enum:
      - CSV
      type: string
    ArchiveStatus:
      enum:
      - ARCHIVE_ACCESS
      - DEEP_ARCHIVE_ACCESS
      type: string
    Body:
      type: string
    CreationDate:
      format: date-time
      type: string
    Bucket:
      description: " In terms of implementation, a Bucket is a resource. An ArvanCloud\
        \ S3 bucket name is globally unique, and the namespace is shared by all Amazon\
        \ Web Services accounts. "
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/BucketName'
          - description: The name of the bucket.
        CreationDate:
          allOf:
          - $ref: '#/components/schemas/CreationDate'
          - description: "Date the bucket was created. This date can change when making\
              \ changes to your bucket, such as editing its bucket policy."
      type: object
    BucketCannedACL:
      enum:
      - private
      - public-read
      - public-read-write
      - authenticated-read
      type: string
    BucketKeyEnabled:
      type: boolean
    BucketLifecycleConfiguration:
      description: Specifies the lifecycle configuration for objects in an ArvanCloud
        S3 bucket.
      properties:
        Rules:
          allOf:
          - $ref: '#/components/schemas/LifecycleRules'
          - description: A lifecycle rule for individual objects in an ArvanCloud
              S3 bucket.
            xml:
              name: Rule
      required:
      - Rules
      type: object
    BucketLoggingStatus:
      description: Container for logging status information.
      properties:
        LoggingEnabled:
          $ref: '#/components/schemas/LoggingEnabled'
      type: object
    BucketLogsPermission:
      enum:
      - FULL_CONTROL
      - READ
      - WRITE
      type: string
    Buckets:
      items:
        $ref: '#/components/schemas/Buckets_inner'
      type: array
    BypassGovernanceRetention:
      type: boolean
    BytesProcessed:
      type: integer
    BytesReturned:
      type: integer
    BytesScanned:
      type: integer
    CORSConfiguration:
      description: Describes the cross-origin access configuration for objects in
        an ArvanCloud S3 bucket.
      properties:
        CORSRules:
          allOf:
          - $ref: '#/components/schemas/CORSRules'
          - description: A set of origins and methods (cross-origin access that you
              want to allow). You can add up to 100 rules to the configuration.
            xml:
              name: CORSRule
      required:
      - CORSRules
      type: object
    ID:
      type: string
    ExposeHeaders:
      items:
        $ref: '#/components/schemas/ExposeHeader'
      type: array
      xml:
        wrapped: false
    MaxAgeSeconds:
      type: integer
    CORSRule:
      description: Specifies a cross-origin access rule for an ArvanCloud S3 bucket.
      properties:
        ID:
          allOf:
          - $ref: '#/components/schemas/ID'
          - description: Unique identifier for the rule. The value cannot be longer
              than 255 characters.
        AllowedHeaders:
          allOf:
          - $ref: '#/components/schemas/AllowedHeaders'
          - description: "Headers that are specified in the <code>Access-Control-Request-Headers</code>\
              \ header. These headers are allowed in a preflight OPTIONS request.\
              \ In response to any preflight OPTIONS request, ArvanCloud S3 returns\
              \ any requested headers that are allowed."
            xml:
              name: AllowedHeader
        AllowedMethods:
          allOf:
          - $ref: '#/components/schemas/AllowedMethods'
          - description: "An HTTP method that you allow the origin to execute. Valid\
              \ values are <code>GET</code>, <code>PUT</code>, <code>HEAD</code>,\
              \ <code>POST</code>, and <code>DELETE</code>."
            xml:
              name: AllowedMethod
        AllowedOrigins:
          allOf:
          - $ref: '#/components/schemas/AllowedOrigins'
          - description: One or more origins you want customers to be able to access
              the bucket from.
            xml:
              name: AllowedOrigin
        ExposeHeaders:
          allOf:
          - $ref: '#/components/schemas/ExposeHeaders'
          - description: "One or more headers in the response that you want customers\
              \ to be able to access from their applications (for example, from a\
              \ JavaScript <code>XMLHttpRequest</code> object)."
            xml:
              name: ExposeHeader
        MaxAgeSeconds:
          allOf:
          - $ref: '#/components/schemas/MaxAgeSeconds'
          - description: The time in seconds that your browser is to cache the preflight
              response for the specified resource.
      required:
      - AllowedMethods
      - AllowedOrigins
      type: object
    FileHeaderInfo:
      enum:
      - USE
      - IGNORE
      - NONE
      type: string
    Comments:
      type: string
    QuoteEscapeCharacter:
      type: string
    RecordDelimiter:
      type: string
    FieldDelimiter:
      type: string
    QuoteCharacter:
      type: string
    QuoteFields:
      enum:
      - ALWAYS
      - ASNEEDED
      type: string
    CacheControl:
      type: string
    CloudFunction:
      type: string
    NotificationId:
      description: "An optional unique identifier for configurations in a notification\
        \ configuration. If you don't provide one, ArvanCloud S3 will assign an ID."
      type: string
    Event:
      description: The bucket event for which to send notifications.
      enum:
      - s3:ObjectCreated:*
      - s3:ObjectCreated:Put
      - s3:ObjectCreated:Post
      - s3:ObjectCreated:Copy
      - s3:ObjectCreated:CompleteMultipartUpload
      - s3:ObjectRemoved:*
      - s3:ObjectRemoved:Delete
      type: string
    EventList:
      items:
        $ref: '#/components/schemas/Event'
      type: array
      xml:
        wrapped: false
    CloudFunctionInvocationRole:
      type: string
    Code:
      type: string
    CommonPrefix:
      description: "Container for all (if there are any) keys between Prefix and the\
        \ next occurrence of the string specified by a delimiter. CommonPrefixes lists\
        \ keys that act like subdirectories in the directory specified by Prefix.\
        \ For example, if the prefix is notes/ and the delimiter is a slash (/) as\
        \ in notes/summer/july, the common prefix is notes/summer/. "
      properties:
        Prefix:
          allOf:
          - $ref: '#/components/schemas/Prefix'
          - description: Container for the specified common prefix.
      type: object
    CommonPrefixList:
      items:
        $ref: '#/components/schemas/CommonPrefix'
      type: array
      xml:
        wrapped: false
    Location:
      type: string
    Expiration:
      type: string
    ETag:
      type: string
    ServerSideEncryption:
      enum:
      - AES256
      - aws:kms
      type: string
    ObjectVersionId:
      type: string
    SSEKMSKeyId:
      format: password
      type: string
    CompletedMultipartUpload:
      description: The container for the completed multipart upload details.
      properties:
        Parts:
          allOf:
          - $ref: '#/components/schemas/CompletedPartList'
          - description: Array of CompletedPart data types.
            xml:
              name: Part
      type: object
    CompleteMultipartUploadRequest:
      properties:
        MultipartUpload:
          $ref: '#/components/schemas/CompleteMultipartUploadRequest_MultipartUpload'
      title: CompleteMultipartUploadRequest
      type: object
      xml:
        namespace: http://s3.amazonaws.com/doc/2006-03-01/
    PartNumber:
      type: integer
    CompletedPart:
      description: Details of the parts that were uploaded.
      properties:
        ETag:
          allOf:
          - $ref: '#/components/schemas/ETag'
          - description: Entity tag returned when the part was uploaded.
        PartNumber:
          allOf:
          - $ref: '#/components/schemas/PartNumber'
          - description: "Part number that identifies the part. This is a positive\
              \ integer between 1 and 10,000."
      type: object
    HttpErrorCodeReturnedEquals:
      type: string
    KeyPrefixEquals:
      type: string
    Condition:
      description: "A container for describing a condition that must be met for the\
        \ specified redirect to apply. For example, 1. If request is for pages in\
        \ the <code>/docs</code> folder, redirect to the <code>/documents</code> folder.\
        \ 2. If request results in HTTP error 4xx, redirect request to another host\
        \ where you might process the error."
      properties:
        HttpErrorCodeReturnedEquals:
          allOf:
          - $ref: '#/components/schemas/HttpErrorCodeReturnedEquals'
          - description: "The HTTP error code when the redirect is applied. In the\
              \ event of an error, if the error code equals this value, then the specified\
              \ redirect is applied. Required when parent element <code>Condition</code>\
              \ is specified and sibling <code>KeyPrefixEquals</code> is not specified.\
              \ If both are specified, then both must be true for the redirect to\
              \ be applied."
        KeyPrefixEquals:
          allOf:
          - $ref: '#/components/schemas/KeyPrefixEquals'
          - description: "<p>The object key name prefix when the redirect is applied.\
              \ For example, to redirect requests for <code>ExamplePage.html</code>,\
              \ the key prefix will be <code>ExamplePage.html</code>. To redirect\
              \ request for all pages with the prefix <code>docs/</code>, the key\
              \ prefix will be <code>/docs</code>, which identifies all objects in\
              \ the <code>docs/</code> folder. Required when the parent element <code>Condition</code>\
              \ is specified and sibling <code>HttpErrorCodeReturnedEquals</code>\
              \ is not specified. If both conditions are specified, both must be true\
              \ for the redirect to be applied.</p> <important> <p>Replacement must\
              \ be made for object keys containing special characters (such as carriage\
              \ returns) when using XML requests."
      type: object
    ConfirmRemoveSelfBucketAccess:
      type: boolean
    ContentDisposition:
      type: string
    ContentEncoding:
      type: string
    ContentLanguage:
      type: string
    ContentLength:
      type: integer
    ContentMD5:
      type: string
    ContentRange:
      type: string
    ContentType:
      type: string
    ContinuationEvent:
      description: <p/>
      properties: {}
      type: object
    CopyObjectResult:
      description: Container for all response elements.
      properties:
        ETag:
          allOf:
          - $ref: '#/components/schemas/ETag'
          - description: "Returns the ETag of the new object. The ETag reflects only\
              \ changes to the contents of an object, not its metadata."
        LastModified:
          allOf:
          - $ref: '#/components/schemas/LastModified'
          - description: Creation date of the object.
      type: object
    CopySourceVersionId:
      type: string
    SSECustomerAlgorithm:
      type: string
    SSECustomerKeyMD5:
      type: string
    SSEKMSEncryptionContext:
      format: password
      type: string
    ObjectCannedACL:
      enum:
      - private
      - public-read
      - public-read-write
      - authenticated-read
      - aws-exec-read
      - bucket-owner-read
      - bucket-owner-full-control
      type: string
    CopySource:
      pattern: \/.+\/.+
      type: string
    CopySourceIfMatch:
      type: string
    CopySourceIfModifiedSince:
      format: date-time
      type: string
    CopySourceIfNoneMatch:
      type: string
    CopySourceIfUnmodifiedSince:
      format: date-time
      type: string
    Expires:
      format: date-time
      type: string
    GrantFullControl:
      type: string
    GrantRead:
      type: string
    GrantReadACP:
      type: string
    GrantWriteACP:
      type: string
    Metadata:
      additionalProperties:
        $ref: '#/components/schemas/MetadataValue'
      type: object
    MetadataDirective:
      enum:
      - COPY
      - REPLACE
      type: string
    TaggingDirective:
      enum:
      - COPY
      - REPLACE
      type: string
    StorageClass:
      enum:
      - STANDARD
      - REDUCED_REDUNDANCY
      - STANDARD_IA
      - ONEZONE_IA
      - INTELLIGENT_TIERING
      - GLACIER
      - DEEP_ARCHIVE
      type: string
    WebsiteRedirectLocation:
      type: string
    SSECustomerKey:
      format: password
      type: string
    CopySourceSSECustomerAlgorithm:
      type: string
    CopySourceSSECustomerKey:
      format: password
      type: string
    CopySourceSSECustomerKeyMD5:
      type: string
    TaggingHeader:
      type: string
    ObjectLockMode:
      enum:
      - GOVERNANCE
      - COMPLIANCE
      type: string
    ObjectLockRetainUntilDate:
      format: date-time
      type: string
    CopyObjectRequest:
      properties:
        Metadata:
          allOf:
          - $ref: '#/components/schemas/Metadata'
          - description: A map of metadata to store with the object in S3.
            xml:
              name: x-amz-meta-
      title: CopyObjectRequest
      type: object
    LastModified:
      format: date-time
      type: string
    CopyPartResult:
      description: Container for all response elements.
      properties:
        ETag:
          allOf:
          - $ref: '#/components/schemas/ETag'
          - description: Entity tag of the object.
        LastModified:
          allOf:
          - $ref: '#/components/schemas/LastModified'
          - description: Date and time at which the object was uploaded.
      type: object
    CopySourceRange:
      type: string
    CreateBucketConfiguration:
      description: The configuration information for the bucket.
      properties:
        LocationConstraint:
          allOf:
          - $ref: '#/components/schemas/BucketLocationConstraint'
          - description: "Specifies the Region where the bucket will be created. If\
              \ you don't specify a Region, the bucket is created in the US East (N.\
              \ Virginia) Region (us-east-1)."
      type: object
    GrantWrite:
      type: string
    ObjectLockEnabledForBucket:
      type: boolean
    CreateBucketRequest:
      properties:
        CreateBucketConfiguration:
          $ref: '#/components/schemas/CreateBucketRequest_CreateBucketConfiguration'
      title: CreateBucketRequest
      type: object
      xml:
        namespace: http://s3.amazonaws.com/doc/2006-03-01/
    CreateMultipartUploadRequest:
      properties:
        Metadata:
          allOf:
          - $ref: '#/components/schemas/Metadata'
          - description: A map of metadata to store with the object in S3.
            xml:
              name: x-amz-meta-
      title: CreateMultipartUploadRequest
      type: object
    Years:
      type: integer
    DefaultRetention:
      description: <p>The container element for specifying the default Object Lock
        retention settings for new objects placed in the specified bucket.</p> <note>
        <ul> <li> <p>The <code>DefaultRetention</code> settings require both a mode
        and a period.</p> </li> <li> <p>The <code>DefaultRetention</code> period can
        be either <code>Days</code> or <code>Years</code> but you must select one.
        You cannot specify <code>Days</code> and <code>Years</code> at the same time.</p>
        </li> </ul> </note>
      properties:
        Mode:
          allOf:
          - $ref: '#/components/schemas/ObjectLockRetentionMode'
          - description: The default Object Lock retention mode you want to apply
              to new objects placed in the specified bucket. Must be used with either
              <code>Days</code> or <code>Years</code>.
        Days:
          allOf:
          - $ref: '#/components/schemas/Days'
          - description: The number of days that you want to specify for the default
              retention period. Must be used with <code>Mode</code>.
        Years:
          allOf:
          - $ref: '#/components/schemas/Years'
          - description: The number of years that you want to specify for the default
              retention period. Must be used with <code>Mode</code>.
      type: object
    Delete:
      description: Container for the objects to delete.
      properties:
        Objects:
          allOf:
          - $ref: '#/components/schemas/ObjectIdentifierList'
          - description: The objects to delete.
            xml:
              name: Object
        Quiet:
          allOf:
          - $ref: '#/components/schemas/Quiet'
          - description: "Element to enable quiet mode for the request. When you add\
              \ this element, you must set its value to true."
      required:
      - Objects
      type: object
    DeleteBucketAnalyticsConfigurationRequest:
      properties: {}
      title: DeleteBucketAnalyticsConfigurationRequest
      type: object
    DeleteBucketCorsRequest:
      properties: {}
      title: DeleteBucketCorsRequest
      type: object
    DeleteBucketEncryptionRequest:
      properties: {}
      title: DeleteBucketEncryptionRequest
      type: object
    DeleteBucketIntelligentTieringConfigurationRequest:
      properties: {}
      title: DeleteBucketIntelligentTieringConfigurationRequest
      type: object
    DeleteBucketInventoryConfigurationRequest:
      properties: {}
      title: DeleteBucketInventoryConfigurationRequest
      type: object
    DeleteBucketLifecycleRequest:
      properties: {}
      title: DeleteBucketLifecycleRequest
      type: object
    DeleteBucketMetricsConfigurationRequest:
      properties: {}
      title: DeleteBucketMetricsConfigurationRequest
      type: object
    DeleteBucketOwnershipControlsRequest:
      properties: {}
      title: DeleteBucketOwnershipControlsRequest
      type: object
    DeleteBucketPolicyRequest:
      properties: {}
      title: DeleteBucketPolicyRequest
      type: object
    DeleteBucketReplicationRequest:
      properties: {}
      title: DeleteBucketReplicationRequest
      type: object
    DeleteBucketRequest:
      properties: {}
      title: DeleteBucketRequest
      type: object
    DeleteBucketTaggingRequest:
      properties: {}
      title: DeleteBucketTaggingRequest
      type: object
    DeleteBucketWebsiteRequest:
      properties: {}
      title: DeleteBucketWebsiteRequest
      type: object
    DeleteMarker:
      type: boolean
    IsLatest:
      type: boolean
    DeleteMarkerEntry:
      description: Information about the delete marker.
      properties:
        Owner:
          allOf:
          - $ref: '#/components/schemas/Owner'
          - description: The account that created the delete marker.&gt;
        Key:
          allOf:
          - $ref: '#/components/schemas/ObjectKey'
          - description: The object key.
        VersionId:
          allOf:
          - $ref: '#/components/schemas/ObjectVersionId'
          - description: Version ID of an object.
        IsLatest:
          allOf:
          - $ref: '#/components/schemas/IsLatest'
          - description: Specifies whether the object is (true) or is not (false)
              the latest version of an object.
        LastModified:
          allOf:
          - $ref: '#/components/schemas/LastModified'
          - description: Date and time the object was last modified.
      type: object
    DeleteMarkerReplicationStatus:
      enum:
      - Enabled
      - Disabled
      type: string
    DeleteMarkerReplication:
      description: "<p>Specifies whether ArvanCloud S3 replicates delete markers.\
        \ If you specify a <code>Filter</code> in your replication configuration,\
        \ you must also include a <code>DeleteMarkerReplication</code> element. If\
        \ your <code>Filter</code> includes a <code>Tag</code> element, the <code>DeleteMarkerReplication</code>\
        \ <code>Status</code> must be set to Disabled, because ArvanCloud S3 does\
        \ not support replicating delete markers for tag-based rules. For an example\
        \ configuration, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/replication-add-config.html#replication-config-min-rule-config\"\
        >Basic Rule Configuration</a>. </p> <p>For more information about delete marker\
        \ replication, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/delete-marker-replication.html\"\
        >Basic Rule Configuration</a>. </p> <note> <p>If you are using an earlier\
        \ version of the replication configuration, ArvanCloud S3 handles replication\
        \ of delete markers differently."
      properties:
        Status:
          allOf:
          - $ref: '#/components/schemas/DeleteMarkerReplicationStatus'
          - description: <p>Indicates whether to replicate delete markers.</p> <note>
              <p>Indicates whether to replicate delete markers.</p> </note>
      type: object
    DeleteMarkerVersionId:
      type: string
    DeleteMarkers:
      items:
        $ref: '#/components/schemas/DeleteMarkerEntry'
      type: array
      xml:
        wrapped: false
    MFA:
      type: string
    DeleteObjectRequest:
      properties: {}
      title: DeleteObjectRequest
      type: object
    DeleteObjectTaggingRequest:
      properties: {}
      title: DeleteObjectTaggingRequest
      type: object
    DeletedObjects:
      items:
        $ref: '#/components/schemas/DeletedObject'
      type: array
      xml:
        wrapped: false
    Errors:
      items:
        $ref: '#/components/schemas/Error'
      type: array
      xml:
        wrapped: false
    DeleteObjectsRequest:
      properties:
        Delete:
          $ref: '#/components/schemas/DeleteObjectsRequest_Delete'
      required:
      - Delete
      title: DeleteObjectsRequest
      type: object
      xml:
        namespace: http://s3.amazonaws.com/doc/2006-03-01/
    DeletePublicAccessBlockRequest:
      properties: {}
      title: DeletePublicAccessBlockRequest
      type: object
    DeletedObject:
      description: Information about the deleted object.
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/ObjectKey'
          - description: The name of the deleted object.
        VersionId:
          allOf:
          - $ref: '#/components/schemas/ObjectVersionId'
          - description: The version ID of the deleted object.
        DeleteMarker:
          allOf:
          - $ref: '#/components/schemas/DeleteMarker'
          - description: "Specifies whether the versioned object that was permanently\
              \ deleted was (true) or was not (false) a delete marker. In a simple\
              \ DELETE, this header indicates whether (true) or not (false) a delete\
              \ marker was created."
        DeleteMarkerVersionId:
          allOf:
          - $ref: '#/components/schemas/DeleteMarkerVersionId'
          - description: "The version ID of the delete marker created as a result\
              \ of the DELETE operation. If you delete a specific object version,\
              \ the value returned by this header is the version ID of the object\
              \ version deleted."
      type: object
    Delimiter:
      type: string
    EncryptionConfiguration:
      description: Specifies encryption-related information for an ArvanCloud S3 bucket
        that is a destination for replicated objects.
      properties:
        ReplicaKmsKeyID:
          allOf:
          - $ref: '#/components/schemas/ReplicaKmsKeyID'
          - description: "Specifies the ID (Key ARN or Alias ARN) of the customer\
              \ managed Amazon Web Services KMS key stored in Amazon Web Services\
              \ Key Management Service (KMS) for the destination bucket. ArvanCloud\
              \ S3 uses this key to encrypt replica objects. ArvanCloud S3 only supports\
              \ symmetric, customer managed KMS keys."
      type: object
    ReplicationTime:
      description: " A container specifying S3 Replication Time Control (S3 RTC) related\
        \ information, including whether S3 RTC is enabled and the time when all objects\
        \ and operations on objects must be replicated. Must be specified together\
        \ with a <code>Metrics</code> block. "
      properties:
        Status:
          allOf:
          - $ref: '#/components/schemas/ReplicationTimeStatus'
          - description: ' Specifies whether the replication time is enabled. '
        Time:
          $ref: '#/components/schemas/ReplicationTime_Time'
      required:
      - Status
      - Time
      type: object
    Metrics:
      description: ' A container specifying replication metrics-related settings enabling
        replication metrics and events.'
      properties:
        Status:
          allOf:
          - $ref: '#/components/schemas/MetricsStatus'
          - description: ' Specifies whether the replication metrics are enabled. '
        EventThreshold:
          $ref: '#/components/schemas/Metrics_EventThreshold'
      required:
      - Status
      type: object
    Destination:
      description: Specifies information about where to publish analysis or configuration
        results for an ArvanCloud S3 bucket and S3 Replication Time Control (S3 RTC).
      properties:
        Bucket:
          allOf:
          - $ref: '#/components/schemas/BucketName'
          - description: ' The Amazon Resource Name (ARN) of the bucket where you
              want ArvanCloud S3 to store the results.'
        Account:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: "Destination bucket owner account ID. In a cross-account\
              \ scenario, if you direct ArvanCloud S3 to change replica ownership\
              \ to the Amazon Web Services account that owns the destination bucket\
              \ by specifying the <code>AccessControlTranslation</code> property,\
              \ this is the account ID of the destination bucket owner."
        StorageClass:
          allOf:
          - $ref: '#/components/schemas/StorageClass'
          - description: "<p> The storage class to use when replicating objects, such\
              \ as S3 Standard or reduced redundancy. By default, ArvanCloud S3 uses\
              \ the storage class of the source object to create the object replica.\
              \ </p> <p>For valid values, see the <code>StorageClass</code> element\
              \ of the <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTreplication.html\"\
              >PUT Bucket replication</a> action in the <i>ArvanCloud S3 API Reference</i>.</p>"
        AccessControlTranslation:
          $ref: '#/components/schemas/Destination_AccessControlTranslation'
        EncryptionConfiguration:
          $ref: '#/components/schemas/Destination_EncryptionConfiguration'
        ReplicationTime:
          $ref: '#/components/schemas/Destination_ReplicationTime'
        Metrics:
          $ref: '#/components/schemas/Destination_Metrics'
      required:
      - Bucket
      type: object
    DisplayName:
      type: string
    EmailAddress:
      type: string
    EncodingType:
      description: "Requests ArvanCloud S3 to encode the object keys in the response\
        \ and specifies the encoding method to use. An object key may contain any\
        \ Unicode character; however, XML 1.0 parser cannot parse some characters,\
        \ such as characters with an ASCII value from 0 to 10. For characters that\
        \ are not supported in XML 1.0, you can add this parameter to request that\
        \ ArvanCloud S3 encode the keys in the response."
      enum:
      - url
      type: string
    KMSContext:
      type: string
    Encryption:
      description: Contains the type of server-side encryption used.
      properties:
        EncryptionType:
          allOf:
          - $ref: '#/components/schemas/ServerSideEncryption'
          - description: "The server-side encryption algorithm used when storing job\
              \ results in ArvanCloud S3 (for example, AES256, aws:kms)."
        KMSKeyId:
          allOf:
          - $ref: '#/components/schemas/SSEKMSKeyId'
          - description: "If the encryption type is <code>aws:kms</code>, this optional\
              \ value specifies the ID of the symmetric customer managed key to use\
              \ for encryption of job results. ArvanCloud S3 only supports symmetric\
              \ keys. For more information, see <a href=\"https://docs.aws.amazon.com/kms/latest/developerguide/symmetric-asymmetric.html\"\
              >Using symmetric and asymmetric keys</a> in the <i>Amazon Web Services\
              \ Key Management Service Developer Guide</i>."
        KMSContext:
          allOf:
          - $ref: '#/components/schemas/KMSContext'
          - description: "If the encryption type is <code>aws:kms</code>, this optional\
              \ value can be used to specify the encryption context for the restore\
              \ results."
      required:
      - EncryptionType
      type: object
    ReplicaKmsKeyID:
      type: string
    EndEvent:
      description: A message that indicates the request is complete and no more messages
        will be sent. You should not assume that the request is complete until the
        client receives an <code>EndEvent</code>.
      properties: {}
      type: object
    Message:
      type: string
    Error:
      description: Container for all error elements.
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/ObjectKey'
          - description: The error key.
        VersionId:
          allOf:
          - $ref: '#/components/schemas/ObjectVersionId'
          - description: The version ID of the error.
        Code:
          allOf:
          - $ref: '#/components/schemas/Code'
          - description: "<p>The error code is a string that uniquely identifies an\
              \ error condition. It is meant to be read and understood by programs\
              \ that detect and handle errors by type. </p> <p class=\"title\"> <b>ArvanCloud\
              \ S3 error codes</b> </p> <ul> <li> <ul> <li> <p> <i>Code:</i> AccessDenied\
              \ </p> </li> <li> <p> <i>Description:</i> Access Denied</p> </li> <li>\
              \ <p> <i>HTTP Status Code:</i> 403 Forbidden</p> </li> <li> <p> <i>SOAP\
              \ Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li>\
              \ <p> <i>Code:</i> AccountProblem</p> </li> <li> <p> <i>Description:</i>\
              \ There is a problem with your Amazon Web Services account that prevents\
              \ the action from completing successfully. Contact Amazon Web Services\
              \ Support for further assistance.</p> </li> <li> <p> <i>HTTP Status\
              \ Code:</i> 403 Forbidden</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i>\
              \ Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> AllAccessDisabled</p>\
              \ </li> <li> <p> <i>Description:</i> All access to this ArvanCloud S3\
              \ resource has been disabled. Contact Amazon Web Services Support for\
              \ further assistance.</p> </li> <li> <p> <i>HTTP Status Code:</i> 403\
              \ Forbidden</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p>\
              \ </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> AmbiguousGrantByEmailAddress</p>\
              \ </li> <li> <p> <i>Description:</i> The email address you provided\
              \ is associated with more than one account.</p> </li> <li> <p> <i>HTTP\
              \ Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault\
              \ Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i>\
              \ AuthorizationHeaderMalformed</p> </li> <li> <p> <i>Description:</i>\
              \ The authorization header you provided is invalid.</p> </li> <li> <p>\
              \ <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>HTTP\
              \ Status Code:</i> N/A</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i>\
              \ BadDigest</p> </li> <li> <p> <i>Description:</i> The Content-MD5 you\
              \ specified did not match what we received.</p> </li> <li> <p> <i>HTTP\
              \ Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault\
              \ Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i>\
              \ BucketAlreadyExists</p> </li> <li> <p> <i>Description:</i> The requested\
              \ bucket name is not available. The bucket namespace is shared by all\
              \ users of the system. Please select a different name and try again.</p>\
              \ </li> <li> <p> <i>HTTP Status Code:</i> 409 Conflict</p> </li> <li>\
              \ <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li>\
              \ <ul> <li> <p> <i>Code:</i> BucketAlreadyOwnedByYou</p> </li> <li>\
              \ <p> <i>Description:</i> The bucket you tried to create already exists,\
              \ and you own it. ArvanCloud S3 returns this error in all Amazon Web\
              \ Services Regions except in the North Virginia Region. For legacy compatibility,\
              \ if you re-create an existing bucket that you already own in the North\
              \ Virginia Region, ArvanCloud S3 returns 200 OK and resets the bucket\
              \ access control lists (ACLs).</p> </li> <li> <p> <i>Code:</i> 409 Conflict\
              \ (in all Regions except the North Virginia Region) </p> </li> <li>\
              \ <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li>\
              \ <ul> <li> <p> <i>Code:</i> BucketNotEmpty</p> </li> <li> <p> <i>Description:</i>\
              \ The bucket you tried to delete is not empty.</p> </li> <li> <p> <i>HTTP\
              \ Status Code:</i> 409 Conflict</p> </li> <li> <p> <i>SOAP Fault Code\
              \ Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i>\
              \ CredentialsNotSupported</p> </li> <li> <p> <i>Description:</i> This\
              \ request does not support credentials.</p> </li> <li> <p> <i>HTTP Status\
              \ Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i>\
              \ Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> CrossLocationLoggingProhibited</p>\
              \ </li> <li> <p> <i>Description:</i> Cross-location logging not allowed.\
              \ Buckets in one geographic location cannot log information to a bucket\
              \ in another location.</p> </li> <li> <p> <i>HTTP Status Code:</i> 403\
              \ Forbidden</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p>\
              \ </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> EntityTooSmall</p>\
              \ </li> <li> <p> <i>Description:</i> Your proposed upload is smaller\
              \ than the minimum allowed object size.</p> </li> <li> <p> <i>HTTP Status\
              \ Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i>\
              \ Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> EntityTooLarge</p>\
              \ </li> <li> <p> <i>Description:</i> Your proposed upload exceeds the\
              \ maximum allowed object size.</p> </li> <li> <p> <i>HTTP Status Code:</i>\
              \ 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i>\
              \ Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> ExpiredToken</p>\
              \ </li> <li> <p> <i>Description:</i> The provided token has expired.</p>\
              \ </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li>\
              \ <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li>\
              \ <li> <ul> <li> <p> <i>Code:</i> IllegalVersioningConfigurationException\
              \ </p> </li> <li> <p> <i>Description:</i> Indicates that the versioning\
              \ configuration specified in the request is invalid.</p> </li> <li>\
              \ <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP\
              \ Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li>\
              \ <p> <i>Code:</i> IncompleteBody</p> </li> <li> <p> <i>Description:</i>\
              \ You did not provide the number of bytes specified by the Content-Length\
              \ HTTP header</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p>\
              \ </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul>\
              \ </li> <li> <ul> <li> <p> <i>Code:</i> IncorrectNumberOfFilesInPostRequest</p>\
              \ </li> <li> <p> <i>Description:</i> POST requires exactly one file\
              \ upload per request.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400\
              \ Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p>\
              \ </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> InlineDataTooLarge</p>\
              \ </li> <li> <p> <i>Description:</i> Inline data exceeds the maximum\
              \ allowed size.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad\
              \ Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p>\
              \ </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> InternalError</p>\
              \ </li> <li> <p> <i>Description:</i> We encountered an internal error.\
              \ Please try again.</p> </li> <li> <p> <i>HTTP Status Code:</i> 500\
              \ Internal Server Error</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i>\
              \ Server</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> InvalidAccessKeyId</p>\
              \ </li> <li> <p> <i>Description:</i> The Amazon Web Services access\
              \ key ID you provided does not exist in our records.</p> </li> <li>\
              \ <p> <i>HTTP Status Code:</i> 403 Forbidden</p> </li> <li> <p> <i>SOAP\
              \ Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li>\
              \ <p> <i>Code:</i> InvalidAddressingHeader</p> </li> <li> <p> <i>Description:</i>\
              \ You must specify the Anonymous role.</p> </li> <li> <p> <i>HTTP Status\
              \ Code:</i> N/A</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p>\
              \ </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> InvalidArgument</p>\
              \ </li> <li> <p> <i>Description:</i> Invalid Argument</p> </li> <li>\
              \ <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP\
              \ Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li>\
              \ <p> <i>Code:</i> InvalidBucketName</p> </li> <li> <p> <i>Description:</i>\
              \ The specified bucket is not valid.</p> </li> <li> <p> <i>HTTP Status\
              \ Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i>\
              \ Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> InvalidBucketState</p>\
              \ </li> <li> <p> <i>Description:</i> The request is not valid with the\
              \ current state of the bucket.</p> </li> <li> <p> <i>HTTP Status Code:</i>\
              \ 409 Conflict</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p>\
              \ </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> InvalidDigest</p>\
              \ </li> <li> <p> <i>Description:</i> The Content-MD5 you specified is\
              \ not valid.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p>\
              \ </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul>\
              \ </li> <li> <ul> <li> <p> <i>Code:</i> InvalidEncryptionAlgorithmError</p>\
              \ </li> <li> <p> <i>Description:</i> The encryption request you specified\
              \ is not valid. The valid value is AES256.</p> </li> <li> <p> <i>HTTP\
              \ Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault\
              \ Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i>\
              \ InvalidLocationConstraint</p> </li> <li> <p> <i>Description:</i> The\
              \ specified location constraint is not valid. For more information about\
              \ Regions, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/UsingBucket.html#access-bucket-intro\"\
              >How to Select a Region for Your Buckets</a>. </p> </li> <li> <p> <i>HTTP\
              \ Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault\
              \ Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i>\
              \ InvalidObjectState</p> </li> <li> <p> <i>Description:</i> The action\
              \ is not valid for the current state of the object.</p> </li> <li> <p>\
              \ <i>HTTP Status Code:</i> 403 Forbidden</p> </li> <li> <p> <i>SOAP\
              \ Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li>\
              \ <p> <i>Code:</i> InvalidPart</p> </li> <li> <p> <i>Description:</i>\
              \ One or more of the specified parts could not be found. The part might\
              \ not have been uploaded, or the specified entity tag might not have\
              \ matched the part's entity tag.</p> </li> <li> <p> <i>HTTP Status Code:</i>\
              \ 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i>\
              \ Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> InvalidPartOrder</p>\
              \ </li> <li> <p> <i>Description:</i> The list of parts was not in ascending\
              \ order. Parts list must be specified in order by part number.</p> </li>\
              \ <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p>\
              \ <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul>\
              \ <li> <p> <i>Code:</i> InvalidPayer</p> </li> <li> <p> <i>Description:</i>\
              \ All access to this object has been disabled. Please contact Amazon\
              \ Web Services Support for further assistance.</p> </li> <li> <p> <i>HTTP\
              \ Status Code:</i> 403 Forbidden</p> </li> <li> <p> <i>SOAP Fault Code\
              \ Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i>\
              \ InvalidPolicyDocument</p> </li> <li> <p> <i>Description:</i> The content\
              \ of the form does not meet the conditions specified in the policy document.</p>\
              \ </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li>\
              \ <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li>\
              \ <li> <ul> <li> <p> <i>Code:</i> InvalidRange</p> </li> <li> <p> <i>Description:</i>\
              \ The requested range cannot be satisfied.</p> </li> <li> <p> <i>HTTP\
              \ Status Code:</i> 416 Requested Range Not Satisfiable</p> </li> <li>\
              \ <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li>\
              \ <ul> <li> <p> <i>Code:</i> InvalidRequest</p> </li> <li> <p> <i>Description:</i>\
              \ Please use <code>AWS4-HMAC-SHA256</code>.</p> </li> <li> <p> <i>HTTP\
              \ Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>Code:</i> N/A</p>\
              \ </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> InvalidRequest</p>\
              \ </li> <li> <p> <i>Description:</i> SOAP requests must be made over\
              \ an HTTPS connection.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400\
              \ Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p>\
              \ </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> InvalidRequest</p>\
              \ </li> <li> <p> <i>Description:</i> ArvanCloud S3 Transfer Acceleration\
              \ is not supported for buckets with non-DNS compliant names.</p> </li>\
              \ <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p>\
              \ <i>Code:</i> N/A</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i>\
              \ InvalidRequest</p> </li> <li> <p> <i>Description:</i> ArvanCloud S3\
              \ Transfer Acceleration is not supported for buckets with periods (.)\
              \ in their names.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad\
              \ Request</p> </li> <li> <p> <i>Code:</i> N/A</p> </li> </ul> </li>\
              \ <li> <ul> <li> <p> <i>Code:</i> InvalidRequest</p> </li> <li> <p>\
              \ <i>Description:</i> ArvanCloud S3 Transfer Accelerate endpoint only\
              \ supports virtual style requests.</p> </li> <li> <p> <i>HTTP Status\
              \ Code:</i> 400 Bad Request</p> </li> <li> <p> <i>Code:</i> N/A</p>\
              \ </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> InvalidRequest</p>\
              \ </li> <li> <p> <i>Description:</i> ArvanCloud S3 Transfer Accelerate\
              \ is not configured on this bucket.</p> </li> <li> <p> <i>HTTP Status\
              \ Code:</i> 400 Bad Request</p> </li> <li> <p> <i>Code:</i> N/A</p>\
              \ </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> InvalidRequest</p>\
              \ </li> <li> <p> <i>Description:</i> ArvanCloud S3 Transfer Accelerate\
              \ is disabled on this bucket.</p> </li> <li> <p> <i>HTTP Status Code:</i>\
              \ 400 Bad Request</p> </li> <li> <p> <i>Code:</i> N/A</p> </li> </ul>\
              \ </li> <li> <ul> <li> <p> <i>Code:</i> InvalidRequest</p> </li> <li>\
              \ <p> <i>Description:</i> ArvanCloud S3 Transfer Acceleration is not\
              \ supported on this bucket. Contact Amazon Web Services Support for\
              \ more information.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400\
              \ Bad Request</p> </li> <li> <p> <i>Code:</i> N/A</p> </li> </ul> </li>\
              \ <li> <ul> <li> <p> <i>Code:</i> InvalidRequest</p> </li> <li> <p>\
              \ <i>Description:</i> ArvanCloud S3 Transfer Acceleration cannot be\
              \ enabled on this bucket. Contact Amazon Web Services Support for more\
              \ information.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p>\
              \ </li> <li> <p> <i>Code:</i> N/A</p> </li> </ul> </li> <li> <ul> <li>\
              \ <p> <i>Code:</i> InvalidSecurity</p> </li> <li> <p> <i>Description:</i>\
              \ The provided security credentials are not valid.</p> </li> <li> <p>\
              \ <i>HTTP Status Code:</i> 403 Forbidden</p> </li> <li> <p> <i>SOAP\
              \ Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li>\
              \ <p> <i>Code:</i> InvalidSOAPRequest</p> </li> <li> <p> <i>Description:</i>\
              \ The SOAP request body is invalid.</p> </li> <li> <p> <i>HTTP Status\
              \ Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i>\
              \ Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> InvalidStorageClass</p>\
              \ </li> <li> <p> <i>Description:</i> The storage class you specified\
              \ is not valid.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad\
              \ Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p>\
              \ </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> InvalidTargetBucketForLogging</p>\
              \ </li> <li> <p> <i>Description:</i> The target bucket for logging does\
              \ not exist, is not owned by you, or does not have the appropriate grants\
              \ for the log-delivery group. </p> </li> <li> <p> <i>HTTP Status Code:</i>\
              \ 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i>\
              \ Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> InvalidToken</p>\
              \ </li> <li> <p> <i>Description:</i> The provided token is malformed\
              \ or otherwise invalid.</p> </li> <li> <p> <i>HTTP Status Code:</i>\
              \ 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i>\
              \ Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> InvalidURI</p>\
              \ </li> <li> <p> <i>Description:</i> Couldn't parse the specified URI.</p>\
              \ </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li>\
              \ <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li>\
              \ <li> <ul> <li> <p> <i>Code:</i> KeyTooLongError</p> </li> <li> <p>\
              \ <i>Description:</i> Your key is too long.</p> </li> <li> <p> <i>HTTP\
              \ Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault\
              \ Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i>\
              \ MalformedACLError</p> </li> <li> <p> <i>Description:</i> The XML you\
              \ provided was not well-formed or did not validate against our published\
              \ schema.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p>\
              \ </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul>\
              \ </li> <li> <ul> <li> <p> <i>Code:</i> MalformedPOSTRequest </p> </li>\
              \ <li> <p> <i>Description:</i> The body of your POST request is not\
              \ well-formed multipart/form-data.</p> </li> <li> <p> <i>HTTP Status\
              \ Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i>\
              \ Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> MalformedXML</p>\
              \ </li> <li> <p> <i>Description:</i> This happens when the user sends\
              \ malformed XML (XML that doesn't conform to the published XSD) for\
              \ the configuration. The error message is, \"The XML you provided was\
              \ not well-formed or did not validate against our published schema.\"\
              \ </p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li>\
              \ <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li>\
              \ <li> <ul> <li> <p> <i>Code:</i> MaxMessageLengthExceeded</p> </li>\
              \ <li> <p> <i>Description:</i> Your request was too big.</p> </li> <li>\
              \ <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP\
              \ Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li>\
              \ <p> <i>Code:</i> MaxPostPreDataLengthExceededError</p> </li> <li>\
              \ <p> <i>Description:</i> Your POST request fields preceding the upload\
              \ file were too large.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400\
              \ Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p>\
              \ </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> MetadataTooLarge</p>\
              \ </li> <li> <p> <i>Description:</i> Your metadata headers exceed the\
              \ maximum allowed metadata size.</p> </li> <li> <p> <i>HTTP Status Code:</i>\
              \ 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i>\
              \ Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> MethodNotAllowed</p>\
              \ </li> <li> <p> <i>Description:</i> The specified method is not allowed\
              \ against this resource.</p> </li> <li> <p> <i>HTTP Status Code:</i>\
              \ 405 Method Not Allowed</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i>\
              \ Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> MissingAttachment</p>\
              \ </li> <li> <p> <i>Description:</i> A SOAP attachment was expected,\
              \ but none were found.</p> </li> <li> <p> <i>HTTP Status Code:</i> N/A</p>\
              \ </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul>\
              \ </li> <li> <ul> <li> <p> <i>Code:</i> MissingContentLength</p> </li>\
              \ <li> <p> <i>Description:</i> You must provide the Content-Length HTTP\
              \ header.</p> </li> <li> <p> <i>HTTP Status Code:</i> 411 Length Required</p>\
              \ </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul>\
              \ </li> <li> <ul> <li> <p> <i>Code:</i> MissingRequestBodyError</p>\
              \ </li> <li> <p> <i>Description:</i> This happens when the user sends\
              \ an empty XML document as a request. The error message is, \"Request\
              \ body is empty.\" </p> </li> <li> <p> <i>HTTP Status Code:</i> 400\
              \ Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p>\
              \ </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> MissingSecurityElement</p>\
              \ </li> <li> <p> <i>Description:</i> The SOAP 1.1 request is missing\
              \ a security element.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400\
              \ Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p>\
              \ </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> MissingSecurityHeader</p>\
              \ </li> <li> <p> <i>Description:</i> Your request is missing a required\
              \ header.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p>\
              \ </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul>\
              \ </li> <li> <ul> <li> <p> <i>Code:</i> NoLoggingStatusForKey</p> </li>\
              \ <li> <p> <i>Description:</i> There is no such thing as a logging status\
              \ subresource for a key.</p> </li> <li> <p> <i>HTTP Status Code:</i>\
              \ 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i>\
              \ Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> NoSuchBucket</p>\
              \ </li> <li> <p> <i>Description:</i> The specified bucket does not exist.</p>\
              \ </li> <li> <p> <i>HTTP Status Code:</i> 404 Not Found</p> </li> <li>\
              \ <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li>\
              \ <ul> <li> <p> <i>Code:</i> NoSuchBucketPolicy</p> </li> <li> <p> <i>Description:</i>\
              \ The specified bucket does not have a bucket policy.</p> </li> <li>\
              \ <p> <i>HTTP Status Code:</i> 404 Not Found</p> </li> <li> <p> <i>SOAP\
              \ Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li>\
              \ <p> <i>Code:</i> NoSuchKey</p> </li> <li> <p> <i>Description:</i>\
              \ The specified key does not exist.</p> </li> <li> <p> <i>HTTP Status\
              \ Code:</i> 404 Not Found</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i>\
              \ Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> NoSuchLifecycleConfiguration</p>\
              \ </li> <li> <p> <i>Description:</i> The lifecycle configuration does\
              \ not exist. </p> </li> <li> <p> <i>HTTP Status Code:</i> 404 Not Found</p>\
              \ </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul>\
              \ </li> <li> <ul> <li> <p> <i>Code:</i> NoSuchUpload</p> </li> <li>\
              \ <p> <i>Description:</i> The specified multipart upload does not exist.\
              \ The upload ID might be invalid, or the multipart upload might have\
              \ been aborted or completed.</p> </li> <li> <p> <i>HTTP Status Code:</i>\
              \ 404 Not Found</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p>\
              \ </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> NoSuchVersion </p>\
              \ </li> <li> <p> <i>Description:</i> Indicates that the version ID specified\
              \ in the request does not match an existing version.</p> </li> <li>\
              \ <p> <i>HTTP Status Code:</i> 404 Not Found</p> </li> <li> <p> <i>SOAP\
              \ Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul> <li>\
              \ <p> <i>Code:</i> NotImplemented</p> </li> <li> <p> <i>Description:</i>\
              \ A header you provided implies functionality that is not implemented.</p>\
              \ </li> <li> <p> <i>HTTP Status Code:</i> 501 Not Implemented</p> </li>\
              \ <li> <p> <i>SOAP Fault Code Prefix:</i> Server</p> </li> </ul> </li>\
              \ <li> <ul> <li> <p> <i>Code:</i> NotSignedUp</p> </li> <li> <p> <i>Description:</i>\
              \ Your account is not signed up for the ArvanCloud S3 service. You must\
              \ sign up before you can use ArvanCloud S3. You can sign up at the following\
              \ URL: <a href=\"http://aws.amazon.com/s3\">ArvanCloud S3</a> </p> </li>\
              \ <li> <p> <i>HTTP Status Code:</i> 403 Forbidden</p> </li> <li> <p>\
              \ <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul>\
              \ <li> <p> <i>Code:</i> OperationAborted</p> </li> <li> <p> <i>Description:</i>\
              \ A conflicting conditional action is currently in progress against\
              \ this resource. Try again.</p> </li> <li> <p> <i>HTTP Status Code:</i>\
              \ 409 Conflict</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p>\
              \ </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> PermanentRedirect</p>\
              \ </li> <li> <p> <i>Description:</i> The bucket you are attempting to\
              \ access must be addressed using the specified endpoint. Send all future\
              \ requests to this endpoint.</p> </li> <li> <p> <i>HTTP Status Code:</i>\
              \ 301 Moved Permanently</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i>\
              \ Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> PreconditionFailed</p>\
              \ </li> <li> <p> <i>Description:</i> At least one of the preconditions\
              \ you specified did not hold.</p> </li> <li> <p> <i>HTTP Status Code:</i>\
              \ 412 Precondition Failed</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i>\
              \ Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> Redirect</p>\
              \ </li> <li> <p> <i>Description:</i> Temporary redirect.</p> </li> <li>\
              \ <p> <i>HTTP Status Code:</i> 307 Moved Temporarily</p> </li> <li>\
              \ <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li>\
              \ <ul> <li> <p> <i>Code:</i> RestoreAlreadyInProgress</p> </li> <li>\
              \ <p> <i>Description:</i> Object restore is already in progress.</p>\
              \ </li> <li> <p> <i>HTTP Status Code:</i> 409 Conflict</p> </li> <li>\
              \ <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li>\
              \ <ul> <li> <p> <i>Code:</i> RequestIsNotMultiPartContent</p> </li>\
              \ <li> <p> <i>Description:</i> Bucket POST must be of the enclosure-type\
              \ multipart/form-data.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400\
              \ Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p>\
              \ </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> RequestTimeout</p>\
              \ </li> <li> <p> <i>Description:</i> Your socket connection to the server\
              \ was not read from or written to within the timeout period.</p> </li>\
              \ <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li> <li> <p>\
              \ <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li> <li> <ul>\
              \ <li> <p> <i>Code:</i> RequestTimeTooSkewed</p> </li> <li> <p> <i>Description:</i>\
              \ The difference between the request time and the server's time is too\
              \ large.</p> </li> <li> <p> <i>HTTP Status Code:</i> 403 Forbidden</p>\
              \ </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul>\
              \ </li> <li> <ul> <li> <p> <i>Code:</i> RequestTorrentOfBucketError</p>\
              \ </li> <li> <p> <i>Description:</i> Requesting the torrent file of\
              \ a bucket is not permitted.</p> </li> <li> <p> <i>HTTP Status Code:</i>\
              \ 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i>\
              \ Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> SignatureDoesNotMatch</p>\
              \ </li> <li> <p> <i>Description:</i> The request signature we calculated\
              \ does not match the signature you provided. Check your Amazon Web Services\
              \ secret access key and signing method. For more information, see <a\
              \ href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/RESTAuthentication.html\"\
              >REST Authentication</a> and <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/SOAPAuthentication.html\"\
              >SOAP Authentication</a> for details.</p> </li> <li> <p> <i>HTTP Status\
              \ Code:</i> 403 Forbidden</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i>\
              \ Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> ServiceUnavailable</p>\
              \ </li> <li> <p> <i>Description:</i> Reduce your request rate.</p> </li>\
              \ <li> <p> <i>HTTP Status Code:</i> 503 Service Unavailable</p> </li>\
              \ <li> <p> <i>SOAP Fault Code Prefix:</i> Server</p> </li> </ul> </li>\
              \ <li> <ul> <li> <p> <i>Code:</i> SlowDown</p> </li> <li> <p> <i>Description:</i>\
              \ Reduce your request rate.</p> </li> <li> <p> <i>HTTP Status Code:</i>\
              \ 503 Slow Down</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Server</p>\
              \ </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> TemporaryRedirect</p>\
              \ </li> <li> <p> <i>Description:</i> You are being redirected to the\
              \ bucket while DNS updates.</p> </li> <li> <p> <i>HTTP Status Code:</i>\
              \ 307 Moved Temporarily</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i>\
              \ Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> TokenRefreshRequired</p>\
              \ </li> <li> <p> <i>Description:</i> The provided token must be refreshed.</p>\
              \ </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li>\
              \ <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li>\
              \ <li> <ul> <li> <p> <i>Code:</i> TooManyBuckets</p> </li> <li> <p>\
              \ <i>Description:</i> You have attempted to create more buckets than\
              \ allowed.</p> </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p>\
              \ </li> <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul>\
              \ </li> <li> <ul> <li> <p> <i>Code:</i> UnexpectedContent</p> </li>\
              \ <li> <p> <i>Description:</i> This request does not support content.</p>\
              \ </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li>\
              \ <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li>\
              \ <li> <ul> <li> <p> <i>Code:</i> UnresolvableGrantByEmailAddress</p>\
              \ </li> <li> <p> <i>Description:</i> The email address you provided\
              \ does not match any account on record.</p> </li> <li> <p> <i>HTTP Status\
              \ Code:</i> 400 Bad Request</p> </li> <li> <p> <i>SOAP Fault Code Prefix:</i>\
              \ Client</p> </li> </ul> </li> <li> <ul> <li> <p> <i>Code:</i> UserKeyMustBeSpecified</p>\
              \ </li> <li> <p> <i>Description:</i> The bucket POST must contain the\
              \ specified field name. If it is specified, check the order of the fields.</p>\
              \ </li> <li> <p> <i>HTTP Status Code:</i> 400 Bad Request</p> </li>\
              \ <li> <p> <i>SOAP Fault Code Prefix:</i> Client</p> </li> </ul> </li>\
              \ </ul> <p/>"
        Message:
          allOf:
          - $ref: '#/components/schemas/Message'
          - description: The error message contains a generic description of the error
              condition in English. It is intended for a human audience. Simple programs
              display the message directly to the end user if they encounter an error
              condition they don't know how or don't care to handle. Sophisticated
              programs with more exhaustive error handling and proper internationalization
              are more likely to ignore the error message.
      type: object
    ErrorCode:
      type: string
    ErrorMessage:
      type: string
    ExistingObjectReplicationStatus:
      enum:
      - Enabled
      - Disabled
      type: string
    ExistingObjectReplication:
      description: Optional configuration to replicate existing source bucket objects.
      properties:
        Status:
          allOf:
          - $ref: '#/components/schemas/ExistingObjectReplicationStatus'
          - description: <p/>
      required:
      - Status
      type: object
    ExpirationStatus:
      enum:
      - Enabled
      - Disabled
      type: string
    ExpiredObjectDeleteMarker:
      type: boolean
    ExposeHeader:
      type: string
    Expression:
      type: string
    ExpressionType:
      enum:
      - SQL
      type: string
    FetchOwner:
      type: boolean
    FilterRuleName:
      enum:
      - prefix
      - suffix
      type: string
    FilterRuleValue:
      type: string
    FilterRule:
      description: Specifies the ArvanCloud S3 object key name to filter on and whether
        to filter on the suffix or prefix of the key name.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/FilterRuleName'
          - description: "The object key name prefix or suffix identifying one or\
              \ more objects to which the filtering rule applies. The maximum length\
              \ is 1,024 characters. Overlapping prefixes and suffixes are not supported."
        Value:
          allOf:
          - $ref: '#/components/schemas/FilterRuleValue'
          - description: The value that the filter searches for in object key names.
      type: object
    FilterRuleList:
      description: A list of containers for the key-value pair that defines the criteria
        for the filter rule.
      items:
        $ref: '#/components/schemas/FilterRule'
      type: array
      xml:
        wrapped: false
    GetBucketAccelerateConfigurationRequest:
      properties: {}
      title: GetBucketAccelerateConfigurationRequest
      type: object
    GetBucketAclRequest:
      properties: {}
      title: GetBucketAclRequest
      type: object
    GetBucketAnalyticsConfigurationRequest:
      properties: {}
      title: GetBucketAnalyticsConfigurationRequest
      type: object
    GetBucketCorsRequest:
      properties: {}
      title: GetBucketCorsRequest
      type: object
    ServerSideEncryptionConfiguration:
      description: Specifies the default server-side-encryption configuration.
      properties:
        Rules:
          allOf:
          - $ref: '#/components/schemas/ServerSideEncryptionRules'
          - description: Container for information about a particular server-side
              encryption configuration rule.
            xml:
              name: Rule
      required:
      - Rules
      type: object
    GetBucketEncryptionRequest:
      properties: {}
      title: GetBucketEncryptionRequest
      type: object
    IntelligentTieringConfiguration:
      description: <p>Specifies the S3 Intelligent-Tiering configuration for an ArvanCloud
        S3 bucket.
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/IntelligentTieringId'
          - description: The ID used to identify the S3 Intelligent-Tiering configuration.
        Filter:
          allOf:
          - $ref: '#/components/schemas/IntelligentTieringFilter'
          - description: Specifies a bucket filter. The configuration only includes
              objects that meet the filter's criteria.
        Status:
          allOf:
          - $ref: '#/components/schemas/IntelligentTieringStatus'
          - description: Specifies the status of the configuration.
        Tierings:
          allOf:
          - $ref: '#/components/schemas/TieringList'
          - description: Specifies the S3 Intelligent-Tiering storage class tier of
              the configuration.
            xml:
              name: Tiering
      required:
      - Id
      - Status
      - Tierings
      type: object
    GetBucketIntelligentTieringConfigurationRequest:
      properties: {}
      title: GetBucketIntelligentTieringConfigurationRequest
      type: object
    InventoryConfiguration:
      description: 'Specifies the inventory configuration for an ArvanCloud S3 bucket. '
      properties:
        Destination:
          allOf:
          - $ref: '#/components/schemas/InventoryDestination'
          - description: Contains information about where to publish the inventory
              results.
        IsEnabled:
          allOf:
          - $ref: '#/components/schemas/IsEnabled'
          - description: "Specifies whether the inventory is enabled or disabled.\
              \ If set to <code>True</code>, an inventory list is generated. If set\
              \ to <code>False</code>, no inventory list is generated."
        Filter:
          allOf:
          - $ref: '#/components/schemas/InventoryFilter'
          - description: Specifies an inventory filter. The inventory only includes
              objects that meet the filter's criteria.
        Id:
          allOf:
          - $ref: '#/components/schemas/InventoryId'
          - description: The ID used to identify the inventory configuration.
        IncludedObjectVersions:
          allOf:
          - $ref: '#/components/schemas/InventoryIncludedObjectVersions'
          - description: "Object versions to include in the inventory list. If set\
              \ to <code>All</code>, the list includes all the object versions, which\
              \ adds the version-related fields <code>VersionId</code>, <code>IsLatest</code>,\
              \ and <code>DeleteMarker</code> to the list. If set to <code>Current</code>,\
              \ the list does not contain these version-related fields."
        OptionalFields:
          allOf:
          - $ref: '#/components/schemas/InventoryOptionalFields'
          - description: Contains the optional fields that are included in the inventory
              results.
        Schedule:
          allOf:
          - $ref: '#/components/schemas/InventorySchedule'
          - description: Specifies the schedule for generating inventory results.
      required:
      - Destination
      - Id
      - IncludedObjectVersions
      - IsEnabled
      - Schedule
      type: object
    GetBucketInventoryConfigurationRequest:
      properties: {}
      title: GetBucketInventoryConfigurationRequest
      type: object
    GetBucketLifecycleConfigurationRequest:
      properties: {}
      title: GetBucketLifecycleConfigurationRequest
      type: object
    GetBucketLifecycleRequest:
      properties: {}
      title: GetBucketLifecycleRequest
      type: object
    GetBucketLocationRequest:
      properties: {}
      title: GetBucketLocationRequest
      type: object
    GetBucketLoggingRequest:
      properties: {}
      title: GetBucketLoggingRequest
      type: object
    MetricsConfiguration:
      description: "Specifies a metrics configuration for the CloudWatch request metrics\
        \ (specified by the metrics configuration ID) from an ArvanCloud S3 bucket.\
        \ If you're updating an existing metrics configuration, note that this is\
        \ a full replacement of the existing metrics configuration. If you don't include\
        \ the elements you want to keep, they are erased. "
      properties:
        Id:
          allOf:
          - $ref: '#/components/schemas/MetricsId'
          - description: The ID used to identify the metrics configuration.
        Filter:
          allOf:
          - $ref: '#/components/schemas/MetricsFilter'
          - description: "Specifies a metrics configuration filter. The metrics configuration\
              \ will only include objects that meet the filter's criteria. A filter\
              \ must be a prefix, an object tag, an access point ARN, or a conjunction\
              \ (MetricsAndOperator)."
      required:
      - Id
      type: object
    GetBucketMetricsConfigurationRequest:
      properties: {}
      title: GetBucketMetricsConfigurationRequest
      type: object
    GetBucketNotificationConfigurationRequest:
      properties: {}
      title: GetBucketNotificationConfigurationRequest
      type: object
    OwnershipControls:
      description: The container element for a bucket's ownership controls.
      properties:
        Rules:
          allOf:
          - $ref: '#/components/schemas/OwnershipControlsRules'
          - description: The container element for an ownership control rule.
            xml:
              name: Rule
      required:
      - Rules
      type: object
    GetBucketOwnershipControlsRequest:
      properties: {}
      title: GetBucketOwnershipControlsRequest
      type: object
    Policy:
      type: string
    GetBucketPolicyRequest:
      properties: {}
      title: GetBucketPolicyRequest
      type: object
    PolicyStatus:
      description: The container element for a bucket's policy status.
      properties:
        IsPublic:
          allOf:
          - $ref: '#/components/schemas/IsPublic'
          - description: The policy status for this bucket. <code>TRUE</code> indicates
              that this bucket is public. <code>FALSE</code> indicates that the bucket
              is not public.
      type: object
    GetBucketPolicyStatusRequest:
      properties: {}
      title: GetBucketPolicyStatusRequest
      type: object
    ReplicationConfiguration:
      description: "A container for replication rules. You can add up to 1,000 rules.\
        \ The maximum size of a replication configuration is 2 MB."
      properties:
        Role:
          allOf:
          - $ref: '#/components/schemas/Role'
          - description: The Amazon Resource Name (ARN) of the Identity and Access
              Management (IAM) role that ArvanCloud S3 assumes when replicating objects.
        Rules:
          allOf:
          - $ref: '#/components/schemas/ReplicationRules'
          - description: "A container for one or more replication rules. A replication\
              \ configuration must have at least one rule and can contain a maximum\
              \ of 1,000 rules. "
            xml:
              name: Rule
      required:
      - Role
      - Rules
      type: object
    GetBucketReplicationRequest:
      properties: {}
      title: GetBucketReplicationRequest
      type: object
    GetBucketRequestPaymentRequest:
      properties: {}
      title: GetBucketRequestPaymentRequest
      type: object
    GetBucketTaggingRequest:
      properties: {}
      title: GetBucketTaggingRequest
      type: object
    MFADeleteStatus:
      enum:
      - Enabled
      - Disabled
      type: string
    GetBucketVersioningRequest:
      properties: {}
      title: GetBucketVersioningRequest
      type: object
    GetBucketWebsiteRequest:
      properties: {}
      title: GetBucketWebsiteRequest
      type: object
    GetObjectAclRequest:
      properties: {}
      title: GetObjectAclRequest
      type: object
    ObjectLockLegalHold:
      description: A Legal Hold configuration for an object.
      properties:
        Status:
          allOf:
          - $ref: '#/components/schemas/ObjectLockLegalHoldStatus'
          - description: Indicates whether the specified object has a Legal Hold in
              place.
      type: object
    GetObjectLegalHoldRequest:
      properties: {}
      title: GetObjectLegalHoldRequest
      type: object
    ObjectLockConfiguration:
      description: The container element for Object Lock configuration parameters.
      properties:
        ObjectLockEnabled:
          allOf:
          - $ref: '#/components/schemas/ObjectLockEnabled'
          - description: 'Indicates whether this bucket has an Object Lock configuration
              enabled. Enable <code>ObjectLockEnabled</code> when you apply <code>ObjectLockConfiguration</code>
              to a bucket. '
        Rule:
          $ref: '#/components/schemas/ObjectLockConfiguration_Rule'
      type: object
    GetObjectLockConfigurationRequest:
      properties: {}
      title: GetObjectLockConfigurationRequest
      type: object
    Restore:
      type: string
    MissingMeta:
      type: integer
    ReplicationStatus:
      enum:
      - COMPLETE
      - PENDING
      - FAILED
      - REPLICA
      type: string
    PartsCount:
      type: integer
    TagCount:
      type: integer
    IfMatch:
      type: string
    IfModifiedSince:
      format: date-time
      type: string
    IfNoneMatch:
      type: string
    IfUnmodifiedSince:
      format: date-time
      type: string
    Range:
      type: string
    ResponseCacheControl:
      type: string
    ResponseContentDisposition:
      type: string
    ResponseContentEncoding:
      type: string
    ResponseContentLanguage:
      type: string
    ResponseContentType:
      type: string
    ResponseExpires:
      format: date-time
      type: string
    GetObjectRequest:
      properties: {}
      title: GetObjectRequest
      type: object
    GetObjectResponseStatusCode:
      type: integer
    ObjectLockRetention:
      description: A Retention configuration for an object.
      properties:
        Mode:
          allOf:
          - $ref: '#/components/schemas/ObjectLockRetentionMode'
          - description: Indicates the Retention mode for the specified object.
        RetainUntilDate:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: The date on which this Object Lock Retention will expire.
      type: object
    GetObjectRetentionRequest:
      properties: {}
      title: GetObjectRetentionRequest
      type: object
    GetObjectTaggingRequest:
      properties: {}
      title: GetObjectTaggingRequest
      type: object
    GetObjectTorrentRequest:
      properties: {}
      title: GetObjectTorrentRequest
      type: object
    PublicAccessBlockConfiguration:
      description: The PublicAccessBlock configuration that you want to apply to this
        ArvanCloud S3 bucket. You can enable the configuration options in any combination.
      properties:
        BlockPublicAcls:
          allOf:
          - $ref: '#/components/schemas/Setting'
          - description: <p>Specifies whether ArvanCloud S3 should block public access
              control lists (ACLs) for this bucket and objects in this bucket. Setting
              this element to <code>TRUE</code> causes the following behavior:</p>
              <ul> <li> <p>PUT Bucket acl and PUT Object acl calls fail if the specified
              ACL is public.</p> </li> <li> <p>PUT Object calls fail if the request
              includes a public ACL.</p> </li> <li> <p>PUT Bucket calls fail if the
              request includes a public ACL.</p> </li> </ul> <p>Enabling this setting
              doesn't affect existing policies or ACLs.</p>
        IgnorePublicAcls:
          allOf:
          - $ref: '#/components/schemas/Setting'
          - description: <p>Specifies whether ArvanCloud S3 should ignore public ACLs
              for this bucket and objects in this bucket. Setting this element to
              <code>TRUE</code> causes ArvanCloud S3 to ignore all public ACLs on
              this bucket and objects in this bucket.</p> <p>Enabling this setting
              doesn't affect the persistence of any existing ACLs and doesn't prevent
              new public ACLs from being set.</p>
        BlockPublicPolicy:
          allOf:
          - $ref: '#/components/schemas/Setting'
          - description: <p>Specifies whether ArvanCloud S3 should block public bucket
              policies for this bucket. Setting this element to <code>TRUE</code>
              causes ArvanCloud S3 to reject calls to PUT Bucket policy if the specified
              bucket policy allows public access. </p> <p>Enabling this setting doesn't
              affect existing bucket policies.</p>
        RestrictPublicBuckets:
          allOf:
          - $ref: '#/components/schemas/Setting'
          - description: "<p>Specifies whether ArvanCloud S3 should restrict public\
              \ bucket policies for this bucket. Setting this element to <code>TRUE</code>\
              \ restricts access to this bucket to only Amazon Web Service principals\
              \ and authorized users within this account if the bucket has a public\
              \ policy.</p> <p>Enabling this setting doesn't affect previously stored\
              \ bucket policies, except that public and cross-account access within\
              \ any public bucket policy, including non-public delegation to specific\
              \ accounts, is blocked.</p>"
      type: object
    GetPublicAccessBlockRequest:
      properties: {}
      title: GetPublicAccessBlockRequest
      type: object
    Grantee:
      description: Container for the person being granted permissions.
      properties:
        DisplayName:
          allOf:
          - $ref: '#/components/schemas/DisplayName'
          - description: Screen name of the grantee.
        EmailAddress:
          allOf:
          - $ref: '#/components/schemas/EmailAddress'
        ID:
          allOf:
          - $ref: '#/components/schemas/ID'
          - description: The canonical user ID of the grantee.
        Type:
          allOf:
          - $ref: '#/components/schemas/Type'
          - description: Type of grantee
            xml:
              name: xsi:type
        URI:
          allOf:
          - $ref: '#/components/schemas/URI'
          - description: URI of the grantee group.
      required:
      - Type
      type: object
      xml:
        attribute: true
        namespace: http://www.w3.org/2001/XMLSchema-instance
    Permission:
      enum:
      - FULL_CONTROL
      - WRITE
      - WRITE_ACP
      - READ
      - READ_ACP
      type: string
    Grant:
      description: Container for grant information.
      properties:
        Grantee:
          $ref: '#/components/schemas/Grant_Grantee'
        Permission:
          allOf:
          - $ref: '#/components/schemas/Permission'
          - description: Specifies the permission given to the grantee.
      type: object
    Type:
      enum:
      - CanonicalUser
      - AmazonCustomerByEmail
      - Group
      type: string
    URI:
      type: string
    HeadBucketRequest:
      properties: {}
      title: HeadBucketRequest
      type: object
    HeadObjectRequest:
      properties: {}
      title: HeadObjectRequest
      type: object
    HostName:
      type: string
    HttpRedirectCode:
      type: string
    Suffix:
      type: string
    Initiated:
      format: date-time
      type: string
    Initiator:
      description: 'Container element that identifies who initiated the multipart
        upload. '
      properties:
        ID:
          allOf:
          - $ref: '#/components/schemas/ID'
          - description: "If the principal is an Amazon Web Services account, it provides\
              \ the Canonical User ID. If the principal is an IAM User, it provides\
              \ a user ARN value."
        DisplayName:
          allOf:
          - $ref: '#/components/schemas/DisplayName'
          - description: Name of the Principal.
      type: object
    InputSerialization:
      description: Describes the serialization format of the object.
      properties:
        CSV:
          $ref: '#/components/schemas/InputSerialization_CSV'
        CompressionType:
          allOf:
          - $ref: '#/components/schemas/CompressionType'
          - description: "Specifies object's compression format. Valid values: NONE,\
              \ GZIP, BZIP2. Default Value: NONE."
        JSON:
          $ref: '#/components/schemas/InputSerialization_JSON'
        Parquet:
          allOf:
          - $ref: '#/components/schemas/ParquetInput'
          - description: Specifies Parquet as object's input serialization format.
      type: object
    IntelligentTieringAccessTier:
      enum:
      - ARCHIVE_ACCESS
      - DEEP_ARCHIVE_ACCESS
      type: string
    IntelligentTieringAndOperator:
      description: A container for specifying S3 Intelligent-Tiering filters. The
        filters determine the subset of objects to which the rule applies.
      properties:
        Prefix:
          allOf:
          - $ref: '#/components/schemas/Prefix'
          - description: An object key name prefix that identifies the subset of objects
              to which the configuration applies.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagSet'
          - description: All of these tags must exist in the object's tag set in order
              for the configuration to apply.
            xml:
              name: Tag
      type: object
      xml:
        wrapped: false
    IntelligentTieringConfigurationList:
      items:
        $ref: '#/components/schemas/IntelligentTieringConfiguration'
      type: array
      xml:
        wrapped: false
    IntelligentTieringDays:
      type: integer
    InventoryConfigurationList:
      items:
        $ref: '#/components/schemas/InventoryConfiguration'
      type: array
      xml:
        wrapped: false
    InventoryS3BucketDestination:
      description: "Contains the bucket name, file format, bucket owner (optional),\
        \ and prefix (optional) where inventory results are published."
      properties:
        AccountId:
          allOf:
          - $ref: '#/components/schemas/AccountId'
          - description: "<p>The account ID that owns the destination S3 bucket. If\
              \ no account ID is provided, the owner is not validated before exporting\
              \ data. </p> <note> <p> Although this value is optional, we strongly\
              \ recommend that you set it to help prevent problems if the destination\
              \ bucket ownership changes. </p> </note>"
        Bucket:
          allOf:
          - $ref: '#/components/schemas/BucketName'
          - description: The Amazon Resource Name (ARN) of the bucket where inventory
              results will be published.
        Format:
          allOf:
          - $ref: '#/components/schemas/InventoryFormat'
          - description: Specifies the output format of the inventory results.
        Prefix:
          allOf:
          - $ref: '#/components/schemas/Prefix'
          - description: The prefix that is prepended to all inventory results.
        Encryption:
          $ref: '#/components/schemas/InventoryS3BucketDestination_Encryption'
      required:
      - Bucket
      - Format
      type: object
    SSES3:
      description: Specifies the use of SSE-S3 to encrypt delivered inventory reports.
      properties: {}
      type: object
    SSEKMS:
      description: Specifies the use of SSE-KMS to encrypt delivered inventory reports.
      properties:
        KeyId:
          allOf:
          - $ref: '#/components/schemas/SSEKMSKeyId'
          - description: Specifies the ID of the Amazon Web Services Key Management
              Service (Amazon Web Services KMS) symmetric customer managed key to
              use for encrypting inventory reports.
      required:
      - KeyId
      type: object
    InventoryEncryption:
      description: Contains the type of server-side encryption used to encrypt the
        inventory results.
      properties:
        SSES3:
          allOf:
          - $ref: '#/components/schemas/SSES3'
          - description: Specifies the use of SSE-S3 to encrypt delivered inventory
              reports.
            xml:
              name: SSE-S3
        SSEKMS:
          $ref: '#/components/schemas/InventoryEncryption_SSEKMS'
      type: object
    InventoryFormat:
      enum:
      - CSV
      - ORC
      - Parquet
      type: string
    InventoryFrequency:
      enum:
      - Daily
      - Weekly
      type: string
    InventoryOptionalField:
      enum:
      - Size
      - LastModifiedDate
      - StorageClass
      - ETag
      - IsMultipartUploaded
      - ReplicationStatus
      - EncryptionStatus
      - ObjectLockRetainUntilDate
      - ObjectLockMode
      - ObjectLockLegalHoldStatus
      - IntelligentTieringAccessTier
      - BucketKeyStatus
      type: string
    IsPublic:
      type: boolean
    IsTruncated:
      type: boolean
    JSONType:
      enum:
      - DOCUMENT
      - LINES
      type: string
    KeyCount:
      type: integer
    KeyMarker:
      type: string
    LambdaFunctionArn:
      type: string
    NotificationConfigurationFilter:
      description: Specifies object key name filtering rules.
      properties:
        Key:
          $ref: '#/components/schemas/NotificationConfigurationFilter_Key'
      type: object
    LambdaFunctionConfiguration:
      description: A container for specifying the configuration for Lambda notifications.
      properties:
        Id:
          description: "An optional unique identifier for configurations in a notification\
            \ configuration. If you don't provide one, ArvanCloud S3 will assign an\
            \ ID."
          type: string
        LambdaFunctionArn:
          allOf:
          - $ref: '#/components/schemas/LambdaFunctionArn'
          - description: The Amazon Resource Name (ARN) of the Lambda function that
              ArvanCloud S3 invokes when the specified event type occurs.
            xml:
              name: CloudFunction
        Events:
          allOf:
          - $ref: '#/components/schemas/EventList'
          - description: the ArvanCloud S3 bucket event for which to invoke the Lambda
              function.
            xml:
              name: Event
        Filter:
          $ref: '#/components/schemas/NotificationConfigurationFilter'
      required:
      - Events
      - LambdaFunctionArn
      type: object
    LifecycleConfiguration:
      description: Container for lifecycle rules. You can add as many as 1000 rules.
      properties:
        Rules:
          allOf:
          - $ref: '#/components/schemas/Rules'
          - description: 'Specifies lifecycle configuration rules for an ArvanCloud
              S3 bucket. '
            xml:
              name: Rule
      required:
      - Rules
      type: object
    LifecycleExpiration:
      description: Container for the expiration for the lifecycle of the object.
      properties:
        Date:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: Indicates at what date the object is to be moved or deleted.
              Should be in GMT ISO 8601 Format.
        Days:
          allOf:
          - $ref: '#/components/schemas/Days'
          - description: "Indicates the lifetime, in days, of the objects that are\
              \ subject to the rule. The value must be a non-zero positive integer."
        ExpiredObjectDeleteMarker:
          allOf:
          - $ref: '#/components/schemas/ExpiredObjectDeleteMarker'
          - description: "Indicates whether ArvanCloud S3 will remove a delete marker\
              \ with no noncurrent versions. If set to true, the delete marker will\
              \ be expired; if set to false the policy takes no action. This cannot\
              \ be specified with Days or Date in a Lifecycle Expiration Policy."
      type: object
    LifecycleRuleFilter:
      description: "The <code>Filter</code> is used to identify objects that a Lifecycle\
        \ Rule applies to. A <code>Filter</code> must have exactly one of <code>Prefix</code>,\
        \ <code>Tag</code>, or <code>And</code> specified."
      properties:
        Prefix:
          allOf:
          - $ref: '#/components/schemas/Prefix'
          - description: <p>Prefix identifying one or more objects to which the rule
              applies.</p> <important> <p>Replacement must be made for object keys
              containing special characters (such as carriage returns) when using
              XML requests.
        Tag:
          $ref: '#/components/schemas/LifecycleRuleFilter_Tag'
        And:
          $ref: '#/components/schemas/LifecycleRuleAndOperator'
      type: object
    TransitionList:
      items:
        $ref: '#/components/schemas/Transition'
      type: array
      xml:
        wrapped: false
    NoncurrentVersionTransitionList:
      items:
        $ref: '#/components/schemas/NoncurrentVersionTransition'
      type: array
      xml:
        wrapped: false
    NoncurrentVersionExpiration:
      description: "Specifies when noncurrent object versions expire. Upon expiration,\
        \ ArvanCloud S3 permanently deletes the noncurrent object versions. You set\
        \ this lifecycle configuration action on a bucket that has versioning enabled\
        \ (or suspended) to request that ArvanCloud S3 delete noncurrent object versions\
        \ at a specific period in the object's lifetime."
      properties:
        NoncurrentDays:
          allOf:
          - $ref: '#/components/schemas/Days'
          - description: Specifies the number of days an object is noncurrent before
              ArvanCloud S3 can perform the associated action.
      type: object
    LifecycleRule:
      description: A lifecycle rule for individual objects in an ArvanCloud S3 bucket.
      properties:
        Expiration:
          $ref: '#/components/schemas/LifecycleRule_Expiration'
        ID:
          allOf:
          - $ref: '#/components/schemas/ID'
          - description: Unique identifier for the rule. The value cannot be longer
              than 255 characters.
        Prefix:
          allOf:
          - $ref: '#/components/schemas/Prefix'
          - deprecated: true
            description: "<p>Prefix identifying one or more objects to which the rule\
              \ applies. This is no longer used; use <code>Filter</code> instead.</p>\
              \ <important> <p>Replacement must be made for object keys containing\
              \ special characters (such as carriage returns) when using XML requests.\
              \ For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/userguide/object-keys.html#object-key-xml-related-constraints\"\
              > XML related object key constraints</a>.</p> </important>"
        Filter:
          $ref: '#/components/schemas/LifecycleRule_Filter'
        Status:
          allOf:
          - $ref: '#/components/schemas/ExpirationStatus'
          - description: "If 'Enabled', the rule is currently being applied. If 'Disabled',\
              \ the rule is not currently being applied."
        Transitions:
          allOf:
          - $ref: '#/components/schemas/TransitionList'
          - description: Specifies when an ArvanCloud S3 object transitions to a specified
              storage class.
            xml:
              name: Transition
        NoncurrentVersionTransitions:
          allOf:
          - $ref: '#/components/schemas/NoncurrentVersionTransitionList'
          - description: " Specifies the transition rule for the lifecycle rule that\
              \ describes when noncurrent objects transition to a specific storage\
              \ class. If your bucket is versioning-enabled (or versioning is suspended),\
              \ you can set this action to request that ArvanCloud S3 transition noncurrent\
              \ object versions to a specific storage class at a set period in the\
              \ object's lifetime. "
            xml:
              name: NoncurrentVersionTransition
        NoncurrentVersionExpiration:
          $ref: '#/components/schemas/NoncurrentVersionExpiration'
        AbortIncompleteMultipartUpload:
          $ref: '#/components/schemas/AbortIncompleteMultipartUpload'
      required:
      - Status
      type: object
    LifecycleRuleAndOperator:
      description: This is used in a Lifecycle Rule Filter to apply a logical AND
        to two or more predicates. The Lifecycle Rule will apply to any object matching
        all of the predicates configured inside the And operator.
      properties:
        Prefix:
          allOf:
          - $ref: '#/components/schemas/Prefix'
          - description: Prefix identifying one or more objects to which the rule
              applies.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagSet'
          - description: All of these tags must exist in the object's tag set in order
              for the rule to apply.
            xml:
              name: Tag
      type: object
      xml:
        wrapped: false
    Token:
      type: string
    NextToken:
      type: string
    ListBucketAnalyticsConfigurationsRequest:
      properties: {}
      title: ListBucketAnalyticsConfigurationsRequest
      type: object
    ListBucketIntelligentTieringConfigurationsRequest:
      properties: {}
      title: ListBucketIntelligentTieringConfigurationsRequest
      type: object
    ListBucketInventoryConfigurationsRequest:
      properties: {}
      title: ListBucketInventoryConfigurationsRequest
      type: object
    MetricsConfigurationList:
      items:
        $ref: '#/components/schemas/MetricsConfiguration'
      type: array
      xml:
        wrapped: false
    ListBucketMetricsConfigurationsRequest:
      properties: {}
      title: ListBucketMetricsConfigurationsRequest
      type: object
    UploadIdMarker:
      type: string
    NextKeyMarker:
      type: string
    NextUploadIdMarker:
      type: string
    MaxUploads:
      type: integer
    MultipartUploadList:
      items:
        $ref: '#/components/schemas/MultipartUpload'
      type: array
      xml:
        wrapped: false
    ListMultipartUploadsRequest:
      properties: {}
      title: ListMultipartUploadsRequest
      type: object
    VersionIdMarker:
      type: string
    NextVersionIdMarker:
      type: string
    ObjectVersionList:
      items:
        $ref: '#/components/schemas/ObjectVersion'
      type: array
      xml:
        wrapped: false
    MaxKeys:
      type: integer
    ListObjectVersionsRequest:
      properties: {}
      title: ListObjectVersionsRequest
      type: object
    Marker:
      type: string
    NextMarker:
      type: string
    ObjectList:
      items:
        $ref: '#/components/schemas/Object'
      type: array
      xml:
        wrapped: false
    ListObjectsRequest:
      properties: {}
      title: ListObjectsRequest
      type: object
    StartAfter:
      type: string
    ListObjectsV2Request:
      properties: {}
      title: ListObjectsV2Request
      type: object
    PartNumberMarker:
      type: integer
    NextPartNumberMarker:
      type: integer
    MaxParts:
      type: integer
    Parts:
      items:
        $ref: '#/components/schemas/Part'
      type: array
      xml:
        wrapped: false
    ListPartsRequest:
      properties: {}
      title: ListPartsRequest
      type: object
    LocationPrefix:
      type: string
    TargetBucket:
      type: string
    TargetGrants:
      items:
        $ref: '#/components/schemas/TargetGrants_inner'
      type: array
    TargetPrefix:
      type: string
    MetadataKey:
      type: string
    MetadataEntry:
      description: A metadata key-value pair to store with an object.
      properties:
        Name:
          allOf:
          - $ref: '#/components/schemas/MetadataKey'
          - description: Name of the Object.
        Value:
          allOf:
          - $ref: '#/components/schemas/MetadataValue'
          - description: Value of the Object.
      type: object
    MetricsStatus:
      enum:
      - Enabled
      - Disabled
      type: string
    ReplicationTimeValue:
      description: ' A container specifying the time value for S3 Replication Time
        Control (S3 RTC) and replication metrics <code>EventThreshold</code>. '
      properties:
        Minutes:
          allOf:
          - $ref: '#/components/schemas/Minutes'
          - description: "<p> Contains an integer specifying time in minutes. </p>\
              \ <p> Valid value: 15</p>"
      type: object
    MetricsAndOperator:
      description: "A conjunction (logical AND) of predicates, which is used in evaluating\
        \ a metrics filter. The operator must have at least two predicates, and an\
        \ object must match all of the predicates in order for the filter to apply."
      properties:
        Prefix:
          allOf:
          - $ref: '#/components/schemas/Prefix'
          - description: The prefix used when evaluating an AND predicate.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagSet'
          - description: The list of tags used when evaluating an AND predicate.
            xml:
              name: Tag
        AccessPointArn:
          allOf:
          - $ref: '#/components/schemas/AccessPointArn'
          - description: The access point ARN used when evaluating an AND predicate.
      type: object
      xml:
        wrapped: false
    Minutes:
      type: integer
    MultipartUpload:
      description: Container for the <code>MultipartUpload</code> for the ArvanCloud
        S3 object.
      properties:
        UploadId:
          allOf:
          - $ref: '#/components/schemas/MultipartUploadId'
          - description: Upload ID that identifies the multipart upload.
        Key:
          allOf:
          - $ref: '#/components/schemas/ObjectKey'
          - description: Key of the object for which the multipart upload was initiated.
        Initiated:
          allOf:
          - $ref: '#/components/schemas/Initiated'
          - description: Date and time at which the multipart upload was initiated.
        StorageClass:
          allOf:
          - $ref: '#/components/schemas/StorageClass'
          - description: The class of storage used to store the object.
        Owner:
          allOf:
          - $ref: '#/components/schemas/Owner'
          - description: 'Specifies the owner of the object that is part of the multipart
              upload. '
        Initiator:
          $ref: '#/components/schemas/MultipartUpload_Initiator'
      type: object
    TransitionStorageClass:
      enum:
      - GLACIER
      - STANDARD_IA
      - ONEZONE_IA
      - INTELLIGENT_TIERING
      - DEEP_ARCHIVE
      type: string
    NoncurrentVersionTransition:
      description: "Container for the transition rule that describes when noncurrent\
        \ objects transition to the <code>STANDARD_IA</code>, <code>ONEZONE_IA</code>,\
        \ <code>INTELLIGENT_TIERING</code>, <code>GLACIER</code>, or <code>DEEP_ARCHIVE</code>\
        \ storage class. If your bucket is versioning-enabled (or versioning is suspended),\
        \ you can set this action to request that ArvanCloud S3 transition noncurrent\
        \ object versions to the <code>STANDARD_IA</code>, <code>ONEZONE_IA</code>,\
        \ <code>INTELLIGENT_TIERING</code>, <code>GLACIER</code>, or <code>DEEP_ARCHIVE</code>\
        \ storage class at a specific period in the object's lifetime."
      properties:
        NoncurrentDays:
          allOf:
          - $ref: '#/components/schemas/Days'
          - description: Specifies the number of days an object is noncurrent before
              ArvanCloud S3 can perform the associated action.
        StorageClass:
          allOf:
          - $ref: '#/components/schemas/TransitionStorageClass'
          - description: The class of storage used to store the object.
      type: object
    S3KeyFilter:
      description: A container for object key name prefix and suffix filtering rules.
      properties:
        FilterRules:
          allOf:
          - $ref: '#/components/schemas/FilterRuleList'
          - xml:
              name: FilterRule
      type: object
    Size:
      type: integer
    ObjectStorageClass:
      enum:
      - STANDARD
      - REDUCED_REDUNDANCY
      - GLACIER
      - STANDARD_IA
      - ONEZONE_IA
      - INTELLIGENT_TIERING
      - DEEP_ARCHIVE
      type: string
    Object:
      description: An object consists of data and its descriptive metadata.
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/ObjectKey'
          - description: The name that you assign to an object. You use the object
              key to retrieve the object.
        LastModified:
          allOf:
          - $ref: '#/components/schemas/LastModified'
          - description: Creation date of the object.
        ETag:
          allOf:
          - $ref: '#/components/schemas/ETag'
          - description: "<p>The entity tag is a hash of the object. The ETag reflects\
              \ changes only to the contents of an object, not its metadata. The ETag\
              \ may or may not be an MD5 digest of the object data. Whether or not\
              \ it is depends on how the object was created and how it is encrypted\
              \ as described below:</p> <ul> <li> <p>Objects created by the PUT Object,\
              \ POST Object, or Copy operation, or through the Amazon Web Services\
              \ Management Console, and are encrypted by SSE-S3 or plaintext, have\
              \ ETags that are an MD5 digest of their object data.</p> </li> <li>\
              \ <p>Objects created by the PUT Object, POST Object, or Copy operation,\
              \ or through the Amazon Web Services Management Console, and are encrypted\
              \ by SSE-C or SSE-KMS, have ETags that are not an MD5 digest of their\
              \ object data.</p> </li> <li> <p>If an object is created by either the\
              \ Multipart Upload or Part Copy operation, the ETag is not an MD5 digest,\
              \ regardless of the method of encryption.</p> </li> </ul>"
        Size:
          allOf:
          - $ref: '#/components/schemas/Size'
          - description: Size in bytes of the object
        StorageClass:
          allOf:
          - $ref: '#/components/schemas/ObjectStorageClass'
          - description: The class of storage used to store the object.
        Owner:
          allOf:
          - $ref: '#/components/schemas/Owner'
          - description: The owner of the object
      type: object
    ObjectIdentifier:
      description: Object Identifier is unique value to identify objects.
      properties:
        Key:
          allOf:
          - $ref: '#/components/schemas/ObjectKey'
          - description: <p>Key name of the object.</p> <important> <p>Replacement
              must be made for object keys containing special characters (such as
              carriage returns) when using XML requests.
        VersionId:
          allOf:
          - $ref: '#/components/schemas/ObjectVersionId'
          - description: VersionId for the specific version of the object to delete.
      required:
      - Key
      type: object
    ObjectLockToken:
      type: string
    ObjectOwnership:
      description: <p>The container element for object ownership for a bucket's ownership
        controls.</p> <p>BucketOwnerPreferred - Objects uploaded to the bucket change
        ownership to the bucket owner if the objects are uploaded with the <code>bucket-owner-full-control</code>
        canned ACL.</p> <p>ObjectWriter - The uploading account will own the object
        if the object is uploaded with the <code>bucket-owner-full-control</code>
        canned ACL.</p>
      enum:
      - BucketOwnerPreferred
      - ObjectWriter
      type: string
    ObjectVersionStorageClass:
      enum:
      - STANDARD
      type: string
    ObjectVersion:
      description: The version of an object.
      properties:
        ETag:
          allOf:
          - $ref: '#/components/schemas/ETag'
          - description: The entity tag is an MD5 hash of that version of the object.
        Size:
          allOf:
          - $ref: '#/components/schemas/Size'
          - description: Size in bytes of the object.
        StorageClass:
          allOf:
          - $ref: '#/components/schemas/ObjectVersionStorageClass'
          - description: The class of storage used to store the object.
        Key:
          allOf:
          - $ref: '#/components/schemas/ObjectKey'
          - description: The object key.
        VersionId:
          allOf:
          - $ref: '#/components/schemas/ObjectVersionId'
          - description: Version ID of an object.
        IsLatest:
          allOf:
          - $ref: '#/components/schemas/IsLatest'
          - description: Specifies whether the object is (true) or is not (false)
              the latest version of an object.
        LastModified:
          allOf:
          - $ref: '#/components/schemas/LastModified'
          - description: Date and time the object was last modified.
        Owner:
          allOf:
          - $ref: '#/components/schemas/Owner'
          - description: Specifies the owner of the object.
      type: object
    S3Location:
      description: Describes an ArvanCloud S3 location that will receive the results
        of the restore request.
      properties:
        BucketName:
          allOf:
          - $ref: '#/components/schemas/BucketName'
          - description: The name of the bucket where the restore results will be
              placed.
        Prefix:
          allOf:
          - $ref: '#/components/schemas/LocationPrefix'
          - description: The prefix that is prepended to the restore results for this
              request.
        Encryption:
          $ref: '#/components/schemas/Encryption'
        CannedACL:
          allOf:
          - $ref: '#/components/schemas/ObjectCannedACL'
          - description: The canned ACL to apply to the restore results.
        AccessControlList:
          allOf:
          - $ref: '#/components/schemas/Grants'
          - description: A list of grants that control access to the staged results.
        Tagging:
          $ref: '#/components/schemas/S3Location_Tagging'
        UserMetadata:
          allOf:
          - $ref: '#/components/schemas/UserMetadata'
          - description: A list of metadata to store with the restore results in S3.
        StorageClass:
          allOf:
          - $ref: '#/components/schemas/StorageClass'
          - description: The class of storage used to store the restore results.
      required:
      - BucketName
      - Prefix
      type: object
    OutputSerialization:
      description: Describes how results of the Select job are serialized.
      properties:
        CSV:
          $ref: '#/components/schemas/OutputSerialization_CSV'
        JSON:
          $ref: '#/components/schemas/OutputSerialization_JSON'
      type: object
    OwnershipControlsRule:
      description: The container element for an ownership control rule.
      properties:
        ObjectOwnership:
          $ref: '#/components/schemas/ObjectOwnership'
      required:
      - ObjectOwnership
      type: object
    Part:
      description: Container for elements related to a part.
      properties:
        PartNumber:
          allOf:
          - $ref: '#/components/schemas/PartNumber'
          - description: "Part number identifying the part. This is a positive integer\
              \ between 1 and 10,000."
        LastModified:
          allOf:
          - $ref: '#/components/schemas/LastModified'
          - description: Date and time at which the part was uploaded.
        ETag:
          allOf:
          - $ref: '#/components/schemas/ETag'
          - description: Entity tag returned when the part was uploaded.
        Size:
          allOf:
          - $ref: '#/components/schemas/Size'
          - description: Size in bytes of the uploaded part data.
      type: object
    Priority:
      type: integer
    Progress:
      description: This data type contains information about progress of an operation.
      properties:
        BytesScanned:
          allOf:
          - $ref: '#/components/schemas/BytesScanned'
          - description: The current number of object bytes scanned.
        BytesProcessed:
          allOf:
          - $ref: '#/components/schemas/BytesProcessed'
          - description: The current number of uncompressed object bytes processed.
        BytesReturned:
          allOf:
          - $ref: '#/components/schemas/BytesReturned'
          - description: The current number of bytes of records payload data returned.
      type: object
    ProgressEvent:
      description: This data type contains information about the progress event of
        an operation.
      properties:
        Details:
          $ref: '#/components/schemas/ProgressEvent_Details'
      type: object
    Protocol:
      enum:
      - http
      - https
      type: string
    PutBucketAccelerateConfigurationRequest:
      properties:
        AccelerateConfiguration:
          $ref: '#/components/schemas/PutBucketAccelerateConfigurationRequest_AccelerateConfiguration'
      required:
      - AccelerateConfiguration
      title: PutBucketAccelerateConfigurationRequest
      type: object
      xml:
        namespace: http://s3.amazonaws.com/doc/2006-03-01/
    PutBucketAclRequest:
      properties:
        AccessControlPolicy:
          $ref: '#/components/schemas/PutBucketAclRequest_AccessControlPolicy'
      title: PutBucketAclRequest
      type: object
      xml:
        namespace: http://s3.amazonaws.com/doc/2006-03-01/
    PutBucketAnalyticsConfigurationRequest:
      properties:
        AnalyticsConfiguration:
          $ref: '#/components/schemas/PutBucketAnalyticsConfigurationRequest_AnalyticsConfiguration'
      required:
      - AnalyticsConfiguration
      title: PutBucketAnalyticsConfigurationRequest
      type: object
      xml:
        namespace: http://s3.amazonaws.com/doc/2006-03-01/
    PutBucketCorsRequest:
      properties:
        CORSConfiguration:
          $ref: '#/components/schemas/PutBucketCorsRequest_CORSConfiguration'
      required:
      - CORSConfiguration
      title: PutBucketCorsRequest
      type: object
      xml:
        namespace: http://s3.amazonaws.com/doc/2006-03-01/
    PutBucketEncryptionRequest:
      properties:
        ServerSideEncryptionConfiguration:
          $ref: '#/components/schemas/ServerSideEncryptionConfiguration'
      required:
      - ServerSideEncryptionConfiguration
      title: PutBucketEncryptionRequest
      type: object
      xml:
        namespace: http://s3.amazonaws.com/doc/2006-03-01/
    PutBucketIntelligentTieringConfigurationRequest:
      properties:
        IntelligentTieringConfiguration:
          $ref: '#/components/schemas/PutBucketIntelligentTieringConfigurationRequest_IntelligentTieringConfiguration'
      required:
      - IntelligentTieringConfiguration
      title: PutBucketIntelligentTieringConfigurationRequest
      type: object
      xml:
        namespace: http://s3.amazonaws.com/doc/2006-03-01/
    PutBucketInventoryConfigurationRequest:
      properties:
        InventoryConfiguration:
          $ref: '#/components/schemas/PutBucketInventoryConfigurationRequest_InventoryConfiguration'
      required:
      - InventoryConfiguration
      title: PutBucketInventoryConfigurationRequest
      type: object
      xml:
        namespace: http://s3.amazonaws.com/doc/2006-03-01/
    PutBucketLifecycleConfigurationRequest:
      properties:
        LifecycleConfiguration:
          $ref: '#/components/schemas/PutBucketLifecycleConfigurationRequest_LifecycleConfiguration'
      title: PutBucketLifecycleConfigurationRequest
      type: object
      xml:
        namespace: http://s3.amazonaws.com/doc/2006-03-01/
    PutBucketLifecycleRequest:
      properties:
        LifecycleConfiguration:
          $ref: '#/components/schemas/PutBucketLifecycleRequest_LifecycleConfiguration'
      title: PutBucketLifecycleRequest
      type: object
      xml:
        namespace: http://s3.amazonaws.com/doc/2006-03-01/
    PutBucketLoggingRequest:
      properties:
        BucketLoggingStatus:
          $ref: '#/components/schemas/PutBucketLoggingRequest_BucketLoggingStatus'
      required:
      - BucketLoggingStatus
      title: PutBucketLoggingRequest
      type: object
      xml:
        namespace: http://s3.amazonaws.com/doc/2006-03-01/
    PutBucketMetricsConfigurationRequest:
      properties:
        MetricsConfiguration:
          $ref: '#/components/schemas/PutBucketMetricsConfigurationRequest_MetricsConfiguration'
      required:
      - MetricsConfiguration
      title: PutBucketMetricsConfigurationRequest
      type: object
      xml:
        namespace: http://s3.amazonaws.com/doc/2006-03-01/
    PutBucketNotificationConfigurationRequest:
      properties:
        NotificationConfiguration:
          $ref: '#/components/schemas/NotificationConfiguration'
      required:
      - NotificationConfiguration
      title: PutBucketNotificationConfigurationRequest
      type: object
      xml:
        namespace: http://s3.amazonaws.com/doc/2006-03-01/
    PutBucketNotificationRequest:
      properties:
        NotificationConfiguration:
          allOf:
          - $ref: '#/components/schemas/NotificationConfigurationDeprecated'
          - description: The container for the configuration.
      required:
      - NotificationConfiguration
      title: PutBucketNotificationRequest
      type: object
      xml:
        namespace: http://s3.amazonaws.com/doc/2006-03-01/
    PutBucketOwnershipControlsRequest:
      properties:
        OwnershipControls:
          $ref: '#/components/schemas/PutBucketOwnershipControlsRequest_OwnershipControls'
      required:
      - OwnershipControls
      title: PutBucketOwnershipControlsRequest
      type: object
      xml:
        namespace: http://s3.amazonaws.com/doc/2006-03-01/
    PutBucketPolicyRequest:
      properties:
        Policy:
          allOf:
          - $ref: '#/components/schemas/Policy'
          - description: The bucket policy as a JSON document.
      required:
      - Policy
      title: PutBucketPolicyRequest
      type: object
    PutBucketReplicationRequest:
      properties:
        ReplicationConfiguration:
          $ref: '#/components/schemas/ReplicationConfiguration'
      required:
      - ReplicationConfiguration
      title: PutBucketReplicationRequest
      type: object
      xml:
        namespace: http://s3.amazonaws.com/doc/2006-03-01/
    RequestPaymentConfiguration:
      description: Container for Payer.
      properties:
        Payer:
          allOf:
          - $ref: '#/components/schemas/Payer'
          - description: Specifies who pays for the download and request fees.
      required:
      - Payer
      type: object
    PutBucketRequestPaymentRequest:
      properties:
        RequestPaymentConfiguration:
          $ref: '#/components/schemas/PutBucketRequestPaymentRequest_RequestPaymentConfiguration'
      required:
      - RequestPaymentConfiguration
      title: PutBucketRequestPaymentRequest
      type: object
      xml:
        namespace: http://s3.amazonaws.com/doc/2006-03-01/
    Tagging:
      description: Container for <code>TagSet</code> elements.
      properties:
        TagSet:
          allOf:
          - $ref: '#/components/schemas/TagSet'
          - description: A collection for a set of tags
      required:
      - TagSet
      type: object
    PutBucketTaggingRequest:
      properties:
        Tagging:
          $ref: '#/components/schemas/PutBucketTaggingRequest_Tagging'
      required:
      - Tagging
      title: PutBucketTaggingRequest
      type: object
      xml:
        namespace: http://s3.amazonaws.com/doc/2006-03-01/
    VersioningConfiguration:
      description: Describes the versioning state of an ArvanCloud S3 bucket.
      properties:
        MFADelete:
          allOf:
          - $ref: '#/components/schemas/MFADelete'
          - description: "Specifies whether MFA delete is enabled in the bucket versioning\
              \ configuration. This element is only returned if the bucket has been\
              \ configured with MFA delete. If the bucket has never been so configured,\
              \ this element is not returned."
            xml:
              name: MfaDelete
        Status:
          allOf:
          - $ref: '#/components/schemas/BucketVersioningStatus'
          - description: The versioning state of the bucket.
      type: object
    PutBucketVersioningRequest:
      properties:
        VersioningConfiguration:
          $ref: '#/components/schemas/PutBucketVersioningRequest_VersioningConfiguration'
      required:
      - VersioningConfiguration
      title: PutBucketVersioningRequest
      type: object
      xml:
        namespace: http://s3.amazonaws.com/doc/2006-03-01/
    WebsiteConfiguration:
      description: Specifies website configuration parameters for an ArvanCloud S3
        bucket.
      properties:
        ErrorDocument:
          $ref: '#/components/schemas/PutBucketWebsite_request_WebsiteConfiguration_ErrorDocument'
        IndexDocument:
          $ref: '#/components/schemas/PutBucketWebsite_request_WebsiteConfiguration_IndexDocument'
        RedirectAllRequestsTo:
          $ref: '#/components/schemas/PutBucketWebsite_request_WebsiteConfiguration_RedirectAllRequestsTo'
        RoutingRules:
          allOf:
          - $ref: '#/components/schemas/RoutingRules'
          - description: Rules that define when a redirect is applied and the redirect
              behavior.
      type: object
    PutBucketWebsiteRequest:
      properties:
        WebsiteConfiguration:
          $ref: '#/components/schemas/PutBucketWebsiteRequest_WebsiteConfiguration'
      required:
      - WebsiteConfiguration
      title: PutBucketWebsiteRequest
      type: object
      xml:
        namespace: http://s3.amazonaws.com/doc/2006-03-01/
    PutObjectAclRequest:
      properties:
        AccessControlPolicy:
          $ref: '#/components/schemas/PutBucketAclRequest_AccessControlPolicy'
      title: PutObjectAclRequest
      type: object
      xml:
        namespace: http://s3.amazonaws.com/doc/2006-03-01/
    PutObjectLegalHoldRequest:
      properties:
        LegalHold:
          $ref: '#/components/schemas/PutObjectLegalHoldRequest_LegalHold'
      title: PutObjectLegalHoldRequest
      type: object
      xml:
        namespace: http://s3.amazonaws.com/doc/2006-03-01/
    PutObjectLockConfigurationRequest:
      properties:
        ObjectLockConfiguration:
          $ref: '#/components/schemas/PutObjectLockConfigurationRequest_ObjectLockConfiguration'
      title: PutObjectLockConfigurationRequest
      type: object
      xml:
        namespace: http://s3.amazonaws.com/doc/2006-03-01/
    PutObjectRequest:
      properties:
        Body:
          allOf:
          - $ref: '#/components/schemas/Body'
          - description: Object data.
        Metadata:
          allOf:
          - $ref: '#/components/schemas/Metadata'
          - description: A map of metadata to store with the object in S3.
            xml:
              name: x-amz-meta-
      title: PutObjectRequest
      type: object
    PutObjectRetentionRequest:
      properties:
        Retention:
          $ref: '#/components/schemas/PutObjectRetentionRequest_Retention'
      title: PutObjectRetentionRequest
      type: object
      xml:
        namespace: http://s3.amazonaws.com/doc/2006-03-01/
    PutObjectTaggingRequest:
      properties:
        Tagging:
          $ref: '#/components/schemas/PutObjectTaggingRequest_Tagging'
      required:
      - Tagging
      title: PutObjectTaggingRequest
      type: object
      xml:
        namespace: http://s3.amazonaws.com/doc/2006-03-01/
    PutPublicAccessBlockRequest:
      properties:
        PublicAccessBlockConfiguration:
          $ref: '#/components/schemas/PutPublicAccessBlockRequest_PublicAccessBlockConfiguration'
      required:
      - PublicAccessBlockConfiguration
      title: PutPublicAccessBlockRequest
      type: object
      xml:
        namespace: http://s3.amazonaws.com/doc/2006-03-01/
    QueueArn:
      type: string
    QueueConfiguration:
      description: Specifies the configuration for publishing messages to an Amazon
        Simple Queue Service (Amazon SQS) queue when ArvanCloud S3 detects specified
        events.
      properties:
        Id:
          description: "An optional unique identifier for configurations in a notification\
            \ configuration. If you don't provide one, ArvanCloud S3 will assign an\
            \ ID."
          type: string
        QueueArn:
          allOf:
          - $ref: '#/components/schemas/QueueArn'
          - description: The Amazon Resource Name (ARN) of the Amazon SQS queue to
              which ArvanCloud S3 publishes a message when it detects events of the
              specified type.
            xml:
              name: Queue
        Events:
          allOf:
          - $ref: '#/components/schemas/EventList'
          - description: A collection of bucket events for which to send notifications
            xml:
              name: Event
        Filter:
          $ref: '#/components/schemas/NotificationConfigurationFilter'
      required:
      - Events
      - QueueArn
      type: object
    RecordsEvent:
      description: The container for the records event.
      properties:
        Payload:
          allOf:
          - $ref: '#/components/schemas/Body'
          - description: "The byte array of partial, one or more result records."
      type: object
    ReplaceKeyPrefixWith:
      type: string
    ReplaceKeyWith:
      type: string
    Redirect:
      description: "Specifies how requests are redirected. In the event of an error,\
        \ you can specify a different error code to return."
      properties:
        HostName:
          allOf:
          - $ref: '#/components/schemas/HostName'
          - description: The host name to use in the redirect request.
        HttpRedirectCode:
          allOf:
          - $ref: '#/components/schemas/HttpRedirectCode'
          - description: The HTTP redirect code to use on the response. Not required
              if one of the siblings is present.
        Protocol:
          allOf:
          - $ref: '#/components/schemas/Protocol'
          - description: Protocol to use when redirecting requests. The default is
              the protocol that is used in the original request.
        ReplaceKeyPrefixWith:
          allOf:
          - $ref: '#/components/schemas/ReplaceKeyPrefixWith'
          - description: "<p>The object key prefix to use in the redirect request.\
              \ For example, to redirect requests for all pages with prefix <code>docs/</code>\
              \ (objects in the <code>docs/</code> folder) to <code>documents/</code>,\
              \ you can set a condition block with <code>KeyPrefixEquals</code> set\
              \ to <code>docs/</code> and in the Redirect set <code>ReplaceKeyPrefixWith</code>\
              \ to <code>/documents</code>. Not required if one of the siblings is\
              \ present. Can be present only if <code>ReplaceKeyWith</code> is not\
              \ provided.</p> <important> <p>Replacement must be made for object keys\
              \ containing special characters (such as carriage returns) when using\
              \ XML requests."
        ReplaceKeyWith:
          allOf:
          - $ref: '#/components/schemas/ReplaceKeyWith'
          - description: "<p>The specific object key to use in the redirect request.\
              \ For example, redirect request to <code>error.html</code>. Not required\
              \ if one of the siblings is present. Can be present only if <code>ReplaceKeyPrefixWith</code>\
              \ is not provided.</p> <important> <p>Replacement must be made for object\
              \ keys containing special characters (such as carriage returns) when\
              \ using XML requests."
      type: object
    ReplicaModificationsStatus:
      enum:
      - Enabled
      - Disabled
      type: string
    ReplicaModifications:
      description: "<p>A filter that you can specify for selection for modifications\
        \ on replicas. ArvanCloud S3 doesn't replicate replica modifications by default.\
        \ In the latest version of replication configuration (when <code>Filter</code>\
        \ is specified), you can specify this element and set the status to <code>Enabled</code>\
        \ to replicate modifications on replicas. </p> <note> <p> If you don't specify\
        \ the <code>Filter</code> element, ArvanCloud S3 assumes that the replication\
        \ configuration is the earlier version, V1. In the earlier version, this element\
        \ is not allowed.</p> </note>"
      properties:
        Status:
          allOf:
          - $ref: '#/components/schemas/ReplicaModificationsStatus'
          - description: Specifies whether ArvanCloud S3 replicates modifications
              on replicas.
      required:
      - Status
      type: object
    ReplicationRuleFilter:
      description: "A filter that identifies the subset of objects to which the replication\
        \ rule applies. A <code>Filter</code> must specify exactly one <code>Prefix</code>,\
        \ <code>Tag</code>, or an <code>And</code> child element."
      properties:
        Prefix:
          allOf:
          - $ref: '#/components/schemas/Prefix'
          - description: <p>An object key name prefix that identifies the subset of
              objects to which the rule applies.</p> <important> <p>Replacement must
              be made for object keys containing special characters (such as carriage
              returns) when using XML requests.
        Tag:
          $ref: '#/components/schemas/ReplicationRuleFilter_Tag'
        And:
          $ref: '#/components/schemas/ReplicationRuleFilter_And'
      type: object
    ReplicationRuleStatus:
      enum:
      - Enabled
      - Disabled
      type: string
    SourceSelectionCriteria:
      description: "A container that describes additional filters for identifying\
        \ the source objects that you want to replicate. You can choose to enable\
        \ or disable the replication of these objects. Currently, ArvanCloud S3 supports\
        \ only the filter that you can specify for objects created with server-side\
        \ encryption using a customer managed key stored in Amazon Web Services Key\
        \ Management Service (SSE-KMS)."
      properties:
        SseKmsEncryptedObjects:
          $ref: '#/components/schemas/SourceSelectionCriteria_SseKmsEncryptedObjects'
        ReplicaModifications:
          $ref: '#/components/schemas/SourceSelectionCriteria_ReplicaModifications'
      type: object
    ReplicationRule:
      description: Specifies which ArvanCloud S3 objects to replicate and where to
        store the replicas.
      properties:
        ID:
          allOf:
          - $ref: '#/components/schemas/ID'
          - description: A unique identifier for the rule. The maximum value is 255
              characters.
        Priority:
          allOf:
          - $ref: '#/components/schemas/Priority'
          - description: "<p>The priority indicates which rule has precedence whenever\
              \ two or more replication rules conflict. ArvanCloud S3 will attempt\
              \ to replicate objects according to all replication rules. However,\
              \ if there are two or more rules with the same destination bucket, then\
              \ objects will be replicated according to the rule with the highest\
              \ priority. The higher the number, the higher the priority.</p>"
        Prefix:
          allOf:
          - $ref: '#/components/schemas/Prefix'
          - deprecated: true
            description: "<p>An object key name prefix that identifies the object\
              \ or objects to which the rule applies. The maximum prefix length is\
              \ 1,024 characters. To include all objects in a bucket, specify an empty\
              \ string. </p> <important> <p>Replacement must be made for object keys\
              \ containing special characters (such as carriage returns) when using\
              \ XML requests."
        Filter:
          $ref: '#/components/schemas/ReplicationRuleFilter'
        Status:
          allOf:
          - $ref: '#/components/schemas/ReplicationRuleStatus'
          - description: Specifies whether the rule is enabled.
        SourceSelectionCriteria:
          $ref: '#/components/schemas/ReplicationRule_SourceSelectionCriteria'
        ExistingObjectReplication:
          $ref: '#/components/schemas/ReplicationRule_ExistingObjectReplication'
        Destination:
          $ref: '#/components/schemas/ReplicationRule_Destination'
        DeleteMarkerReplication:
          $ref: '#/components/schemas/DeleteMarkerReplication'
      required:
      - Destination
      - Status
      type: object
    ReplicationRuleAndOperator:
      description: "<p>A container for specifying rule filters. The filters determine\
        \ the subset of objects to which the rule applies. This element is required\
        \ only if you specify more than one filter. </p> <p>For example:</p> <ul>\
        \ <li> <p>If you specify both a <code>Prefix</code> and a <code>Tag</code>\
        \ filter, wrap these filters in an <code>And</code> tag. </p> </li> <li> <p>If\
        \ you specify a filter based on multiple tags, wrap the <code>Tag</code> elements\
        \ in an <code>And</code> tag.</p> </li> </ul>"
      properties:
        Prefix:
          allOf:
          - $ref: '#/components/schemas/Prefix'
          - description: An object key name prefix that identifies the subset of objects
              to which the rule applies.
        Tags:
          allOf:
          - $ref: '#/components/schemas/TagSet'
          - description: An array of tags containing key and value pairs.
            xml:
              name: Tag
      type: object
      xml:
        wrapped: false
    ReplicationTimeStatus:
      enum:
      - Enabled
      - Disabled
      type: string
    RequestProgress:
      description: Container for specifying if periodic <code>QueryProgress</code>
        messages should be sent.
      properties:
        Enabled:
          allOf:
          - $ref: '#/components/schemas/EnableRequestProgress'
          - description: "Specifies whether periodic QueryProgress frames should be\
              \ sent. Valid values: TRUE, FALSE. Default value: FALSE."
      type: object
    RequestRoute:
      type: string
    RequestToken:
      type: string
    RestoreOutputPath:
      type: string
    RestoreRequest:
      description: Container for restore job parameters.
      properties:
        Days:
          allOf:
          - $ref: '#/components/schemas/Days'
          - description: "<p>Lifetime of the active copy in days. Do not use with\
              \ restores that specify <code>OutputLocation</code>.</p> <p>The Days\
              \ element is required for regular restores, and must not be provided\
              \ for select requests.</p>"
        GlacierJobParameters:
          $ref: '#/components/schemas/RestoreRequest_GlacierJobParameters'
        Type:
          allOf:
          - $ref: '#/components/schemas/RestoreRequestType'
          - description: Type of restore request.
        Tier:
          allOf:
          - $ref: '#/components/schemas/Tier'
          - description: Retrieval tier at which the restore will be processed.
        Description:
          allOf:
          - $ref: '#/components/schemas/Description'
          - description: The optional description for the job.
        SelectParameters:
          $ref: '#/components/schemas/RestoreRequest_SelectParameters'
        OutputLocation:
          $ref: '#/components/schemas/RestoreRequest_OutputLocation'
      type: object
    RestoreObjectRequest:
      properties:
        RestoreRequest:
          $ref: '#/components/schemas/RestoreRequest'
      title: RestoreObjectRequest
      type: object
      xml:
        namespace: http://s3.amazonaws.com/doc/2006-03-01/
    RoutingRule:
      description: Specifies the redirect behavior and when a redirect is applied.
      properties:
        Condition:
          $ref: '#/components/schemas/RoutingRule_Condition'
        Redirect:
          $ref: '#/components/schemas/RoutingRule_Redirect'
      required:
      - Redirect
      type: object
    Transition:
      description: Specifies when an object transitions to a specified storage class.
      properties:
        Date:
          allOf:
          - $ref: '#/components/schemas/Date'
          - description: Indicates when objects are transitioned to the specified
              storage class. The date value must be in ISO 8601 format. The time is
              always midnight UTC.
        Days:
          allOf:
          - $ref: '#/components/schemas/Days'
          - description: Indicates the number of days after creation when objects
              are transitioned to the specified storage class. The value must be a
              positive integer.
        StorageClass:
          allOf:
          - $ref: '#/components/schemas/TransitionStorageClass'
          - description: The storage class to which you want the object to transition.
      type: object
    Rule:
      description: Specifies lifecycle rules for an ArvanCloud S3 bucket.
      properties:
        Expiration:
          $ref: '#/components/schemas/Rule_Expiration'
        ID:
          allOf:
          - $ref: '#/components/schemas/ID'
          - description: Unique identifier for the rule. The value can't be longer
              than 255 characters.
        Prefix:
          allOf:
          - $ref: '#/components/schemas/Prefix'
          - description: <p>Object key prefix that identifies one or more objects
              to which this rule applies.</p> <important> <p>Replacement must be made
              for object keys containing special characters (such as carriage returns)
              when using XML requests.
        Status:
          allOf:
          - $ref: '#/components/schemas/ExpirationStatus'
          - description: "If <code>Enabled</code>, the rule is currently being applied.\
              \ If <code>Disabled</code>, the rule is not currently being applied."
        Transition:
          $ref: '#/components/schemas/Rule_Transition'
        NoncurrentVersionTransition:
          $ref: '#/components/schemas/NoncurrentVersionTransition'
        NoncurrentVersionExpiration:
          $ref: '#/components/schemas/NoncurrentVersionExpiration'
        AbortIncompleteMultipartUpload:
          $ref: '#/components/schemas/AbortIncompleteMultipartUpload'
      required:
      - Prefix
      - Status
      type: object
    UserMetadata:
      items:
        $ref: '#/components/schemas/UserMetadata_inner'
      type: array
    ScanRange:
      description: "Specifies the byte range of the object to get the records from.\
        \ A record is processed when its first byte is contained by the range. This\
        \ parameter is optional, but when specified, it must not be empty. See RFC\
        \ 2616, Section 14.35.1 about how to specify the start and end of the range."
      properties:
        Start:
          allOf:
          - $ref: '#/components/schemas/Start'
          - description: "Specifies the start of the byte range. This parameter is\
              \ optional. Valid values: non-negative integers. The default value is\
              \ 0. If only start is supplied, it means scan from that point to the\
              \ end of the file.For example; <code>&lt;scanrange&gt;&lt;start&gt;50&lt;/start&gt;&lt;/scanrange&gt;</code>\
              \ means scan from byte 50 until the end of the file."
        End:
          allOf:
          - $ref: '#/components/schemas/End'
          - description: "Specifies the end of the byte range. This parameter is optional.\
              \ Valid values: non-negative integers. The default value is one less\
              \ than the size of the object being queried. If only the End parameter\
              \ is supplied, it is interpreted to mean scan the last N bytes of the\
              \ file. For example, <code>&lt;scanrange&gt;&lt;end&gt;50&lt;/end&gt;&lt;/scanrange&gt;</code>\
              \ means scan the last 50 bytes."
      type: object
    StatsEvent:
      description: Container for the Stats Event.
      properties:
        Details:
          $ref: '#/components/schemas/StatsEvent_Details'
      type: object
    SelectObjectContentEventStream:
      description: The container for selecting objects from a content event stream.
      properties:
        Records:
          $ref: '#/components/schemas/SelectObjectContentEventStream_Records'
        Stats:
          $ref: '#/components/schemas/SelectObjectContentEventStream_Stats'
        Progress:
          $ref: '#/components/schemas/SelectObjectContentEventStream_Progress'
        Cont:
          allOf:
          - $ref: '#/components/schemas/ContinuationEvent'
          - description: The Continuation Event.
        End:
          allOf:
          - $ref: '#/components/schemas/EndEvent'
          - description: The End Event.
      type: object
    SelectObjectContentRequest:
      description: "Request to filter the contents of an ArvanCloud S3 object based\
        \ on a simple Structured Query Language (SQL) statement. In the request, along\
        \ with the SQL expression, you must specify a data serialization format (JSON\
        \ or CSV) of the object. ArvanCloud S3 uses this to parse object data into\
        \ records. It returns only records that match the specified SQL expression.\
        \ You must also specify the data serialization format for the response."
      properties:
        Expression:
          allOf:
          - $ref: '#/components/schemas/Expression'
          - description: The expression that is used to query the object.
        ExpressionType:
          allOf:
          - $ref: '#/components/schemas/ExpressionType'
          - description: "The type of the provided expression (for example, SQL)."
        RequestProgress:
          $ref: '#/components/schemas/SelectObjectContentRequest_RequestProgress'
        InputSerialization:
          $ref: '#/components/schemas/SelectObjectContentRequest_InputSerialization'
        OutputSerialization:
          $ref: '#/components/schemas/SelectObjectContentRequest_OutputSerialization'
        ScanRange:
          $ref: '#/components/schemas/SelectObjectContentRequest_ScanRange'
      required:
      - Expression
      - ExpressionType
      - InputSerialization
      - OutputSerialization
      title: SelectObjectContentRequest
      type: object
    ServerSideEncryptionByDefault:
      description: "Describes the default server-side encryption to apply to new objects\
        \ in the bucket. If a PUT Object request doesn't specify any server-side encryption,\
        \ this default encryption will be applied. For more information, see <a href=\"\
        https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTencryption.html\"\
        >PUT Bucket encryption</a> in the <i>ArvanCloud S3 API Reference</i>."
      properties:
        SSEAlgorithm:
          allOf:
          - $ref: '#/components/schemas/ServerSideEncryption'
          - description: Server-side encryption algorithm to use for the default encryption.
        KMSMasterKeyID:
          allOf:
          - $ref: '#/components/schemas/SSEKMSKeyId'
          - description: "<p>Amazon Web Services Key Management Service (KMS) customer\
              \ Amazon Web Services KMS key ID to use for the default encryption.\
              \ This parameter is allowed if and only if <code>SSEAlgorithm</code>\
              \ is set to <code>aws:kms</code>.</p> <p>You can specify the key ID\
              \ or the Amazon Resource Name (ARN) of the KMS key. However, if you\
              \ are using encryption with cross-account operations, you must use a\
              \ fully qualified KMS key ARN. For more information, see <a href=\"\
              https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-encryption.html#bucket-encryption-update-bucket-policy\"\
              >Using encryption for cross-account operations</a>. </p> <p> <b>For\
              \ example:</b> </p> <ul> <li> <p>Key ID: <code>1234abcd-12ab-34cd-56ef-1234567890ab</code>\
              \ </p> </li> <li> <p>Key ARN: <code>arn:aws:kms:us-east-2:111122223333:key/1234abcd-12ab-34cd-56ef-1234567890ab</code>\
              \ </p> </li> </ul> <important> <p>ArvanCloud S3 only supports symmetric\
              \ KMS keys and not asymmetric KMS keys. For more information, see <a\
              \ href=\"https://docs.aws.amazon.com/kms/latest/developerguide/symmetric-asymmetric.html\"\
              >Using symmetric and asymmetric keys</a> in the <i>Amazon Web Services\
              \ Key Management Service Developer Guide</i>.</p> </important>"
      required:
      - SSEAlgorithm
      type: object
    ServerSideEncryptionRule:
      description: Specifies the default server-side encryption configuration.
      properties:
        ApplyServerSideEncryptionByDefault:
          $ref: '#/components/schemas/ServerSideEncryptionRule_ApplyServerSideEncryptionByDefault'
        BucketKeyEnabled:
          allOf:
          - $ref: '#/components/schemas/BucketKeyEnabled'
          - description: "<p>Specifies whether ArvanCloud S3 should use an S3 Bucket\
              \ Key with server-side encryption using KMS (SSE-KMS) for new objects\
              \ in the bucket. Existing objects are not affected. Setting the <code>BucketKeyEnabled</code>\
              \ element to <code>true</code> causes ArvanCloud S3 to use an S3 Bucket\
              \ Key. By default, S3 Bucket Key is not enabled.</p> <p>For more information,\
              \ see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/bucket-key.html\"\
              >ArvanCloud S3 Bucket Keys</a> in the <i>S3 User Guide</i>.</p>"
      type: object
    SseKmsEncryptedObjects:
      description: A container for filter information for the selection of S3 objects
        encrypted with Amazon Web Services KMS.
      properties:
        Status:
          allOf:
          - $ref: '#/components/schemas/SseKmsEncryptedObjectsStatus'
          - description: Specifies whether ArvanCloud S3 replicates objects created
              with server-side encryption using an Amazon Web Services KMS key stored
              in Amazon Web Services Key Management Service.
      required:
      - Status
      type: object
    SseKmsEncryptedObjectsStatus:
      enum:
      - Enabled
      - Disabled
      type: string
    Stats:
      description: Container for the stats details.
      properties:
        BytesScanned:
          allOf:
          - $ref: '#/components/schemas/BytesScanned'
          - description: The total number of object bytes scanned.
        BytesProcessed:
          allOf:
          - $ref: '#/components/schemas/BytesProcessed'
          - description: The total number of uncompressed object bytes processed.
        BytesReturned:
          allOf:
          - $ref: '#/components/schemas/BytesReturned'
          - description: The total number of bytes of records payload data returned.
      type: object
    StorageClassAnalysisDataExport:
      description: Container for data related to the storage class analysis for an
        ArvanCloud S3 bucket for export.
      properties:
        OutputSchemaVersion:
          allOf:
          - $ref: '#/components/schemas/StorageClassAnalysisSchemaVersion'
          - description: The version of the output schema to use when exporting data.
              Must be <code>V_1</code>.
        Destination:
          $ref: '#/components/schemas/StorageClassAnalysisDataExport_Destination'
      required:
      - Destination
      - OutputSchemaVersion
      type: object
    StorageClassAnalysisSchemaVersion:
      enum:
      - V_1
      type: string
    Value:
      type: string
    TargetGrant:
      description: Container for granting information.
      properties:
        Grantee:
          $ref: '#/components/schemas/TargetGrant_Grantee'
        Permission:
          allOf:
          - $ref: '#/components/schemas/BucketLogsPermission'
          - description: Logging permissions assigned to the grantee for the bucket.
      type: object
    Tiering:
      description: "The S3 Intelligent-Tiering storage class is designed to optimize\
        \ storage costs by automatically moving data to the most cost-effective storage\
        \ access tier, without additional operational overhead."
      properties:
        Days:
          allOf:
          - $ref: '#/components/schemas/IntelligentTieringDays'
          - description: The number of consecutive days of no access after which an
              object will be eligible to be transitioned to the corresponding tier.
              The minimum number of days specified for Archive Access tier must be
              at least 90 days and Deep Archive Access tier must be at least 180 days.
              The maximum can be up to 2 years (730 days).
        AccessTier:
          allOf:
          - $ref: '#/components/schemas/IntelligentTieringAccessTier'
          - description: S3 Intelligent-Tiering access tier. See <a href="https://docs.aws.amazon.com/AmazonS3/latest/dev/storage-class-intro.html#sc-dynamic-data-access">Storage
              class for automatically optimizing frequently and infrequently accessed
              objects</a> for a list of access tiers in the S3 Intelligent-Tiering
              storage class.
      required:
      - AccessTier
      - Days
      type: object
    TopicArn:
      type: string
    TopicConfiguration:
      description: A container for specifying the configuration for publication of
        messages to an Amazon Simple Notification Service (Amazon SNS) topic when
        ArvanCloud S3 detects specified events.
      properties:
        Id:
          description: "An optional unique identifier for configurations in a notification\
            \ configuration. If you don't provide one, ArvanCloud S3 will assign an\
            \ ID."
          type: string
        TopicArn:
          allOf:
          - $ref: '#/components/schemas/TopicArn'
          - description: The Amazon Resource Name (ARN) of the Amazon SNS topic to
              which ArvanCloud S3 publishes a message when it detects events of the
              specified type.
            xml:
              name: Topic
        Events:
          allOf:
          - $ref: '#/components/schemas/EventList'
          - description: the ArvanCloud S3 bucket event about which to send notifications.
            xml:
              name: Event
        Filter:
          $ref: '#/components/schemas/NotificationConfigurationFilter'
      required:
      - Events
      - TopicArn
      type: object
    UploadPartCopyRequest:
      properties: {}
      title: UploadPartCopyRequest
      type: object
    UploadPartRequest:
      properties:
        Body:
          allOf:
          - $ref: '#/components/schemas/Body'
          - description: Object data.
      title: UploadPartRequest
      type: object
    WriteGetObjectResponseRequest:
      properties:
        Body:
          allOf:
          - $ref: '#/components/schemas/Body'
          - description: The object data.
        Metadata:
          allOf:
          - $ref: '#/components/schemas/Metadata'
          - description: A map of metadata to store with the object in S3.
            xml:
              name: x-amz-meta-
      title: WriteGetObjectResponseRequest
      type: object
    CompleteMultipartUpload_request_CompleteMultipartUpload:
      description: The container for the completed multipart upload details.
      properties:
        Parts:
          allOf:
          - $ref: '#/components/schemas/CompletedPartList'
          - description: Array of CompletedPart data types.
            xml:
              name: Part
      type: object
    CompleteMultipartUpload_request:
      properties:
        CompleteMultipartUpload:
          $ref: '#/components/schemas/CompleteMultipartUpload_request_CompleteMultipartUpload'
      type: object
    CreateBucket_request_CreateBucketConfiguration:
      description: The configuration information for the bucket.
      properties:
        LocationConstraint:
          allOf:
          - $ref: '#/components/schemas/BucketLocationConstraint'
          - description: "Specifies the Region where the bucket will be created. If\
              \ you don't specify a Region, the bucket is created in the US East (N.\
              \ Virginia) Region (us-east-1)."
      type: object
    CreateBucket_request:
      properties:
        CreateBucketConfiguration:
          $ref: '#/components/schemas/CreateBucket_request_CreateBucketConfiguration'
      type: object
    CreateMultipartUpload_request:
      properties:
        x-amz-meta-:
          additionalProperties:
            $ref: '#/components/schemas/MetadataValue'
          description: A map of metadata to store with the object in S3.
          type: object
      type: object
    PutBucketCors_request_CORSConfiguration:
      description: "Describes the cross-origin access configuration for objects in\
        \ an ArvanCloud S3 bucket. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/cors.html\"\
        >Enabling Cross-Origin Resource Sharing</a> in the <i>S3 User Guide</i>."
      properties:
        CORSRules:
          allOf:
          - $ref: '#/components/schemas/CORSRules'
          - description: A set of origins and methods (cross-origin access that you
              want to allow). You can add up to 100 rules to the configuration.
            xml:
              name: CORSRule
      type: object
    PutBucketCors_request:
      properties:
        CORSConfiguration:
          $ref: '#/components/schemas/PutBucketCors_request_CORSConfiguration'
      required:
      - CORSConfiguration
      type: object
    PutBucketLifecycleConfiguration_request_LifecycleConfiguration:
      description: "Specifies the lifecycle configuration for objects in an ArvanCloud\
        \ S3 bucket. For more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/object-lifecycle-mgmt.html\"\
        >Object Lifecycle Management</a> in the <i>S3 User Guide</i>."
      properties:
        Rules:
          allOf:
          - $ref: '#/components/schemas/LifecycleRules'
          - description: A lifecycle rule for individual objects in an ArvanCloud
              S3 bucket.
            xml:
              name: Rule
      type: object
    PutBucketLifecycleConfiguration_request:
      properties:
        LifecycleConfiguration:
          $ref: '#/components/schemas/PutBucketLifecycleConfiguration_request_LifecycleConfiguration'
      type: object
    PutBucketPolicy_request:
      properties:
        Policy:
          description: The bucket policy as a JSON document.
          type: string
      required:
      - Policy
      type: object
    PutBucketTagging_request_Tagging:
      description: Container for <code>TagSet</code> elements.
      properties:
        TagSet:
          allOf:
          - $ref: '#/components/schemas/TagSet'
          - description: A collection for a set of tags
      type: object
    PutBucketTagging_request:
      properties:
        Tagging:
          $ref: '#/components/schemas/PutBucketTagging_request_Tagging'
      required:
      - Tagging
      type: object
    PutBucketWebsite_request_WebsiteConfiguration_ErrorDocument:
      allOf:
      - $ref: '#/components/schemas/ErrorDocument'
      - description: The name of the error document for the website.
    PutBucketWebsite_request_WebsiteConfiguration_IndexDocument:
      allOf:
      - $ref: '#/components/schemas/IndexDocument'
      - description: The name of the index document for the website.
    PutBucketWebsite_request_WebsiteConfiguration_RedirectAllRequestsTo:
      allOf:
      - $ref: '#/components/schemas/RedirectAllRequestsTo'
      - description: "<p>The redirect behavior for every request to this bucket's\
          \ website endpoint.</p> <important> <p>If you specify this property, you\
          \ can't specify any other property.</p> </important>"
    PutBucketWebsite_request_WebsiteConfiguration:
      description: Specifies website configuration parameters for an ArvanCloud S3
        bucket.
      properties:
        ErrorDocument:
          $ref: '#/components/schemas/PutBucketWebsite_request_WebsiteConfiguration_ErrorDocument'
        IndexDocument:
          $ref: '#/components/schemas/PutBucketWebsite_request_WebsiteConfiguration_IndexDocument'
        RedirectAllRequestsTo:
          $ref: '#/components/schemas/PutBucketWebsite_request_WebsiteConfiguration_RedirectAllRequestsTo'
        RoutingRules:
          allOf:
          - $ref: '#/components/schemas/RoutingRules'
          - description: Rules that define when a redirect is applied and the redirect
              behavior.
      type: object
    PutBucketWebsite_request:
      properties:
        WebsiteConfiguration:
          $ref: '#/components/schemas/PutBucketWebsite_request_WebsiteConfiguration'
      required:
      - WebsiteConfiguration
      type: object
    PutObject_request:
      properties:
        Body:
          description: Object data.
          type: string
        x-amz-meta-:
          additionalProperties:
            $ref: '#/components/schemas/MetadataValue'
          description: A map of metadata to store with the object in S3.
          type: object
      type: object
    DeleteObjects_request_Delete:
      description: Container for the objects to delete.
      properties:
        Objects:
          allOf:
          - $ref: '#/components/schemas/ObjectIdentifierList'
          - description: The objects to delete.
            xml:
              name: Object
        Quiet:
          allOf:
          - $ref: '#/components/schemas/Quiet'
          - description: "Element to enable quiet mode for the request. When you add\
              \ this element, you must set its value to true."
      type: object
    DeleteObjects_request:
      properties:
        Delete:
          $ref: '#/components/schemas/DeleteObjects_request_Delete'
      required:
      - Delete
      type: object
    PutPublicAccessBlock_request_PublicAccessBlockConfiguration:
      description: "The PublicAccessBlock configuration that you want to apply to\
        \ this ArvanCloud S3 bucket. You can enable the configuration options in any\
        \ combination. For more information about when ArvanCloud S3 considers a bucket\
        \ or object public, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/dev/access-control-block-public-access.html#access-control-block-public-access-policy-status\"\
        >The Meaning of \"Public\"</a> in the <i>S3 User Guide</i>. "
      properties:
        BlockPublicAcls:
          allOf:
          - $ref: '#/components/schemas/Setting'
          - description: <p>Specifies whether ArvanCloud S3 should block public access
              control lists (ACLs) for this bucket and objects in this bucket. Setting
              this element to <code>TRUE</code> causes the following behavior:</p>
              <ul> <li> <p>PUT Bucket acl and PUT Object acl calls fail if the specified
              ACL is public.</p> </li> <li> <p>PUT Object calls fail if the request
              includes a public ACL.</p> </li> <li> <p>PUT Bucket calls fail if the
              request includes a public ACL.</p> </li> </ul> <p>Enabling this setting
              doesn't affect existing policies or ACLs.</p>
        IgnorePublicAcls:
          allOf:
          - $ref: '#/components/schemas/Setting'
          - description: <p>Specifies whether ArvanCloud S3 should ignore public ACLs
              for this bucket and objects in this bucket. Setting this element to
              <code>TRUE</code> causes ArvanCloud S3 to ignore all public ACLs on
              this bucket and objects in this bucket.</p> <p>Enabling this setting
              doesn't affect the persistence of any existing ACLs and doesn't prevent
              new public ACLs from being set.</p>
        BlockPublicPolicy:
          allOf:
          - $ref: '#/components/schemas/Setting'
          - description: <p>Specifies whether ArvanCloud S3 should block public bucket
              policies for this bucket. Setting this element to <code>TRUE</code>
              causes ArvanCloud S3 to reject calls to PUT Bucket policy if the specified
              bucket policy allows public access. </p> <p>Enabling this setting doesn't
              affect existing bucket policies.</p>
        RestrictPublicBuckets:
          allOf:
          - $ref: '#/components/schemas/Setting'
          - description: "<p>Specifies whether ArvanCloud S3 should restrict public\
              \ bucket policies for this bucket. Setting this element to <code>TRUE</code>\
              \ restricts access to this bucket to only Amazon Web Service principals\
              \ and authorized users within this account if the bucket has a public\
              \ policy.</p> <p>Enabling this setting doesn't affect previously stored\
              \ bucket policies, except that public and cross-account access within\
              \ any public bucket policy, including non-public delegation to specific\
              \ accounts, is blocked.</p>"
      type: object
    PutPublicAccessBlock_request:
      properties:
        PublicAccessBlockConfiguration:
          $ref: '#/components/schemas/PutPublicAccessBlock_request_PublicAccessBlockConfiguration'
      required:
      - PublicAccessBlockConfiguration
      type: object
    PutBucketAcl_request_AccessControlPolicy:
      description: Contains the elements that set the ACL permissions for an object
        per grantee.
      properties:
        Grants:
          allOf:
          - $ref: '#/components/schemas/Grants'
          - description: A list of grants.
            xml:
              name: AccessControlList
        Owner:
          allOf:
          - $ref: '#/components/schemas/Owner'
          - description: Container for the bucket owner's display name and ID.
      type: object
    PutBucketAcl_request:
      properties:
        AccessControlPolicy:
          $ref: '#/components/schemas/PutBucketAcl_request_AccessControlPolicy'
      type: object
    PutBucketVersioning_request_VersioningConfiguration:
      description: "Describes the versioning state of an ArvanCloud S3 bucket. For\
        \ more information, see <a href=\"https://docs.aws.amazon.com/AmazonS3/latest/API/RESTBucketPUTVersioningStatus.html\"\
        >PUT Bucket versioning</a> in the <i>ArvanCloud S3 API Reference</i>."
      properties:
        MFADelete:
          allOf:
          - $ref: '#/components/schemas/MFADelete'
          - description: "Specifies whether MFA delete is enabled in the bucket versioning\
              \ configuration. This element is only returned if the bucket has been\
              \ configured with MFA delete. If the bucket has never been so configured,\
              \ this element is not returned."
            xml:
              name: MfaDelete
        Status:
          allOf:
          - $ref: '#/components/schemas/BucketVersioningStatus'
          - description: The versioning state of the bucket.
      type: object
    PutBucketVersioning_request:
      properties:
        VersioningConfiguration:
          $ref: '#/components/schemas/PutBucketVersioning_request_VersioningConfiguration'
      required:
      - VersioningConfiguration
      type: object
    UploadPart_request:
      properties:
        Body:
          description: Object data.
          type: string
      type: object
    CopyObjectOutput_CopyObjectResult:
      allOf:
      - $ref: '#/components/schemas/CopyObjectResult'
      - description: Container for all response elements.
    GetBucketPolicyStatusOutput_PolicyStatus:
      allOf:
      - $ref: '#/components/schemas/PolicyStatus'
      - description: The policy status for the specified bucket.
    GetBucketWebsiteOutput_RedirectAllRequestsTo:
      allOf:
      - $ref: '#/components/schemas/RedirectAllRequestsTo'
      - description: Specifies the redirect behavior of all requests to a website
          endpoint of an ArvanCloud S3 bucket.
    GetBucketWebsiteOutput_IndexDocument:
      allOf:
      - $ref: '#/components/schemas/IndexDocument'
      - description: The name of the index document for the website (for example <code>index.html</code>).
    GetBucketWebsiteOutput_ErrorDocument:
      allOf:
      - $ref: '#/components/schemas/ErrorDocument'
      - description: The object key name of the website error document to use for
          4XX class errors.
    ListPartsOutput_Initiator:
      allOf:
      - $ref: '#/components/schemas/Initiator'
      - description: "Container element that identifies who initiated the multipart\
          \ upload. If the initiator is an Amazon Web Services account, this element\
          \ provides the same information as the <code>Owner</code> element. If the\
          \ initiator is an IAM User, this element provides the user ARN and display\
          \ name."
    TagSet_inner:
      allOf:
      - $ref: '#/components/schemas/Tag'
      - xml:
          name: Tag
    RoutingRules_inner:
      allOf:
      - $ref: '#/components/schemas/RoutingRule'
      - xml:
          name: RoutingRule
    ObjectLockRule_DefaultRetention:
      allOf:
      - $ref: '#/components/schemas/DefaultRetention'
      - description: The default Object Lock retention mode and period that you want
          to apply to new objects placed in the specified bucket. Bucket settings
          require both a mode and a period. The period can be either <code>Days</code>
          or <code>Years</code> but you must select one. You cannot specify <code>Days</code>
          and <code>Years</code> at the same time.
    SelectParameters_InputSerialization:
      allOf:
      - $ref: '#/components/schemas/InputSerialization'
      - description: Describes the serialization format of the object.
    SelectParameters_OutputSerialization:
      allOf:
      - $ref: '#/components/schemas/OutputSerialization'
      - description: Describes how the results of the Select job are serialized.
    OutputLocation_S3:
      allOf:
      - $ref: '#/components/schemas/S3Location'
      - description: Describes an S3 location that will receive the results of the
          restore request.
    SelectObjectContentOutput_Payload:
      allOf:
      - $ref: '#/components/schemas/SelectObjectContentEventStream'
      - description: The array of results.
    UploadPartCopyOutput_CopyPartResult:
      allOf:
      - $ref: '#/components/schemas/CopyPartResult'
      - description: Container for all response elements.
    AnalyticsExportDestination_S3BucketDestination:
      allOf:
      - $ref: '#/components/schemas/AnalyticsS3BucketDestination'
      - description: A destination signifying output to an S3 bucket.
    Buckets_inner:
      allOf:
      - $ref: '#/components/schemas/Bucket'
      - xml:
          name: Bucket
    CompleteMultipartUploadRequest_MultipartUpload:
      allOf:
      - $ref: '#/components/schemas/CompletedMultipartUpload'
      - description: The container for the multipart upload request information.
        xml:
          name: CompleteMultipartUpload
    CreateBucketRequest_CreateBucketConfiguration:
      allOf:
      - $ref: '#/components/schemas/CreateBucketConfiguration'
      - description: The configuration information for the bucket.
    DeleteObjectsRequest_Delete:
      allOf:
      - $ref: '#/components/schemas/Delete'
      - description: Container for the request.
    ReplicationTime_Time:
      allOf:
      - $ref: '#/components/schemas/ReplicationTimeValue'
      - description: ' A container specifying the time by which replication should
          be complete for all objects and operations on objects. '
    Metrics_EventThreshold:
      allOf:
      - $ref: '#/components/schemas/ReplicationTimeValue'
      - description: ' A container specifying the time threshold for emitting the
          <code>s3:Replication:OperationMissedThreshold</code> event. '
    Destination_AccessControlTranslation:
      allOf:
      - $ref: '#/components/schemas/AccessControlTranslation'
      - description: "Specify this only in a cross-account scenario (where source\
          \ and destination bucket owners are not the same), and you want to change\
          \ replica ownership to the Amazon Web Services account that owns the destination\
          \ bucket. If this is not specified in the replication configuration, the\
          \ replicas are owned by same Amazon Web Services account that owns the source\
          \ object."
    Destination_EncryptionConfiguration:
      allOf:
      - $ref: '#/components/schemas/EncryptionConfiguration'
      - description: "A container that provides information about encryption. If <code>SourceSelectionCriteria</code>\
          \ is specified, you must specify this element."
    Destination_ReplicationTime:
      allOf:
      - $ref: '#/components/schemas/ReplicationTime'
      - description: " A container specifying S3 Replication Time Control (S3 RTC),\
          \ including whether S3 RTC is enabled and the time when all objects and\
          \ operations on objects must be replicated. Must be specified together with\
          \ a <code>Metrics</code> block. "
    Destination_Metrics:
      allOf:
      - $ref: '#/components/schemas/Metrics'
      - description: ' A container specifying replication metrics-related settings
          enabling replication metrics and events. '
    ObjectLockConfiguration_Rule:
      allOf:
      - $ref: '#/components/schemas/ObjectLockRule'
      - description: Specifies the Object Lock rule for the specified object. Enable
          the this rule when you apply <code>ObjectLockConfiguration</code> to a bucket.
          Bucket settings require both a mode and a period. The period can be either
          <code>Days</code> or <code>Years</code> but you must select one. You cannot
          specify <code>Days</code> and <code>Years</code> at the same time.
    Grant_Grantee:
      allOf:
      - $ref: '#/components/schemas/Grantee'
      - description: The person being granted permissions.
    InputSerialization_CSV:
      allOf:
      - $ref: '#/components/schemas/CSVInput'
      - description: Describes the serialization of a CSV-encoded object.
    InputSerialization_JSON:
      allOf:
      - $ref: '#/components/schemas/JSONInput'
      - description: Specifies JSON as object's input serialization format.
    InventoryS3BucketDestination_Encryption:
      allOf:
      - $ref: '#/components/schemas/InventoryEncryption'
      - description: Contains the type of server-side encryption used to encrypt the
          inventory results.
    InventoryEncryption_SSEKMS:
      allOf:
      - $ref: '#/components/schemas/SSEKMS'
      - description: Specifies the use of SSE-KMS to encrypt delivered inventory reports.
        xml:
          name: SSE-KMS
    NotificationConfigurationFilter_Key:
      allOf:
      - $ref: '#/components/schemas/S3KeyFilter'
      - xml:
          name: S3Key
    LifecycleRuleFilter_Tag:
      allOf:
      - $ref: '#/components/schemas/Tag'
      - description: This tag must exist in the object's tag set in order for the
          rule to apply.
    LifecycleRule_Expiration:
      allOf:
      - $ref: '#/components/schemas/LifecycleExpiration'
      - description: "Specifies the expiration for the lifecycle of the object in\
          \ the form of date, days and, whether the object has a delete marker."
    LifecycleRule_Filter:
      allOf:
      - $ref: '#/components/schemas/LifecycleRuleFilter'
      - description: "The <code>Filter</code> is used to identify objects that a Lifecycle\
          \ Rule applies to. A <code>Filter</code> must have exactly one of <code>Prefix</code>,\
          \ <code>Tag</code>, or <code>And</code> specified. <code>Filter</code> is\
          \ required if the <code>LifecycleRule</code> does not containt a <code>Prefix</code>\
          \ element."
    TargetGrants_inner:
      allOf:
      - $ref: '#/components/schemas/TargetGrant'
      - xml:
          name: Grant
    MultipartUpload_Initiator:
      allOf:
      - $ref: '#/components/schemas/Initiator'
      - description: Identifies who initiated the multipart upload.
    S3Location_Tagging:
      allOf:
      - $ref: '#/components/schemas/Tagging'
      - description: The tag-set that is applied to the restore results.
    OutputSerialization_CSV:
      allOf:
      - $ref: '#/components/schemas/CSVOutput'
      - description: Describes the serialization of CSV-encoded Select results.
    OutputSerialization_JSON:
      allOf:
      - $ref: '#/components/schemas/JSONOutput'
      - description: Specifies JSON as request's output serialization format.
    ProgressEvent_Details:
      allOf:
      - $ref: '#/components/schemas/Progress'
      - description: The Progress event details.
    PutBucketAccelerateConfigurationRequest_AccelerateConfiguration:
      allOf:
      - $ref: '#/components/schemas/AccelerateConfiguration'
      - description: Container for setting the transfer acceleration state.
    PutBucketAclRequest_AccessControlPolicy:
      allOf:
      - $ref: '#/components/schemas/AccessControlPolicy'
      - description: Contains the elements that set the ACL permissions for an object
          per grantee.
    PutBucketAnalyticsConfigurationRequest_AnalyticsConfiguration:
      allOf:
      - $ref: '#/components/schemas/AnalyticsConfiguration'
      - description: The configuration and any analyses for the analytics filter.
    PutBucketCorsRequest_CORSConfiguration:
      allOf:
      - $ref: '#/components/schemas/CORSConfiguration'
      - description: Describes the cross-origin access configuration for objects in
          an ArvanCloud S3 bucket.
    PutBucketIntelligentTieringConfigurationRequest_IntelligentTieringConfiguration:
      allOf:
      - $ref: '#/components/schemas/IntelligentTieringConfiguration'
      - description: Container for S3 Intelligent-Tiering configuration.
    PutBucketInventoryConfigurationRequest_InventoryConfiguration:
      allOf:
      - $ref: '#/components/schemas/InventoryConfiguration'
      - description: Specifies the inventory configuration.
    PutBucketLifecycleConfigurationRequest_LifecycleConfiguration:
      allOf:
      - $ref: '#/components/schemas/BucketLifecycleConfiguration'
      - description: "Container for lifecycle rules. You can add as many as 1,000\
          \ rules."
    PutBucketLifecycleRequest_LifecycleConfiguration:
      allOf:
      - $ref: '#/components/schemas/LifecycleConfiguration'
      - description: <p/>
    PutBucketLoggingRequest_BucketLoggingStatus:
      allOf:
      - $ref: '#/components/schemas/BucketLoggingStatus'
      - description: Container for logging status information.
    PutBucketMetricsConfigurationRequest_MetricsConfiguration:
      allOf:
      - $ref: '#/components/schemas/MetricsConfiguration'
      - description: Specifies the metrics configuration.
    PutBucketOwnershipControlsRequest_OwnershipControls:
      allOf:
      - $ref: '#/components/schemas/OwnershipControls'
      - description: The <code>OwnershipControls</code> (BucketOwnerPreferred or ObjectWriter)
          that you want to apply to this ArvanCloud S3 bucket.
    PutBucketRequestPaymentRequest_RequestPaymentConfiguration:
      allOf:
      - $ref: '#/components/schemas/RequestPaymentConfiguration'
      - description: Container for Payer.
    PutBucketTaggingRequest_Tagging:
      allOf:
      - $ref: '#/components/schemas/Tagging'
      - description: Container for the <code>TagSet</code> and <code>Tag</code> elements.
    PutBucketVersioningRequest_VersioningConfiguration:
      allOf:
      - $ref: '#/components/schemas/VersioningConfiguration'
      - description: Container for setting the versioning state.
    PutBucketWebsiteRequest_WebsiteConfiguration:
      allOf:
      - $ref: '#/components/schemas/WebsiteConfiguration'
      - description: Container for the request.
    PutObjectLegalHoldRequest_LegalHold:
      allOf:
      - $ref: '#/components/schemas/ObjectLockLegalHold'
      - description: Container element for the Legal Hold configuration you want to
          apply to the specified object.
    PutObjectLockConfigurationRequest_ObjectLockConfiguration:
      allOf:
      - $ref: '#/components/schemas/ObjectLockConfiguration'
      - description: The Object Lock configuration that you want to apply to the specified
          bucket.
    PutObjectRetentionRequest_Retention:
      allOf:
      - $ref: '#/components/schemas/ObjectLockRetention'
      - description: The container element for the Object Retention configuration.
    PutObjectTaggingRequest_Tagging:
      allOf:
      - $ref: '#/components/schemas/Tagging'
      - description: Container for the <code>TagSet</code> and <code>Tag</code> elements
    PutPublicAccessBlockRequest_PublicAccessBlockConfiguration:
      allOf:
      - $ref: '#/components/schemas/PublicAccessBlockConfiguration'
      - description: The <code>PublicAccessBlock</code> configuration that you want
          to apply to this ArvanCloud S3 bucket. You can enable the configuration
          options in any combination.
    ReplicationRuleFilter_Tag:
      allOf:
      - $ref: '#/components/schemas/Tag'
      - description: <p>A container for specifying a tag key and value. </p> <p>The
          rule applies only to objects that have the tag in their tag set.</p>
    ReplicationRuleFilter_And:
      allOf:
      - $ref: '#/components/schemas/ReplicationRuleAndOperator'
      - description: "<p>A container for specifying rule filters. The filters determine\
          \ the subset of objects to which the rule applies. This element is required\
          \ only if you specify more than one filter. For example: </p> <ul> <li>\
          \ <p>If you specify both a <code>Prefix</code> and a <code>Tag</code> filter,\
          \ wrap these filters in an <code>And</code> tag.</p> </li> <li> <p>If you\
          \ specify a filter based on multiple tags, wrap the <code>Tag</code> elements\
          \ in an <code>And</code> tag.</p> </li> </ul>"
    SourceSelectionCriteria_SseKmsEncryptedObjects:
      allOf:
      - $ref: '#/components/schemas/SseKmsEncryptedObjects'
      - description: " A container for filter information for the selection of ArvanCloud\
          \ S3 objects encrypted with Amazon Web Services KMS. If you include <code>SourceSelectionCriteria</code>\
          \ in the replication configuration, this element is required. "
    SourceSelectionCriteria_ReplicaModifications:
      allOf:
      - $ref: '#/components/schemas/ReplicaModifications'
      - description: "<p>A filter that you can specify for selections for modifications\
          \ on replicas. ArvanCloud S3 doesn't replicate replica modifications by\
          \ default. In the latest version of replication configuration (when <code>Filter</code>\
          \ is specified), you can specify this element and set the status to <code>Enabled</code>\
          \ to replicate modifications on replicas. </p> <note> <p> If you don't specify\
          \ the <code>Filter</code> element, ArvanCloud S3 assumes that the replication\
          \ configuration is the earlier version, V1. In the earlier version, this\
          \ element is not allowed</p> </note>"
    ReplicationRule_SourceSelectionCriteria:
      allOf:
      - $ref: '#/components/schemas/SourceSelectionCriteria'
      - description: "A container that describes additional filters for identifying\
          \ the source objects that you want to replicate. You can choose to enable\
          \ or disable the replication of these objects. Currently, ArvanCloud S3\
          \ supports only the filter that you can specify for objects created with\
          \ server-side encryption using a customer managed key stored in Amazon Web\
          \ Services Key Management Service (SSE-KMS)."
    ReplicationRule_ExistingObjectReplication:
      allOf:
      - $ref: '#/components/schemas/ExistingObjectReplication'
      - description: <p/>
    ReplicationRule_Destination:
      allOf:
      - $ref: '#/components/schemas/Destination'
      - description: A container for information about the replication destination
          and its configurations including enabling the S3 Replication Time Control
          (S3 RTC).
    RestoreRequest_GlacierJobParameters:
      allOf:
      - $ref: '#/components/schemas/GlacierJobParameters'
      - description: S3 Glacier related parameters pertaining to this job. Do not
          use with restores that specify <code>OutputLocation</code>.
    RestoreRequest_SelectParameters:
      allOf:
      - $ref: '#/components/schemas/SelectParameters'
      - description: Describes the parameters for Select job types.
    RestoreRequest_OutputLocation:
      allOf:
      - $ref: '#/components/schemas/OutputLocation'
      - description: Describes the location where the restore job's output is stored.
    RoutingRule_Condition:
      allOf:
      - $ref: '#/components/schemas/Condition'
      - description: "A container for describing a condition that must be met for\
          \ the specified redirect to apply. For example, 1. If request is for pages\
          \ in the <code>/docs</code> folder, redirect to the <code>/documents</code>\
          \ folder. 2. If request results in HTTP error 4xx, redirect request to another\
          \ host where you might process the error."
    RoutingRule_Redirect:
      allOf:
      - $ref: '#/components/schemas/Redirect'
      - description: "Container for redirect information. You can redirect requests\
          \ to another host, to another page, or with another protocol. In the event\
          \ of an error, you can specify a different error code to return."
    Rule_Expiration:
      allOf:
      - $ref: '#/components/schemas/LifecycleExpiration'
      - description: Specifies the expiration for the lifecycle of the object.
    Rule_Transition:
      allOf:
      - $ref: '#/components/schemas/Transition'
      - description: Specifies when an object transitions to a specified storage class.
    UserMetadata_inner:
      allOf:
      - $ref: '#/components/schemas/MetadataEntry'
      - xml:
          name: MetadataEntry
    StatsEvent_Details:
      allOf:
      - $ref: '#/components/schemas/Stats'
      - description: The Stats event details.
    SelectObjectContentEventStream_Records:
      allOf:
      - $ref: '#/components/schemas/RecordsEvent'
      - description: The Records Event.
    SelectObjectContentEventStream_Stats:
      allOf:
      - $ref: '#/components/schemas/StatsEvent'
      - description: The Stats Event.
    SelectObjectContentEventStream_Progress:
      allOf:
      - $ref: '#/components/schemas/ProgressEvent'
      - description: The Progress Event.
    SelectObjectContentRequest_RequestProgress:
      allOf:
      - $ref: '#/components/schemas/RequestProgress'
      - description: Specifies if periodic request progress information should be
          enabled.
    SelectObjectContentRequest_InputSerialization:
      allOf:
      - $ref: '#/components/schemas/InputSerialization'
      - description: Describes the format of the data in the object that is being
          queried.
    SelectObjectContentRequest_OutputSerialization:
      allOf:
      - $ref: '#/components/schemas/OutputSerialization'
      - description: Describes the format of the data that you want ArvanCloud S3
          to return in response.
    SelectObjectContentRequest_ScanRange:
      allOf:
      - $ref: '#/components/schemas/ScanRange'
      - description: "<p>Specifies the byte range of the object to get the records\
          \ from. A record is processed when its first byte is contained by the range.\
          \ This parameter is optional, but when specified, it must not be empty.\
          \ See RFC 2616, Section 14.35.1 about how to specify the start and end of\
          \ the range.</p> <p> <code>ScanRange</code>may be used in the following\
          \ ways:</p> <ul> <li> <p> <code>&lt;scanrange&gt;&lt;start&gt;50&lt;/start&gt;&lt;end&gt;100&lt;/end&gt;&lt;/scanrange&gt;</code>\
          \ - process only the records starting between the bytes 50 and 100 (inclusive,\
          \ counting from zero)</p> </li> <li> <p> <code>&lt;scanrange&gt;&lt;start&gt;50&lt;/start&gt;&lt;/scanrange&gt;</code>\
          \ - process only the records starting after the byte 50</p> </li> <li> <p>\
          \ <code>&lt;scanrange&gt;&lt;end&gt;50&lt;/end&gt;&lt;/scanrange&gt;</code>\
          \ - process only the records within the last 50 bytes of the file.</p> </li>\
          \ </ul>"
    ServerSideEncryptionRule_ApplyServerSideEncryptionByDefault:
      allOf:
      - $ref: '#/components/schemas/ServerSideEncryptionByDefault'
      - description: "Specifies the default server-side encryption to apply to new\
          \ objects in the bucket. If a PUT Object request doesn't specify any server-side\
          \ encryption, this default encryption will be applied."
    StorageClassAnalysisDataExport_Destination:
      allOf:
      - $ref: '#/components/schemas/AnalyticsExportDestination'
      - description: The place to store the data for an analysis.
    TargetGrant_Grantee:
      allOf:
      - $ref: '#/components/schemas/Grantee'
      - description: Container for the person being granted permissions.
  securitySchemes:
    hmac:
      description: ArvanCloud S3 signature
      in: header
      name: Authorization
      type: apiKey
      x-amazon-apigateway-authtype: awsS3
x-hasEquivalentPaths: true
