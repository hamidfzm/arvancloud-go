/*
ArvanCloud S3 Services

<p/>

API version: 2006-03-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package storage

import (
	"encoding/json"
)

// checks if the ReplicationRuleAndOperator type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ReplicationRuleAndOperator{}

// ReplicationRuleAndOperator <p>A container for specifying rule filters. The filters determine the subset of objects to which the rule applies. This element is required only if you specify more than one filter. </p> <p>For example:</p> <ul> <li> <p>If you specify both a <code>Prefix</code> and a <code>Tag</code> filter, wrap these filters in an <code>And</code> tag. </p> </li> <li> <p>If you specify a filter based on multiple tags, wrap the <code>Tag</code> elements in an <code>And</code> tag.</p> </li> </ul>
type ReplicationRuleAndOperator struct {
	Prefix *string `json:"Prefix,omitempty"`
	Tags *Array `json:"Tags,omitempty"`
}

// NewReplicationRuleAndOperator instantiates a new ReplicationRuleAndOperator object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewReplicationRuleAndOperator() *ReplicationRuleAndOperator {
	this := ReplicationRuleAndOperator{}
	return &this
}

// NewReplicationRuleAndOperatorWithDefaults instantiates a new ReplicationRuleAndOperator object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewReplicationRuleAndOperatorWithDefaults() *ReplicationRuleAndOperator {
	this := ReplicationRuleAndOperator{}
	return &this
}

// GetPrefix returns the Prefix field value if set, zero value otherwise.
func (o *ReplicationRuleAndOperator) GetPrefix() string {
	if o == nil || IsNil(o.Prefix) {
		var ret string
		return ret
	}
	return *o.Prefix
}

// GetPrefixOk returns a tuple with the Prefix field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationRuleAndOperator) GetPrefixOk() (*string, bool) {
	if o == nil || IsNil(o.Prefix) {
		return nil, false
	}
	return o.Prefix, true
}

// HasPrefix returns a boolean if a field has been set.
func (o *ReplicationRuleAndOperator) HasPrefix() bool {
	if o != nil && !IsNil(o.Prefix) {
		return true
	}

	return false
}

// SetPrefix gets a reference to the given string and assigns it to the Prefix field.
func (o *ReplicationRuleAndOperator) SetPrefix(v string) {
	o.Prefix = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *ReplicationRuleAndOperator) GetTags() Array {
	if o == nil || IsNil(o.Tags) {
		var ret Array
		return ret
	}
	return *o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ReplicationRuleAndOperator) GetTagsOk() (*Array, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *ReplicationRuleAndOperator) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given Array and assigns it to the Tags field.
func (o *ReplicationRuleAndOperator) SetTags(v Array) {
	o.Tags = &v
}

func (o ReplicationRuleAndOperator) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ReplicationRuleAndOperator) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Prefix) {
		toSerialize["Prefix"] = o.Prefix
	}
	if !IsNil(o.Tags) {
		toSerialize["Tags"] = o.Tags
	}
	return toSerialize, nil
}

type NullableReplicationRuleAndOperator struct {
	value *ReplicationRuleAndOperator
	isSet bool
}

func (v NullableReplicationRuleAndOperator) Get() *ReplicationRuleAndOperator {
	return v.value
}

func (v *NullableReplicationRuleAndOperator) Set(val *ReplicationRuleAndOperator) {
	v.value = val
	v.isSet = true
}

func (v NullableReplicationRuleAndOperator) IsSet() bool {
	return v.isSet
}

func (v *NullableReplicationRuleAndOperator) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableReplicationRuleAndOperator(val *ReplicationRuleAndOperator) *NullableReplicationRuleAndOperator {
	return &NullableReplicationRuleAndOperator{value: val, isSet: true}
}

func (v NullableReplicationRuleAndOperator) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableReplicationRuleAndOperator) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


