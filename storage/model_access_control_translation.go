/*
ArvanCloud S3 Services

<p/>

API version: 2006-03-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package storage

import (
	"encoding/json"
)

// checks if the AccessControlTranslation type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &AccessControlTranslation{}

// AccessControlTranslation A container for information about access control for replicas.
type AccessControlTranslation struct {
	Owner OwnerOverride `json:"Owner"`
}

// NewAccessControlTranslation instantiates a new AccessControlTranslation object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewAccessControlTranslation(owner OwnerOverride) *AccessControlTranslation {
	this := AccessControlTranslation{}
	this.Owner = owner
	return &this
}

// NewAccessControlTranslationWithDefaults instantiates a new AccessControlTranslation object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewAccessControlTranslationWithDefaults() *AccessControlTranslation {
	this := AccessControlTranslation{}
	return &this
}

// GetOwner returns the Owner field value
func (o *AccessControlTranslation) GetOwner() OwnerOverride {
	if o == nil {
		var ret OwnerOverride
		return ret
	}

	return o.Owner
}

// GetOwnerOk returns a tuple with the Owner field value
// and a boolean to check if the value has been set.
func (o *AccessControlTranslation) GetOwnerOk() (*OwnerOverride, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Owner, true
}

// SetOwner sets field value
func (o *AccessControlTranslation) SetOwner(v OwnerOverride) {
	o.Owner = v
}

func (o AccessControlTranslation) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o AccessControlTranslation) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["Owner"] = o.Owner
	return toSerialize, nil
}

type NullableAccessControlTranslation struct {
	value *AccessControlTranslation
	isSet bool
}

func (v NullableAccessControlTranslation) Get() *AccessControlTranslation {
	return v.value
}

func (v *NullableAccessControlTranslation) Set(val *AccessControlTranslation) {
	v.value = val
	v.isSet = true
}

func (v NullableAccessControlTranslation) IsSet() bool {
	return v.isSet
}

func (v *NullableAccessControlTranslation) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableAccessControlTranslation(val *AccessControlTranslation) *NullableAccessControlTranslation {
	return &NullableAccessControlTranslation{value: val, isSet: true}
}

func (v NullableAccessControlTranslation) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableAccessControlTranslation) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


