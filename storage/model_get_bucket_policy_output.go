/*
ArvanCloud S3 Services

<p/>

API version: 2006-03-01
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package storage

import (
	"encoding/json"
)

// checks if the GetBucketPolicyOutput type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &GetBucketPolicyOutput{}

// GetBucketPolicyOutput struct for GetBucketPolicyOutput
type GetBucketPolicyOutput struct {
	Policy *string `json:"Policy,omitempty"`
}

// NewGetBucketPolicyOutput instantiates a new GetBucketPolicyOutput object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewGetBucketPolicyOutput() *GetBucketPolicyOutput {
	this := GetBucketPolicyOutput{}
	return &this
}

// NewGetBucketPolicyOutputWithDefaults instantiates a new GetBucketPolicyOutput object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewGetBucketPolicyOutputWithDefaults() *GetBucketPolicyOutput {
	this := GetBucketPolicyOutput{}
	return &this
}

// GetPolicy returns the Policy field value if set, zero value otherwise.
func (o *GetBucketPolicyOutput) GetPolicy() string {
	if o == nil || IsNil(o.Policy) {
		var ret string
		return ret
	}
	return *o.Policy
}

// GetPolicyOk returns a tuple with the Policy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *GetBucketPolicyOutput) GetPolicyOk() (*string, bool) {
	if o == nil || IsNil(o.Policy) {
		return nil, false
	}
	return o.Policy, true
}

// HasPolicy returns a boolean if a field has been set.
func (o *GetBucketPolicyOutput) HasPolicy() bool {
	if o != nil && !IsNil(o.Policy) {
		return true
	}

	return false
}

// SetPolicy gets a reference to the given string and assigns it to the Policy field.
func (o *GetBucketPolicyOutput) SetPolicy(v string) {
	o.Policy = &v
}

func (o GetBucketPolicyOutput) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o GetBucketPolicyOutput) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Policy) {
		toSerialize["Policy"] = o.Policy
	}
	return toSerialize, nil
}

type NullableGetBucketPolicyOutput struct {
	value *GetBucketPolicyOutput
	isSet bool
}

func (v NullableGetBucketPolicyOutput) Get() *GetBucketPolicyOutput {
	return v.value
}

func (v *NullableGetBucketPolicyOutput) Set(val *GetBucketPolicyOutput) {
	v.value = val
	v.isSet = true
}

func (v NullableGetBucketPolicyOutput) IsSet() bool {
	return v.isSet
}

func (v *NullableGetBucketPolicyOutput) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableGetBucketPolicyOutput(val *GetBucketPolicyOutput) *NullableGetBucketPolicyOutput {
	return &NullableGetBucketPolicyOutput{value: val, isSet: true}
}

func (v NullableGetBucketPolicyOutput) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableGetBucketPolicyOutput) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


