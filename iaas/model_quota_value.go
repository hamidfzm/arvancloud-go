/*
No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package iaas

import (
	"encoding/json"
)

// checks if the QuotaValue type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &QuotaValue{}

// QuotaValue struct for QuotaValue
type QuotaValue struct {
	Unlimited *bool `json:"unlimited,omitempty"`
	Value *int64 `json:"value,omitempty"`
}

// NewQuotaValue instantiates a new QuotaValue object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQuotaValue() *QuotaValue {
	this := QuotaValue{}
	return &this
}

// NewQuotaValueWithDefaults instantiates a new QuotaValue object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQuotaValueWithDefaults() *QuotaValue {
	this := QuotaValue{}
	return &this
}

// GetUnlimited returns the Unlimited field value if set, zero value otherwise.
func (o *QuotaValue) GetUnlimited() bool {
	if o == nil || IsNil(o.Unlimited) {
		var ret bool
		return ret
	}
	return *o.Unlimited
}

// GetUnlimitedOk returns a tuple with the Unlimited field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuotaValue) GetUnlimitedOk() (*bool, bool) {
	if o == nil || IsNil(o.Unlimited) {
		return nil, false
	}
	return o.Unlimited, true
}

// HasUnlimited returns a boolean if a field has been set.
func (o *QuotaValue) HasUnlimited() bool {
	if o != nil && !IsNil(o.Unlimited) {
		return true
	}

	return false
}

// SetUnlimited gets a reference to the given bool and assigns it to the Unlimited field.
func (o *QuotaValue) SetUnlimited(v bool) {
	o.Unlimited = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *QuotaValue) GetValue() int64 {
	if o == nil || IsNil(o.Value) {
		var ret int64
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *QuotaValue) GetValueOk() (*int64, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *QuotaValue) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given int64 and assigns it to the Value field.
func (o *QuotaValue) SetValue(v int64) {
	o.Value = &v
}

func (o QuotaValue) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o QuotaValue) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Unlimited) {
		toSerialize["unlimited"] = o.Unlimited
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	return toSerialize, nil
}

type NullableQuotaValue struct {
	value *QuotaValue
	isSet bool
}

func (v NullableQuotaValue) Get() *QuotaValue {
	return v.value
}

func (v *NullableQuotaValue) Set(val *QuotaValue) {
	v.value = val
	v.isSet = true
}

func (v NullableQuotaValue) IsSet() bool {
	return v.isSet
}

func (v *NullableQuotaValue) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQuotaValue(val *QuotaValue) *NullableQuotaValue {
	return &NullableQuotaValue{value: val, isSet: true}
}

func (v NullableQuotaValue) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQuotaValue) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


