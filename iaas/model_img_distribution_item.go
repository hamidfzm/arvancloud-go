/*
No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package iaas

import (
	"encoding/json"
)

// checks if the ImgDistributionItem type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ImgDistributionItem{}

// ImgDistributionItem struct for ImgDistributionItem
type ImgDistributionItem struct {
	Disk *int64 `json:"disk,omitempty"`
	DistributionName *string `json:"distribution_name,omitempty"`
	Id *string `json:"id,omitempty"`
	Name *string `json:"name,omitempty"`
	OsDescription *string `json:"os_description,omitempty"`
	Ram *int64 `json:"ram,omitempty"`
	SshKey *bool `json:"ssh_key,omitempty"`
	SshPassword *bool `json:"ssh_password,omitempty"`
}

// NewImgDistributionItem instantiates a new ImgDistributionItem object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewImgDistributionItem() *ImgDistributionItem {
	this := ImgDistributionItem{}
	return &this
}

// NewImgDistributionItemWithDefaults instantiates a new ImgDistributionItem object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewImgDistributionItemWithDefaults() *ImgDistributionItem {
	this := ImgDistributionItem{}
	return &this
}

// GetDisk returns the Disk field value if set, zero value otherwise.
func (o *ImgDistributionItem) GetDisk() int64 {
	if o == nil || IsNil(o.Disk) {
		var ret int64
		return ret
	}
	return *o.Disk
}

// GetDiskOk returns a tuple with the Disk field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImgDistributionItem) GetDiskOk() (*int64, bool) {
	if o == nil || IsNil(o.Disk) {
		return nil, false
	}
	return o.Disk, true
}

// HasDisk returns a boolean if a field has been set.
func (o *ImgDistributionItem) HasDisk() bool {
	if o != nil && !IsNil(o.Disk) {
		return true
	}

	return false
}

// SetDisk gets a reference to the given int64 and assigns it to the Disk field.
func (o *ImgDistributionItem) SetDisk(v int64) {
	o.Disk = &v
}

// GetDistributionName returns the DistributionName field value if set, zero value otherwise.
func (o *ImgDistributionItem) GetDistributionName() string {
	if o == nil || IsNil(o.DistributionName) {
		var ret string
		return ret
	}
	return *o.DistributionName
}

// GetDistributionNameOk returns a tuple with the DistributionName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImgDistributionItem) GetDistributionNameOk() (*string, bool) {
	if o == nil || IsNil(o.DistributionName) {
		return nil, false
	}
	return o.DistributionName, true
}

// HasDistributionName returns a boolean if a field has been set.
func (o *ImgDistributionItem) HasDistributionName() bool {
	if o != nil && !IsNil(o.DistributionName) {
		return true
	}

	return false
}

// SetDistributionName gets a reference to the given string and assigns it to the DistributionName field.
func (o *ImgDistributionItem) SetDistributionName(v string) {
	o.DistributionName = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ImgDistributionItem) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImgDistributionItem) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ImgDistributionItem) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ImgDistributionItem) SetId(v string) {
	o.Id = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ImgDistributionItem) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImgDistributionItem) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ImgDistributionItem) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ImgDistributionItem) SetName(v string) {
	o.Name = &v
}

// GetOsDescription returns the OsDescription field value if set, zero value otherwise.
func (o *ImgDistributionItem) GetOsDescription() string {
	if o == nil || IsNil(o.OsDescription) {
		var ret string
		return ret
	}
	return *o.OsDescription
}

// GetOsDescriptionOk returns a tuple with the OsDescription field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImgDistributionItem) GetOsDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.OsDescription) {
		return nil, false
	}
	return o.OsDescription, true
}

// HasOsDescription returns a boolean if a field has been set.
func (o *ImgDistributionItem) HasOsDescription() bool {
	if o != nil && !IsNil(o.OsDescription) {
		return true
	}

	return false
}

// SetOsDescription gets a reference to the given string and assigns it to the OsDescription field.
func (o *ImgDistributionItem) SetOsDescription(v string) {
	o.OsDescription = &v
}

// GetRam returns the Ram field value if set, zero value otherwise.
func (o *ImgDistributionItem) GetRam() int64 {
	if o == nil || IsNil(o.Ram) {
		var ret int64
		return ret
	}
	return *o.Ram
}

// GetRamOk returns a tuple with the Ram field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImgDistributionItem) GetRamOk() (*int64, bool) {
	if o == nil || IsNil(o.Ram) {
		return nil, false
	}
	return o.Ram, true
}

// HasRam returns a boolean if a field has been set.
func (o *ImgDistributionItem) HasRam() bool {
	if o != nil && !IsNil(o.Ram) {
		return true
	}

	return false
}

// SetRam gets a reference to the given int64 and assigns it to the Ram field.
func (o *ImgDistributionItem) SetRam(v int64) {
	o.Ram = &v
}

// GetSshKey returns the SshKey field value if set, zero value otherwise.
func (o *ImgDistributionItem) GetSshKey() bool {
	if o == nil || IsNil(o.SshKey) {
		var ret bool
		return ret
	}
	return *o.SshKey
}

// GetSshKeyOk returns a tuple with the SshKey field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImgDistributionItem) GetSshKeyOk() (*bool, bool) {
	if o == nil || IsNil(o.SshKey) {
		return nil, false
	}
	return o.SshKey, true
}

// HasSshKey returns a boolean if a field has been set.
func (o *ImgDistributionItem) HasSshKey() bool {
	if o != nil && !IsNil(o.SshKey) {
		return true
	}

	return false
}

// SetSshKey gets a reference to the given bool and assigns it to the SshKey field.
func (o *ImgDistributionItem) SetSshKey(v bool) {
	o.SshKey = &v
}

// GetSshPassword returns the SshPassword field value if set, zero value otherwise.
func (o *ImgDistributionItem) GetSshPassword() bool {
	if o == nil || IsNil(o.SshPassword) {
		var ret bool
		return ret
	}
	return *o.SshPassword
}

// GetSshPasswordOk returns a tuple with the SshPassword field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImgDistributionItem) GetSshPasswordOk() (*bool, bool) {
	if o == nil || IsNil(o.SshPassword) {
		return nil, false
	}
	return o.SshPassword, true
}

// HasSshPassword returns a boolean if a field has been set.
func (o *ImgDistributionItem) HasSshPassword() bool {
	if o != nil && !IsNil(o.SshPassword) {
		return true
	}

	return false
}

// SetSshPassword gets a reference to the given bool and assigns it to the SshPassword field.
func (o *ImgDistributionItem) SetSshPassword(v bool) {
	o.SshPassword = &v
}

func (o ImgDistributionItem) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ImgDistributionItem) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Disk) {
		toSerialize["disk"] = o.Disk
	}
	if !IsNil(o.DistributionName) {
		toSerialize["distribution_name"] = o.DistributionName
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.OsDescription) {
		toSerialize["os_description"] = o.OsDescription
	}
	if !IsNil(o.Ram) {
		toSerialize["ram"] = o.Ram
	}
	if !IsNil(o.SshKey) {
		toSerialize["ssh_key"] = o.SshKey
	}
	if !IsNil(o.SshPassword) {
		toSerialize["ssh_password"] = o.SshPassword
	}
	return toSerialize, nil
}

type NullableImgDistributionItem struct {
	value *ImgDistributionItem
	isSet bool
}

func (v NullableImgDistributionItem) Get() *ImgDistributionItem {
	return v.value
}

func (v *NullableImgDistributionItem) Set(val *ImgDistributionItem) {
	v.value = val
	v.isSet = true
}

func (v NullableImgDistributionItem) IsSet() bool {
	return v.isSet
}

func (v *NullableImgDistributionItem) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableImgDistributionItem(val *ImgDistributionItem) *NullableImgDistributionItem {
	return &NullableImgDistributionItem{value: val, isSet: true}
}

func (v NullableImgDistributionItem) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableImgDistributionItem) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


