/*
No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package iaas

import (
	"encoding/json"
)

// checks if the HostRoute type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &HostRoute{}

// HostRoute struct for HostRoute
type HostRoute struct {
	Destination *string `json:"destination,omitempty"`
	Nexthop *string `json:"nexthop,omitempty"`
}

// NewHostRoute instantiates a new HostRoute object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewHostRoute() *HostRoute {
	this := HostRoute{}
	return &this
}

// NewHostRouteWithDefaults instantiates a new HostRoute object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewHostRouteWithDefaults() *HostRoute {
	this := HostRoute{}
	return &this
}

// GetDestination returns the Destination field value if set, zero value otherwise.
func (o *HostRoute) GetDestination() string {
	if o == nil || IsNil(o.Destination) {
		var ret string
		return ret
	}
	return *o.Destination
}

// GetDestinationOk returns a tuple with the Destination field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostRoute) GetDestinationOk() (*string, bool) {
	if o == nil || IsNil(o.Destination) {
		return nil, false
	}
	return o.Destination, true
}

// HasDestination returns a boolean if a field has been set.
func (o *HostRoute) HasDestination() bool {
	if o != nil && !IsNil(o.Destination) {
		return true
	}

	return false
}

// SetDestination gets a reference to the given string and assigns it to the Destination field.
func (o *HostRoute) SetDestination(v string) {
	o.Destination = &v
}

// GetNexthop returns the Nexthop field value if set, zero value otherwise.
func (o *HostRoute) GetNexthop() string {
	if o == nil || IsNil(o.Nexthop) {
		var ret string
		return ret
	}
	return *o.Nexthop
}

// GetNexthopOk returns a tuple with the Nexthop field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *HostRoute) GetNexthopOk() (*string, bool) {
	if o == nil || IsNil(o.Nexthop) {
		return nil, false
	}
	return o.Nexthop, true
}

// HasNexthop returns a boolean if a field has been set.
func (o *HostRoute) HasNexthop() bool {
	if o != nil && !IsNil(o.Nexthop) {
		return true
	}

	return false
}

// SetNexthop gets a reference to the given string and assigns it to the Nexthop field.
func (o *HostRoute) SetNexthop(v string) {
	o.Nexthop = &v
}

func (o HostRoute) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o HostRoute) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Destination) {
		toSerialize["destination"] = o.Destination
	}
	if !IsNil(o.Nexthop) {
		toSerialize["nexthop"] = o.Nexthop
	}
	return toSerialize, nil
}

type NullableHostRoute struct {
	value *HostRoute
	isSet bool
}

func (v NullableHostRoute) Get() *HostRoute {
	return v.value
}

func (v *NullableHostRoute) Set(val *HostRoute) {
	v.value = val
	v.isSet = true
}

func (v NullableHostRoute) IsSet() bool {
	return v.isSet
}

func (v *NullableHostRoute) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableHostRoute(val *HostRoute) *NullableHostRoute {
	return &NullableHostRoute{value: val, isSet: true}
}

func (v NullableHostRoute) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableHostRoute) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


