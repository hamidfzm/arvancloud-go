/*
No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package iaas

import (
	"encoding/json"
)

// checks if the FloatIP type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FloatIP{}

// FloatIP struct for FloatIP
type FloatIP struct {
	CreatedAt *string `json:"created_at,omitempty"`
	Description *string `json:"description,omitempty"`
	FixedIpAddress *string `json:"fixed_ip_address,omitempty"`
	FloatingIpAddress *string `json:"floating_ip_address,omitempty"`
	FloatingNetworkId *string `json:"floating_network_id,omitempty"`
	Id *string `json:"id,omitempty"`
	PortId *string `json:"port_id,omitempty"`
	RevisionNumber *string `json:"revision_number,omitempty"`
	RouterId *string `json:"router_id,omitempty"`
	Server *ServerDetail `json:"server,omitempty"`
	Status *string `json:"status,omitempty"`
	Tags []string `json:"tags,omitempty"`
	UpdatedAt *string `json:"updated_at,omitempty"`
}

// NewFloatIP instantiates a new FloatIP object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFloatIP() *FloatIP {
	this := FloatIP{}
	return &this
}

// NewFloatIPWithDefaults instantiates a new FloatIP object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFloatIPWithDefaults() *FloatIP {
	this := FloatIP{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *FloatIP) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FloatIP) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *FloatIP) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *FloatIP) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *FloatIP) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FloatIP) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *FloatIP) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *FloatIP) SetDescription(v string) {
	o.Description = &v
}

// GetFixedIpAddress returns the FixedIpAddress field value if set, zero value otherwise.
func (o *FloatIP) GetFixedIpAddress() string {
	if o == nil || IsNil(o.FixedIpAddress) {
		var ret string
		return ret
	}
	return *o.FixedIpAddress
}

// GetFixedIpAddressOk returns a tuple with the FixedIpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FloatIP) GetFixedIpAddressOk() (*string, bool) {
	if o == nil || IsNil(o.FixedIpAddress) {
		return nil, false
	}
	return o.FixedIpAddress, true
}

// HasFixedIpAddress returns a boolean if a field has been set.
func (o *FloatIP) HasFixedIpAddress() bool {
	if o != nil && !IsNil(o.FixedIpAddress) {
		return true
	}

	return false
}

// SetFixedIpAddress gets a reference to the given string and assigns it to the FixedIpAddress field.
func (o *FloatIP) SetFixedIpAddress(v string) {
	o.FixedIpAddress = &v
}

// GetFloatingIpAddress returns the FloatingIpAddress field value if set, zero value otherwise.
func (o *FloatIP) GetFloatingIpAddress() string {
	if o == nil || IsNil(o.FloatingIpAddress) {
		var ret string
		return ret
	}
	return *o.FloatingIpAddress
}

// GetFloatingIpAddressOk returns a tuple with the FloatingIpAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FloatIP) GetFloatingIpAddressOk() (*string, bool) {
	if o == nil || IsNil(o.FloatingIpAddress) {
		return nil, false
	}
	return o.FloatingIpAddress, true
}

// HasFloatingIpAddress returns a boolean if a field has been set.
func (o *FloatIP) HasFloatingIpAddress() bool {
	if o != nil && !IsNil(o.FloatingIpAddress) {
		return true
	}

	return false
}

// SetFloatingIpAddress gets a reference to the given string and assigns it to the FloatingIpAddress field.
func (o *FloatIP) SetFloatingIpAddress(v string) {
	o.FloatingIpAddress = &v
}

// GetFloatingNetworkId returns the FloatingNetworkId field value if set, zero value otherwise.
func (o *FloatIP) GetFloatingNetworkId() string {
	if o == nil || IsNil(o.FloatingNetworkId) {
		var ret string
		return ret
	}
	return *o.FloatingNetworkId
}

// GetFloatingNetworkIdOk returns a tuple with the FloatingNetworkId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FloatIP) GetFloatingNetworkIdOk() (*string, bool) {
	if o == nil || IsNil(o.FloatingNetworkId) {
		return nil, false
	}
	return o.FloatingNetworkId, true
}

// HasFloatingNetworkId returns a boolean if a field has been set.
func (o *FloatIP) HasFloatingNetworkId() bool {
	if o != nil && !IsNil(o.FloatingNetworkId) {
		return true
	}

	return false
}

// SetFloatingNetworkId gets a reference to the given string and assigns it to the FloatingNetworkId field.
func (o *FloatIP) SetFloatingNetworkId(v string) {
	o.FloatingNetworkId = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *FloatIP) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FloatIP) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *FloatIP) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *FloatIP) SetId(v string) {
	o.Id = &v
}

// GetPortId returns the PortId field value if set, zero value otherwise.
func (o *FloatIP) GetPortId() string {
	if o == nil || IsNil(o.PortId) {
		var ret string
		return ret
	}
	return *o.PortId
}

// GetPortIdOk returns a tuple with the PortId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FloatIP) GetPortIdOk() (*string, bool) {
	if o == nil || IsNil(o.PortId) {
		return nil, false
	}
	return o.PortId, true
}

// HasPortId returns a boolean if a field has been set.
func (o *FloatIP) HasPortId() bool {
	if o != nil && !IsNil(o.PortId) {
		return true
	}

	return false
}

// SetPortId gets a reference to the given string and assigns it to the PortId field.
func (o *FloatIP) SetPortId(v string) {
	o.PortId = &v
}

// GetRevisionNumber returns the RevisionNumber field value if set, zero value otherwise.
func (o *FloatIP) GetRevisionNumber() string {
	if o == nil || IsNil(o.RevisionNumber) {
		var ret string
		return ret
	}
	return *o.RevisionNumber
}

// GetRevisionNumberOk returns a tuple with the RevisionNumber field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FloatIP) GetRevisionNumberOk() (*string, bool) {
	if o == nil || IsNil(o.RevisionNumber) {
		return nil, false
	}
	return o.RevisionNumber, true
}

// HasRevisionNumber returns a boolean if a field has been set.
func (o *FloatIP) HasRevisionNumber() bool {
	if o != nil && !IsNil(o.RevisionNumber) {
		return true
	}

	return false
}

// SetRevisionNumber gets a reference to the given string and assigns it to the RevisionNumber field.
func (o *FloatIP) SetRevisionNumber(v string) {
	o.RevisionNumber = &v
}

// GetRouterId returns the RouterId field value if set, zero value otherwise.
func (o *FloatIP) GetRouterId() string {
	if o == nil || IsNil(o.RouterId) {
		var ret string
		return ret
	}
	return *o.RouterId
}

// GetRouterIdOk returns a tuple with the RouterId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FloatIP) GetRouterIdOk() (*string, bool) {
	if o == nil || IsNil(o.RouterId) {
		return nil, false
	}
	return o.RouterId, true
}

// HasRouterId returns a boolean if a field has been set.
func (o *FloatIP) HasRouterId() bool {
	if o != nil && !IsNil(o.RouterId) {
		return true
	}

	return false
}

// SetRouterId gets a reference to the given string and assigns it to the RouterId field.
func (o *FloatIP) SetRouterId(v string) {
	o.RouterId = &v
}

// GetServer returns the Server field value if set, zero value otherwise.
func (o *FloatIP) GetServer() ServerDetail {
	if o == nil || IsNil(o.Server) {
		var ret ServerDetail
		return ret
	}
	return *o.Server
}

// GetServerOk returns a tuple with the Server field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FloatIP) GetServerOk() (*ServerDetail, bool) {
	if o == nil || IsNil(o.Server) {
		return nil, false
	}
	return o.Server, true
}

// HasServer returns a boolean if a field has been set.
func (o *FloatIP) HasServer() bool {
	if o != nil && !IsNil(o.Server) {
		return true
	}

	return false
}

// SetServer gets a reference to the given ServerDetail and assigns it to the Server field.
func (o *FloatIP) SetServer(v ServerDetail) {
	o.Server = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *FloatIP) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FloatIP) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *FloatIP) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *FloatIP) SetStatus(v string) {
	o.Status = &v
}

// GetTags returns the Tags field value if set, zero value otherwise.
func (o *FloatIP) GetTags() []string {
	if o == nil || IsNil(o.Tags) {
		var ret []string
		return ret
	}
	return o.Tags
}

// GetTagsOk returns a tuple with the Tags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FloatIP) GetTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.Tags) {
		return nil, false
	}
	return o.Tags, true
}

// HasTags returns a boolean if a field has been set.
func (o *FloatIP) HasTags() bool {
	if o != nil && !IsNil(o.Tags) {
		return true
	}

	return false
}

// SetTags gets a reference to the given []string and assigns it to the Tags field.
func (o *FloatIP) SetTags(v []string) {
	o.Tags = v
}

// GetUpdatedAt returns the UpdatedAt field value if set, zero value otherwise.
func (o *FloatIP) GetUpdatedAt() string {
	if o == nil || IsNil(o.UpdatedAt) {
		var ret string
		return ret
	}
	return *o.UpdatedAt
}

// GetUpdatedAtOk returns a tuple with the UpdatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FloatIP) GetUpdatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.UpdatedAt) {
		return nil, false
	}
	return o.UpdatedAt, true
}

// HasUpdatedAt returns a boolean if a field has been set.
func (o *FloatIP) HasUpdatedAt() bool {
	if o != nil && !IsNil(o.UpdatedAt) {
		return true
	}

	return false
}

// SetUpdatedAt gets a reference to the given string and assigns it to the UpdatedAt field.
func (o *FloatIP) SetUpdatedAt(v string) {
	o.UpdatedAt = &v
}

func (o FloatIP) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FloatIP) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.FixedIpAddress) {
		toSerialize["fixed_ip_address"] = o.FixedIpAddress
	}
	if !IsNil(o.FloatingIpAddress) {
		toSerialize["floating_ip_address"] = o.FloatingIpAddress
	}
	if !IsNil(o.FloatingNetworkId) {
		toSerialize["floating_network_id"] = o.FloatingNetworkId
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.PortId) {
		toSerialize["port_id"] = o.PortId
	}
	if !IsNil(o.RevisionNumber) {
		toSerialize["revision_number"] = o.RevisionNumber
	}
	if !IsNil(o.RouterId) {
		toSerialize["router_id"] = o.RouterId
	}
	if !IsNil(o.Server) {
		toSerialize["server"] = o.Server
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Tags) {
		toSerialize["tags"] = o.Tags
	}
	if !IsNil(o.UpdatedAt) {
		toSerialize["updated_at"] = o.UpdatedAt
	}
	return toSerialize, nil
}

type NullableFloatIP struct {
	value *FloatIP
	isSet bool
}

func (v NullableFloatIP) Get() *FloatIP {
	return v.value
}

func (v *NullableFloatIP) Set(val *FloatIP) {
	v.value = val
	v.isSet = true
}

func (v NullableFloatIP) IsSet() bool {
	return v.isSet
}

func (v *NullableFloatIP) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFloatIP(val *FloatIP) *NullableFloatIP {
	return &NullableFloatIP{value: val, isSet: true}
}

func (v NullableFloatIP) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFloatIP) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


