/*
No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package iaas

import (
	"encoding/json"
)

// checks if the Quota type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &Quota{}

// Quota struct for Quota
type Quota struct {
	MaxImageMeta *QuotaValue `json:"max_image_meta,omitempty"`
	MaxPersonality *QuotaValue `json:"max_personality,omitempty"`
	MaxPersonalitySize *QuotaValue `json:"max_personality_size,omitempty"`
	MaxSecurityGroupRules *QuotaValue `json:"max_security_group_rules,omitempty"`
	MaxSecurityGroups *QuotaValue `json:"max_security_groups,omitempty"`
	MaxServerGroupMembers *QuotaValue `json:"max_server_group_members,omitempty"`
	MaxServerGroups *QuotaValue `json:"max_server_groups,omitempty"`
	MaxServerMeta *QuotaValue `json:"max_server_meta,omitempty"`
	MaxTotalCores *QuotaValue `json:"max_total_cores,omitempty"`
	MaxTotalFloatingIps *QuotaValue `json:"max_total_floating_ips,omitempty"`
	MaxTotalInstances *QuotaValue `json:"max_total_instances,omitempty"`
	MaxTotalKeypairs *QuotaValue `json:"max_total_keypairs,omitempty"`
	MaxTotalRamSize *QuotaValue `json:"max_total_ram_size,omitempty"`
	TotalCoresUsed *int64 `json:"total_cores_used,omitempty"`
	TotalFloatingIpsUsed *int64 `json:"total_floating_ips_used,omitempty"`
	TotalInstancesUsed *int64 `json:"total_instances_used,omitempty"`
	TotalRamUsed *int64 `json:"total_ram_used,omitempty"`
	TotalSecurityGroupsUsed *int64 `json:"total_security_groups_used,omitempty"`
	TotalServerGroupsUsed *int64 `json:"total_server_groups_used,omitempty"`
}

// NewQuota instantiates a new Quota object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewQuota() *Quota {
	this := Quota{}
	return &this
}

// NewQuotaWithDefaults instantiates a new Quota object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewQuotaWithDefaults() *Quota {
	this := Quota{}
	return &this
}

// GetMaxImageMeta returns the MaxImageMeta field value if set, zero value otherwise.
func (o *Quota) GetMaxImageMeta() QuotaValue {
	if o == nil || IsNil(o.MaxImageMeta) {
		var ret QuotaValue
		return ret
	}
	return *o.MaxImageMeta
}

// GetMaxImageMetaOk returns a tuple with the MaxImageMeta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Quota) GetMaxImageMetaOk() (*QuotaValue, bool) {
	if o == nil || IsNil(o.MaxImageMeta) {
		return nil, false
	}
	return o.MaxImageMeta, true
}

// HasMaxImageMeta returns a boolean if a field has been set.
func (o *Quota) HasMaxImageMeta() bool {
	if o != nil && !IsNil(o.MaxImageMeta) {
		return true
	}

	return false
}

// SetMaxImageMeta gets a reference to the given QuotaValue and assigns it to the MaxImageMeta field.
func (o *Quota) SetMaxImageMeta(v QuotaValue) {
	o.MaxImageMeta = &v
}

// GetMaxPersonality returns the MaxPersonality field value if set, zero value otherwise.
func (o *Quota) GetMaxPersonality() QuotaValue {
	if o == nil || IsNil(o.MaxPersonality) {
		var ret QuotaValue
		return ret
	}
	return *o.MaxPersonality
}

// GetMaxPersonalityOk returns a tuple with the MaxPersonality field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Quota) GetMaxPersonalityOk() (*QuotaValue, bool) {
	if o == nil || IsNil(o.MaxPersonality) {
		return nil, false
	}
	return o.MaxPersonality, true
}

// HasMaxPersonality returns a boolean if a field has been set.
func (o *Quota) HasMaxPersonality() bool {
	if o != nil && !IsNil(o.MaxPersonality) {
		return true
	}

	return false
}

// SetMaxPersonality gets a reference to the given QuotaValue and assigns it to the MaxPersonality field.
func (o *Quota) SetMaxPersonality(v QuotaValue) {
	o.MaxPersonality = &v
}

// GetMaxPersonalitySize returns the MaxPersonalitySize field value if set, zero value otherwise.
func (o *Quota) GetMaxPersonalitySize() QuotaValue {
	if o == nil || IsNil(o.MaxPersonalitySize) {
		var ret QuotaValue
		return ret
	}
	return *o.MaxPersonalitySize
}

// GetMaxPersonalitySizeOk returns a tuple with the MaxPersonalitySize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Quota) GetMaxPersonalitySizeOk() (*QuotaValue, bool) {
	if o == nil || IsNil(o.MaxPersonalitySize) {
		return nil, false
	}
	return o.MaxPersonalitySize, true
}

// HasMaxPersonalitySize returns a boolean if a field has been set.
func (o *Quota) HasMaxPersonalitySize() bool {
	if o != nil && !IsNil(o.MaxPersonalitySize) {
		return true
	}

	return false
}

// SetMaxPersonalitySize gets a reference to the given QuotaValue and assigns it to the MaxPersonalitySize field.
func (o *Quota) SetMaxPersonalitySize(v QuotaValue) {
	o.MaxPersonalitySize = &v
}

// GetMaxSecurityGroupRules returns the MaxSecurityGroupRules field value if set, zero value otherwise.
func (o *Quota) GetMaxSecurityGroupRules() QuotaValue {
	if o == nil || IsNil(o.MaxSecurityGroupRules) {
		var ret QuotaValue
		return ret
	}
	return *o.MaxSecurityGroupRules
}

// GetMaxSecurityGroupRulesOk returns a tuple with the MaxSecurityGroupRules field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Quota) GetMaxSecurityGroupRulesOk() (*QuotaValue, bool) {
	if o == nil || IsNil(o.MaxSecurityGroupRules) {
		return nil, false
	}
	return o.MaxSecurityGroupRules, true
}

// HasMaxSecurityGroupRules returns a boolean if a field has been set.
func (o *Quota) HasMaxSecurityGroupRules() bool {
	if o != nil && !IsNil(o.MaxSecurityGroupRules) {
		return true
	}

	return false
}

// SetMaxSecurityGroupRules gets a reference to the given QuotaValue and assigns it to the MaxSecurityGroupRules field.
func (o *Quota) SetMaxSecurityGroupRules(v QuotaValue) {
	o.MaxSecurityGroupRules = &v
}

// GetMaxSecurityGroups returns the MaxSecurityGroups field value if set, zero value otherwise.
func (o *Quota) GetMaxSecurityGroups() QuotaValue {
	if o == nil || IsNil(o.MaxSecurityGroups) {
		var ret QuotaValue
		return ret
	}
	return *o.MaxSecurityGroups
}

// GetMaxSecurityGroupsOk returns a tuple with the MaxSecurityGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Quota) GetMaxSecurityGroupsOk() (*QuotaValue, bool) {
	if o == nil || IsNil(o.MaxSecurityGroups) {
		return nil, false
	}
	return o.MaxSecurityGroups, true
}

// HasMaxSecurityGroups returns a boolean if a field has been set.
func (o *Quota) HasMaxSecurityGroups() bool {
	if o != nil && !IsNil(o.MaxSecurityGroups) {
		return true
	}

	return false
}

// SetMaxSecurityGroups gets a reference to the given QuotaValue and assigns it to the MaxSecurityGroups field.
func (o *Quota) SetMaxSecurityGroups(v QuotaValue) {
	o.MaxSecurityGroups = &v
}

// GetMaxServerGroupMembers returns the MaxServerGroupMembers field value if set, zero value otherwise.
func (o *Quota) GetMaxServerGroupMembers() QuotaValue {
	if o == nil || IsNil(o.MaxServerGroupMembers) {
		var ret QuotaValue
		return ret
	}
	return *o.MaxServerGroupMembers
}

// GetMaxServerGroupMembersOk returns a tuple with the MaxServerGroupMembers field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Quota) GetMaxServerGroupMembersOk() (*QuotaValue, bool) {
	if o == nil || IsNil(o.MaxServerGroupMembers) {
		return nil, false
	}
	return o.MaxServerGroupMembers, true
}

// HasMaxServerGroupMembers returns a boolean if a field has been set.
func (o *Quota) HasMaxServerGroupMembers() bool {
	if o != nil && !IsNil(o.MaxServerGroupMembers) {
		return true
	}

	return false
}

// SetMaxServerGroupMembers gets a reference to the given QuotaValue and assigns it to the MaxServerGroupMembers field.
func (o *Quota) SetMaxServerGroupMembers(v QuotaValue) {
	o.MaxServerGroupMembers = &v
}

// GetMaxServerGroups returns the MaxServerGroups field value if set, zero value otherwise.
func (o *Quota) GetMaxServerGroups() QuotaValue {
	if o == nil || IsNil(o.MaxServerGroups) {
		var ret QuotaValue
		return ret
	}
	return *o.MaxServerGroups
}

// GetMaxServerGroupsOk returns a tuple with the MaxServerGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Quota) GetMaxServerGroupsOk() (*QuotaValue, bool) {
	if o == nil || IsNil(o.MaxServerGroups) {
		return nil, false
	}
	return o.MaxServerGroups, true
}

// HasMaxServerGroups returns a boolean if a field has been set.
func (o *Quota) HasMaxServerGroups() bool {
	if o != nil && !IsNil(o.MaxServerGroups) {
		return true
	}

	return false
}

// SetMaxServerGroups gets a reference to the given QuotaValue and assigns it to the MaxServerGroups field.
func (o *Quota) SetMaxServerGroups(v QuotaValue) {
	o.MaxServerGroups = &v
}

// GetMaxServerMeta returns the MaxServerMeta field value if set, zero value otherwise.
func (o *Quota) GetMaxServerMeta() QuotaValue {
	if o == nil || IsNil(o.MaxServerMeta) {
		var ret QuotaValue
		return ret
	}
	return *o.MaxServerMeta
}

// GetMaxServerMetaOk returns a tuple with the MaxServerMeta field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Quota) GetMaxServerMetaOk() (*QuotaValue, bool) {
	if o == nil || IsNil(o.MaxServerMeta) {
		return nil, false
	}
	return o.MaxServerMeta, true
}

// HasMaxServerMeta returns a boolean if a field has been set.
func (o *Quota) HasMaxServerMeta() bool {
	if o != nil && !IsNil(o.MaxServerMeta) {
		return true
	}

	return false
}

// SetMaxServerMeta gets a reference to the given QuotaValue and assigns it to the MaxServerMeta field.
func (o *Quota) SetMaxServerMeta(v QuotaValue) {
	o.MaxServerMeta = &v
}

// GetMaxTotalCores returns the MaxTotalCores field value if set, zero value otherwise.
func (o *Quota) GetMaxTotalCores() QuotaValue {
	if o == nil || IsNil(o.MaxTotalCores) {
		var ret QuotaValue
		return ret
	}
	return *o.MaxTotalCores
}

// GetMaxTotalCoresOk returns a tuple with the MaxTotalCores field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Quota) GetMaxTotalCoresOk() (*QuotaValue, bool) {
	if o == nil || IsNil(o.MaxTotalCores) {
		return nil, false
	}
	return o.MaxTotalCores, true
}

// HasMaxTotalCores returns a boolean if a field has been set.
func (o *Quota) HasMaxTotalCores() bool {
	if o != nil && !IsNil(o.MaxTotalCores) {
		return true
	}

	return false
}

// SetMaxTotalCores gets a reference to the given QuotaValue and assigns it to the MaxTotalCores field.
func (o *Quota) SetMaxTotalCores(v QuotaValue) {
	o.MaxTotalCores = &v
}

// GetMaxTotalFloatingIps returns the MaxTotalFloatingIps field value if set, zero value otherwise.
func (o *Quota) GetMaxTotalFloatingIps() QuotaValue {
	if o == nil || IsNil(o.MaxTotalFloatingIps) {
		var ret QuotaValue
		return ret
	}
	return *o.MaxTotalFloatingIps
}

// GetMaxTotalFloatingIpsOk returns a tuple with the MaxTotalFloatingIps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Quota) GetMaxTotalFloatingIpsOk() (*QuotaValue, bool) {
	if o == nil || IsNil(o.MaxTotalFloatingIps) {
		return nil, false
	}
	return o.MaxTotalFloatingIps, true
}

// HasMaxTotalFloatingIps returns a boolean if a field has been set.
func (o *Quota) HasMaxTotalFloatingIps() bool {
	if o != nil && !IsNil(o.MaxTotalFloatingIps) {
		return true
	}

	return false
}

// SetMaxTotalFloatingIps gets a reference to the given QuotaValue and assigns it to the MaxTotalFloatingIps field.
func (o *Quota) SetMaxTotalFloatingIps(v QuotaValue) {
	o.MaxTotalFloatingIps = &v
}

// GetMaxTotalInstances returns the MaxTotalInstances field value if set, zero value otherwise.
func (o *Quota) GetMaxTotalInstances() QuotaValue {
	if o == nil || IsNil(o.MaxTotalInstances) {
		var ret QuotaValue
		return ret
	}
	return *o.MaxTotalInstances
}

// GetMaxTotalInstancesOk returns a tuple with the MaxTotalInstances field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Quota) GetMaxTotalInstancesOk() (*QuotaValue, bool) {
	if o == nil || IsNil(o.MaxTotalInstances) {
		return nil, false
	}
	return o.MaxTotalInstances, true
}

// HasMaxTotalInstances returns a boolean if a field has been set.
func (o *Quota) HasMaxTotalInstances() bool {
	if o != nil && !IsNil(o.MaxTotalInstances) {
		return true
	}

	return false
}

// SetMaxTotalInstances gets a reference to the given QuotaValue and assigns it to the MaxTotalInstances field.
func (o *Quota) SetMaxTotalInstances(v QuotaValue) {
	o.MaxTotalInstances = &v
}

// GetMaxTotalKeypairs returns the MaxTotalKeypairs field value if set, zero value otherwise.
func (o *Quota) GetMaxTotalKeypairs() QuotaValue {
	if o == nil || IsNil(o.MaxTotalKeypairs) {
		var ret QuotaValue
		return ret
	}
	return *o.MaxTotalKeypairs
}

// GetMaxTotalKeypairsOk returns a tuple with the MaxTotalKeypairs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Quota) GetMaxTotalKeypairsOk() (*QuotaValue, bool) {
	if o == nil || IsNil(o.MaxTotalKeypairs) {
		return nil, false
	}
	return o.MaxTotalKeypairs, true
}

// HasMaxTotalKeypairs returns a boolean if a field has been set.
func (o *Quota) HasMaxTotalKeypairs() bool {
	if o != nil && !IsNil(o.MaxTotalKeypairs) {
		return true
	}

	return false
}

// SetMaxTotalKeypairs gets a reference to the given QuotaValue and assigns it to the MaxTotalKeypairs field.
func (o *Quota) SetMaxTotalKeypairs(v QuotaValue) {
	o.MaxTotalKeypairs = &v
}

// GetMaxTotalRamSize returns the MaxTotalRamSize field value if set, zero value otherwise.
func (o *Quota) GetMaxTotalRamSize() QuotaValue {
	if o == nil || IsNil(o.MaxTotalRamSize) {
		var ret QuotaValue
		return ret
	}
	return *o.MaxTotalRamSize
}

// GetMaxTotalRamSizeOk returns a tuple with the MaxTotalRamSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Quota) GetMaxTotalRamSizeOk() (*QuotaValue, bool) {
	if o == nil || IsNil(o.MaxTotalRamSize) {
		return nil, false
	}
	return o.MaxTotalRamSize, true
}

// HasMaxTotalRamSize returns a boolean if a field has been set.
func (o *Quota) HasMaxTotalRamSize() bool {
	if o != nil && !IsNil(o.MaxTotalRamSize) {
		return true
	}

	return false
}

// SetMaxTotalRamSize gets a reference to the given QuotaValue and assigns it to the MaxTotalRamSize field.
func (o *Quota) SetMaxTotalRamSize(v QuotaValue) {
	o.MaxTotalRamSize = &v
}

// GetTotalCoresUsed returns the TotalCoresUsed field value if set, zero value otherwise.
func (o *Quota) GetTotalCoresUsed() int64 {
	if o == nil || IsNil(o.TotalCoresUsed) {
		var ret int64
		return ret
	}
	return *o.TotalCoresUsed
}

// GetTotalCoresUsedOk returns a tuple with the TotalCoresUsed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Quota) GetTotalCoresUsedOk() (*int64, bool) {
	if o == nil || IsNil(o.TotalCoresUsed) {
		return nil, false
	}
	return o.TotalCoresUsed, true
}

// HasTotalCoresUsed returns a boolean if a field has been set.
func (o *Quota) HasTotalCoresUsed() bool {
	if o != nil && !IsNil(o.TotalCoresUsed) {
		return true
	}

	return false
}

// SetTotalCoresUsed gets a reference to the given int64 and assigns it to the TotalCoresUsed field.
func (o *Quota) SetTotalCoresUsed(v int64) {
	o.TotalCoresUsed = &v
}

// GetTotalFloatingIpsUsed returns the TotalFloatingIpsUsed field value if set, zero value otherwise.
func (o *Quota) GetTotalFloatingIpsUsed() int64 {
	if o == nil || IsNil(o.TotalFloatingIpsUsed) {
		var ret int64
		return ret
	}
	return *o.TotalFloatingIpsUsed
}

// GetTotalFloatingIpsUsedOk returns a tuple with the TotalFloatingIpsUsed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Quota) GetTotalFloatingIpsUsedOk() (*int64, bool) {
	if o == nil || IsNil(o.TotalFloatingIpsUsed) {
		return nil, false
	}
	return o.TotalFloatingIpsUsed, true
}

// HasTotalFloatingIpsUsed returns a boolean if a field has been set.
func (o *Quota) HasTotalFloatingIpsUsed() bool {
	if o != nil && !IsNil(o.TotalFloatingIpsUsed) {
		return true
	}

	return false
}

// SetTotalFloatingIpsUsed gets a reference to the given int64 and assigns it to the TotalFloatingIpsUsed field.
func (o *Quota) SetTotalFloatingIpsUsed(v int64) {
	o.TotalFloatingIpsUsed = &v
}

// GetTotalInstancesUsed returns the TotalInstancesUsed field value if set, zero value otherwise.
func (o *Quota) GetTotalInstancesUsed() int64 {
	if o == nil || IsNil(o.TotalInstancesUsed) {
		var ret int64
		return ret
	}
	return *o.TotalInstancesUsed
}

// GetTotalInstancesUsedOk returns a tuple with the TotalInstancesUsed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Quota) GetTotalInstancesUsedOk() (*int64, bool) {
	if o == nil || IsNil(o.TotalInstancesUsed) {
		return nil, false
	}
	return o.TotalInstancesUsed, true
}

// HasTotalInstancesUsed returns a boolean if a field has been set.
func (o *Quota) HasTotalInstancesUsed() bool {
	if o != nil && !IsNil(o.TotalInstancesUsed) {
		return true
	}

	return false
}

// SetTotalInstancesUsed gets a reference to the given int64 and assigns it to the TotalInstancesUsed field.
func (o *Quota) SetTotalInstancesUsed(v int64) {
	o.TotalInstancesUsed = &v
}

// GetTotalRamUsed returns the TotalRamUsed field value if set, zero value otherwise.
func (o *Quota) GetTotalRamUsed() int64 {
	if o == nil || IsNil(o.TotalRamUsed) {
		var ret int64
		return ret
	}
	return *o.TotalRamUsed
}

// GetTotalRamUsedOk returns a tuple with the TotalRamUsed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Quota) GetTotalRamUsedOk() (*int64, bool) {
	if o == nil || IsNil(o.TotalRamUsed) {
		return nil, false
	}
	return o.TotalRamUsed, true
}

// HasTotalRamUsed returns a boolean if a field has been set.
func (o *Quota) HasTotalRamUsed() bool {
	if o != nil && !IsNil(o.TotalRamUsed) {
		return true
	}

	return false
}

// SetTotalRamUsed gets a reference to the given int64 and assigns it to the TotalRamUsed field.
func (o *Quota) SetTotalRamUsed(v int64) {
	o.TotalRamUsed = &v
}

// GetTotalSecurityGroupsUsed returns the TotalSecurityGroupsUsed field value if set, zero value otherwise.
func (o *Quota) GetTotalSecurityGroupsUsed() int64 {
	if o == nil || IsNil(o.TotalSecurityGroupsUsed) {
		var ret int64
		return ret
	}
	return *o.TotalSecurityGroupsUsed
}

// GetTotalSecurityGroupsUsedOk returns a tuple with the TotalSecurityGroupsUsed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Quota) GetTotalSecurityGroupsUsedOk() (*int64, bool) {
	if o == nil || IsNil(o.TotalSecurityGroupsUsed) {
		return nil, false
	}
	return o.TotalSecurityGroupsUsed, true
}

// HasTotalSecurityGroupsUsed returns a boolean if a field has been set.
func (o *Quota) HasTotalSecurityGroupsUsed() bool {
	if o != nil && !IsNil(o.TotalSecurityGroupsUsed) {
		return true
	}

	return false
}

// SetTotalSecurityGroupsUsed gets a reference to the given int64 and assigns it to the TotalSecurityGroupsUsed field.
func (o *Quota) SetTotalSecurityGroupsUsed(v int64) {
	o.TotalSecurityGroupsUsed = &v
}

// GetTotalServerGroupsUsed returns the TotalServerGroupsUsed field value if set, zero value otherwise.
func (o *Quota) GetTotalServerGroupsUsed() int64 {
	if o == nil || IsNil(o.TotalServerGroupsUsed) {
		var ret int64
		return ret
	}
	return *o.TotalServerGroupsUsed
}

// GetTotalServerGroupsUsedOk returns a tuple with the TotalServerGroupsUsed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *Quota) GetTotalServerGroupsUsedOk() (*int64, bool) {
	if o == nil || IsNil(o.TotalServerGroupsUsed) {
		return nil, false
	}
	return o.TotalServerGroupsUsed, true
}

// HasTotalServerGroupsUsed returns a boolean if a field has been set.
func (o *Quota) HasTotalServerGroupsUsed() bool {
	if o != nil && !IsNil(o.TotalServerGroupsUsed) {
		return true
	}

	return false
}

// SetTotalServerGroupsUsed gets a reference to the given int64 and assigns it to the TotalServerGroupsUsed field.
func (o *Quota) SetTotalServerGroupsUsed(v int64) {
	o.TotalServerGroupsUsed = &v
}

func (o Quota) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o Quota) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MaxImageMeta) {
		toSerialize["max_image_meta"] = o.MaxImageMeta
	}
	if !IsNil(o.MaxPersonality) {
		toSerialize["max_personality"] = o.MaxPersonality
	}
	if !IsNil(o.MaxPersonalitySize) {
		toSerialize["max_personality_size"] = o.MaxPersonalitySize
	}
	if !IsNil(o.MaxSecurityGroupRules) {
		toSerialize["max_security_group_rules"] = o.MaxSecurityGroupRules
	}
	if !IsNil(o.MaxSecurityGroups) {
		toSerialize["max_security_groups"] = o.MaxSecurityGroups
	}
	if !IsNil(o.MaxServerGroupMembers) {
		toSerialize["max_server_group_members"] = o.MaxServerGroupMembers
	}
	if !IsNil(o.MaxServerGroups) {
		toSerialize["max_server_groups"] = o.MaxServerGroups
	}
	if !IsNil(o.MaxServerMeta) {
		toSerialize["max_server_meta"] = o.MaxServerMeta
	}
	if !IsNil(o.MaxTotalCores) {
		toSerialize["max_total_cores"] = o.MaxTotalCores
	}
	if !IsNil(o.MaxTotalFloatingIps) {
		toSerialize["max_total_floating_ips"] = o.MaxTotalFloatingIps
	}
	if !IsNil(o.MaxTotalInstances) {
		toSerialize["max_total_instances"] = o.MaxTotalInstances
	}
	if !IsNil(o.MaxTotalKeypairs) {
		toSerialize["max_total_keypairs"] = o.MaxTotalKeypairs
	}
	if !IsNil(o.MaxTotalRamSize) {
		toSerialize["max_total_ram_size"] = o.MaxTotalRamSize
	}
	if !IsNil(o.TotalCoresUsed) {
		toSerialize["total_cores_used"] = o.TotalCoresUsed
	}
	if !IsNil(o.TotalFloatingIpsUsed) {
		toSerialize["total_floating_ips_used"] = o.TotalFloatingIpsUsed
	}
	if !IsNil(o.TotalInstancesUsed) {
		toSerialize["total_instances_used"] = o.TotalInstancesUsed
	}
	if !IsNil(o.TotalRamUsed) {
		toSerialize["total_ram_used"] = o.TotalRamUsed
	}
	if !IsNil(o.TotalSecurityGroupsUsed) {
		toSerialize["total_security_groups_used"] = o.TotalSecurityGroupsUsed
	}
	if !IsNil(o.TotalServerGroupsUsed) {
		toSerialize["total_server_groups_used"] = o.TotalServerGroupsUsed
	}
	return toSerialize, nil
}

type NullableQuota struct {
	value *Quota
	isSet bool
}

func (v NullableQuota) Get() *Quota {
	return v.value
}

func (v *NullableQuota) Set(val *Quota) {
	v.value = val
	v.isSet = true
}

func (v NullableQuota) IsSet() bool {
	return v.isSet
}

func (v *NullableQuota) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableQuota(val *Quota) *NullableQuota {
	return &NullableQuota{value: val, isSet: true}
}

func (v NullableQuota) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableQuota) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


