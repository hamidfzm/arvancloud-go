/*
No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package iaas

import (
	"encoding/json"
)

// checks if the FullIP type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &FullIP{}

// FullIP struct for FullIP
type FullIP struct {
	FloatIp map[string]interface{} `json:"float_ip,omitempty"`
	Ip *string `json:"ip,omitempty"`
	MacAddress *string `json:"mac_address,omitempty"`
	PortId *string `json:"port_id,omitempty"`
	PortSecurityEnabled *bool `json:"port_security_enabled,omitempty"`
	Ptr map[string]interface{} `json:"ptr,omitempty"`
	Public *bool `json:"public,omitempty"`
	SecurityGroups []PortSecGroupData `json:"security_groups,omitempty"`
	SubnetId *string `json:"subnet_id,omitempty"`
	SubnetName *string `json:"subnet_name,omitempty"`
	Version *string `json:"version,omitempty"`
}

// NewFullIP instantiates a new FullIP object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewFullIP() *FullIP {
	this := FullIP{}
	return &this
}

// NewFullIPWithDefaults instantiates a new FullIP object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewFullIPWithDefaults() *FullIP {
	this := FullIP{}
	return &this
}

// GetFloatIp returns the FloatIp field value if set, zero value otherwise.
func (o *FullIP) GetFloatIp() map[string]interface{} {
	if o == nil || IsNil(o.FloatIp) {
		var ret map[string]interface{}
		return ret
	}
	return o.FloatIp
}

// GetFloatIpOk returns a tuple with the FloatIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FullIP) GetFloatIpOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.FloatIp) {
		return map[string]interface{}{}, false
	}
	return o.FloatIp, true
}

// HasFloatIp returns a boolean if a field has been set.
func (o *FullIP) HasFloatIp() bool {
	if o != nil && !IsNil(o.FloatIp) {
		return true
	}

	return false
}

// SetFloatIp gets a reference to the given map[string]interface{} and assigns it to the FloatIp field.
func (o *FullIP) SetFloatIp(v map[string]interface{}) {
	o.FloatIp = v
}

// GetIp returns the Ip field value if set, zero value otherwise.
func (o *FullIP) GetIp() string {
	if o == nil || IsNil(o.Ip) {
		var ret string
		return ret
	}
	return *o.Ip
}

// GetIpOk returns a tuple with the Ip field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FullIP) GetIpOk() (*string, bool) {
	if o == nil || IsNil(o.Ip) {
		return nil, false
	}
	return o.Ip, true
}

// HasIp returns a boolean if a field has been set.
func (o *FullIP) HasIp() bool {
	if o != nil && !IsNil(o.Ip) {
		return true
	}

	return false
}

// SetIp gets a reference to the given string and assigns it to the Ip field.
func (o *FullIP) SetIp(v string) {
	o.Ip = &v
}

// GetMacAddress returns the MacAddress field value if set, zero value otherwise.
func (o *FullIP) GetMacAddress() string {
	if o == nil || IsNil(o.MacAddress) {
		var ret string
		return ret
	}
	return *o.MacAddress
}

// GetMacAddressOk returns a tuple with the MacAddress field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FullIP) GetMacAddressOk() (*string, bool) {
	if o == nil || IsNil(o.MacAddress) {
		return nil, false
	}
	return o.MacAddress, true
}

// HasMacAddress returns a boolean if a field has been set.
func (o *FullIP) HasMacAddress() bool {
	if o != nil && !IsNil(o.MacAddress) {
		return true
	}

	return false
}

// SetMacAddress gets a reference to the given string and assigns it to the MacAddress field.
func (o *FullIP) SetMacAddress(v string) {
	o.MacAddress = &v
}

// GetPortId returns the PortId field value if set, zero value otherwise.
func (o *FullIP) GetPortId() string {
	if o == nil || IsNil(o.PortId) {
		var ret string
		return ret
	}
	return *o.PortId
}

// GetPortIdOk returns a tuple with the PortId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FullIP) GetPortIdOk() (*string, bool) {
	if o == nil || IsNil(o.PortId) {
		return nil, false
	}
	return o.PortId, true
}

// HasPortId returns a boolean if a field has been set.
func (o *FullIP) HasPortId() bool {
	if o != nil && !IsNil(o.PortId) {
		return true
	}

	return false
}

// SetPortId gets a reference to the given string and assigns it to the PortId field.
func (o *FullIP) SetPortId(v string) {
	o.PortId = &v
}

// GetPortSecurityEnabled returns the PortSecurityEnabled field value if set, zero value otherwise.
func (o *FullIP) GetPortSecurityEnabled() bool {
	if o == nil || IsNil(o.PortSecurityEnabled) {
		var ret bool
		return ret
	}
	return *o.PortSecurityEnabled
}

// GetPortSecurityEnabledOk returns a tuple with the PortSecurityEnabled field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FullIP) GetPortSecurityEnabledOk() (*bool, bool) {
	if o == nil || IsNil(o.PortSecurityEnabled) {
		return nil, false
	}
	return o.PortSecurityEnabled, true
}

// HasPortSecurityEnabled returns a boolean if a field has been set.
func (o *FullIP) HasPortSecurityEnabled() bool {
	if o != nil && !IsNil(o.PortSecurityEnabled) {
		return true
	}

	return false
}

// SetPortSecurityEnabled gets a reference to the given bool and assigns it to the PortSecurityEnabled field.
func (o *FullIP) SetPortSecurityEnabled(v bool) {
	o.PortSecurityEnabled = &v
}

// GetPtr returns the Ptr field value if set, zero value otherwise.
func (o *FullIP) GetPtr() map[string]interface{} {
	if o == nil || IsNil(o.Ptr) {
		var ret map[string]interface{}
		return ret
	}
	return o.Ptr
}

// GetPtrOk returns a tuple with the Ptr field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FullIP) GetPtrOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Ptr) {
		return map[string]interface{}{}, false
	}
	return o.Ptr, true
}

// HasPtr returns a boolean if a field has been set.
func (o *FullIP) HasPtr() bool {
	if o != nil && !IsNil(o.Ptr) {
		return true
	}

	return false
}

// SetPtr gets a reference to the given map[string]interface{} and assigns it to the Ptr field.
func (o *FullIP) SetPtr(v map[string]interface{}) {
	o.Ptr = v
}

// GetPublic returns the Public field value if set, zero value otherwise.
func (o *FullIP) GetPublic() bool {
	if o == nil || IsNil(o.Public) {
		var ret bool
		return ret
	}
	return *o.Public
}

// GetPublicOk returns a tuple with the Public field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FullIP) GetPublicOk() (*bool, bool) {
	if o == nil || IsNil(o.Public) {
		return nil, false
	}
	return o.Public, true
}

// HasPublic returns a boolean if a field has been set.
func (o *FullIP) HasPublic() bool {
	if o != nil && !IsNil(o.Public) {
		return true
	}

	return false
}

// SetPublic gets a reference to the given bool and assigns it to the Public field.
func (o *FullIP) SetPublic(v bool) {
	o.Public = &v
}

// GetSecurityGroups returns the SecurityGroups field value if set, zero value otherwise.
func (o *FullIP) GetSecurityGroups() []PortSecGroupData {
	if o == nil || IsNil(o.SecurityGroups) {
		var ret []PortSecGroupData
		return ret
	}
	return o.SecurityGroups
}

// GetSecurityGroupsOk returns a tuple with the SecurityGroups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FullIP) GetSecurityGroupsOk() ([]PortSecGroupData, bool) {
	if o == nil || IsNil(o.SecurityGroups) {
		return nil, false
	}
	return o.SecurityGroups, true
}

// HasSecurityGroups returns a boolean if a field has been set.
func (o *FullIP) HasSecurityGroups() bool {
	if o != nil && !IsNil(o.SecurityGroups) {
		return true
	}

	return false
}

// SetSecurityGroups gets a reference to the given []PortSecGroupData and assigns it to the SecurityGroups field.
func (o *FullIP) SetSecurityGroups(v []PortSecGroupData) {
	o.SecurityGroups = v
}

// GetSubnetId returns the SubnetId field value if set, zero value otherwise.
func (o *FullIP) GetSubnetId() string {
	if o == nil || IsNil(o.SubnetId) {
		var ret string
		return ret
	}
	return *o.SubnetId
}

// GetSubnetIdOk returns a tuple with the SubnetId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FullIP) GetSubnetIdOk() (*string, bool) {
	if o == nil || IsNil(o.SubnetId) {
		return nil, false
	}
	return o.SubnetId, true
}

// HasSubnetId returns a boolean if a field has been set.
func (o *FullIP) HasSubnetId() bool {
	if o != nil && !IsNil(o.SubnetId) {
		return true
	}

	return false
}

// SetSubnetId gets a reference to the given string and assigns it to the SubnetId field.
func (o *FullIP) SetSubnetId(v string) {
	o.SubnetId = &v
}

// GetSubnetName returns the SubnetName field value if set, zero value otherwise.
func (o *FullIP) GetSubnetName() string {
	if o == nil || IsNil(o.SubnetName) {
		var ret string
		return ret
	}
	return *o.SubnetName
}

// GetSubnetNameOk returns a tuple with the SubnetName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FullIP) GetSubnetNameOk() (*string, bool) {
	if o == nil || IsNil(o.SubnetName) {
		return nil, false
	}
	return o.SubnetName, true
}

// HasSubnetName returns a boolean if a field has been set.
func (o *FullIP) HasSubnetName() bool {
	if o != nil && !IsNil(o.SubnetName) {
		return true
	}

	return false
}

// SetSubnetName gets a reference to the given string and assigns it to the SubnetName field.
func (o *FullIP) SetSubnetName(v string) {
	o.SubnetName = &v
}

// GetVersion returns the Version field value if set, zero value otherwise.
func (o *FullIP) GetVersion() string {
	if o == nil || IsNil(o.Version) {
		var ret string
		return ret
	}
	return *o.Version
}

// GetVersionOk returns a tuple with the Version field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *FullIP) GetVersionOk() (*string, bool) {
	if o == nil || IsNil(o.Version) {
		return nil, false
	}
	return o.Version, true
}

// HasVersion returns a boolean if a field has been set.
func (o *FullIP) HasVersion() bool {
	if o != nil && !IsNil(o.Version) {
		return true
	}

	return false
}

// SetVersion gets a reference to the given string and assigns it to the Version field.
func (o *FullIP) SetVersion(v string) {
	o.Version = &v
}

func (o FullIP) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o FullIP) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FloatIp) {
		toSerialize["float_ip"] = o.FloatIp
	}
	if !IsNil(o.Ip) {
		toSerialize["ip"] = o.Ip
	}
	if !IsNil(o.MacAddress) {
		toSerialize["mac_address"] = o.MacAddress
	}
	if !IsNil(o.PortId) {
		toSerialize["port_id"] = o.PortId
	}
	if !IsNil(o.PortSecurityEnabled) {
		toSerialize["port_security_enabled"] = o.PortSecurityEnabled
	}
	if !IsNil(o.Ptr) {
		toSerialize["ptr"] = o.Ptr
	}
	if !IsNil(o.Public) {
		toSerialize["public"] = o.Public
	}
	if !IsNil(o.SecurityGroups) {
		toSerialize["security_groups"] = o.SecurityGroups
	}
	if !IsNil(o.SubnetId) {
		toSerialize["subnet_id"] = o.SubnetId
	}
	if !IsNil(o.SubnetName) {
		toSerialize["subnet_name"] = o.SubnetName
	}
	if !IsNil(o.Version) {
		toSerialize["version"] = o.Version
	}
	return toSerialize, nil
}

type NullableFullIP struct {
	value *FullIP
	isSet bool
}

func (v NullableFullIP) Get() *FullIP {
	return v.value
}

func (v *NullableFullIP) Set(val *FullIP) {
	v.value = val
	v.isSet = true
}

func (v NullableFullIP) IsSet() bool {
	return v.isSet
}

func (v *NullableFullIP) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableFullIP(val *FullIP) *NullableFullIP {
	return &NullableFullIP{value: val, isSet: true}
}

func (v NullableFullIP) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableFullIP) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


