/*
No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package iaas

import (
	"encoding/json"
)

// checks if the VolumeLimits type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VolumeLimits{}

// VolumeLimits struct for VolumeLimits
type VolumeLimits struct {
	MaxTotalBackupGigabytes *int32 `json:"max_total_backup_gigabytes,omitempty"`
	MaxTotalBackups *int32 `json:"max_total_backups,omitempty"`
	MaxTotalSnapshots *int32 `json:"max_total_snapshots,omitempty"`
	MaxTotalVolumeGigabytes *int32 `json:"max_total_volume_gigabytes,omitempty"`
	MaxTotalVolumes *int32 `json:"max_total_volumes,omitempty"`
	TotalBackupGigabytesUsed *int32 `json:"total_backup_gigabytes_used,omitempty"`
	TotalBackupsUsed *int32 `json:"total_backups_used,omitempty"`
	TotalGigabytesUsed *int32 `json:"total_gigabytes_used,omitempty"`
	TotalSnapshotsUsed *int32 `json:"total_snapshots_used,omitempty"`
	TotalVolumesUsed *int32 `json:"total_volumes_used,omitempty"`
}

// NewVolumeLimits instantiates a new VolumeLimits object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVolumeLimits() *VolumeLimits {
	this := VolumeLimits{}
	return &this
}

// NewVolumeLimitsWithDefaults instantiates a new VolumeLimits object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVolumeLimitsWithDefaults() *VolumeLimits {
	this := VolumeLimits{}
	return &this
}

// GetMaxTotalBackupGigabytes returns the MaxTotalBackupGigabytes field value if set, zero value otherwise.
func (o *VolumeLimits) GetMaxTotalBackupGigabytes() int32 {
	if o == nil || IsNil(o.MaxTotalBackupGigabytes) {
		var ret int32
		return ret
	}
	return *o.MaxTotalBackupGigabytes
}

// GetMaxTotalBackupGigabytesOk returns a tuple with the MaxTotalBackupGigabytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeLimits) GetMaxTotalBackupGigabytesOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxTotalBackupGigabytes) {
		return nil, false
	}
	return o.MaxTotalBackupGigabytes, true
}

// HasMaxTotalBackupGigabytes returns a boolean if a field has been set.
func (o *VolumeLimits) HasMaxTotalBackupGigabytes() bool {
	if o != nil && !IsNil(o.MaxTotalBackupGigabytes) {
		return true
	}

	return false
}

// SetMaxTotalBackupGigabytes gets a reference to the given int32 and assigns it to the MaxTotalBackupGigabytes field.
func (o *VolumeLimits) SetMaxTotalBackupGigabytes(v int32) {
	o.MaxTotalBackupGigabytes = &v
}

// GetMaxTotalBackups returns the MaxTotalBackups field value if set, zero value otherwise.
func (o *VolumeLimits) GetMaxTotalBackups() int32 {
	if o == nil || IsNil(o.MaxTotalBackups) {
		var ret int32
		return ret
	}
	return *o.MaxTotalBackups
}

// GetMaxTotalBackupsOk returns a tuple with the MaxTotalBackups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeLimits) GetMaxTotalBackupsOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxTotalBackups) {
		return nil, false
	}
	return o.MaxTotalBackups, true
}

// HasMaxTotalBackups returns a boolean if a field has been set.
func (o *VolumeLimits) HasMaxTotalBackups() bool {
	if o != nil && !IsNil(o.MaxTotalBackups) {
		return true
	}

	return false
}

// SetMaxTotalBackups gets a reference to the given int32 and assigns it to the MaxTotalBackups field.
func (o *VolumeLimits) SetMaxTotalBackups(v int32) {
	o.MaxTotalBackups = &v
}

// GetMaxTotalSnapshots returns the MaxTotalSnapshots field value if set, zero value otherwise.
func (o *VolumeLimits) GetMaxTotalSnapshots() int32 {
	if o == nil || IsNil(o.MaxTotalSnapshots) {
		var ret int32
		return ret
	}
	return *o.MaxTotalSnapshots
}

// GetMaxTotalSnapshotsOk returns a tuple with the MaxTotalSnapshots field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeLimits) GetMaxTotalSnapshotsOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxTotalSnapshots) {
		return nil, false
	}
	return o.MaxTotalSnapshots, true
}

// HasMaxTotalSnapshots returns a boolean if a field has been set.
func (o *VolumeLimits) HasMaxTotalSnapshots() bool {
	if o != nil && !IsNil(o.MaxTotalSnapshots) {
		return true
	}

	return false
}

// SetMaxTotalSnapshots gets a reference to the given int32 and assigns it to the MaxTotalSnapshots field.
func (o *VolumeLimits) SetMaxTotalSnapshots(v int32) {
	o.MaxTotalSnapshots = &v
}

// GetMaxTotalVolumeGigabytes returns the MaxTotalVolumeGigabytes field value if set, zero value otherwise.
func (o *VolumeLimits) GetMaxTotalVolumeGigabytes() int32 {
	if o == nil || IsNil(o.MaxTotalVolumeGigabytes) {
		var ret int32
		return ret
	}
	return *o.MaxTotalVolumeGigabytes
}

// GetMaxTotalVolumeGigabytesOk returns a tuple with the MaxTotalVolumeGigabytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeLimits) GetMaxTotalVolumeGigabytesOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxTotalVolumeGigabytes) {
		return nil, false
	}
	return o.MaxTotalVolumeGigabytes, true
}

// HasMaxTotalVolumeGigabytes returns a boolean if a field has been set.
func (o *VolumeLimits) HasMaxTotalVolumeGigabytes() bool {
	if o != nil && !IsNil(o.MaxTotalVolumeGigabytes) {
		return true
	}

	return false
}

// SetMaxTotalVolumeGigabytes gets a reference to the given int32 and assigns it to the MaxTotalVolumeGigabytes field.
func (o *VolumeLimits) SetMaxTotalVolumeGigabytes(v int32) {
	o.MaxTotalVolumeGigabytes = &v
}

// GetMaxTotalVolumes returns the MaxTotalVolumes field value if set, zero value otherwise.
func (o *VolumeLimits) GetMaxTotalVolumes() int32 {
	if o == nil || IsNil(o.MaxTotalVolumes) {
		var ret int32
		return ret
	}
	return *o.MaxTotalVolumes
}

// GetMaxTotalVolumesOk returns a tuple with the MaxTotalVolumes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeLimits) GetMaxTotalVolumesOk() (*int32, bool) {
	if o == nil || IsNil(o.MaxTotalVolumes) {
		return nil, false
	}
	return o.MaxTotalVolumes, true
}

// HasMaxTotalVolumes returns a boolean if a field has been set.
func (o *VolumeLimits) HasMaxTotalVolumes() bool {
	if o != nil && !IsNil(o.MaxTotalVolumes) {
		return true
	}

	return false
}

// SetMaxTotalVolumes gets a reference to the given int32 and assigns it to the MaxTotalVolumes field.
func (o *VolumeLimits) SetMaxTotalVolumes(v int32) {
	o.MaxTotalVolumes = &v
}

// GetTotalBackupGigabytesUsed returns the TotalBackupGigabytesUsed field value if set, zero value otherwise.
func (o *VolumeLimits) GetTotalBackupGigabytesUsed() int32 {
	if o == nil || IsNil(o.TotalBackupGigabytesUsed) {
		var ret int32
		return ret
	}
	return *o.TotalBackupGigabytesUsed
}

// GetTotalBackupGigabytesUsedOk returns a tuple with the TotalBackupGigabytesUsed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeLimits) GetTotalBackupGigabytesUsedOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalBackupGigabytesUsed) {
		return nil, false
	}
	return o.TotalBackupGigabytesUsed, true
}

// HasTotalBackupGigabytesUsed returns a boolean if a field has been set.
func (o *VolumeLimits) HasTotalBackupGigabytesUsed() bool {
	if o != nil && !IsNil(o.TotalBackupGigabytesUsed) {
		return true
	}

	return false
}

// SetTotalBackupGigabytesUsed gets a reference to the given int32 and assigns it to the TotalBackupGigabytesUsed field.
func (o *VolumeLimits) SetTotalBackupGigabytesUsed(v int32) {
	o.TotalBackupGigabytesUsed = &v
}

// GetTotalBackupsUsed returns the TotalBackupsUsed field value if set, zero value otherwise.
func (o *VolumeLimits) GetTotalBackupsUsed() int32 {
	if o == nil || IsNil(o.TotalBackupsUsed) {
		var ret int32
		return ret
	}
	return *o.TotalBackupsUsed
}

// GetTotalBackupsUsedOk returns a tuple with the TotalBackupsUsed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeLimits) GetTotalBackupsUsedOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalBackupsUsed) {
		return nil, false
	}
	return o.TotalBackupsUsed, true
}

// HasTotalBackupsUsed returns a boolean if a field has been set.
func (o *VolumeLimits) HasTotalBackupsUsed() bool {
	if o != nil && !IsNil(o.TotalBackupsUsed) {
		return true
	}

	return false
}

// SetTotalBackupsUsed gets a reference to the given int32 and assigns it to the TotalBackupsUsed field.
func (o *VolumeLimits) SetTotalBackupsUsed(v int32) {
	o.TotalBackupsUsed = &v
}

// GetTotalGigabytesUsed returns the TotalGigabytesUsed field value if set, zero value otherwise.
func (o *VolumeLimits) GetTotalGigabytesUsed() int32 {
	if o == nil || IsNil(o.TotalGigabytesUsed) {
		var ret int32
		return ret
	}
	return *o.TotalGigabytesUsed
}

// GetTotalGigabytesUsedOk returns a tuple with the TotalGigabytesUsed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeLimits) GetTotalGigabytesUsedOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalGigabytesUsed) {
		return nil, false
	}
	return o.TotalGigabytesUsed, true
}

// HasTotalGigabytesUsed returns a boolean if a field has been set.
func (o *VolumeLimits) HasTotalGigabytesUsed() bool {
	if o != nil && !IsNil(o.TotalGigabytesUsed) {
		return true
	}

	return false
}

// SetTotalGigabytesUsed gets a reference to the given int32 and assigns it to the TotalGigabytesUsed field.
func (o *VolumeLimits) SetTotalGigabytesUsed(v int32) {
	o.TotalGigabytesUsed = &v
}

// GetTotalSnapshotsUsed returns the TotalSnapshotsUsed field value if set, zero value otherwise.
func (o *VolumeLimits) GetTotalSnapshotsUsed() int32 {
	if o == nil || IsNil(o.TotalSnapshotsUsed) {
		var ret int32
		return ret
	}
	return *o.TotalSnapshotsUsed
}

// GetTotalSnapshotsUsedOk returns a tuple with the TotalSnapshotsUsed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeLimits) GetTotalSnapshotsUsedOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalSnapshotsUsed) {
		return nil, false
	}
	return o.TotalSnapshotsUsed, true
}

// HasTotalSnapshotsUsed returns a boolean if a field has been set.
func (o *VolumeLimits) HasTotalSnapshotsUsed() bool {
	if o != nil && !IsNil(o.TotalSnapshotsUsed) {
		return true
	}

	return false
}

// SetTotalSnapshotsUsed gets a reference to the given int32 and assigns it to the TotalSnapshotsUsed field.
func (o *VolumeLimits) SetTotalSnapshotsUsed(v int32) {
	o.TotalSnapshotsUsed = &v
}

// GetTotalVolumesUsed returns the TotalVolumesUsed field value if set, zero value otherwise.
func (o *VolumeLimits) GetTotalVolumesUsed() int32 {
	if o == nil || IsNil(o.TotalVolumesUsed) {
		var ret int32
		return ret
	}
	return *o.TotalVolumesUsed
}

// GetTotalVolumesUsedOk returns a tuple with the TotalVolumesUsed field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeLimits) GetTotalVolumesUsedOk() (*int32, bool) {
	if o == nil || IsNil(o.TotalVolumesUsed) {
		return nil, false
	}
	return o.TotalVolumesUsed, true
}

// HasTotalVolumesUsed returns a boolean if a field has been set.
func (o *VolumeLimits) HasTotalVolumesUsed() bool {
	if o != nil && !IsNil(o.TotalVolumesUsed) {
		return true
	}

	return false
}

// SetTotalVolumesUsed gets a reference to the given int32 and assigns it to the TotalVolumesUsed field.
func (o *VolumeLimits) SetTotalVolumesUsed(v int32) {
	o.TotalVolumesUsed = &v
}

func (o VolumeLimits) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VolumeLimits) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MaxTotalBackupGigabytes) {
		toSerialize["max_total_backup_gigabytes"] = o.MaxTotalBackupGigabytes
	}
	if !IsNil(o.MaxTotalBackups) {
		toSerialize["max_total_backups"] = o.MaxTotalBackups
	}
	if !IsNil(o.MaxTotalSnapshots) {
		toSerialize["max_total_snapshots"] = o.MaxTotalSnapshots
	}
	if !IsNil(o.MaxTotalVolumeGigabytes) {
		toSerialize["max_total_volume_gigabytes"] = o.MaxTotalVolumeGigabytes
	}
	if !IsNil(o.MaxTotalVolumes) {
		toSerialize["max_total_volumes"] = o.MaxTotalVolumes
	}
	if !IsNil(o.TotalBackupGigabytesUsed) {
		toSerialize["total_backup_gigabytes_used"] = o.TotalBackupGigabytesUsed
	}
	if !IsNil(o.TotalBackupsUsed) {
		toSerialize["total_backups_used"] = o.TotalBackupsUsed
	}
	if !IsNil(o.TotalGigabytesUsed) {
		toSerialize["total_gigabytes_used"] = o.TotalGigabytesUsed
	}
	if !IsNil(o.TotalSnapshotsUsed) {
		toSerialize["total_snapshots_used"] = o.TotalSnapshotsUsed
	}
	if !IsNil(o.TotalVolumesUsed) {
		toSerialize["total_volumes_used"] = o.TotalVolumesUsed
	}
	return toSerialize, nil
}

type NullableVolumeLimits struct {
	value *VolumeLimits
	isSet bool
}

func (v NullableVolumeLimits) Get() *VolumeLimits {
	return v.value
}

func (v *NullableVolumeLimits) Set(val *VolumeLimits) {
	v.value = val
	v.isSet = true
}

func (v NullableVolumeLimits) IsSet() bool {
	return v.isSet
}

func (v *NullableVolumeLimits) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVolumeLimits(val *VolumeLimits) *NullableVolumeLimits {
	return &NullableVolumeLimits{value: val, isSet: true}
}

func (v NullableVolumeLimits) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVolumeLimits) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


