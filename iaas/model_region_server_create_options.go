/*
No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package iaas

import (
	"encoding/json"
)

// checks if the RegionServerCreateOptions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &RegionServerCreateOptions{}

// RegionServerCreateOptions struct for RegionServerCreateOptions
type RegionServerCreateOptions struct {
	Currency *string `json:"currency,omitempty"`
	DropletCount *int64 `json:"droplet_count,omitempty"`
	DropletLimit *int64 `json:"droplet_limit,omitempty"`
	ImageName *string `json:"image_name,omitempty"`
	ImageVersion *string `json:"image_version,omitempty"`
	NetworkId *string `json:"network_id,omitempty"`
	RegionId *int64 `json:"region_id,omitempty"`
	RequiresPaymentMethod *bool `json:"requires_payment_method,omitempty"`
}

// NewRegionServerCreateOptions instantiates a new RegionServerCreateOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewRegionServerCreateOptions() *RegionServerCreateOptions {
	this := RegionServerCreateOptions{}
	return &this
}

// NewRegionServerCreateOptionsWithDefaults instantiates a new RegionServerCreateOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewRegionServerCreateOptionsWithDefaults() *RegionServerCreateOptions {
	this := RegionServerCreateOptions{}
	return &this
}

// GetCurrency returns the Currency field value if set, zero value otherwise.
func (o *RegionServerCreateOptions) GetCurrency() string {
	if o == nil || IsNil(o.Currency) {
		var ret string
		return ret
	}
	return *o.Currency
}

// GetCurrencyOk returns a tuple with the Currency field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegionServerCreateOptions) GetCurrencyOk() (*string, bool) {
	if o == nil || IsNil(o.Currency) {
		return nil, false
	}
	return o.Currency, true
}

// HasCurrency returns a boolean if a field has been set.
func (o *RegionServerCreateOptions) HasCurrency() bool {
	if o != nil && !IsNil(o.Currency) {
		return true
	}

	return false
}

// SetCurrency gets a reference to the given string and assigns it to the Currency field.
func (o *RegionServerCreateOptions) SetCurrency(v string) {
	o.Currency = &v
}

// GetDropletCount returns the DropletCount field value if set, zero value otherwise.
func (o *RegionServerCreateOptions) GetDropletCount() int64 {
	if o == nil || IsNil(o.DropletCount) {
		var ret int64
		return ret
	}
	return *o.DropletCount
}

// GetDropletCountOk returns a tuple with the DropletCount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegionServerCreateOptions) GetDropletCountOk() (*int64, bool) {
	if o == nil || IsNil(o.DropletCount) {
		return nil, false
	}
	return o.DropletCount, true
}

// HasDropletCount returns a boolean if a field has been set.
func (o *RegionServerCreateOptions) HasDropletCount() bool {
	if o != nil && !IsNil(o.DropletCount) {
		return true
	}

	return false
}

// SetDropletCount gets a reference to the given int64 and assigns it to the DropletCount field.
func (o *RegionServerCreateOptions) SetDropletCount(v int64) {
	o.DropletCount = &v
}

// GetDropletLimit returns the DropletLimit field value if set, zero value otherwise.
func (o *RegionServerCreateOptions) GetDropletLimit() int64 {
	if o == nil || IsNil(o.DropletLimit) {
		var ret int64
		return ret
	}
	return *o.DropletLimit
}

// GetDropletLimitOk returns a tuple with the DropletLimit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegionServerCreateOptions) GetDropletLimitOk() (*int64, bool) {
	if o == nil || IsNil(o.DropletLimit) {
		return nil, false
	}
	return o.DropletLimit, true
}

// HasDropletLimit returns a boolean if a field has been set.
func (o *RegionServerCreateOptions) HasDropletLimit() bool {
	if o != nil && !IsNil(o.DropletLimit) {
		return true
	}

	return false
}

// SetDropletLimit gets a reference to the given int64 and assigns it to the DropletLimit field.
func (o *RegionServerCreateOptions) SetDropletLimit(v int64) {
	o.DropletLimit = &v
}

// GetImageName returns the ImageName field value if set, zero value otherwise.
func (o *RegionServerCreateOptions) GetImageName() string {
	if o == nil || IsNil(o.ImageName) {
		var ret string
		return ret
	}
	return *o.ImageName
}

// GetImageNameOk returns a tuple with the ImageName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegionServerCreateOptions) GetImageNameOk() (*string, bool) {
	if o == nil || IsNil(o.ImageName) {
		return nil, false
	}
	return o.ImageName, true
}

// HasImageName returns a boolean if a field has been set.
func (o *RegionServerCreateOptions) HasImageName() bool {
	if o != nil && !IsNil(o.ImageName) {
		return true
	}

	return false
}

// SetImageName gets a reference to the given string and assigns it to the ImageName field.
func (o *RegionServerCreateOptions) SetImageName(v string) {
	o.ImageName = &v
}

// GetImageVersion returns the ImageVersion field value if set, zero value otherwise.
func (o *RegionServerCreateOptions) GetImageVersion() string {
	if o == nil || IsNil(o.ImageVersion) {
		var ret string
		return ret
	}
	return *o.ImageVersion
}

// GetImageVersionOk returns a tuple with the ImageVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegionServerCreateOptions) GetImageVersionOk() (*string, bool) {
	if o == nil || IsNil(o.ImageVersion) {
		return nil, false
	}
	return o.ImageVersion, true
}

// HasImageVersion returns a boolean if a field has been set.
func (o *RegionServerCreateOptions) HasImageVersion() bool {
	if o != nil && !IsNil(o.ImageVersion) {
		return true
	}

	return false
}

// SetImageVersion gets a reference to the given string and assigns it to the ImageVersion field.
func (o *RegionServerCreateOptions) SetImageVersion(v string) {
	o.ImageVersion = &v
}

// GetNetworkId returns the NetworkId field value if set, zero value otherwise.
func (o *RegionServerCreateOptions) GetNetworkId() string {
	if o == nil || IsNil(o.NetworkId) {
		var ret string
		return ret
	}
	return *o.NetworkId
}

// GetNetworkIdOk returns a tuple with the NetworkId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegionServerCreateOptions) GetNetworkIdOk() (*string, bool) {
	if o == nil || IsNil(o.NetworkId) {
		return nil, false
	}
	return o.NetworkId, true
}

// HasNetworkId returns a boolean if a field has been set.
func (o *RegionServerCreateOptions) HasNetworkId() bool {
	if o != nil && !IsNil(o.NetworkId) {
		return true
	}

	return false
}

// SetNetworkId gets a reference to the given string and assigns it to the NetworkId field.
func (o *RegionServerCreateOptions) SetNetworkId(v string) {
	o.NetworkId = &v
}

// GetRegionId returns the RegionId field value if set, zero value otherwise.
func (o *RegionServerCreateOptions) GetRegionId() int64 {
	if o == nil || IsNil(o.RegionId) {
		var ret int64
		return ret
	}
	return *o.RegionId
}

// GetRegionIdOk returns a tuple with the RegionId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegionServerCreateOptions) GetRegionIdOk() (*int64, bool) {
	if o == nil || IsNil(o.RegionId) {
		return nil, false
	}
	return o.RegionId, true
}

// HasRegionId returns a boolean if a field has been set.
func (o *RegionServerCreateOptions) HasRegionId() bool {
	if o != nil && !IsNil(o.RegionId) {
		return true
	}

	return false
}

// SetRegionId gets a reference to the given int64 and assigns it to the RegionId field.
func (o *RegionServerCreateOptions) SetRegionId(v int64) {
	o.RegionId = &v
}

// GetRequiresPaymentMethod returns the RequiresPaymentMethod field value if set, zero value otherwise.
func (o *RegionServerCreateOptions) GetRequiresPaymentMethod() bool {
	if o == nil || IsNil(o.RequiresPaymentMethod) {
		var ret bool
		return ret
	}
	return *o.RequiresPaymentMethod
}

// GetRequiresPaymentMethodOk returns a tuple with the RequiresPaymentMethod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *RegionServerCreateOptions) GetRequiresPaymentMethodOk() (*bool, bool) {
	if o == nil || IsNil(o.RequiresPaymentMethod) {
		return nil, false
	}
	return o.RequiresPaymentMethod, true
}

// HasRequiresPaymentMethod returns a boolean if a field has been set.
func (o *RegionServerCreateOptions) HasRequiresPaymentMethod() bool {
	if o != nil && !IsNil(o.RequiresPaymentMethod) {
		return true
	}

	return false
}

// SetRequiresPaymentMethod gets a reference to the given bool and assigns it to the RequiresPaymentMethod field.
func (o *RegionServerCreateOptions) SetRequiresPaymentMethod(v bool) {
	o.RequiresPaymentMethod = &v
}

func (o RegionServerCreateOptions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o RegionServerCreateOptions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Currency) {
		toSerialize["currency"] = o.Currency
	}
	if !IsNil(o.DropletCount) {
		toSerialize["droplet_count"] = o.DropletCount
	}
	if !IsNil(o.DropletLimit) {
		toSerialize["droplet_limit"] = o.DropletLimit
	}
	if !IsNil(o.ImageName) {
		toSerialize["image_name"] = o.ImageName
	}
	if !IsNil(o.ImageVersion) {
		toSerialize["image_version"] = o.ImageVersion
	}
	if !IsNil(o.NetworkId) {
		toSerialize["network_id"] = o.NetworkId
	}
	if !IsNil(o.RegionId) {
		toSerialize["region_id"] = o.RegionId
	}
	if !IsNil(o.RequiresPaymentMethod) {
		toSerialize["requires_payment_method"] = o.RequiresPaymentMethod
	}
	return toSerialize, nil
}

type NullableRegionServerCreateOptions struct {
	value *RegionServerCreateOptions
	isSet bool
}

func (v NullableRegionServerCreateOptions) Get() *RegionServerCreateOptions {
	return v.value
}

func (v *NullableRegionServerCreateOptions) Set(val *RegionServerCreateOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableRegionServerCreateOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableRegionServerCreateOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableRegionServerCreateOptions(val *RegionServerCreateOptions) *NullableRegionServerCreateOptions {
	return &NullableRegionServerCreateOptions{value: val, isSet: true}
}

func (v NullableRegionServerCreateOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableRegionServerCreateOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


