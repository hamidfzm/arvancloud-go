/*
No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package iaas

import (
	"encoding/json"
)

// checks if the ResizeServerRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResizeServerRequest{}

// ResizeServerRequest struct for ResizeServerRequest
type ResizeServerRequest struct {
	FlavorId *string `json:"flavor_id,omitempty"`
}

// NewResizeServerRequest instantiates a new ResizeServerRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResizeServerRequest() *ResizeServerRequest {
	this := ResizeServerRequest{}
	return &this
}

// NewResizeServerRequestWithDefaults instantiates a new ResizeServerRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResizeServerRequestWithDefaults() *ResizeServerRequest {
	this := ResizeServerRequest{}
	return &this
}

// GetFlavorId returns the FlavorId field value if set, zero value otherwise.
func (o *ResizeServerRequest) GetFlavorId() string {
	if o == nil || IsNil(o.FlavorId) {
		var ret string
		return ret
	}
	return *o.FlavorId
}

// GetFlavorIdOk returns a tuple with the FlavorId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResizeServerRequest) GetFlavorIdOk() (*string, bool) {
	if o == nil || IsNil(o.FlavorId) {
		return nil, false
	}
	return o.FlavorId, true
}

// HasFlavorId returns a boolean if a field has been set.
func (o *ResizeServerRequest) HasFlavorId() bool {
	if o != nil && !IsNil(o.FlavorId) {
		return true
	}

	return false
}

// SetFlavorId gets a reference to the given string and assigns it to the FlavorId field.
func (o *ResizeServerRequest) SetFlavorId(v string) {
	o.FlavorId = &v
}

func (o ResizeServerRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResizeServerRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.FlavorId) {
		toSerialize["flavor_id"] = o.FlavorId
	}
	return toSerialize, nil
}

type NullableResizeServerRequest struct {
	value *ResizeServerRequest
	isSet bool
}

func (v NullableResizeServerRequest) Get() *ResizeServerRequest {
	return v.value
}

func (v *NullableResizeServerRequest) Set(val *ResizeServerRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableResizeServerRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableResizeServerRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResizeServerRequest(val *ResizeServerRequest) *NullableResizeServerRequest {
	return &NullableResizeServerRequest{value: val, isSet: true}
}

func (v NullableResizeServerRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResizeServerRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


