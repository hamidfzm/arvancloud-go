/*
No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package iaas

import (
	"encoding/json"
)

// checks if the ServerIPInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ServerIPInfo{}

// ServerIPInfo struct for ServerIPInfo
type ServerIPInfo struct {
	CreationDate *string `json:"creation_date,omitempty"`
	HasPublicIp *bool `json:"has_public_ip,omitempty"`
	Id *string `json:"id,omitempty"`
	IpData []IPInfo `json:"ip_data,omitempty"`
	Name *string `json:"name,omitempty"`
	Status *string `json:"status,omitempty"`
}

// NewServerIPInfo instantiates a new ServerIPInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewServerIPInfo() *ServerIPInfo {
	this := ServerIPInfo{}
	return &this
}

// NewServerIPInfoWithDefaults instantiates a new ServerIPInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewServerIPInfoWithDefaults() *ServerIPInfo {
	this := ServerIPInfo{}
	return &this
}

// GetCreationDate returns the CreationDate field value if set, zero value otherwise.
func (o *ServerIPInfo) GetCreationDate() string {
	if o == nil || IsNil(o.CreationDate) {
		var ret string
		return ret
	}
	return *o.CreationDate
}

// GetCreationDateOk returns a tuple with the CreationDate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerIPInfo) GetCreationDateOk() (*string, bool) {
	if o == nil || IsNil(o.CreationDate) {
		return nil, false
	}
	return o.CreationDate, true
}

// HasCreationDate returns a boolean if a field has been set.
func (o *ServerIPInfo) HasCreationDate() bool {
	if o != nil && !IsNil(o.CreationDate) {
		return true
	}

	return false
}

// SetCreationDate gets a reference to the given string and assigns it to the CreationDate field.
func (o *ServerIPInfo) SetCreationDate(v string) {
	o.CreationDate = &v
}

// GetHasPublicIp returns the HasPublicIp field value if set, zero value otherwise.
func (o *ServerIPInfo) GetHasPublicIp() bool {
	if o == nil || IsNil(o.HasPublicIp) {
		var ret bool
		return ret
	}
	return *o.HasPublicIp
}

// GetHasPublicIpOk returns a tuple with the HasPublicIp field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerIPInfo) GetHasPublicIpOk() (*bool, bool) {
	if o == nil || IsNil(o.HasPublicIp) {
		return nil, false
	}
	return o.HasPublicIp, true
}

// HasHasPublicIp returns a boolean if a field has been set.
func (o *ServerIPInfo) HasHasPublicIp() bool {
	if o != nil && !IsNil(o.HasPublicIp) {
		return true
	}

	return false
}

// SetHasPublicIp gets a reference to the given bool and assigns it to the HasPublicIp field.
func (o *ServerIPInfo) SetHasPublicIp(v bool) {
	o.HasPublicIp = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *ServerIPInfo) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerIPInfo) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *ServerIPInfo) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *ServerIPInfo) SetId(v string) {
	o.Id = &v
}

// GetIpData returns the IpData field value if set, zero value otherwise.
func (o *ServerIPInfo) GetIpData() []IPInfo {
	if o == nil || IsNil(o.IpData) {
		var ret []IPInfo
		return ret
	}
	return o.IpData
}

// GetIpDataOk returns a tuple with the IpData field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerIPInfo) GetIpDataOk() ([]IPInfo, bool) {
	if o == nil || IsNil(o.IpData) {
		return nil, false
	}
	return o.IpData, true
}

// HasIpData returns a boolean if a field has been set.
func (o *ServerIPInfo) HasIpData() bool {
	if o != nil && !IsNil(o.IpData) {
		return true
	}

	return false
}

// SetIpData gets a reference to the given []IPInfo and assigns it to the IpData field.
func (o *ServerIPInfo) SetIpData(v []IPInfo) {
	o.IpData = v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ServerIPInfo) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerIPInfo) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ServerIPInfo) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ServerIPInfo) SetName(v string) {
	o.Name = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *ServerIPInfo) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ServerIPInfo) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *ServerIPInfo) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *ServerIPInfo) SetStatus(v string) {
	o.Status = &v
}

func (o ServerIPInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ServerIPInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CreationDate) {
		toSerialize["creation_date"] = o.CreationDate
	}
	if !IsNil(o.HasPublicIp) {
		toSerialize["has_public_ip"] = o.HasPublicIp
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.IpData) {
		toSerialize["ip_data"] = o.IpData
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableServerIPInfo struct {
	value *ServerIPInfo
	isSet bool
}

func (v NullableServerIPInfo) Get() *ServerIPInfo {
	return v.value
}

func (v *NullableServerIPInfo) Set(val *ServerIPInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableServerIPInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableServerIPInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableServerIPInfo(val *ServerIPInfo) *NullableServerIPInfo {
	return &NullableServerIPInfo{value: val, isSet: true}
}

func (v NullableServerIPInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableServerIPInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


