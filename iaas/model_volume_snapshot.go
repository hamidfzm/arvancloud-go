/*
No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package iaas

import (
	"encoding/json"
)

// checks if the VolumeSnapshot type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &VolumeSnapshot{}

// VolumeSnapshot struct for VolumeSnapshot
type VolumeSnapshot struct {
	CreatedAt *string `json:"created_at,omitempty"`
	Description *string `json:"description,omitempty"`
	Id *string `json:"id,omitempty"`
	ImageId *string `json:"image_id,omitempty"`
	Name *string `json:"name,omitempty"`
	RealSize *int64 `json:"real_size,omitempty"`
	RealSizeStatus *bool `json:"real_size_status,omitempty"`
	RevertedOn *string `json:"reverted_on,omitempty"`
	ServerId *string `json:"server_id,omitempty"`
	ServerName *string `json:"server_name,omitempty"`
	Size *int32 `json:"size,omitempty"`
	Status *string `json:"status,omitempty"`
	Type *string `json:"type,omitempty"`
	VolumeId *string `json:"volume_id,omitempty"`
	VolumeName *string `json:"volume_name,omitempty"`
}

// NewVolumeSnapshot instantiates a new VolumeSnapshot object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewVolumeSnapshot() *VolumeSnapshot {
	this := VolumeSnapshot{}
	return &this
}

// NewVolumeSnapshotWithDefaults instantiates a new VolumeSnapshot object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewVolumeSnapshotWithDefaults() *VolumeSnapshot {
	this := VolumeSnapshot{}
	return &this
}

// GetCreatedAt returns the CreatedAt field value if set, zero value otherwise.
func (o *VolumeSnapshot) GetCreatedAt() string {
	if o == nil || IsNil(o.CreatedAt) {
		var ret string
		return ret
	}
	return *o.CreatedAt
}

// GetCreatedAtOk returns a tuple with the CreatedAt field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeSnapshot) GetCreatedAtOk() (*string, bool) {
	if o == nil || IsNil(o.CreatedAt) {
		return nil, false
	}
	return o.CreatedAt, true
}

// HasCreatedAt returns a boolean if a field has been set.
func (o *VolumeSnapshot) HasCreatedAt() bool {
	if o != nil && !IsNil(o.CreatedAt) {
		return true
	}

	return false
}

// SetCreatedAt gets a reference to the given string and assigns it to the CreatedAt field.
func (o *VolumeSnapshot) SetCreatedAt(v string) {
	o.CreatedAt = &v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *VolumeSnapshot) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeSnapshot) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *VolumeSnapshot) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *VolumeSnapshot) SetDescription(v string) {
	o.Description = &v
}

// GetId returns the Id field value if set, zero value otherwise.
func (o *VolumeSnapshot) GetId() string {
	if o == nil || IsNil(o.Id) {
		var ret string
		return ret
	}
	return *o.Id
}

// GetIdOk returns a tuple with the Id field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeSnapshot) GetIdOk() (*string, bool) {
	if o == nil || IsNil(o.Id) {
		return nil, false
	}
	return o.Id, true
}

// HasId returns a boolean if a field has been set.
func (o *VolumeSnapshot) HasId() bool {
	if o != nil && !IsNil(o.Id) {
		return true
	}

	return false
}

// SetId gets a reference to the given string and assigns it to the Id field.
func (o *VolumeSnapshot) SetId(v string) {
	o.Id = &v
}

// GetImageId returns the ImageId field value if set, zero value otherwise.
func (o *VolumeSnapshot) GetImageId() string {
	if o == nil || IsNil(o.ImageId) {
		var ret string
		return ret
	}
	return *o.ImageId
}

// GetImageIdOk returns a tuple with the ImageId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeSnapshot) GetImageIdOk() (*string, bool) {
	if o == nil || IsNil(o.ImageId) {
		return nil, false
	}
	return o.ImageId, true
}

// HasImageId returns a boolean if a field has been set.
func (o *VolumeSnapshot) HasImageId() bool {
	if o != nil && !IsNil(o.ImageId) {
		return true
	}

	return false
}

// SetImageId gets a reference to the given string and assigns it to the ImageId field.
func (o *VolumeSnapshot) SetImageId(v string) {
	o.ImageId = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *VolumeSnapshot) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeSnapshot) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *VolumeSnapshot) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *VolumeSnapshot) SetName(v string) {
	o.Name = &v
}

// GetRealSize returns the RealSize field value if set, zero value otherwise.
func (o *VolumeSnapshot) GetRealSize() int64 {
	if o == nil || IsNil(o.RealSize) {
		var ret int64
		return ret
	}
	return *o.RealSize
}

// GetRealSizeOk returns a tuple with the RealSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeSnapshot) GetRealSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.RealSize) {
		return nil, false
	}
	return o.RealSize, true
}

// HasRealSize returns a boolean if a field has been set.
func (o *VolumeSnapshot) HasRealSize() bool {
	if o != nil && !IsNil(o.RealSize) {
		return true
	}

	return false
}

// SetRealSize gets a reference to the given int64 and assigns it to the RealSize field.
func (o *VolumeSnapshot) SetRealSize(v int64) {
	o.RealSize = &v
}

// GetRealSizeStatus returns the RealSizeStatus field value if set, zero value otherwise.
func (o *VolumeSnapshot) GetRealSizeStatus() bool {
	if o == nil || IsNil(o.RealSizeStatus) {
		var ret bool
		return ret
	}
	return *o.RealSizeStatus
}

// GetRealSizeStatusOk returns a tuple with the RealSizeStatus field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeSnapshot) GetRealSizeStatusOk() (*bool, bool) {
	if o == nil || IsNil(o.RealSizeStatus) {
		return nil, false
	}
	return o.RealSizeStatus, true
}

// HasRealSizeStatus returns a boolean if a field has been set.
func (o *VolumeSnapshot) HasRealSizeStatus() bool {
	if o != nil && !IsNil(o.RealSizeStatus) {
		return true
	}

	return false
}

// SetRealSizeStatus gets a reference to the given bool and assigns it to the RealSizeStatus field.
func (o *VolumeSnapshot) SetRealSizeStatus(v bool) {
	o.RealSizeStatus = &v
}

// GetRevertedOn returns the RevertedOn field value if set, zero value otherwise.
func (o *VolumeSnapshot) GetRevertedOn() string {
	if o == nil || IsNil(o.RevertedOn) {
		var ret string
		return ret
	}
	return *o.RevertedOn
}

// GetRevertedOnOk returns a tuple with the RevertedOn field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeSnapshot) GetRevertedOnOk() (*string, bool) {
	if o == nil || IsNil(o.RevertedOn) {
		return nil, false
	}
	return o.RevertedOn, true
}

// HasRevertedOn returns a boolean if a field has been set.
func (o *VolumeSnapshot) HasRevertedOn() bool {
	if o != nil && !IsNil(o.RevertedOn) {
		return true
	}

	return false
}

// SetRevertedOn gets a reference to the given string and assigns it to the RevertedOn field.
func (o *VolumeSnapshot) SetRevertedOn(v string) {
	o.RevertedOn = &v
}

// GetServerId returns the ServerId field value if set, zero value otherwise.
func (o *VolumeSnapshot) GetServerId() string {
	if o == nil || IsNil(o.ServerId) {
		var ret string
		return ret
	}
	return *o.ServerId
}

// GetServerIdOk returns a tuple with the ServerId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeSnapshot) GetServerIdOk() (*string, bool) {
	if o == nil || IsNil(o.ServerId) {
		return nil, false
	}
	return o.ServerId, true
}

// HasServerId returns a boolean if a field has been set.
func (o *VolumeSnapshot) HasServerId() bool {
	if o != nil && !IsNil(o.ServerId) {
		return true
	}

	return false
}

// SetServerId gets a reference to the given string and assigns it to the ServerId field.
func (o *VolumeSnapshot) SetServerId(v string) {
	o.ServerId = &v
}

// GetServerName returns the ServerName field value if set, zero value otherwise.
func (o *VolumeSnapshot) GetServerName() string {
	if o == nil || IsNil(o.ServerName) {
		var ret string
		return ret
	}
	return *o.ServerName
}

// GetServerNameOk returns a tuple with the ServerName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeSnapshot) GetServerNameOk() (*string, bool) {
	if o == nil || IsNil(o.ServerName) {
		return nil, false
	}
	return o.ServerName, true
}

// HasServerName returns a boolean if a field has been set.
func (o *VolumeSnapshot) HasServerName() bool {
	if o != nil && !IsNil(o.ServerName) {
		return true
	}

	return false
}

// SetServerName gets a reference to the given string and assigns it to the ServerName field.
func (o *VolumeSnapshot) SetServerName(v string) {
	o.ServerName = &v
}

// GetSize returns the Size field value if set, zero value otherwise.
func (o *VolumeSnapshot) GetSize() int32 {
	if o == nil || IsNil(o.Size) {
		var ret int32
		return ret
	}
	return *o.Size
}

// GetSizeOk returns a tuple with the Size field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeSnapshot) GetSizeOk() (*int32, bool) {
	if o == nil || IsNil(o.Size) {
		return nil, false
	}
	return o.Size, true
}

// HasSize returns a boolean if a field has been set.
func (o *VolumeSnapshot) HasSize() bool {
	if o != nil && !IsNil(o.Size) {
		return true
	}

	return false
}

// SetSize gets a reference to the given int32 and assigns it to the Size field.
func (o *VolumeSnapshot) SetSize(v int32) {
	o.Size = &v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *VolumeSnapshot) GetStatus() string {
	if o == nil || IsNil(o.Status) {
		var ret string
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeSnapshot) GetStatusOk() (*string, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *VolumeSnapshot) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given string and assigns it to the Status field.
func (o *VolumeSnapshot) SetStatus(v string) {
	o.Status = &v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *VolumeSnapshot) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeSnapshot) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *VolumeSnapshot) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *VolumeSnapshot) SetType(v string) {
	o.Type = &v
}

// GetVolumeId returns the VolumeId field value if set, zero value otherwise.
func (o *VolumeSnapshot) GetVolumeId() string {
	if o == nil || IsNil(o.VolumeId) {
		var ret string
		return ret
	}
	return *o.VolumeId
}

// GetVolumeIdOk returns a tuple with the VolumeId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeSnapshot) GetVolumeIdOk() (*string, bool) {
	if o == nil || IsNil(o.VolumeId) {
		return nil, false
	}
	return o.VolumeId, true
}

// HasVolumeId returns a boolean if a field has been set.
func (o *VolumeSnapshot) HasVolumeId() bool {
	if o != nil && !IsNil(o.VolumeId) {
		return true
	}

	return false
}

// SetVolumeId gets a reference to the given string and assigns it to the VolumeId field.
func (o *VolumeSnapshot) SetVolumeId(v string) {
	o.VolumeId = &v
}

// GetVolumeName returns the VolumeName field value if set, zero value otherwise.
func (o *VolumeSnapshot) GetVolumeName() string {
	if o == nil || IsNil(o.VolumeName) {
		var ret string
		return ret
	}
	return *o.VolumeName
}

// GetVolumeNameOk returns a tuple with the VolumeName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *VolumeSnapshot) GetVolumeNameOk() (*string, bool) {
	if o == nil || IsNil(o.VolumeName) {
		return nil, false
	}
	return o.VolumeName, true
}

// HasVolumeName returns a boolean if a field has been set.
func (o *VolumeSnapshot) HasVolumeName() bool {
	if o != nil && !IsNil(o.VolumeName) {
		return true
	}

	return false
}

// SetVolumeName gets a reference to the given string and assigns it to the VolumeName field.
func (o *VolumeSnapshot) SetVolumeName(v string) {
	o.VolumeName = &v
}

func (o VolumeSnapshot) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o VolumeSnapshot) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CreatedAt) {
		toSerialize["created_at"] = o.CreatedAt
	}
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.Id) {
		toSerialize["id"] = o.Id
	}
	if !IsNil(o.ImageId) {
		toSerialize["image_id"] = o.ImageId
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.RealSize) {
		toSerialize["real_size"] = o.RealSize
	}
	if !IsNil(o.RealSizeStatus) {
		toSerialize["real_size_status"] = o.RealSizeStatus
	}
	if !IsNil(o.RevertedOn) {
		toSerialize["reverted_on"] = o.RevertedOn
	}
	if !IsNil(o.ServerId) {
		toSerialize["server_id"] = o.ServerId
	}
	if !IsNil(o.ServerName) {
		toSerialize["server_name"] = o.ServerName
	}
	if !IsNil(o.Size) {
		toSerialize["size"] = o.Size
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	if !IsNil(o.VolumeId) {
		toSerialize["volume_id"] = o.VolumeId
	}
	if !IsNil(o.VolumeName) {
		toSerialize["volume_name"] = o.VolumeName
	}
	return toSerialize, nil
}

type NullableVolumeSnapshot struct {
	value *VolumeSnapshot
	isSet bool
}

func (v NullableVolumeSnapshot) Get() *VolumeSnapshot {
	return v.value
}

func (v *NullableVolumeSnapshot) Set(val *VolumeSnapshot) {
	v.value = val
	v.isSet = true
}

func (v NullableVolumeSnapshot) IsSet() bool {
	return v.isSet
}

func (v *NullableVolumeSnapshot) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableVolumeSnapshot(val *VolumeSnapshot) *NullableVolumeSnapshot {
	return &NullableVolumeSnapshot{value: val, isSet: true}
}

func (v NullableVolumeSnapshot) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableVolumeSnapshot) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


