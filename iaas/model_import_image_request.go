/*
No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package iaas

import (
	"encoding/json"
)

// checks if the ImportImageRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ImportImageRequest{}

// ImportImageRequest struct for ImportImageRequest
type ImportImageRequest struct {
	MinDisk *int64 `json:"minDisk,omitempty"`
	MinRam *int64 `json:"minRam,omitempty"`
	Name *string `json:"name,omitempty"`
	Url *string `json:"url,omitempty"`
}

// NewImportImageRequest instantiates a new ImportImageRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewImportImageRequest() *ImportImageRequest {
	this := ImportImageRequest{}
	return &this
}

// NewImportImageRequestWithDefaults instantiates a new ImportImageRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewImportImageRequestWithDefaults() *ImportImageRequest {
	this := ImportImageRequest{}
	return &this
}

// GetMinDisk returns the MinDisk field value if set, zero value otherwise.
func (o *ImportImageRequest) GetMinDisk() int64 {
	if o == nil || IsNil(o.MinDisk) {
		var ret int64
		return ret
	}
	return *o.MinDisk
}

// GetMinDiskOk returns a tuple with the MinDisk field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportImageRequest) GetMinDiskOk() (*int64, bool) {
	if o == nil || IsNil(o.MinDisk) {
		return nil, false
	}
	return o.MinDisk, true
}

// HasMinDisk returns a boolean if a field has been set.
func (o *ImportImageRequest) HasMinDisk() bool {
	if o != nil && !IsNil(o.MinDisk) {
		return true
	}

	return false
}

// SetMinDisk gets a reference to the given int64 and assigns it to the MinDisk field.
func (o *ImportImageRequest) SetMinDisk(v int64) {
	o.MinDisk = &v
}

// GetMinRam returns the MinRam field value if set, zero value otherwise.
func (o *ImportImageRequest) GetMinRam() int64 {
	if o == nil || IsNil(o.MinRam) {
		var ret int64
		return ret
	}
	return *o.MinRam
}

// GetMinRamOk returns a tuple with the MinRam field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportImageRequest) GetMinRamOk() (*int64, bool) {
	if o == nil || IsNil(o.MinRam) {
		return nil, false
	}
	return o.MinRam, true
}

// HasMinRam returns a boolean if a field has been set.
func (o *ImportImageRequest) HasMinRam() bool {
	if o != nil && !IsNil(o.MinRam) {
		return true
	}

	return false
}

// SetMinRam gets a reference to the given int64 and assigns it to the MinRam field.
func (o *ImportImageRequest) SetMinRam(v int64) {
	o.MinRam = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *ImportImageRequest) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportImageRequest) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *ImportImageRequest) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *ImportImageRequest) SetName(v string) {
	o.Name = &v
}

// GetUrl returns the Url field value if set, zero value otherwise.
func (o *ImportImageRequest) GetUrl() string {
	if o == nil || IsNil(o.Url) {
		var ret string
		return ret
	}
	return *o.Url
}

// GetUrlOk returns a tuple with the Url field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ImportImageRequest) GetUrlOk() (*string, bool) {
	if o == nil || IsNil(o.Url) {
		return nil, false
	}
	return o.Url, true
}

// HasUrl returns a boolean if a field has been set.
func (o *ImportImageRequest) HasUrl() bool {
	if o != nil && !IsNil(o.Url) {
		return true
	}

	return false
}

// SetUrl gets a reference to the given string and assigns it to the Url field.
func (o *ImportImageRequest) SetUrl(v string) {
	o.Url = &v
}

func (o ImportImageRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ImportImageRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.MinDisk) {
		toSerialize["minDisk"] = o.MinDisk
	}
	if !IsNil(o.MinRam) {
		toSerialize["minRam"] = o.MinRam
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.Url) {
		toSerialize["url"] = o.Url
	}
	return toSerialize, nil
}

type NullableImportImageRequest struct {
	value *ImportImageRequest
	isSet bool
}

func (v NullableImportImageRequest) Get() *ImportImageRequest {
	return v.value
}

func (v *NullableImportImageRequest) Set(val *ImportImageRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableImportImageRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableImportImageRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableImportImageRequest(val *ImportImageRequest) *NullableImportImageRequest {
	return &NullableImportImageRequest{value: val, isSet: true}
}

func (v NullableImportImageRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableImportImageRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


