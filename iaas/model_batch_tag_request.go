/*
No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package iaas

import (
	"encoding/json"
)

// checks if the BatchTagRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &BatchTagRequest{}

// BatchTagRequest struct for BatchTagRequest
type BatchTagRequest struct {
	InstanceList []string `json:"instance_list,omitempty"`
	InstanceType *string `json:"instance_type,omitempty"`
	TagList []string `json:"tag_list,omitempty"`
}

// NewBatchTagRequest instantiates a new BatchTagRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewBatchTagRequest() *BatchTagRequest {
	this := BatchTagRequest{}
	return &this
}

// NewBatchTagRequestWithDefaults instantiates a new BatchTagRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewBatchTagRequestWithDefaults() *BatchTagRequest {
	this := BatchTagRequest{}
	return &this
}

// GetInstanceList returns the InstanceList field value if set, zero value otherwise.
func (o *BatchTagRequest) GetInstanceList() []string {
	if o == nil || IsNil(o.InstanceList) {
		var ret []string
		return ret
	}
	return o.InstanceList
}

// GetInstanceListOk returns a tuple with the InstanceList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BatchTagRequest) GetInstanceListOk() ([]string, bool) {
	if o == nil || IsNil(o.InstanceList) {
		return nil, false
	}
	return o.InstanceList, true
}

// HasInstanceList returns a boolean if a field has been set.
func (o *BatchTagRequest) HasInstanceList() bool {
	if o != nil && !IsNil(o.InstanceList) {
		return true
	}

	return false
}

// SetInstanceList gets a reference to the given []string and assigns it to the InstanceList field.
func (o *BatchTagRequest) SetInstanceList(v []string) {
	o.InstanceList = v
}

// GetInstanceType returns the InstanceType field value if set, zero value otherwise.
func (o *BatchTagRequest) GetInstanceType() string {
	if o == nil || IsNil(o.InstanceType) {
		var ret string
		return ret
	}
	return *o.InstanceType
}

// GetInstanceTypeOk returns a tuple with the InstanceType field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BatchTagRequest) GetInstanceTypeOk() (*string, bool) {
	if o == nil || IsNil(o.InstanceType) {
		return nil, false
	}
	return o.InstanceType, true
}

// HasInstanceType returns a boolean if a field has been set.
func (o *BatchTagRequest) HasInstanceType() bool {
	if o != nil && !IsNil(o.InstanceType) {
		return true
	}

	return false
}

// SetInstanceType gets a reference to the given string and assigns it to the InstanceType field.
func (o *BatchTagRequest) SetInstanceType(v string) {
	o.InstanceType = &v
}

// GetTagList returns the TagList field value if set, zero value otherwise.
func (o *BatchTagRequest) GetTagList() []string {
	if o == nil || IsNil(o.TagList) {
		var ret []string
		return ret
	}
	return o.TagList
}

// GetTagListOk returns a tuple with the TagList field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *BatchTagRequest) GetTagListOk() ([]string, bool) {
	if o == nil || IsNil(o.TagList) {
		return nil, false
	}
	return o.TagList, true
}

// HasTagList returns a boolean if a field has been set.
func (o *BatchTagRequest) HasTagList() bool {
	if o != nil && !IsNil(o.TagList) {
		return true
	}

	return false
}

// SetTagList gets a reference to the given []string and assigns it to the TagList field.
func (o *BatchTagRequest) SetTagList(v []string) {
	o.TagList = v
}

func (o BatchTagRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o BatchTagRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.InstanceList) {
		toSerialize["instance_list"] = o.InstanceList
	}
	if !IsNil(o.InstanceType) {
		toSerialize["instance_type"] = o.InstanceType
	}
	if !IsNil(o.TagList) {
		toSerialize["tag_list"] = o.TagList
	}
	return toSerialize, nil
}

type NullableBatchTagRequest struct {
	value *BatchTagRequest
	isSet bool
}

func (v NullableBatchTagRequest) Get() *BatchTagRequest {
	return v.value
}

func (v *NullableBatchTagRequest) Set(val *BatchTagRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableBatchTagRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableBatchTagRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableBatchTagRequest(val *BatchTagRequest) *NullableBatchTagRequest {
	return &NullableBatchTagRequest{value: val, isSet: true}
}

func (v NullableBatchTagRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableBatchTagRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


