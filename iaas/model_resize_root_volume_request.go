/*
No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package iaas

import (
	"encoding/json"
)

// checks if the ResizeRootVolumeRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ResizeRootVolumeRequest{}

// ResizeRootVolumeRequest struct for ResizeRootVolumeRequest
type ResizeRootVolumeRequest struct {
	NewSize *int64 `json:"new_size,omitempty"`
}

// NewResizeRootVolumeRequest instantiates a new ResizeRootVolumeRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewResizeRootVolumeRequest() *ResizeRootVolumeRequest {
	this := ResizeRootVolumeRequest{}
	return &this
}

// NewResizeRootVolumeRequestWithDefaults instantiates a new ResizeRootVolumeRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewResizeRootVolumeRequestWithDefaults() *ResizeRootVolumeRequest {
	this := ResizeRootVolumeRequest{}
	return &this
}

// GetNewSize returns the NewSize field value if set, zero value otherwise.
func (o *ResizeRootVolumeRequest) GetNewSize() int64 {
	if o == nil || IsNil(o.NewSize) {
		var ret int64
		return ret
	}
	return *o.NewSize
}

// GetNewSizeOk returns a tuple with the NewSize field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ResizeRootVolumeRequest) GetNewSizeOk() (*int64, bool) {
	if o == nil || IsNil(o.NewSize) {
		return nil, false
	}
	return o.NewSize, true
}

// HasNewSize returns a boolean if a field has been set.
func (o *ResizeRootVolumeRequest) HasNewSize() bool {
	if o != nil && !IsNil(o.NewSize) {
		return true
	}

	return false
}

// SetNewSize gets a reference to the given int64 and assigns it to the NewSize field.
func (o *ResizeRootVolumeRequest) SetNewSize(v int64) {
	o.NewSize = &v
}

func (o ResizeRootVolumeRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ResizeRootVolumeRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.NewSize) {
		toSerialize["new_size"] = o.NewSize
	}
	return toSerialize, nil
}

type NullableResizeRootVolumeRequest struct {
	value *ResizeRootVolumeRequest
	isSet bool
}

func (v NullableResizeRootVolumeRequest) Get() *ResizeRootVolumeRequest {
	return v.value
}

func (v *NullableResizeRootVolumeRequest) Set(val *ResizeRootVolumeRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableResizeRootVolumeRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableResizeRootVolumeRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableResizeRootVolumeRequest(val *ResizeRootVolumeRequest) *NullableResizeRootVolumeRequest {
	return &NullableResizeRootVolumeRequest{value: val, isSet: true}
}

func (v NullableResizeRootVolumeRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableResizeRootVolumeRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


