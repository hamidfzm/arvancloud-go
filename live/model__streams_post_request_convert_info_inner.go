/*
Arvan LIVE

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package live

import (
	"encoding/json"
)

// checks if the StreamsPostRequestConvertInfoInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &StreamsPostRequestConvertInfoInner{}

// StreamsPostRequestConvertInfoInner struct for StreamsPostRequestConvertInfoInner
type StreamsPostRequestConvertInfoInner struct {
	// Audio bitrate in kilobit
	AudioBitrate *int32 `json:"audio_bitrate,omitempty"`
	// Video bitrate in kilobit
	VideoBitrate *int32 `json:"video_bitrate,omitempty"`
	// resolution width
	ResolutionWidth *int32 `json:"resolution_width,omitempty"`
	// resolution height
	ResolutionHeight *int32 `json:"resolution_height,omitempty"`
	// If you want to use watermark for a video, use this ID
	WatermarkId *string `json:"watermark_id,omitempty"`
	// Area of the watermark if watermark_id presents
	WatermarkArea *string `json:"watermark_area,omitempty"`
}

// NewStreamsPostRequestConvertInfoInner instantiates a new StreamsPostRequestConvertInfoInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewStreamsPostRequestConvertInfoInner() *StreamsPostRequestConvertInfoInner {
	this := StreamsPostRequestConvertInfoInner{}
	return &this
}

// NewStreamsPostRequestConvertInfoInnerWithDefaults instantiates a new StreamsPostRequestConvertInfoInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewStreamsPostRequestConvertInfoInnerWithDefaults() *StreamsPostRequestConvertInfoInner {
	this := StreamsPostRequestConvertInfoInner{}
	return &this
}

// GetAudioBitrate returns the AudioBitrate field value if set, zero value otherwise.
func (o *StreamsPostRequestConvertInfoInner) GetAudioBitrate() int32 {
	if o == nil || IsNil(o.AudioBitrate) {
		var ret int32
		return ret
	}
	return *o.AudioBitrate
}

// GetAudioBitrateOk returns a tuple with the AudioBitrate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StreamsPostRequestConvertInfoInner) GetAudioBitrateOk() (*int32, bool) {
	if o == nil || IsNil(o.AudioBitrate) {
		return nil, false
	}
	return o.AudioBitrate, true
}

// HasAudioBitrate returns a boolean if a field has been set.
func (o *StreamsPostRequestConvertInfoInner) HasAudioBitrate() bool {
	if o != nil && !IsNil(o.AudioBitrate) {
		return true
	}

	return false
}

// SetAudioBitrate gets a reference to the given int32 and assigns it to the AudioBitrate field.
func (o *StreamsPostRequestConvertInfoInner) SetAudioBitrate(v int32) {
	o.AudioBitrate = &v
}

// GetVideoBitrate returns the VideoBitrate field value if set, zero value otherwise.
func (o *StreamsPostRequestConvertInfoInner) GetVideoBitrate() int32 {
	if o == nil || IsNil(o.VideoBitrate) {
		var ret int32
		return ret
	}
	return *o.VideoBitrate
}

// GetVideoBitrateOk returns a tuple with the VideoBitrate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StreamsPostRequestConvertInfoInner) GetVideoBitrateOk() (*int32, bool) {
	if o == nil || IsNil(o.VideoBitrate) {
		return nil, false
	}
	return o.VideoBitrate, true
}

// HasVideoBitrate returns a boolean if a field has been set.
func (o *StreamsPostRequestConvertInfoInner) HasVideoBitrate() bool {
	if o != nil && !IsNil(o.VideoBitrate) {
		return true
	}

	return false
}

// SetVideoBitrate gets a reference to the given int32 and assigns it to the VideoBitrate field.
func (o *StreamsPostRequestConvertInfoInner) SetVideoBitrate(v int32) {
	o.VideoBitrate = &v
}

// GetResolutionWidth returns the ResolutionWidth field value if set, zero value otherwise.
func (o *StreamsPostRequestConvertInfoInner) GetResolutionWidth() int32 {
	if o == nil || IsNil(o.ResolutionWidth) {
		var ret int32
		return ret
	}
	return *o.ResolutionWidth
}

// GetResolutionWidthOk returns a tuple with the ResolutionWidth field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StreamsPostRequestConvertInfoInner) GetResolutionWidthOk() (*int32, bool) {
	if o == nil || IsNil(o.ResolutionWidth) {
		return nil, false
	}
	return o.ResolutionWidth, true
}

// HasResolutionWidth returns a boolean if a field has been set.
func (o *StreamsPostRequestConvertInfoInner) HasResolutionWidth() bool {
	if o != nil && !IsNil(o.ResolutionWidth) {
		return true
	}

	return false
}

// SetResolutionWidth gets a reference to the given int32 and assigns it to the ResolutionWidth field.
func (o *StreamsPostRequestConvertInfoInner) SetResolutionWidth(v int32) {
	o.ResolutionWidth = &v
}

// GetResolutionHeight returns the ResolutionHeight field value if set, zero value otherwise.
func (o *StreamsPostRequestConvertInfoInner) GetResolutionHeight() int32 {
	if o == nil || IsNil(o.ResolutionHeight) {
		var ret int32
		return ret
	}
	return *o.ResolutionHeight
}

// GetResolutionHeightOk returns a tuple with the ResolutionHeight field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StreamsPostRequestConvertInfoInner) GetResolutionHeightOk() (*int32, bool) {
	if o == nil || IsNil(o.ResolutionHeight) {
		return nil, false
	}
	return o.ResolutionHeight, true
}

// HasResolutionHeight returns a boolean if a field has been set.
func (o *StreamsPostRequestConvertInfoInner) HasResolutionHeight() bool {
	if o != nil && !IsNil(o.ResolutionHeight) {
		return true
	}

	return false
}

// SetResolutionHeight gets a reference to the given int32 and assigns it to the ResolutionHeight field.
func (o *StreamsPostRequestConvertInfoInner) SetResolutionHeight(v int32) {
	o.ResolutionHeight = &v
}

// GetWatermarkId returns the WatermarkId field value if set, zero value otherwise.
func (o *StreamsPostRequestConvertInfoInner) GetWatermarkId() string {
	if o == nil || IsNil(o.WatermarkId) {
		var ret string
		return ret
	}
	return *o.WatermarkId
}

// GetWatermarkIdOk returns a tuple with the WatermarkId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StreamsPostRequestConvertInfoInner) GetWatermarkIdOk() (*string, bool) {
	if o == nil || IsNil(o.WatermarkId) {
		return nil, false
	}
	return o.WatermarkId, true
}

// HasWatermarkId returns a boolean if a field has been set.
func (o *StreamsPostRequestConvertInfoInner) HasWatermarkId() bool {
	if o != nil && !IsNil(o.WatermarkId) {
		return true
	}

	return false
}

// SetWatermarkId gets a reference to the given string and assigns it to the WatermarkId field.
func (o *StreamsPostRequestConvertInfoInner) SetWatermarkId(v string) {
	o.WatermarkId = &v
}

// GetWatermarkArea returns the WatermarkArea field value if set, zero value otherwise.
func (o *StreamsPostRequestConvertInfoInner) GetWatermarkArea() string {
	if o == nil || IsNil(o.WatermarkArea) {
		var ret string
		return ret
	}
	return *o.WatermarkArea
}

// GetWatermarkAreaOk returns a tuple with the WatermarkArea field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *StreamsPostRequestConvertInfoInner) GetWatermarkAreaOk() (*string, bool) {
	if o == nil || IsNil(o.WatermarkArea) {
		return nil, false
	}
	return o.WatermarkArea, true
}

// HasWatermarkArea returns a boolean if a field has been set.
func (o *StreamsPostRequestConvertInfoInner) HasWatermarkArea() bool {
	if o != nil && !IsNil(o.WatermarkArea) {
		return true
	}

	return false
}

// SetWatermarkArea gets a reference to the given string and assigns it to the WatermarkArea field.
func (o *StreamsPostRequestConvertInfoInner) SetWatermarkArea(v string) {
	o.WatermarkArea = &v
}

func (o StreamsPostRequestConvertInfoInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o StreamsPostRequestConvertInfoInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AudioBitrate) {
		toSerialize["audio_bitrate"] = o.AudioBitrate
	}
	if !IsNil(o.VideoBitrate) {
		toSerialize["video_bitrate"] = o.VideoBitrate
	}
	if !IsNil(o.ResolutionWidth) {
		toSerialize["resolution_width"] = o.ResolutionWidth
	}
	if !IsNil(o.ResolutionHeight) {
		toSerialize["resolution_height"] = o.ResolutionHeight
	}
	if !IsNil(o.WatermarkId) {
		toSerialize["watermark_id"] = o.WatermarkId
	}
	if !IsNil(o.WatermarkArea) {
		toSerialize["watermark_area"] = o.WatermarkArea
	}
	return toSerialize, nil
}

type NullableStreamsPostRequestConvertInfoInner struct {
	value *StreamsPostRequestConvertInfoInner
	isSet bool
}

func (v NullableStreamsPostRequestConvertInfoInner) Get() *StreamsPostRequestConvertInfoInner {
	return v.value
}

func (v *NullableStreamsPostRequestConvertInfoInner) Set(val *StreamsPostRequestConvertInfoInner) {
	v.value = val
	v.isSet = true
}

func (v NullableStreamsPostRequestConvertInfoInner) IsSet() bool {
	return v.isSet
}

func (v *NullableStreamsPostRequestConvertInfoInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableStreamsPostRequestConvertInfoInner(val *StreamsPostRequestConvertInfoInner) *NullableStreamsPostRequestConvertInfoInner {
	return &NullableStreamsPostRequestConvertInfoInner{value: val, isSet: true}
}

func (v NullableStreamsPostRequestConvertInfoInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableStreamsPostRequestConvertInfoInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


