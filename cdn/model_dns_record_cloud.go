/*
ArvanCloud CDN Services

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 4.107.1
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package cdn

import (
	"encoding/json"
)

// checks if the DnsRecordCloud type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &DnsRecordCloud{}

// DnsRecordCloud struct for DnsRecordCloud
type DnsRecordCloud struct {
	Cloud bool `json:"cloud"`
}

// NewDnsRecordCloud instantiates a new DnsRecordCloud object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewDnsRecordCloud(cloud bool) *DnsRecordCloud {
	this := DnsRecordCloud{}
	this.Cloud = cloud
	return &this
}

// NewDnsRecordCloudWithDefaults instantiates a new DnsRecordCloud object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewDnsRecordCloudWithDefaults() *DnsRecordCloud {
	this := DnsRecordCloud{}
	return &this
}

// GetCloud returns the Cloud field value
func (o *DnsRecordCloud) GetCloud() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Cloud
}

// GetCloudOk returns a tuple with the Cloud field value
// and a boolean to check if the value has been set.
func (o *DnsRecordCloud) GetCloudOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Cloud, true
}

// SetCloud sets field value
func (o *DnsRecordCloud) SetCloud(v bool) {
	o.Cloud = v
}

func (o DnsRecordCloud) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o DnsRecordCloud) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["cloud"] = o.Cloud
	return toSerialize, nil
}

type NullableDnsRecordCloud struct {
	value *DnsRecordCloud
	isSet bool
}

func (v NullableDnsRecordCloud) Get() *DnsRecordCloud {
	return v.value
}

func (v *NullableDnsRecordCloud) Set(val *DnsRecordCloud) {
	v.value = val
	v.isSet = true
}

func (v NullableDnsRecordCloud) IsSet() bool {
	return v.isSet
}

func (v *NullableDnsRecordCloud) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableDnsRecordCloud(val *DnsRecordCloud) *NullableDnsRecordCloud {
	return &NullableDnsRecordCloud{value: val, isSet: true}
}

func (v NullableDnsRecordCloud) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableDnsRecordCloud) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


