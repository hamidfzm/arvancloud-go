/*
Arvancloud PaaS REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.11
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package paas

import (
	"encoding/json"
)

// checks if the V1LifecycleHook type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1LifecycleHook{}

// V1LifecycleHook LifecycleHook defines a specific deployment lifecycle action. Only one type of action may be specified at any time.
type V1LifecycleHook struct {
	ExecNewPod *V1ExecNewPodHook `json:"execNewPod,omitempty"`
	// FailurePolicy specifies what action to take if the hook fails.
	FailurePolicy string `json:"failurePolicy"`
	// TagImages instructs the deployer to tag the current image referenced under a container onto an image stream tag.
	TagImages []V1TagImageHook `json:"tagImages,omitempty"`
}

// NewV1LifecycleHook instantiates a new V1LifecycleHook object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1LifecycleHook(failurePolicy string) *V1LifecycleHook {
	this := V1LifecycleHook{}
	this.FailurePolicy = failurePolicy
	return &this
}

// NewV1LifecycleHookWithDefaults instantiates a new V1LifecycleHook object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1LifecycleHookWithDefaults() *V1LifecycleHook {
	this := V1LifecycleHook{}
	return &this
}

// GetExecNewPod returns the ExecNewPod field value if set, zero value otherwise.
func (o *V1LifecycleHook) GetExecNewPod() V1ExecNewPodHook {
	if o == nil || IsNil(o.ExecNewPod) {
		var ret V1ExecNewPodHook
		return ret
	}
	return *o.ExecNewPod
}

// GetExecNewPodOk returns a tuple with the ExecNewPod field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1LifecycleHook) GetExecNewPodOk() (*V1ExecNewPodHook, bool) {
	if o == nil || IsNil(o.ExecNewPod) {
		return nil, false
	}
	return o.ExecNewPod, true
}

// HasExecNewPod returns a boolean if a field has been set.
func (o *V1LifecycleHook) HasExecNewPod() bool {
	if o != nil && !IsNil(o.ExecNewPod) {
		return true
	}

	return false
}

// SetExecNewPod gets a reference to the given V1ExecNewPodHook and assigns it to the ExecNewPod field.
func (o *V1LifecycleHook) SetExecNewPod(v V1ExecNewPodHook) {
	o.ExecNewPod = &v
}

// GetFailurePolicy returns the FailurePolicy field value
func (o *V1LifecycleHook) GetFailurePolicy() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.FailurePolicy
}

// GetFailurePolicyOk returns a tuple with the FailurePolicy field value
// and a boolean to check if the value has been set.
func (o *V1LifecycleHook) GetFailurePolicyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.FailurePolicy, true
}

// SetFailurePolicy sets field value
func (o *V1LifecycleHook) SetFailurePolicy(v string) {
	o.FailurePolicy = v
}

// GetTagImages returns the TagImages field value if set, zero value otherwise.
func (o *V1LifecycleHook) GetTagImages() []V1TagImageHook {
	if o == nil || IsNil(o.TagImages) {
		var ret []V1TagImageHook
		return ret
	}
	return o.TagImages
}

// GetTagImagesOk returns a tuple with the TagImages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1LifecycleHook) GetTagImagesOk() ([]V1TagImageHook, bool) {
	if o == nil || IsNil(o.TagImages) {
		return nil, false
	}
	return o.TagImages, true
}

// HasTagImages returns a boolean if a field has been set.
func (o *V1LifecycleHook) HasTagImages() bool {
	if o != nil && !IsNil(o.TagImages) {
		return true
	}

	return false
}

// SetTagImages gets a reference to the given []V1TagImageHook and assigns it to the TagImages field.
func (o *V1LifecycleHook) SetTagImages(v []V1TagImageHook) {
	o.TagImages = v
}

func (o V1LifecycleHook) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1LifecycleHook) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ExecNewPod) {
		toSerialize["execNewPod"] = o.ExecNewPod
	}
	toSerialize["failurePolicy"] = o.FailurePolicy
	if !IsNil(o.TagImages) {
		toSerialize["tagImages"] = o.TagImages
	}
	return toSerialize, nil
}

type NullableV1LifecycleHook struct {
	value *V1LifecycleHook
	isSet bool
}

func (v NullableV1LifecycleHook) Get() *V1LifecycleHook {
	return v.value
}

func (v *NullableV1LifecycleHook) Set(val *V1LifecycleHook) {
	v.value = val
	v.isSet = true
}

func (v NullableV1LifecycleHook) IsSet() bool {
	return v.isSet
}

func (v *NullableV1LifecycleHook) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1LifecycleHook(val *V1LifecycleHook) *NullableV1LifecycleHook {
	return &NullableV1LifecycleHook{value: val, isSet: true}
}

func (v NullableV1LifecycleHook) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1LifecycleHook) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


