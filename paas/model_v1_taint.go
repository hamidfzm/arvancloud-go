/*
Arvancloud PaaS REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.11
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package paas

import (
	"encoding/json"
)

// checks if the V1Taint type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1Taint{}

// V1Taint The node this Taint is attached to has the \"effect\" on any pod that does not tolerate the Taint.
type V1Taint struct {
	// Required. The effect of the taint on pods that do not tolerate the taint. Valid effects are NoSchedule, PreferNoSchedule and NoExecute.
	Effect string `json:"effect"`
	// Required. The taint key to be applied to a node.
	Key string `json:"key"`
	// TimeAdded represents the time at which the taint was added. It is only written for NoExecute taints.
	TimeAdded *string `json:"timeAdded,omitempty"`
	// Required. The taint value corresponding to the taint key.
	Value *string `json:"value,omitempty"`
}

// NewV1Taint instantiates a new V1Taint object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1Taint(effect string, key string) *V1Taint {
	this := V1Taint{}
	this.Effect = effect
	this.Key = key
	return &this
}

// NewV1TaintWithDefaults instantiates a new V1Taint object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1TaintWithDefaults() *V1Taint {
	this := V1Taint{}
	return &this
}

// GetEffect returns the Effect field value
func (o *V1Taint) GetEffect() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Effect
}

// GetEffectOk returns a tuple with the Effect field value
// and a boolean to check if the value has been set.
func (o *V1Taint) GetEffectOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Effect, true
}

// SetEffect sets field value
func (o *V1Taint) SetEffect(v string) {
	o.Effect = v
}

// GetKey returns the Key field value
func (o *V1Taint) GetKey() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Key
}

// GetKeyOk returns a tuple with the Key field value
// and a boolean to check if the value has been set.
func (o *V1Taint) GetKeyOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Key, true
}

// SetKey sets field value
func (o *V1Taint) SetKey(v string) {
	o.Key = v
}

// GetTimeAdded returns the TimeAdded field value if set, zero value otherwise.
func (o *V1Taint) GetTimeAdded() string {
	if o == nil || IsNil(o.TimeAdded) {
		var ret string
		return ret
	}
	return *o.TimeAdded
}

// GetTimeAddedOk returns a tuple with the TimeAdded field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Taint) GetTimeAddedOk() (*string, bool) {
	if o == nil || IsNil(o.TimeAdded) {
		return nil, false
	}
	return o.TimeAdded, true
}

// HasTimeAdded returns a boolean if a field has been set.
func (o *V1Taint) HasTimeAdded() bool {
	if o != nil && !IsNil(o.TimeAdded) {
		return true
	}

	return false
}

// SetTimeAdded gets a reference to the given string and assigns it to the TimeAdded field.
func (o *V1Taint) SetTimeAdded(v string) {
	o.TimeAdded = &v
}

// GetValue returns the Value field value if set, zero value otherwise.
func (o *V1Taint) GetValue() string {
	if o == nil || IsNil(o.Value) {
		var ret string
		return ret
	}
	return *o.Value
}

// GetValueOk returns a tuple with the Value field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1Taint) GetValueOk() (*string, bool) {
	if o == nil || IsNil(o.Value) {
		return nil, false
	}
	return o.Value, true
}

// HasValue returns a boolean if a field has been set.
func (o *V1Taint) HasValue() bool {
	if o != nil && !IsNil(o.Value) {
		return true
	}

	return false
}

// SetValue gets a reference to the given string and assigns it to the Value field.
func (o *V1Taint) SetValue(v string) {
	o.Value = &v
}

func (o V1Taint) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1Taint) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["effect"] = o.Effect
	toSerialize["key"] = o.Key
	if !IsNil(o.TimeAdded) {
		toSerialize["timeAdded"] = o.TimeAdded
	}
	if !IsNil(o.Value) {
		toSerialize["value"] = o.Value
	}
	return toSerialize, nil
}

type NullableV1Taint struct {
	value *V1Taint
	isSet bool
}

func (v NullableV1Taint) Get() *V1Taint {
	return v.value
}

func (v *NullableV1Taint) Set(val *V1Taint) {
	v.value = val
	v.isSet = true
}

func (v NullableV1Taint) IsSet() bool {
	return v.isSet
}

func (v *NullableV1Taint) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1Taint(val *V1Taint) *NullableV1Taint {
	return &NullableV1Taint{value: val, isSet: true}
}

func (v NullableV1Taint) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1Taint) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


