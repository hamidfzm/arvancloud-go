/*
Arvancloud PaaS REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.11
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package paas

import (
	"encoding/json"
)

// checks if the V1DeploymentConfigStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1DeploymentConfigStatus{}

// V1DeploymentConfigStatus DeploymentConfigStatus represents the current deployment state.
type V1DeploymentConfigStatus struct {
	// AvailableReplicas is the total number of available pods targeted by this deployment config.
	AvailableReplicas int32 `json:"availableReplicas"`
	// Conditions represents the latest available observations of a deployment config's current state.
	Conditions []V1DeploymentCondition `json:"conditions,omitempty"`
	Details *V1DeploymentDetails `json:"details,omitempty"`
	// LatestVersion is used to determine whether the current deployment associated with a deployment config is out of sync.
	LatestVersion int64 `json:"latestVersion"`
	// ObservedGeneration is the most recent generation observed by the deployment config controller.
	ObservedGeneration int64 `json:"observedGeneration"`
	// Total number of ready pods targeted by this deployment.
	ReadyReplicas *int32 `json:"readyReplicas,omitempty"`
	// Replicas is the total number of pods targeted by this deployment config.
	Replicas int32 `json:"replicas"`
	// UnavailableReplicas is the total number of unavailable pods targeted by this deployment config.
	UnavailableReplicas int32 `json:"unavailableReplicas"`
	// UpdatedReplicas is the total number of non-terminated pods targeted by this deployment config that have the desired template spec.
	UpdatedReplicas int32 `json:"updatedReplicas"`
}

// NewV1DeploymentConfigStatus instantiates a new V1DeploymentConfigStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1DeploymentConfigStatus(availableReplicas int32, latestVersion int64, observedGeneration int64, replicas int32, unavailableReplicas int32, updatedReplicas int32) *V1DeploymentConfigStatus {
	this := V1DeploymentConfigStatus{}
	this.AvailableReplicas = availableReplicas
	this.LatestVersion = latestVersion
	this.ObservedGeneration = observedGeneration
	this.Replicas = replicas
	this.UnavailableReplicas = unavailableReplicas
	this.UpdatedReplicas = updatedReplicas
	return &this
}

// NewV1DeploymentConfigStatusWithDefaults instantiates a new V1DeploymentConfigStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1DeploymentConfigStatusWithDefaults() *V1DeploymentConfigStatus {
	this := V1DeploymentConfigStatus{}
	return &this
}

// GetAvailableReplicas returns the AvailableReplicas field value
func (o *V1DeploymentConfigStatus) GetAvailableReplicas() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.AvailableReplicas
}

// GetAvailableReplicasOk returns a tuple with the AvailableReplicas field value
// and a boolean to check if the value has been set.
func (o *V1DeploymentConfigStatus) GetAvailableReplicasOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.AvailableReplicas, true
}

// SetAvailableReplicas sets field value
func (o *V1DeploymentConfigStatus) SetAvailableReplicas(v int32) {
	o.AvailableReplicas = v
}

// GetConditions returns the Conditions field value if set, zero value otherwise.
func (o *V1DeploymentConfigStatus) GetConditions() []V1DeploymentCondition {
	if o == nil || IsNil(o.Conditions) {
		var ret []V1DeploymentCondition
		return ret
	}
	return o.Conditions
}

// GetConditionsOk returns a tuple with the Conditions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DeploymentConfigStatus) GetConditionsOk() ([]V1DeploymentCondition, bool) {
	if o == nil || IsNil(o.Conditions) {
		return nil, false
	}
	return o.Conditions, true
}

// HasConditions returns a boolean if a field has been set.
func (o *V1DeploymentConfigStatus) HasConditions() bool {
	if o != nil && !IsNil(o.Conditions) {
		return true
	}

	return false
}

// SetConditions gets a reference to the given []V1DeploymentCondition and assigns it to the Conditions field.
func (o *V1DeploymentConfigStatus) SetConditions(v []V1DeploymentCondition) {
	o.Conditions = v
}

// GetDetails returns the Details field value if set, zero value otherwise.
func (o *V1DeploymentConfigStatus) GetDetails() V1DeploymentDetails {
	if o == nil || IsNil(o.Details) {
		var ret V1DeploymentDetails
		return ret
	}
	return *o.Details
}

// GetDetailsOk returns a tuple with the Details field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DeploymentConfigStatus) GetDetailsOk() (*V1DeploymentDetails, bool) {
	if o == nil || IsNil(o.Details) {
		return nil, false
	}
	return o.Details, true
}

// HasDetails returns a boolean if a field has been set.
func (o *V1DeploymentConfigStatus) HasDetails() bool {
	if o != nil && !IsNil(o.Details) {
		return true
	}

	return false
}

// SetDetails gets a reference to the given V1DeploymentDetails and assigns it to the Details field.
func (o *V1DeploymentConfigStatus) SetDetails(v V1DeploymentDetails) {
	o.Details = &v
}

// GetLatestVersion returns the LatestVersion field value
func (o *V1DeploymentConfigStatus) GetLatestVersion() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.LatestVersion
}

// GetLatestVersionOk returns a tuple with the LatestVersion field value
// and a boolean to check if the value has been set.
func (o *V1DeploymentConfigStatus) GetLatestVersionOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LatestVersion, true
}

// SetLatestVersion sets field value
func (o *V1DeploymentConfigStatus) SetLatestVersion(v int64) {
	o.LatestVersion = v
}

// GetObservedGeneration returns the ObservedGeneration field value
func (o *V1DeploymentConfigStatus) GetObservedGeneration() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.ObservedGeneration
}

// GetObservedGenerationOk returns a tuple with the ObservedGeneration field value
// and a boolean to check if the value has been set.
func (o *V1DeploymentConfigStatus) GetObservedGenerationOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ObservedGeneration, true
}

// SetObservedGeneration sets field value
func (o *V1DeploymentConfigStatus) SetObservedGeneration(v int64) {
	o.ObservedGeneration = v
}

// GetReadyReplicas returns the ReadyReplicas field value if set, zero value otherwise.
func (o *V1DeploymentConfigStatus) GetReadyReplicas() int32 {
	if o == nil || IsNil(o.ReadyReplicas) {
		var ret int32
		return ret
	}
	return *o.ReadyReplicas
}

// GetReadyReplicasOk returns a tuple with the ReadyReplicas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DeploymentConfigStatus) GetReadyReplicasOk() (*int32, bool) {
	if o == nil || IsNil(o.ReadyReplicas) {
		return nil, false
	}
	return o.ReadyReplicas, true
}

// HasReadyReplicas returns a boolean if a field has been set.
func (o *V1DeploymentConfigStatus) HasReadyReplicas() bool {
	if o != nil && !IsNil(o.ReadyReplicas) {
		return true
	}

	return false
}

// SetReadyReplicas gets a reference to the given int32 and assigns it to the ReadyReplicas field.
func (o *V1DeploymentConfigStatus) SetReadyReplicas(v int32) {
	o.ReadyReplicas = &v
}

// GetReplicas returns the Replicas field value
func (o *V1DeploymentConfigStatus) GetReplicas() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Replicas
}

// GetReplicasOk returns a tuple with the Replicas field value
// and a boolean to check if the value has been set.
func (o *V1DeploymentConfigStatus) GetReplicasOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Replicas, true
}

// SetReplicas sets field value
func (o *V1DeploymentConfigStatus) SetReplicas(v int32) {
	o.Replicas = v
}

// GetUnavailableReplicas returns the UnavailableReplicas field value
func (o *V1DeploymentConfigStatus) GetUnavailableReplicas() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.UnavailableReplicas
}

// GetUnavailableReplicasOk returns a tuple with the UnavailableReplicas field value
// and a boolean to check if the value has been set.
func (o *V1DeploymentConfigStatus) GetUnavailableReplicasOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UnavailableReplicas, true
}

// SetUnavailableReplicas sets field value
func (o *V1DeploymentConfigStatus) SetUnavailableReplicas(v int32) {
	o.UnavailableReplicas = v
}

// GetUpdatedReplicas returns the UpdatedReplicas field value
func (o *V1DeploymentConfigStatus) GetUpdatedReplicas() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.UpdatedReplicas
}

// GetUpdatedReplicasOk returns a tuple with the UpdatedReplicas field value
// and a boolean to check if the value has been set.
func (o *V1DeploymentConfigStatus) GetUpdatedReplicasOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.UpdatedReplicas, true
}

// SetUpdatedReplicas sets field value
func (o *V1DeploymentConfigStatus) SetUpdatedReplicas(v int32) {
	o.UpdatedReplicas = v
}

func (o V1DeploymentConfigStatus) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1DeploymentConfigStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["availableReplicas"] = o.AvailableReplicas
	if !IsNil(o.Conditions) {
		toSerialize["conditions"] = o.Conditions
	}
	if !IsNil(o.Details) {
		toSerialize["details"] = o.Details
	}
	toSerialize["latestVersion"] = o.LatestVersion
	toSerialize["observedGeneration"] = o.ObservedGeneration
	if !IsNil(o.ReadyReplicas) {
		toSerialize["readyReplicas"] = o.ReadyReplicas
	}
	toSerialize["replicas"] = o.Replicas
	toSerialize["unavailableReplicas"] = o.UnavailableReplicas
	toSerialize["updatedReplicas"] = o.UpdatedReplicas
	return toSerialize, nil
}

type NullableV1DeploymentConfigStatus struct {
	value *V1DeploymentConfigStatus
	isSet bool
}

func (v NullableV1DeploymentConfigStatus) Get() *V1DeploymentConfigStatus {
	return v.value
}

func (v *NullableV1DeploymentConfigStatus) Set(val *V1DeploymentConfigStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableV1DeploymentConfigStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableV1DeploymentConfigStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1DeploymentConfigStatus(val *V1DeploymentConfigStatus) *NullableV1DeploymentConfigStatus {
	return &NullableV1DeploymentConfigStatus{value: val, isSet: true}
}

func (v NullableV1DeploymentConfigStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1DeploymentConfigStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


