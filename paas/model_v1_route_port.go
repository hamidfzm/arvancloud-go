/*
Arvancloud PaaS REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.11
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package paas

import (
	"encoding/json"
)

// checks if the V1RoutePort type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1RoutePort{}

// V1RoutePort RoutePort defines a port mapping from a router to an endpoint in the service endpoints.
type V1RoutePort struct {
	// The target port on pods selected by the service this route points to. If this is a string, it will be looked up as a named port in the target endpoints port list. Required
	TargetPort string `json:"targetPort"`
}

// NewV1RoutePort instantiates a new V1RoutePort object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1RoutePort(targetPort string) *V1RoutePort {
	this := V1RoutePort{}
	this.TargetPort = targetPort
	return &this
}

// NewV1RoutePortWithDefaults instantiates a new V1RoutePort object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1RoutePortWithDefaults() *V1RoutePort {
	this := V1RoutePort{}
	return &this
}

// GetTargetPort returns the TargetPort field value
func (o *V1RoutePort) GetTargetPort() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.TargetPort
}

// GetTargetPortOk returns a tuple with the TargetPort field value
// and a boolean to check if the value has been set.
func (o *V1RoutePort) GetTargetPortOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TargetPort, true
}

// SetTargetPort sets field value
func (o *V1RoutePort) SetTargetPort(v string) {
	o.TargetPort = v
}

func (o V1RoutePort) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1RoutePort) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["targetPort"] = o.TargetPort
	return toSerialize, nil
}

type NullableV1RoutePort struct {
	value *V1RoutePort
	isSet bool
}

func (v NullableV1RoutePort) Get() *V1RoutePort {
	return v.value
}

func (v *NullableV1RoutePort) Set(val *V1RoutePort) {
	v.value = val
	v.isSet = true
}

func (v NullableV1RoutePort) IsSet() bool {
	return v.isSet
}

func (v *NullableV1RoutePort) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1RoutePort(val *V1RoutePort) *NullableV1RoutePort {
	return &NullableV1RoutePort{value: val, isSet: true}
}

func (v NullableV1RoutePort) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1RoutePort) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


