/*
Arvancloud PaaS REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.11
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package paas

import (
	"encoding/json"
)

// checks if the V1ImageStreamImportStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1ImageStreamImportStatus{}

// V1ImageStreamImportStatus ImageStreamImportStatus contains information about the status of an image stream import.
type V1ImageStreamImportStatus struct {
	// Images is set with the result of importing spec.images
	Images []V1ImageImportStatus `json:"images,omitempty"`
	Import *V1ImageStream `json:"import,omitempty"`
	Repository *V1RepositoryImportStatus `json:"repository,omitempty"`
}

// NewV1ImageStreamImportStatus instantiates a new V1ImageStreamImportStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1ImageStreamImportStatus() *V1ImageStreamImportStatus {
	this := V1ImageStreamImportStatus{}
	return &this
}

// NewV1ImageStreamImportStatusWithDefaults instantiates a new V1ImageStreamImportStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1ImageStreamImportStatusWithDefaults() *V1ImageStreamImportStatus {
	this := V1ImageStreamImportStatus{}
	return &this
}

// GetImages returns the Images field value if set, zero value otherwise.
func (o *V1ImageStreamImportStatus) GetImages() []V1ImageImportStatus {
	if o == nil || IsNil(o.Images) {
		var ret []V1ImageImportStatus
		return ret
	}
	return o.Images
}

// GetImagesOk returns a tuple with the Images field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ImageStreamImportStatus) GetImagesOk() ([]V1ImageImportStatus, bool) {
	if o == nil || IsNil(o.Images) {
		return nil, false
	}
	return o.Images, true
}

// HasImages returns a boolean if a field has been set.
func (o *V1ImageStreamImportStatus) HasImages() bool {
	if o != nil && !IsNil(o.Images) {
		return true
	}

	return false
}

// SetImages gets a reference to the given []V1ImageImportStatus and assigns it to the Images field.
func (o *V1ImageStreamImportStatus) SetImages(v []V1ImageImportStatus) {
	o.Images = v
}

// GetImport returns the Import field value if set, zero value otherwise.
func (o *V1ImageStreamImportStatus) GetImport() V1ImageStream {
	if o == nil || IsNil(o.Import) {
		var ret V1ImageStream
		return ret
	}
	return *o.Import
}

// GetImportOk returns a tuple with the Import field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ImageStreamImportStatus) GetImportOk() (*V1ImageStream, bool) {
	if o == nil || IsNil(o.Import) {
		return nil, false
	}
	return o.Import, true
}

// HasImport returns a boolean if a field has been set.
func (o *V1ImageStreamImportStatus) HasImport() bool {
	if o != nil && !IsNil(o.Import) {
		return true
	}

	return false
}

// SetImport gets a reference to the given V1ImageStream and assigns it to the Import field.
func (o *V1ImageStreamImportStatus) SetImport(v V1ImageStream) {
	o.Import = &v
}

// GetRepository returns the Repository field value if set, zero value otherwise.
func (o *V1ImageStreamImportStatus) GetRepository() V1RepositoryImportStatus {
	if o == nil || IsNil(o.Repository) {
		var ret V1RepositoryImportStatus
		return ret
	}
	return *o.Repository
}

// GetRepositoryOk returns a tuple with the Repository field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ImageStreamImportStatus) GetRepositoryOk() (*V1RepositoryImportStatus, bool) {
	if o == nil || IsNil(o.Repository) {
		return nil, false
	}
	return o.Repository, true
}

// HasRepository returns a boolean if a field has been set.
func (o *V1ImageStreamImportStatus) HasRepository() bool {
	if o != nil && !IsNil(o.Repository) {
		return true
	}

	return false
}

// SetRepository gets a reference to the given V1RepositoryImportStatus and assigns it to the Repository field.
func (o *V1ImageStreamImportStatus) SetRepository(v V1RepositoryImportStatus) {
	o.Repository = &v
}

func (o V1ImageStreamImportStatus) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1ImageStreamImportStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Images) {
		toSerialize["images"] = o.Images
	}
	if !IsNil(o.Import) {
		toSerialize["import"] = o.Import
	}
	if !IsNil(o.Repository) {
		toSerialize["repository"] = o.Repository
	}
	return toSerialize, nil
}

type NullableV1ImageStreamImportStatus struct {
	value *V1ImageStreamImportStatus
	isSet bool
}

func (v NullableV1ImageStreamImportStatus) Get() *V1ImageStreamImportStatus {
	return v.value
}

func (v *NullableV1ImageStreamImportStatus) Set(val *V1ImageStreamImportStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableV1ImageStreamImportStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableV1ImageStreamImportStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1ImageStreamImportStatus(val *V1ImageStreamImportStatus) *NullableV1ImageStreamImportStatus {
	return &NullableV1ImageStreamImportStatus{value: val, isSet: true}
}

func (v NullableV1ImageStreamImportStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1ImageStreamImportStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


