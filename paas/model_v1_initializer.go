/*
Arvancloud PaaS REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.11
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package paas

import (
	"encoding/json"
)

// checks if the V1Initializer type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1Initializer{}

// V1Initializer Initializer is information about an initializer that has not yet completed.
type V1Initializer struct {
	// name of the process that is responsible for initializing this object.
	Name string `json:"name"`
}

// NewV1Initializer instantiates a new V1Initializer object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1Initializer(name string) *V1Initializer {
	this := V1Initializer{}
	this.Name = name
	return &this
}

// NewV1InitializerWithDefaults instantiates a new V1Initializer object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1InitializerWithDefaults() *V1Initializer {
	this := V1Initializer{}
	return &this
}

// GetName returns the Name field value
func (o *V1Initializer) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *V1Initializer) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *V1Initializer) SetName(v string) {
	o.Name = v
}

func (o V1Initializer) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1Initializer) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["name"] = o.Name
	return toSerialize, nil
}

type NullableV1Initializer struct {
	value *V1Initializer
	isSet bool
}

func (v NullableV1Initializer) Get() *V1Initializer {
	return v.value
}

func (v *NullableV1Initializer) Set(val *V1Initializer) {
	v.value = val
	v.isSet = true
}

func (v NullableV1Initializer) IsSet() bool {
	return v.isSet
}

func (v *NullableV1Initializer) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1Initializer(val *V1Initializer) *NullableV1Initializer {
	return &NullableV1Initializer{value: val, isSet: true}
}

func (v NullableV1Initializer) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1Initializer) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


