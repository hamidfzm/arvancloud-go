/*
Arvancloud PaaS REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.11
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package paas

import (
	"encoding/json"
)

// checks if the V1ImageStreamLayers type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1ImageStreamLayers{}

// V1ImageStreamLayers ImageStreamLayers describes information about the layers referenced by images in this image stream.
type V1ImageStreamLayers struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
	ApiVersion *string `json:"apiVersion,omitempty"`
	// blobs is a map of blob name to metadata about the blob.
	Blobs map[string]interface{} `json:"blobs"`
	// images is a map between an image name and the names of the blobs and config that comprise the image.
	Images map[string]interface{} `json:"images"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
	Kind *string `json:"kind,omitempty"`
	Metadata *V1ObjectMeta `json:"metadata,omitempty"`
}

// NewV1ImageStreamLayers instantiates a new V1ImageStreamLayers object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1ImageStreamLayers(blobs map[string]interface{}, images map[string]interface{}) *V1ImageStreamLayers {
	this := V1ImageStreamLayers{}
	this.Blobs = blobs
	this.Images = images
	return &this
}

// NewV1ImageStreamLayersWithDefaults instantiates a new V1ImageStreamLayers object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1ImageStreamLayersWithDefaults() *V1ImageStreamLayers {
	this := V1ImageStreamLayers{}
	return &this
}

// GetApiVersion returns the ApiVersion field value if set, zero value otherwise.
func (o *V1ImageStreamLayers) GetApiVersion() string {
	if o == nil || IsNil(o.ApiVersion) {
		var ret string
		return ret
	}
	return *o.ApiVersion
}

// GetApiVersionOk returns a tuple with the ApiVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ImageStreamLayers) GetApiVersionOk() (*string, bool) {
	if o == nil || IsNil(o.ApiVersion) {
		return nil, false
	}
	return o.ApiVersion, true
}

// HasApiVersion returns a boolean if a field has been set.
func (o *V1ImageStreamLayers) HasApiVersion() bool {
	if o != nil && !IsNil(o.ApiVersion) {
		return true
	}

	return false
}

// SetApiVersion gets a reference to the given string and assigns it to the ApiVersion field.
func (o *V1ImageStreamLayers) SetApiVersion(v string) {
	o.ApiVersion = &v
}

// GetBlobs returns the Blobs field value
func (o *V1ImageStreamLayers) GetBlobs() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Blobs
}

// GetBlobsOk returns a tuple with the Blobs field value
// and a boolean to check if the value has been set.
func (o *V1ImageStreamLayers) GetBlobsOk() (map[string]interface{}, bool) {
	if o == nil {
		return map[string]interface{}{}, false
	}
	return o.Blobs, true
}

// SetBlobs sets field value
func (o *V1ImageStreamLayers) SetBlobs(v map[string]interface{}) {
	o.Blobs = v
}

// GetImages returns the Images field value
func (o *V1ImageStreamLayers) GetImages() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.Images
}

// GetImagesOk returns a tuple with the Images field value
// and a boolean to check if the value has been set.
func (o *V1ImageStreamLayers) GetImagesOk() (map[string]interface{}, bool) {
	if o == nil {
		return map[string]interface{}{}, false
	}
	return o.Images, true
}

// SetImages sets field value
func (o *V1ImageStreamLayers) SetImages(v map[string]interface{}) {
	o.Images = v
}

// GetKind returns the Kind field value if set, zero value otherwise.
func (o *V1ImageStreamLayers) GetKind() string {
	if o == nil || IsNil(o.Kind) {
		var ret string
		return ret
	}
	return *o.Kind
}

// GetKindOk returns a tuple with the Kind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ImageStreamLayers) GetKindOk() (*string, bool) {
	if o == nil || IsNil(o.Kind) {
		return nil, false
	}
	return o.Kind, true
}

// HasKind returns a boolean if a field has been set.
func (o *V1ImageStreamLayers) HasKind() bool {
	if o != nil && !IsNil(o.Kind) {
		return true
	}

	return false
}

// SetKind gets a reference to the given string and assigns it to the Kind field.
func (o *V1ImageStreamLayers) SetKind(v string) {
	o.Kind = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *V1ImageStreamLayers) GetMetadata() V1ObjectMeta {
	if o == nil || IsNil(o.Metadata) {
		var ret V1ObjectMeta
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ImageStreamLayers) GetMetadataOk() (*V1ObjectMeta, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *V1ImageStreamLayers) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given V1ObjectMeta and assigns it to the Metadata field.
func (o *V1ImageStreamLayers) SetMetadata(v V1ObjectMeta) {
	o.Metadata = &v
}

func (o V1ImageStreamLayers) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1ImageStreamLayers) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ApiVersion) {
		toSerialize["apiVersion"] = o.ApiVersion
	}
	toSerialize["blobs"] = o.Blobs
	toSerialize["images"] = o.Images
	if !IsNil(o.Kind) {
		toSerialize["kind"] = o.Kind
	}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	return toSerialize, nil
}

type NullableV1ImageStreamLayers struct {
	value *V1ImageStreamLayers
	isSet bool
}

func (v NullableV1ImageStreamLayers) Get() *V1ImageStreamLayers {
	return v.value
}

func (v *NullableV1ImageStreamLayers) Set(val *V1ImageStreamLayers) {
	v.value = val
	v.isSet = true
}

func (v NullableV1ImageStreamLayers) IsSet() bool {
	return v.isSet
}

func (v *NullableV1ImageStreamLayers) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1ImageStreamLayers(val *V1ImageStreamLayers) *NullableV1ImageStreamLayers {
	return &NullableV1ImageStreamLayers{value: val, isSet: true}
}

func (v NullableV1ImageStreamLayers) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1ImageStreamLayers) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


