/*
Arvancloud PaaS REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.11
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package paas

import (
	"encoding/json"
)

// checks if the V1LocalVolumeSource type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1LocalVolumeSource{}

// V1LocalVolumeSource Local represents directly-attached storage with node affinity (Beta feature)
type V1LocalVolumeSource struct {
	// The full path to the volume on the node. It can be either a directory or block device (disk, partition, ...). Directories can be represented only by PersistentVolume with VolumeMode=Filesystem. Block devices can be represented only by VolumeMode=Block, which also requires the BlockVolume alpha feature gate to be enabled.
	Path string `json:"path"`
}

// NewV1LocalVolumeSource instantiates a new V1LocalVolumeSource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1LocalVolumeSource(path string) *V1LocalVolumeSource {
	this := V1LocalVolumeSource{}
	this.Path = path
	return &this
}

// NewV1LocalVolumeSourceWithDefaults instantiates a new V1LocalVolumeSource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1LocalVolumeSourceWithDefaults() *V1LocalVolumeSource {
	this := V1LocalVolumeSource{}
	return &this
}

// GetPath returns the Path field value
func (o *V1LocalVolumeSource) GetPath() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Path
}

// GetPathOk returns a tuple with the Path field value
// and a boolean to check if the value has been set.
func (o *V1LocalVolumeSource) GetPathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Path, true
}

// SetPath sets field value
func (o *V1LocalVolumeSource) SetPath(v string) {
	o.Path = v
}

func (o V1LocalVolumeSource) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1LocalVolumeSource) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["path"] = o.Path
	return toSerialize, nil
}

type NullableV1LocalVolumeSource struct {
	value *V1LocalVolumeSource
	isSet bool
}

func (v NullableV1LocalVolumeSource) Get() *V1LocalVolumeSource {
	return v.value
}

func (v *NullableV1LocalVolumeSource) Set(val *V1LocalVolumeSource) {
	v.value = val
	v.isSet = true
}

func (v NullableV1LocalVolumeSource) IsSet() bool {
	return v.isSet
}

func (v *NullableV1LocalVolumeSource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1LocalVolumeSource(val *V1LocalVolumeSource) *NullableV1LocalVolumeSource {
	return &NullableV1LocalVolumeSource{value: val, isSet: true}
}

func (v NullableV1LocalVolumeSource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1LocalVolumeSource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


