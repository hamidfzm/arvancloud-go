/*
Arvancloud PaaS REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.11
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package paas

import (
	"encoding/json"
)

// checks if the V1ContainerImage type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1ContainerImage{}

// V1ContainerImage Describe a container image
type V1ContainerImage struct {
	// Names by which this image is known. e.g. [\"k8s.gcr.io/hyperkube:v1.0.7\", \"dockerhub.io/google_containers/hyperkube:v1.0.7\"]
	Names []string `json:"names"`
	// The size of the image in bytes.
	SizeBytes *int64 `json:"sizeBytes,omitempty"`
}

// NewV1ContainerImage instantiates a new V1ContainerImage object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1ContainerImage(names []string) *V1ContainerImage {
	this := V1ContainerImage{}
	this.Names = names
	return &this
}

// NewV1ContainerImageWithDefaults instantiates a new V1ContainerImage object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1ContainerImageWithDefaults() *V1ContainerImage {
	this := V1ContainerImage{}
	return &this
}

// GetNames returns the Names field value
func (o *V1ContainerImage) GetNames() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Names
}

// GetNamesOk returns a tuple with the Names field value
// and a boolean to check if the value has been set.
func (o *V1ContainerImage) GetNamesOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Names, true
}

// SetNames sets field value
func (o *V1ContainerImage) SetNames(v []string) {
	o.Names = v
}

// GetSizeBytes returns the SizeBytes field value if set, zero value otherwise.
func (o *V1ContainerImage) GetSizeBytes() int64 {
	if o == nil || IsNil(o.SizeBytes) {
		var ret int64
		return ret
	}
	return *o.SizeBytes
}

// GetSizeBytesOk returns a tuple with the SizeBytes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ContainerImage) GetSizeBytesOk() (*int64, bool) {
	if o == nil || IsNil(o.SizeBytes) {
		return nil, false
	}
	return o.SizeBytes, true
}

// HasSizeBytes returns a boolean if a field has been set.
func (o *V1ContainerImage) HasSizeBytes() bool {
	if o != nil && !IsNil(o.SizeBytes) {
		return true
	}

	return false
}

// SetSizeBytes gets a reference to the given int64 and assigns it to the SizeBytes field.
func (o *V1ContainerImage) SetSizeBytes(v int64) {
	o.SizeBytes = &v
}

func (o V1ContainerImage) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1ContainerImage) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["names"] = o.Names
	if !IsNil(o.SizeBytes) {
		toSerialize["sizeBytes"] = o.SizeBytes
	}
	return toSerialize, nil
}

type NullableV1ContainerImage struct {
	value *V1ContainerImage
	isSet bool
}

func (v NullableV1ContainerImage) Get() *V1ContainerImage {
	return v.value
}

func (v *NullableV1ContainerImage) Set(val *V1ContainerImage) {
	v.value = val
	v.isSet = true
}

func (v NullableV1ContainerImage) IsSet() bool {
	return v.isSet
}

func (v *NullableV1ContainerImage) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1ContainerImage(val *V1ContainerImage) *NullableV1ContainerImage {
	return &NullableV1ContainerImage{value: val, isSet: true}
}

func (v NullableV1ContainerImage) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1ContainerImage) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


