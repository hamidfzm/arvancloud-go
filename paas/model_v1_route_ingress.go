/*
Arvancloud PaaS REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.11
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package paas

import (
	"encoding/json"
)

// checks if the V1RouteIngress type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1RouteIngress{}

// V1RouteIngress RouteIngress holds information about the places where a route is exposed.
type V1RouteIngress struct {
	// Host is the host string under which the route is exposed; this value is required
	Host *string `json:"host,omitempty"`
	// Conditions is the state of the route, may be empty.
	Conditions []V1RouteIngressCondition `json:"conditions,omitempty"`
	// CanonicalHostname is the external host name for the router that can be used as a CNAME for the host requested for this route. This value is optional and may not be set in all cases.
	RouterCanonicalHostname *string `json:"routerCanonicalHostname,omitempty"`
	// Name is a name chosen by the router to identify itself; this value is required
	RouterName *string `json:"routerName,omitempty"`
	// Wildcard policy is the wildcard policy that was allowed where this route is exposed.
	WildcardPolicy *string `json:"wildcardPolicy,omitempty"`
}

// NewV1RouteIngress instantiates a new V1RouteIngress object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1RouteIngress() *V1RouteIngress {
	this := V1RouteIngress{}
	return &this
}

// NewV1RouteIngressWithDefaults instantiates a new V1RouteIngress object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1RouteIngressWithDefaults() *V1RouteIngress {
	this := V1RouteIngress{}
	return &this
}

// GetHost returns the Host field value if set, zero value otherwise.
func (o *V1RouteIngress) GetHost() string {
	if o == nil || IsNil(o.Host) {
		var ret string
		return ret
	}
	return *o.Host
}

// GetHostOk returns a tuple with the Host field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1RouteIngress) GetHostOk() (*string, bool) {
	if o == nil || IsNil(o.Host) {
		return nil, false
	}
	return o.Host, true
}

// HasHost returns a boolean if a field has been set.
func (o *V1RouteIngress) HasHost() bool {
	if o != nil && !IsNil(o.Host) {
		return true
	}

	return false
}

// SetHost gets a reference to the given string and assigns it to the Host field.
func (o *V1RouteIngress) SetHost(v string) {
	o.Host = &v
}

// GetConditions returns the Conditions field value if set, zero value otherwise.
func (o *V1RouteIngress) GetConditions() []V1RouteIngressCondition {
	if o == nil || IsNil(o.Conditions) {
		var ret []V1RouteIngressCondition
		return ret
	}
	return o.Conditions
}

// GetConditionsOk returns a tuple with the Conditions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1RouteIngress) GetConditionsOk() ([]V1RouteIngressCondition, bool) {
	if o == nil || IsNil(o.Conditions) {
		return nil, false
	}
	return o.Conditions, true
}

// HasConditions returns a boolean if a field has been set.
func (o *V1RouteIngress) HasConditions() bool {
	if o != nil && !IsNil(o.Conditions) {
		return true
	}

	return false
}

// SetConditions gets a reference to the given []V1RouteIngressCondition and assigns it to the Conditions field.
func (o *V1RouteIngress) SetConditions(v []V1RouteIngressCondition) {
	o.Conditions = v
}

// GetRouterCanonicalHostname returns the RouterCanonicalHostname field value if set, zero value otherwise.
func (o *V1RouteIngress) GetRouterCanonicalHostname() string {
	if o == nil || IsNil(o.RouterCanonicalHostname) {
		var ret string
		return ret
	}
	return *o.RouterCanonicalHostname
}

// GetRouterCanonicalHostnameOk returns a tuple with the RouterCanonicalHostname field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1RouteIngress) GetRouterCanonicalHostnameOk() (*string, bool) {
	if o == nil || IsNil(o.RouterCanonicalHostname) {
		return nil, false
	}
	return o.RouterCanonicalHostname, true
}

// HasRouterCanonicalHostname returns a boolean if a field has been set.
func (o *V1RouteIngress) HasRouterCanonicalHostname() bool {
	if o != nil && !IsNil(o.RouterCanonicalHostname) {
		return true
	}

	return false
}

// SetRouterCanonicalHostname gets a reference to the given string and assigns it to the RouterCanonicalHostname field.
func (o *V1RouteIngress) SetRouterCanonicalHostname(v string) {
	o.RouterCanonicalHostname = &v
}

// GetRouterName returns the RouterName field value if set, zero value otherwise.
func (o *V1RouteIngress) GetRouterName() string {
	if o == nil || IsNil(o.RouterName) {
		var ret string
		return ret
	}
	return *o.RouterName
}

// GetRouterNameOk returns a tuple with the RouterName field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1RouteIngress) GetRouterNameOk() (*string, bool) {
	if o == nil || IsNil(o.RouterName) {
		return nil, false
	}
	return o.RouterName, true
}

// HasRouterName returns a boolean if a field has been set.
func (o *V1RouteIngress) HasRouterName() bool {
	if o != nil && !IsNil(o.RouterName) {
		return true
	}

	return false
}

// SetRouterName gets a reference to the given string and assigns it to the RouterName field.
func (o *V1RouteIngress) SetRouterName(v string) {
	o.RouterName = &v
}

// GetWildcardPolicy returns the WildcardPolicy field value if set, zero value otherwise.
func (o *V1RouteIngress) GetWildcardPolicy() string {
	if o == nil || IsNil(o.WildcardPolicy) {
		var ret string
		return ret
	}
	return *o.WildcardPolicy
}

// GetWildcardPolicyOk returns a tuple with the WildcardPolicy field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1RouteIngress) GetWildcardPolicyOk() (*string, bool) {
	if o == nil || IsNil(o.WildcardPolicy) {
		return nil, false
	}
	return o.WildcardPolicy, true
}

// HasWildcardPolicy returns a boolean if a field has been set.
func (o *V1RouteIngress) HasWildcardPolicy() bool {
	if o != nil && !IsNil(o.WildcardPolicy) {
		return true
	}

	return false
}

// SetWildcardPolicy gets a reference to the given string and assigns it to the WildcardPolicy field.
func (o *V1RouteIngress) SetWildcardPolicy(v string) {
	o.WildcardPolicy = &v
}

func (o V1RouteIngress) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1RouteIngress) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Host) {
		toSerialize["host"] = o.Host
	}
	if !IsNil(o.Conditions) {
		toSerialize["conditions"] = o.Conditions
	}
	if !IsNil(o.RouterCanonicalHostname) {
		toSerialize["routerCanonicalHostname"] = o.RouterCanonicalHostname
	}
	if !IsNil(o.RouterName) {
		toSerialize["routerName"] = o.RouterName
	}
	if !IsNil(o.WildcardPolicy) {
		toSerialize["wildcardPolicy"] = o.WildcardPolicy
	}
	return toSerialize, nil
}

type NullableV1RouteIngress struct {
	value *V1RouteIngress
	isSet bool
}

func (v NullableV1RouteIngress) Get() *V1RouteIngress {
	return v.value
}

func (v *NullableV1RouteIngress) Set(val *V1RouteIngress) {
	v.value = val
	v.isSet = true
}

func (v NullableV1RouteIngress) IsSet() bool {
	return v.isSet
}

func (v *NullableV1RouteIngress) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1RouteIngress(val *V1RouteIngress) *NullableV1RouteIngress {
	return &NullableV1RouteIngress{value: val, isSet: true}
}

func (v NullableV1RouteIngress) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1RouteIngress) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


