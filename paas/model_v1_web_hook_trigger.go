/*
Arvancloud PaaS REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.11
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package paas

import (
	"encoding/json"
)

// checks if the V1WebHookTrigger type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1WebHookTrigger{}

// V1WebHookTrigger WebHookTrigger is a trigger that gets invoked using a webhook type of post
type V1WebHookTrigger struct {
	// allowEnv determines whether the webhook can set environment variables; can only be set to true for GenericWebHook.
	AllowEnv *bool `json:"allowEnv,omitempty"`
	// secret used to validate requests. Deprecated: use SecretReference instead.
	Secret *string `json:"secret,omitempty"`
	SecretReference *V1SecretLocalReference `json:"secretReference,omitempty"`
}

// NewV1WebHookTrigger instantiates a new V1WebHookTrigger object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1WebHookTrigger() *V1WebHookTrigger {
	this := V1WebHookTrigger{}
	return &this
}

// NewV1WebHookTriggerWithDefaults instantiates a new V1WebHookTrigger object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1WebHookTriggerWithDefaults() *V1WebHookTrigger {
	this := V1WebHookTrigger{}
	return &this
}

// GetAllowEnv returns the AllowEnv field value if set, zero value otherwise.
func (o *V1WebHookTrigger) GetAllowEnv() bool {
	if o == nil || IsNil(o.AllowEnv) {
		var ret bool
		return ret
	}
	return *o.AllowEnv
}

// GetAllowEnvOk returns a tuple with the AllowEnv field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1WebHookTrigger) GetAllowEnvOk() (*bool, bool) {
	if o == nil || IsNil(o.AllowEnv) {
		return nil, false
	}
	return o.AllowEnv, true
}

// HasAllowEnv returns a boolean if a field has been set.
func (o *V1WebHookTrigger) HasAllowEnv() bool {
	if o != nil && !IsNil(o.AllowEnv) {
		return true
	}

	return false
}

// SetAllowEnv gets a reference to the given bool and assigns it to the AllowEnv field.
func (o *V1WebHookTrigger) SetAllowEnv(v bool) {
	o.AllowEnv = &v
}

// GetSecret returns the Secret field value if set, zero value otherwise.
func (o *V1WebHookTrigger) GetSecret() string {
	if o == nil || IsNil(o.Secret) {
		var ret string
		return ret
	}
	return *o.Secret
}

// GetSecretOk returns a tuple with the Secret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1WebHookTrigger) GetSecretOk() (*string, bool) {
	if o == nil || IsNil(o.Secret) {
		return nil, false
	}
	return o.Secret, true
}

// HasSecret returns a boolean if a field has been set.
func (o *V1WebHookTrigger) HasSecret() bool {
	if o != nil && !IsNil(o.Secret) {
		return true
	}

	return false
}

// SetSecret gets a reference to the given string and assigns it to the Secret field.
func (o *V1WebHookTrigger) SetSecret(v string) {
	o.Secret = &v
}

// GetSecretReference returns the SecretReference field value if set, zero value otherwise.
func (o *V1WebHookTrigger) GetSecretReference() V1SecretLocalReference {
	if o == nil || IsNil(o.SecretReference) {
		var ret V1SecretLocalReference
		return ret
	}
	return *o.SecretReference
}

// GetSecretReferenceOk returns a tuple with the SecretReference field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1WebHookTrigger) GetSecretReferenceOk() (*V1SecretLocalReference, bool) {
	if o == nil || IsNil(o.SecretReference) {
		return nil, false
	}
	return o.SecretReference, true
}

// HasSecretReference returns a boolean if a field has been set.
func (o *V1WebHookTrigger) HasSecretReference() bool {
	if o != nil && !IsNil(o.SecretReference) {
		return true
	}

	return false
}

// SetSecretReference gets a reference to the given V1SecretLocalReference and assigns it to the SecretReference field.
func (o *V1WebHookTrigger) SetSecretReference(v V1SecretLocalReference) {
	o.SecretReference = &v
}

func (o V1WebHookTrigger) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1WebHookTrigger) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AllowEnv) {
		toSerialize["allowEnv"] = o.AllowEnv
	}
	if !IsNil(o.Secret) {
		toSerialize["secret"] = o.Secret
	}
	if !IsNil(o.SecretReference) {
		toSerialize["secretReference"] = o.SecretReference
	}
	return toSerialize, nil
}

type NullableV1WebHookTrigger struct {
	value *V1WebHookTrigger
	isSet bool
}

func (v NullableV1WebHookTrigger) Get() *V1WebHookTrigger {
	return v.value
}

func (v *NullableV1WebHookTrigger) Set(val *V1WebHookTrigger) {
	v.value = val
	v.isSet = true
}

func (v NullableV1WebHookTrigger) IsSet() bool {
	return v.isSet
}

func (v *NullableV1WebHookTrigger) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1WebHookTrigger(val *V1WebHookTrigger) *NullableV1WebHookTrigger {
	return &NullableV1WebHookTrigger{value: val, isSet: true}
}

func (v NullableV1WebHookTrigger) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1WebHookTrigger) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


