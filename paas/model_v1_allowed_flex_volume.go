/*
Arvancloud PaaS REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.11
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package paas

import (
	"encoding/json"
)

// checks if the V1AllowedFlexVolume type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1AllowedFlexVolume{}

// V1AllowedFlexVolume AllowedFlexVolume represents a single Flexvolume that is allowed to be used.
type V1AllowedFlexVolume struct {
	// Driver is the name of the Flexvolume driver.
	Driver string `json:"driver"`
}

// NewV1AllowedFlexVolume instantiates a new V1AllowedFlexVolume object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1AllowedFlexVolume(driver string) *V1AllowedFlexVolume {
	this := V1AllowedFlexVolume{}
	this.Driver = driver
	return &this
}

// NewV1AllowedFlexVolumeWithDefaults instantiates a new V1AllowedFlexVolume object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1AllowedFlexVolumeWithDefaults() *V1AllowedFlexVolume {
	this := V1AllowedFlexVolume{}
	return &this
}

// GetDriver returns the Driver field value
func (o *V1AllowedFlexVolume) GetDriver() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Driver
}

// GetDriverOk returns a tuple with the Driver field value
// and a boolean to check if the value has been set.
func (o *V1AllowedFlexVolume) GetDriverOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Driver, true
}

// SetDriver sets field value
func (o *V1AllowedFlexVolume) SetDriver(v string) {
	o.Driver = v
}

func (o V1AllowedFlexVolume) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1AllowedFlexVolume) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["driver"] = o.Driver
	return toSerialize, nil
}

type NullableV1AllowedFlexVolume struct {
	value *V1AllowedFlexVolume
	isSet bool
}

func (v NullableV1AllowedFlexVolume) Get() *V1AllowedFlexVolume {
	return v.value
}

func (v *NullableV1AllowedFlexVolume) Set(val *V1AllowedFlexVolume) {
	v.value = val
	v.isSet = true
}

func (v NullableV1AllowedFlexVolume) IsSet() bool {
	return v.isSet
}

func (v *NullableV1AllowedFlexVolume) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1AllowedFlexVolume(val *V1AllowedFlexVolume) *NullableV1AllowedFlexVolume {
	return &NullableV1AllowedFlexVolume{value: val, isSet: true}
}

func (v NullableV1AllowedFlexVolume) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1AllowedFlexVolume) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


