/*
Arvancloud PaaS REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.11
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package paas

import (
	"encoding/json"
)

// checks if the V1RepositoryImportStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1RepositoryImportStatus{}

// V1RepositoryImportStatus RepositoryImportStatus describes the result of an image repository import
type V1RepositoryImportStatus struct {
	// AdditionalTags are tags that exist in the repository but were not imported because a maximum limit of automatic imports was applied.
	AdditionalTags []string `json:"additionalTags,omitempty"`
	// Images is a list of images successfully retrieved by the import of the repository.
	Images []V1ImageImportStatus `json:"images,omitempty"`
	Status *V1Status `json:"status,omitempty"`
}

// NewV1RepositoryImportStatus instantiates a new V1RepositoryImportStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1RepositoryImportStatus() *V1RepositoryImportStatus {
	this := V1RepositoryImportStatus{}
	return &this
}

// NewV1RepositoryImportStatusWithDefaults instantiates a new V1RepositoryImportStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1RepositoryImportStatusWithDefaults() *V1RepositoryImportStatus {
	this := V1RepositoryImportStatus{}
	return &this
}

// GetAdditionalTags returns the AdditionalTags field value if set, zero value otherwise.
func (o *V1RepositoryImportStatus) GetAdditionalTags() []string {
	if o == nil || IsNil(o.AdditionalTags) {
		var ret []string
		return ret
	}
	return o.AdditionalTags
}

// GetAdditionalTagsOk returns a tuple with the AdditionalTags field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1RepositoryImportStatus) GetAdditionalTagsOk() ([]string, bool) {
	if o == nil || IsNil(o.AdditionalTags) {
		return nil, false
	}
	return o.AdditionalTags, true
}

// HasAdditionalTags returns a boolean if a field has been set.
func (o *V1RepositoryImportStatus) HasAdditionalTags() bool {
	if o != nil && !IsNil(o.AdditionalTags) {
		return true
	}

	return false
}

// SetAdditionalTags gets a reference to the given []string and assigns it to the AdditionalTags field.
func (o *V1RepositoryImportStatus) SetAdditionalTags(v []string) {
	o.AdditionalTags = v
}

// GetImages returns the Images field value if set, zero value otherwise.
func (o *V1RepositoryImportStatus) GetImages() []V1ImageImportStatus {
	if o == nil || IsNil(o.Images) {
		var ret []V1ImageImportStatus
		return ret
	}
	return o.Images
}

// GetImagesOk returns a tuple with the Images field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1RepositoryImportStatus) GetImagesOk() ([]V1ImageImportStatus, bool) {
	if o == nil || IsNil(o.Images) {
		return nil, false
	}
	return o.Images, true
}

// HasImages returns a boolean if a field has been set.
func (o *V1RepositoryImportStatus) HasImages() bool {
	if o != nil && !IsNil(o.Images) {
		return true
	}

	return false
}

// SetImages gets a reference to the given []V1ImageImportStatus and assigns it to the Images field.
func (o *V1RepositoryImportStatus) SetImages(v []V1ImageImportStatus) {
	o.Images = v
}

// GetStatus returns the Status field value if set, zero value otherwise.
func (o *V1RepositoryImportStatus) GetStatus() V1Status {
	if o == nil || IsNil(o.Status) {
		var ret V1Status
		return ret
	}
	return *o.Status
}

// GetStatusOk returns a tuple with the Status field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1RepositoryImportStatus) GetStatusOk() (*V1Status, bool) {
	if o == nil || IsNil(o.Status) {
		return nil, false
	}
	return o.Status, true
}

// HasStatus returns a boolean if a field has been set.
func (o *V1RepositoryImportStatus) HasStatus() bool {
	if o != nil && !IsNil(o.Status) {
		return true
	}

	return false
}

// SetStatus gets a reference to the given V1Status and assigns it to the Status field.
func (o *V1RepositoryImportStatus) SetStatus(v V1Status) {
	o.Status = &v
}

func (o V1RepositoryImportStatus) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1RepositoryImportStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AdditionalTags) {
		toSerialize["additionalTags"] = o.AdditionalTags
	}
	if !IsNil(o.Images) {
		toSerialize["images"] = o.Images
	}
	if !IsNil(o.Status) {
		toSerialize["status"] = o.Status
	}
	return toSerialize, nil
}

type NullableV1RepositoryImportStatus struct {
	value *V1RepositoryImportStatus
	isSet bool
}

func (v NullableV1RepositoryImportStatus) Get() *V1RepositoryImportStatus {
	return v.value
}

func (v *NullableV1RepositoryImportStatus) Set(val *V1RepositoryImportStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableV1RepositoryImportStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableV1RepositoryImportStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1RepositoryImportStatus(val *V1RepositoryImportStatus) *NullableV1RepositoryImportStatus {
	return &NullableV1RepositoryImportStatus{value: val, isSet: true}
}

func (v NullableV1RepositoryImportStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1RepositoryImportStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


