/*
Arvancloud PaaS REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.11
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package paas

import (
	"encoding/json"
)

// checks if the V1TagEvent type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1TagEvent{}

// V1TagEvent TagEvent is used by ImageStreamStatus to keep a historical record of images associated with a tag.
type V1TagEvent struct {
	// Created holds the time the TagEvent was created
	Created string `json:"created"`
	// DockerImageReference is the string that can be used to pull this image
	DockerImageReference string `json:"dockerImageReference"`
	// Generation is the spec tag generation that resulted in this tag being updated
	Generation int64 `json:"generation"`
	// Image is the image
	Image string `json:"image"`
}

// NewV1TagEvent instantiates a new V1TagEvent object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1TagEvent(created string, dockerImageReference string, generation int64, image string) *V1TagEvent {
	this := V1TagEvent{}
	this.Created = created
	this.DockerImageReference = dockerImageReference
	this.Generation = generation
	this.Image = image
	return &this
}

// NewV1TagEventWithDefaults instantiates a new V1TagEvent object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1TagEventWithDefaults() *V1TagEvent {
	this := V1TagEvent{}
	return &this
}

// GetCreated returns the Created field value
func (o *V1TagEvent) GetCreated() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Created
}

// GetCreatedOk returns a tuple with the Created field value
// and a boolean to check if the value has been set.
func (o *V1TagEvent) GetCreatedOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Created, true
}

// SetCreated sets field value
func (o *V1TagEvent) SetCreated(v string) {
	o.Created = v
}

// GetDockerImageReference returns the DockerImageReference field value
func (o *V1TagEvent) GetDockerImageReference() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DockerImageReference
}

// GetDockerImageReferenceOk returns a tuple with the DockerImageReference field value
// and a boolean to check if the value has been set.
func (o *V1TagEvent) GetDockerImageReferenceOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DockerImageReference, true
}

// SetDockerImageReference sets field value
func (o *V1TagEvent) SetDockerImageReference(v string) {
	o.DockerImageReference = v
}

// GetGeneration returns the Generation field value
func (o *V1TagEvent) GetGeneration() int64 {
	if o == nil {
		var ret int64
		return ret
	}

	return o.Generation
}

// GetGenerationOk returns a tuple with the Generation field value
// and a boolean to check if the value has been set.
func (o *V1TagEvent) GetGenerationOk() (*int64, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Generation, true
}

// SetGeneration sets field value
func (o *V1TagEvent) SetGeneration(v int64) {
	o.Generation = v
}

// GetImage returns the Image field value
func (o *V1TagEvent) GetImage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Image
}

// GetImageOk returns a tuple with the Image field value
// and a boolean to check if the value has been set.
func (o *V1TagEvent) GetImageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Image, true
}

// SetImage sets field value
func (o *V1TagEvent) SetImage(v string) {
	o.Image = v
}

func (o V1TagEvent) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1TagEvent) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["created"] = o.Created
	toSerialize["dockerImageReference"] = o.DockerImageReference
	toSerialize["generation"] = o.Generation
	toSerialize["image"] = o.Image
	return toSerialize, nil
}

type NullableV1TagEvent struct {
	value *V1TagEvent
	isSet bool
}

func (v NullableV1TagEvent) Get() *V1TagEvent {
	return v.value
}

func (v *NullableV1TagEvent) Set(val *V1TagEvent) {
	v.value = val
	v.isSet = true
}

func (v NullableV1TagEvent) IsSet() bool {
	return v.isSet
}

func (v *NullableV1TagEvent) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1TagEvent(val *V1TagEvent) *NullableV1TagEvent {
	return &NullableV1TagEvent{value: val, isSet: true}
}

func (v NullableV1TagEvent) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1TagEvent) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


