/*
Arvancloud PaaS REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.11
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package paas

import (
	"encoding/json"
)

// checks if the V1DaemonEndpoint type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1DaemonEndpoint{}

// V1DaemonEndpoint DaemonEndpoint contains information about a single Daemon endpoint.
type V1DaemonEndpoint struct {
	// Port number of the given endpoint.
	Port int32 `json:"Port"`
}

// NewV1DaemonEndpoint instantiates a new V1DaemonEndpoint object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1DaemonEndpoint(port int32) *V1DaemonEndpoint {
	this := V1DaemonEndpoint{}
	this.Port = port
	return &this
}

// NewV1DaemonEndpointWithDefaults instantiates a new V1DaemonEndpoint object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1DaemonEndpointWithDefaults() *V1DaemonEndpoint {
	this := V1DaemonEndpoint{}
	return &this
}

// GetPort returns the Port field value
func (o *V1DaemonEndpoint) GetPort() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Port
}

// GetPortOk returns a tuple with the Port field value
// and a boolean to check if the value has been set.
func (o *V1DaemonEndpoint) GetPortOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Port, true
}

// SetPort sets field value
func (o *V1DaemonEndpoint) SetPort(v int32) {
	o.Port = v
}

func (o V1DaemonEndpoint) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1DaemonEndpoint) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["Port"] = o.Port
	return toSerialize, nil
}

type NullableV1DaemonEndpoint struct {
	value *V1DaemonEndpoint
	isSet bool
}

func (v NullableV1DaemonEndpoint) Get() *V1DaemonEndpoint {
	return v.value
}

func (v *NullableV1DaemonEndpoint) Set(val *V1DaemonEndpoint) {
	v.value = val
	v.isSet = true
}

func (v NullableV1DaemonEndpoint) IsSet() bool {
	return v.isSet
}

func (v *NullableV1DaemonEndpoint) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1DaemonEndpoint(val *V1DaemonEndpoint) *NullableV1DaemonEndpoint {
	return &NullableV1DaemonEndpoint{value: val, isSet: true}
}

func (v NullableV1DaemonEndpoint) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1DaemonEndpoint) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


