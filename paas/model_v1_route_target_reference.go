/*
Arvancloud PaaS REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.11
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package paas

import (
	"encoding/json"
)

// checks if the V1RouteTargetReference type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1RouteTargetReference{}

// V1RouteTargetReference RouteTargetReference specifies the target that resolve into endpoints. Only the 'Service' kind is allowed. Use 'weight' field to emphasize one over others.
type V1RouteTargetReference struct {
	// The kind of target that the route is referring to. Currently, only 'Service' is allowed
	Kind string `json:"kind"`
	// name of the service/target that is being referred to. e.g. name of the service
	Name string `json:"name"`
	// weight as an integer between 0 and 256, default 1, that specifies the target's relative weight against other target reference objects. 0 suppresses requests to this backend.
	Weight int32 `json:"weight"`
}

// NewV1RouteTargetReference instantiates a new V1RouteTargetReference object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1RouteTargetReference(kind string, name string, weight int32) *V1RouteTargetReference {
	this := V1RouteTargetReference{}
	this.Kind = kind
	this.Name = name
	this.Weight = weight
	return &this
}

// NewV1RouteTargetReferenceWithDefaults instantiates a new V1RouteTargetReference object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1RouteTargetReferenceWithDefaults() *V1RouteTargetReference {
	this := V1RouteTargetReference{}
	return &this
}

// GetKind returns the Kind field value
func (o *V1RouteTargetReference) GetKind() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Kind
}

// GetKindOk returns a tuple with the Kind field value
// and a boolean to check if the value has been set.
func (o *V1RouteTargetReference) GetKindOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Kind, true
}

// SetKind sets field value
func (o *V1RouteTargetReference) SetKind(v string) {
	o.Kind = v
}

// GetName returns the Name field value
func (o *V1RouteTargetReference) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *V1RouteTargetReference) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *V1RouteTargetReference) SetName(v string) {
	o.Name = v
}

// GetWeight returns the Weight field value
func (o *V1RouteTargetReference) GetWeight() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Weight
}

// GetWeightOk returns a tuple with the Weight field value
// and a boolean to check if the value has been set.
func (o *V1RouteTargetReference) GetWeightOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Weight, true
}

// SetWeight sets field value
func (o *V1RouteTargetReference) SetWeight(v int32) {
	o.Weight = v
}

func (o V1RouteTargetReference) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1RouteTargetReference) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["kind"] = o.Kind
	toSerialize["name"] = o.Name
	toSerialize["weight"] = o.Weight
	return toSerialize, nil
}

type NullableV1RouteTargetReference struct {
	value *V1RouteTargetReference
	isSet bool
}

func (v NullableV1RouteTargetReference) Get() *V1RouteTargetReference {
	return v.value
}

func (v *NullableV1RouteTargetReference) Set(val *V1RouteTargetReference) {
	v.value = val
	v.isSet = true
}

func (v NullableV1RouteTargetReference) IsSet() bool {
	return v.isSet
}

func (v *NullableV1RouteTargetReference) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1RouteTargetReference(val *V1RouteTargetReference) *NullableV1RouteTargetReference {
	return &NullableV1RouteTargetReference{value: val, isSet: true}
}

func (v NullableV1RouteTargetReference) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1RouteTargetReference) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


