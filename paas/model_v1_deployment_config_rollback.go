/*
Arvancloud PaaS REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.11
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package paas

import (
	"encoding/json"
)

// checks if the V1DeploymentConfigRollback type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1DeploymentConfigRollback{}

// V1DeploymentConfigRollback DeploymentConfigRollback provides the input to rollback generation.
type V1DeploymentConfigRollback struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
	ApiVersion *string `json:"apiVersion,omitempty"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
	Kind *string `json:"kind,omitempty"`
	// Name of the deployment config that will be rolled back.
	Name string `json:"name"`
	Spec V1DeploymentConfigRollbackSpec `json:"spec"`
	// UpdatedAnnotations is a set of new annotations that will be added in the deployment config.
	UpdatedAnnotations map[string]interface{} `json:"updatedAnnotations,omitempty"`
}

// NewV1DeploymentConfigRollback instantiates a new V1DeploymentConfigRollback object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1DeploymentConfigRollback(name string, spec V1DeploymentConfigRollbackSpec) *V1DeploymentConfigRollback {
	this := V1DeploymentConfigRollback{}
	this.Name = name
	this.Spec = spec
	return &this
}

// NewV1DeploymentConfigRollbackWithDefaults instantiates a new V1DeploymentConfigRollback object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1DeploymentConfigRollbackWithDefaults() *V1DeploymentConfigRollback {
	this := V1DeploymentConfigRollback{}
	return &this
}

// GetApiVersion returns the ApiVersion field value if set, zero value otherwise.
func (o *V1DeploymentConfigRollback) GetApiVersion() string {
	if o == nil || IsNil(o.ApiVersion) {
		var ret string
		return ret
	}
	return *o.ApiVersion
}

// GetApiVersionOk returns a tuple with the ApiVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DeploymentConfigRollback) GetApiVersionOk() (*string, bool) {
	if o == nil || IsNil(o.ApiVersion) {
		return nil, false
	}
	return o.ApiVersion, true
}

// HasApiVersion returns a boolean if a field has been set.
func (o *V1DeploymentConfigRollback) HasApiVersion() bool {
	if o != nil && !IsNil(o.ApiVersion) {
		return true
	}

	return false
}

// SetApiVersion gets a reference to the given string and assigns it to the ApiVersion field.
func (o *V1DeploymentConfigRollback) SetApiVersion(v string) {
	o.ApiVersion = &v
}

// GetKind returns the Kind field value if set, zero value otherwise.
func (o *V1DeploymentConfigRollback) GetKind() string {
	if o == nil || IsNil(o.Kind) {
		var ret string
		return ret
	}
	return *o.Kind
}

// GetKindOk returns a tuple with the Kind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DeploymentConfigRollback) GetKindOk() (*string, bool) {
	if o == nil || IsNil(o.Kind) {
		return nil, false
	}
	return o.Kind, true
}

// HasKind returns a boolean if a field has been set.
func (o *V1DeploymentConfigRollback) HasKind() bool {
	if o != nil && !IsNil(o.Kind) {
		return true
	}

	return false
}

// SetKind gets a reference to the given string and assigns it to the Kind field.
func (o *V1DeploymentConfigRollback) SetKind(v string) {
	o.Kind = &v
}

// GetName returns the Name field value
func (o *V1DeploymentConfigRollback) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *V1DeploymentConfigRollback) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *V1DeploymentConfigRollback) SetName(v string) {
	o.Name = v
}

// GetSpec returns the Spec field value
func (o *V1DeploymentConfigRollback) GetSpec() V1DeploymentConfigRollbackSpec {
	if o == nil {
		var ret V1DeploymentConfigRollbackSpec
		return ret
	}

	return o.Spec
}

// GetSpecOk returns a tuple with the Spec field value
// and a boolean to check if the value has been set.
func (o *V1DeploymentConfigRollback) GetSpecOk() (*V1DeploymentConfigRollbackSpec, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Spec, true
}

// SetSpec sets field value
func (o *V1DeploymentConfigRollback) SetSpec(v V1DeploymentConfigRollbackSpec) {
	o.Spec = v
}

// GetUpdatedAnnotations returns the UpdatedAnnotations field value if set, zero value otherwise.
func (o *V1DeploymentConfigRollback) GetUpdatedAnnotations() map[string]interface{} {
	if o == nil || IsNil(o.UpdatedAnnotations) {
		var ret map[string]interface{}
		return ret
	}
	return o.UpdatedAnnotations
}

// GetUpdatedAnnotationsOk returns a tuple with the UpdatedAnnotations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DeploymentConfigRollback) GetUpdatedAnnotationsOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.UpdatedAnnotations) {
		return map[string]interface{}{}, false
	}
	return o.UpdatedAnnotations, true
}

// HasUpdatedAnnotations returns a boolean if a field has been set.
func (o *V1DeploymentConfigRollback) HasUpdatedAnnotations() bool {
	if o != nil && !IsNil(o.UpdatedAnnotations) {
		return true
	}

	return false
}

// SetUpdatedAnnotations gets a reference to the given map[string]interface{} and assigns it to the UpdatedAnnotations field.
func (o *V1DeploymentConfigRollback) SetUpdatedAnnotations(v map[string]interface{}) {
	o.UpdatedAnnotations = v
}

func (o V1DeploymentConfigRollback) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1DeploymentConfigRollback) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ApiVersion) {
		toSerialize["apiVersion"] = o.ApiVersion
	}
	if !IsNil(o.Kind) {
		toSerialize["kind"] = o.Kind
	}
	toSerialize["name"] = o.Name
	toSerialize["spec"] = o.Spec
	if !IsNil(o.UpdatedAnnotations) {
		toSerialize["updatedAnnotations"] = o.UpdatedAnnotations
	}
	return toSerialize, nil
}

type NullableV1DeploymentConfigRollback struct {
	value *V1DeploymentConfigRollback
	isSet bool
}

func (v NullableV1DeploymentConfigRollback) Get() *V1DeploymentConfigRollback {
	return v.value
}

func (v *NullableV1DeploymentConfigRollback) Set(val *V1DeploymentConfigRollback) {
	v.value = val
	v.isSet = true
}

func (v NullableV1DeploymentConfigRollback) IsSet() bool {
	return v.isSet
}

func (v *NullableV1DeploymentConfigRollback) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1DeploymentConfigRollback(val *V1DeploymentConfigRollback) *NullableV1DeploymentConfigRollback {
	return &NullableV1DeploymentConfigRollback{value: val, isSet: true}
}

func (v NullableV1DeploymentConfigRollback) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1DeploymentConfigRollback) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


