/*
Arvancloud PaaS REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.11
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package paas

import (
	"encoding/json"
)

// checks if the V1ExecNewPodHook type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1ExecNewPodHook{}

// V1ExecNewPodHook ExecNewPodHook is a hook implementation which runs a command in a new pod based on the specified container which is assumed to be part of the deployment template.
type V1ExecNewPodHook struct {
	// Command is the action command and its arguments.
	Command []string `json:"command"`
	// ContainerName is the name of a container in the deployment pod template whose Docker image will be used for the hook pod's container.
	ContainerName string `json:"containerName"`
	// Env is a set of environment variables to supply to the hook pod's container.
	Env []V1EnvVar `json:"env,omitempty"`
	// Volumes is a list of named volumes from the pod template which should be copied to the hook pod. Volumes names not found in pod spec are ignored. An empty list means no volumes will be copied.
	Volumes []string `json:"volumes,omitempty"`
}

// NewV1ExecNewPodHook instantiates a new V1ExecNewPodHook object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1ExecNewPodHook(command []string, containerName string) *V1ExecNewPodHook {
	this := V1ExecNewPodHook{}
	this.Command = command
	this.ContainerName = containerName
	return &this
}

// NewV1ExecNewPodHookWithDefaults instantiates a new V1ExecNewPodHook object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1ExecNewPodHookWithDefaults() *V1ExecNewPodHook {
	this := V1ExecNewPodHook{}
	return &this
}

// GetCommand returns the Command field value
func (o *V1ExecNewPodHook) GetCommand() []string {
	if o == nil {
		var ret []string
		return ret
	}

	return o.Command
}

// GetCommandOk returns a tuple with the Command field value
// and a boolean to check if the value has been set.
func (o *V1ExecNewPodHook) GetCommandOk() ([]string, bool) {
	if o == nil {
		return nil, false
	}
	return o.Command, true
}

// SetCommand sets field value
func (o *V1ExecNewPodHook) SetCommand(v []string) {
	o.Command = v
}

// GetContainerName returns the ContainerName field value
func (o *V1ExecNewPodHook) GetContainerName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ContainerName
}

// GetContainerNameOk returns a tuple with the ContainerName field value
// and a boolean to check if the value has been set.
func (o *V1ExecNewPodHook) GetContainerNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ContainerName, true
}

// SetContainerName sets field value
func (o *V1ExecNewPodHook) SetContainerName(v string) {
	o.ContainerName = v
}

// GetEnv returns the Env field value if set, zero value otherwise.
func (o *V1ExecNewPodHook) GetEnv() []V1EnvVar {
	if o == nil || IsNil(o.Env) {
		var ret []V1EnvVar
		return ret
	}
	return o.Env
}

// GetEnvOk returns a tuple with the Env field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ExecNewPodHook) GetEnvOk() ([]V1EnvVar, bool) {
	if o == nil || IsNil(o.Env) {
		return nil, false
	}
	return o.Env, true
}

// HasEnv returns a boolean if a field has been set.
func (o *V1ExecNewPodHook) HasEnv() bool {
	if o != nil && !IsNil(o.Env) {
		return true
	}

	return false
}

// SetEnv gets a reference to the given []V1EnvVar and assigns it to the Env field.
func (o *V1ExecNewPodHook) SetEnv(v []V1EnvVar) {
	o.Env = v
}

// GetVolumes returns the Volumes field value if set, zero value otherwise.
func (o *V1ExecNewPodHook) GetVolumes() []string {
	if o == nil || IsNil(o.Volumes) {
		var ret []string
		return ret
	}
	return o.Volumes
}

// GetVolumesOk returns a tuple with the Volumes field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ExecNewPodHook) GetVolumesOk() ([]string, bool) {
	if o == nil || IsNil(o.Volumes) {
		return nil, false
	}
	return o.Volumes, true
}

// HasVolumes returns a boolean if a field has been set.
func (o *V1ExecNewPodHook) HasVolumes() bool {
	if o != nil && !IsNil(o.Volumes) {
		return true
	}

	return false
}

// SetVolumes gets a reference to the given []string and assigns it to the Volumes field.
func (o *V1ExecNewPodHook) SetVolumes(v []string) {
	o.Volumes = v
}

func (o V1ExecNewPodHook) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1ExecNewPodHook) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["command"] = o.Command
	toSerialize["containerName"] = o.ContainerName
	if !IsNil(o.Env) {
		toSerialize["env"] = o.Env
	}
	if !IsNil(o.Volumes) {
		toSerialize["volumes"] = o.Volumes
	}
	return toSerialize, nil
}

type NullableV1ExecNewPodHook struct {
	value *V1ExecNewPodHook
	isSet bool
}

func (v NullableV1ExecNewPodHook) Get() *V1ExecNewPodHook {
	return v.value
}

func (v *NullableV1ExecNewPodHook) Set(val *V1ExecNewPodHook) {
	v.value = val
	v.isSet = true
}

func (v NullableV1ExecNewPodHook) IsSet() bool {
	return v.isSet
}

func (v *NullableV1ExecNewPodHook) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1ExecNewPodHook(val *V1ExecNewPodHook) *NullableV1ExecNewPodHook {
	return &NullableV1ExecNewPodHook{value: val, isSet: true}
}

func (v NullableV1ExecNewPodHook) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1ExecNewPodHook) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


