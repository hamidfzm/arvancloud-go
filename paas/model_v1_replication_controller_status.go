/*
Arvancloud PaaS REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.11
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package paas

import (
	"encoding/json"
)

// checks if the V1ReplicationControllerStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1ReplicationControllerStatus{}

// V1ReplicationControllerStatus ReplicationControllerStatus represents the current status of a replication controller.
type V1ReplicationControllerStatus struct {
	// The number of available replicas (ready for at least minReadySeconds) for this replication controller.
	AvailableReplicas *int32 `json:"availableReplicas,omitempty"`
	// Represents the latest available observations of a replication controller's current state.
	Conditions []V1ReplicationControllerCondition `json:"conditions,omitempty"`
	// The number of pods that have labels matching the labels of the pod template of the replication controller.
	FullyLabeledReplicas *int32 `json:"fullyLabeledReplicas,omitempty"`
	// ObservedGeneration reflects the generation of the most recently observed replication controller.
	ObservedGeneration *int64 `json:"observedGeneration,omitempty"`
	// The number of ready replicas for this replication controller.
	ReadyReplicas *int32 `json:"readyReplicas,omitempty"`
	// Replicas is the most recently oberved number of replicas. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller#what-is-a-replicationcontroller
	Replicas int32 `json:"replicas"`
}

// NewV1ReplicationControllerStatus instantiates a new V1ReplicationControllerStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1ReplicationControllerStatus(replicas int32) *V1ReplicationControllerStatus {
	this := V1ReplicationControllerStatus{}
	this.Replicas = replicas
	return &this
}

// NewV1ReplicationControllerStatusWithDefaults instantiates a new V1ReplicationControllerStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1ReplicationControllerStatusWithDefaults() *V1ReplicationControllerStatus {
	this := V1ReplicationControllerStatus{}
	return &this
}

// GetAvailableReplicas returns the AvailableReplicas field value if set, zero value otherwise.
func (o *V1ReplicationControllerStatus) GetAvailableReplicas() int32 {
	if o == nil || IsNil(o.AvailableReplicas) {
		var ret int32
		return ret
	}
	return *o.AvailableReplicas
}

// GetAvailableReplicasOk returns a tuple with the AvailableReplicas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ReplicationControllerStatus) GetAvailableReplicasOk() (*int32, bool) {
	if o == nil || IsNil(o.AvailableReplicas) {
		return nil, false
	}
	return o.AvailableReplicas, true
}

// HasAvailableReplicas returns a boolean if a field has been set.
func (o *V1ReplicationControllerStatus) HasAvailableReplicas() bool {
	if o != nil && !IsNil(o.AvailableReplicas) {
		return true
	}

	return false
}

// SetAvailableReplicas gets a reference to the given int32 and assigns it to the AvailableReplicas field.
func (o *V1ReplicationControllerStatus) SetAvailableReplicas(v int32) {
	o.AvailableReplicas = &v
}

// GetConditions returns the Conditions field value if set, zero value otherwise.
func (o *V1ReplicationControllerStatus) GetConditions() []V1ReplicationControllerCondition {
	if o == nil || IsNil(o.Conditions) {
		var ret []V1ReplicationControllerCondition
		return ret
	}
	return o.Conditions
}

// GetConditionsOk returns a tuple with the Conditions field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ReplicationControllerStatus) GetConditionsOk() ([]V1ReplicationControllerCondition, bool) {
	if o == nil || IsNil(o.Conditions) {
		return nil, false
	}
	return o.Conditions, true
}

// HasConditions returns a boolean if a field has been set.
func (o *V1ReplicationControllerStatus) HasConditions() bool {
	if o != nil && !IsNil(o.Conditions) {
		return true
	}

	return false
}

// SetConditions gets a reference to the given []V1ReplicationControllerCondition and assigns it to the Conditions field.
func (o *V1ReplicationControllerStatus) SetConditions(v []V1ReplicationControllerCondition) {
	o.Conditions = v
}

// GetFullyLabeledReplicas returns the FullyLabeledReplicas field value if set, zero value otherwise.
func (o *V1ReplicationControllerStatus) GetFullyLabeledReplicas() int32 {
	if o == nil || IsNil(o.FullyLabeledReplicas) {
		var ret int32
		return ret
	}
	return *o.FullyLabeledReplicas
}

// GetFullyLabeledReplicasOk returns a tuple with the FullyLabeledReplicas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ReplicationControllerStatus) GetFullyLabeledReplicasOk() (*int32, bool) {
	if o == nil || IsNil(o.FullyLabeledReplicas) {
		return nil, false
	}
	return o.FullyLabeledReplicas, true
}

// HasFullyLabeledReplicas returns a boolean if a field has been set.
func (o *V1ReplicationControllerStatus) HasFullyLabeledReplicas() bool {
	if o != nil && !IsNil(o.FullyLabeledReplicas) {
		return true
	}

	return false
}

// SetFullyLabeledReplicas gets a reference to the given int32 and assigns it to the FullyLabeledReplicas field.
func (o *V1ReplicationControllerStatus) SetFullyLabeledReplicas(v int32) {
	o.FullyLabeledReplicas = &v
}

// GetObservedGeneration returns the ObservedGeneration field value if set, zero value otherwise.
func (o *V1ReplicationControllerStatus) GetObservedGeneration() int64 {
	if o == nil || IsNil(o.ObservedGeneration) {
		var ret int64
		return ret
	}
	return *o.ObservedGeneration
}

// GetObservedGenerationOk returns a tuple with the ObservedGeneration field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ReplicationControllerStatus) GetObservedGenerationOk() (*int64, bool) {
	if o == nil || IsNil(o.ObservedGeneration) {
		return nil, false
	}
	return o.ObservedGeneration, true
}

// HasObservedGeneration returns a boolean if a field has been set.
func (o *V1ReplicationControllerStatus) HasObservedGeneration() bool {
	if o != nil && !IsNil(o.ObservedGeneration) {
		return true
	}

	return false
}

// SetObservedGeneration gets a reference to the given int64 and assigns it to the ObservedGeneration field.
func (o *V1ReplicationControllerStatus) SetObservedGeneration(v int64) {
	o.ObservedGeneration = &v
}

// GetReadyReplicas returns the ReadyReplicas field value if set, zero value otherwise.
func (o *V1ReplicationControllerStatus) GetReadyReplicas() int32 {
	if o == nil || IsNil(o.ReadyReplicas) {
		var ret int32
		return ret
	}
	return *o.ReadyReplicas
}

// GetReadyReplicasOk returns a tuple with the ReadyReplicas field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ReplicationControllerStatus) GetReadyReplicasOk() (*int32, bool) {
	if o == nil || IsNil(o.ReadyReplicas) {
		return nil, false
	}
	return o.ReadyReplicas, true
}

// HasReadyReplicas returns a boolean if a field has been set.
func (o *V1ReplicationControllerStatus) HasReadyReplicas() bool {
	if o != nil && !IsNil(o.ReadyReplicas) {
		return true
	}

	return false
}

// SetReadyReplicas gets a reference to the given int32 and assigns it to the ReadyReplicas field.
func (o *V1ReplicationControllerStatus) SetReadyReplicas(v int32) {
	o.ReadyReplicas = &v
}

// GetReplicas returns the Replicas field value
func (o *V1ReplicationControllerStatus) GetReplicas() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Replicas
}

// GetReplicasOk returns a tuple with the Replicas field value
// and a boolean to check if the value has been set.
func (o *V1ReplicationControllerStatus) GetReplicasOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Replicas, true
}

// SetReplicas sets field value
func (o *V1ReplicationControllerStatus) SetReplicas(v int32) {
	o.Replicas = v
}

func (o V1ReplicationControllerStatus) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1ReplicationControllerStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AvailableReplicas) {
		toSerialize["availableReplicas"] = o.AvailableReplicas
	}
	if !IsNil(o.Conditions) {
		toSerialize["conditions"] = o.Conditions
	}
	if !IsNil(o.FullyLabeledReplicas) {
		toSerialize["fullyLabeledReplicas"] = o.FullyLabeledReplicas
	}
	if !IsNil(o.ObservedGeneration) {
		toSerialize["observedGeneration"] = o.ObservedGeneration
	}
	if !IsNil(o.ReadyReplicas) {
		toSerialize["readyReplicas"] = o.ReadyReplicas
	}
	toSerialize["replicas"] = o.Replicas
	return toSerialize, nil
}

type NullableV1ReplicationControllerStatus struct {
	value *V1ReplicationControllerStatus
	isSet bool
}

func (v NullableV1ReplicationControllerStatus) Get() *V1ReplicationControllerStatus {
	return v.value
}

func (v *NullableV1ReplicationControllerStatus) Set(val *V1ReplicationControllerStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableV1ReplicationControllerStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableV1ReplicationControllerStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1ReplicationControllerStatus(val *V1ReplicationControllerStatus) *NullableV1ReplicationControllerStatus {
	return &NullableV1ReplicationControllerStatus{value: val, isSet: true}
}

func (v NullableV1ReplicationControllerStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1ReplicationControllerStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


