/*
Arvancloud PaaS REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.11
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package paas

import (
	"encoding/json"
)

// checks if the V1TagReferencePolicy type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1TagReferencePolicy{}

// V1TagReferencePolicy TagReferencePolicy describes how pull-specs for images in this image stream tag are generated when image change triggers in deployment configs or builds are resolved. This allows the image stream author to control how images are accessed.
type V1TagReferencePolicy struct {
	// Type determines how the image pull spec should be transformed when the image stream tag is used in deployment config triggers or new builds. The default value is `Source`, indicating the original location of the image should be used (if imported). The user may also specify `Local`, indicating that the pull spec should point to the integrated Docker registry and leverage the registry's ability to proxy the pull to an upstream registry. `Local` allows the credentials used to pull this image to be managed from the image stream's namespace, so others on the platform can access a remote image but have no access to the remote secret. It also allows the image layers to be mirrored into the local registry which the images can still be pulled even if the upstream registry is unavailable.
	Type string `json:"type"`
}

// NewV1TagReferencePolicy instantiates a new V1TagReferencePolicy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1TagReferencePolicy(type_ string) *V1TagReferencePolicy {
	this := V1TagReferencePolicy{}
	this.Type = type_
	return &this
}

// NewV1TagReferencePolicyWithDefaults instantiates a new V1TagReferencePolicy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1TagReferencePolicyWithDefaults() *V1TagReferencePolicy {
	this := V1TagReferencePolicy{}
	return &this
}

// GetType returns the Type field value
func (o *V1TagReferencePolicy) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *V1TagReferencePolicy) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *V1TagReferencePolicy) SetType(v string) {
	o.Type = v
}

func (o V1TagReferencePolicy) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1TagReferencePolicy) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["type"] = o.Type
	return toSerialize, nil
}

type NullableV1TagReferencePolicy struct {
	value *V1TagReferencePolicy
	isSet bool
}

func (v NullableV1TagReferencePolicy) Get() *V1TagReferencePolicy {
	return v.value
}

func (v *NullableV1TagReferencePolicy) Set(val *V1TagReferencePolicy) {
	v.value = val
	v.isSet = true
}

func (v NullableV1TagReferencePolicy) IsSet() bool {
	return v.isSet
}

func (v *NullableV1TagReferencePolicy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1TagReferencePolicy(val *V1TagReferencePolicy) *NullableV1TagReferencePolicy {
	return &NullableV1TagReferencePolicy{value: val, isSet: true}
}

func (v NullableV1TagReferencePolicy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1TagReferencePolicy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


