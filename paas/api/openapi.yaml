openapi: 3.0.1
info:
  description: ""
  title: Arvancloud PaaS REST API
  version: v1.11
  x-logo:
    url: /images/other/arvan-api-docs-logo.svg
    backgroundColor: white
    altText: arvancloud
servers:
- url: https://napi.arvancloud.ir/paas/v1/regions/ir-thr-at1/o
security:
- ApiKeyAuth: []
paths:
  /api/v1/namespaces/{namespace}/configmaps:
    delete:
      operationId: deletecollectionNamespacedConfigMap
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything.
        in: query
        name: labelSelector
        schema:
          type: string
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        in: query
        name: fieldSelector
        schema:
          type: string
      - description: "If true, partially initialized resources are included in the\
          \ response."
        in: query
        name: includeUninitialized
        schema:
          type: boolean
      - description: "Watch for changes to the described resources and return them\
          \ as a stream of add, update, and remove notifications. Specify resourceVersion."
        in: query
        name: watch
        schema:
          type: boolean
      - description: "When specified with a watch call, shows changes that occur after\
          \ that particular version of a resource. Defaults to changes from the beginning\
          \ of history. When specified for list: - if unset, then the result is returned\
          \ from remote storage based on quorum-read flag; - if it's 0, then we simply\
          \ return what we currently have in cache, no guarantee; - if set to non\
          \ zero, then the result is at least as fresh as given rv."
        in: query
        name: resourceVersion
        schema:
          type: string
      - description: "Timeout for the list/watch call. This limits the duration of\
          \ the call, regardless of any activity or inactivity."
        in: query
        name: timeoutSeconds
        schema:
          type: integer
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        in: query
        name: limit
        schema:
          type: integer
      - description: "The continue option should be set when retrieving more results\
          \ from the server. Since this value is server defined, clients may only\
          \ use the continue value from a previous query result with identical query\
          \ parameters (except for the value of continue) and the server may reject\
          \ a continue value it does not recognize. If the specified continue value\
          \ is no longer valid whether due to expiration (generally five to fifteen\
          \ minutes) or a configuration change on the server the server will respond\
          \ with a 410 ResourceExpired error indicating the client must restart their\
          \ list without the continue field. This field is not supported when watch\
          \ is true. Clients may start a watch from the last resourceVersion value\
          \ returned by the server and not miss any modifications."
        in: query
        name: continue
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Status'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Status'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Status'
          description: OK
      summary: delete collection of ConfigMap
      tags:
      - ConfigMap
    get:
      operationId: listNamespacedConfigMap
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything.
        in: query
        name: labelSelector
        schema:
          type: string
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        in: query
        name: fieldSelector
        schema:
          type: string
      - description: "If true, partially initialized resources are included in the\
          \ response."
        in: query
        name: includeUninitialized
        schema:
          type: boolean
      - description: "Watch for changes to the described resources and return them\
          \ as a stream of add, update, and remove notifications. Specify resourceVersion."
        in: query
        name: watch
        schema:
          type: boolean
      - description: "When specified with a watch call, shows changes that occur after\
          \ that particular version of a resource. Defaults to changes from the beginning\
          \ of history. When specified for list: - if unset, then the result is returned\
          \ from remote storage based on quorum-read flag; - if it's 0, then we simply\
          \ return what we currently have in cache, no guarantee; - if set to non\
          \ zero, then the result is at least as fresh as given rv."
        in: query
        name: resourceVersion
        schema:
          type: string
      - description: "Timeout for the list/watch call. This limits the duration of\
          \ the call, regardless of any activity or inactivity."
        in: query
        name: timeoutSeconds
        schema:
          type: integer
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        in: query
        name: limit
        schema:
          type: integer
      - description: "The continue option should be set when retrieving more results\
          \ from the server. Since this value is server defined, clients may only\
          \ use the continue value from a previous query result with identical query\
          \ parameters (except for the value of continue) and the server may reject\
          \ a continue value it does not recognize. If the specified continue value\
          \ is no longer valid whether due to expiration (generally five to fifteen\
          \ minutes) or a configuration change on the server the server will respond\
          \ with a 410 ResourceExpired error indicating the client must restart their\
          \ list without the continue field. This field is not supported when watch\
          \ is true. Clients may start a watch from the last resourceVersion value\
          \ returned by the server and not miss any modifications."
        in: query
        name: continue
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.ConfigMapList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.ConfigMapList'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.ConfigMapList'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/v1.ConfigMapList'
            application/vnd.kubernetes.protobuf;stream=watch:
              schema:
                $ref: '#/components/schemas/v1.ConfigMapList'
          description: OK
      summary: list or watch objects of kind ConfigMap
      tags:
      - ConfigMap
    post:
      operationId: createNamespacedConfigMap
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/v1.ConfigMap'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.ConfigMap'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.ConfigMap'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.ConfigMap'
          description: OK
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.ConfigMap'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.ConfigMap'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.ConfigMap'
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.ConfigMap'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.ConfigMap'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.ConfigMap'
          description: Accepted
      summary: create a ConfigMap
      tags:
      - ConfigMap
      x-codegen-request-body-name: body
  /api/v1/namespaces/{namespace}/configmaps/{name}:
    delete:
      operationId: deleteNamespacedConfigMap
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: "The duration in seconds before the object should be deleted.\
          \ Value must be non-negative integer. The value zero indicates delete immediately.\
          \ If this value is nil, the default grace period for the specified type\
          \ will be used. Defaults to a per object value if not specified. zero means\
          \ delete immediately."
        in: query
        name: gracePeriodSeconds
        schema:
          type: integer
      - description: "Deprecated: please use the PropagationPolicy, this field will\
          \ be deprecated in 1.7. Should the dependent objects be orphaned. If true/false,\
          \ the \"orphan\" finalizer will be added to/removed from the object's finalizers\
          \ list. Either this field or PropagationPolicy may be set, but not both."
        in: query
        name: orphanDependents
        schema:
          type: boolean
      - description: "Whether and how garbage collection will be performed. Either\
          \ this field or OrphanDependents may be set, but not both. The default policy\
          \ is decided by the existing finalizer set in the metadata.finalizers and\
          \ the resource-specific default policy. Acceptable values are: 'Orphan'\
          \ - orphan the dependents; 'Background' - allow the garbage collector to\
          \ delete the dependents in the background; 'Foreground' - a cascading policy\
          \ that deletes all dependents in the foreground."
        in: query
        name: propagationPolicy
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the ConfigMap
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/v1.DeleteOptions'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Status'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Status'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Status'
          description: OK
      summary: delete a ConfigMap
      tags:
      - ConfigMap
      x-codegen-request-body-name: body
    get:
      operationId: readNamespacedConfigMap
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: Should this value be exported.  Export strips fields that a user
          can not specify.
        in: query
        name: export
        schema:
          type: boolean
      - description: Should the export be exact.  Exact export maintains cluster-specific
          fields like 'Namespace'.
        in: query
        name: exact
        schema:
          type: boolean
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the ConfigMap
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.ConfigMap'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.ConfigMap'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.ConfigMap'
          description: OK
      summary: read the specified ConfigMap
      tags:
      - ConfigMap
    patch:
      operationId: patchNamespacedConfigMap
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the ConfigMap
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/v1.Patch'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/v1.Patch'
          application/strategic-merge-patch+json:
            schema:
              $ref: '#/components/schemas/v1.Patch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.ConfigMap'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.ConfigMap'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.ConfigMap'
          description: OK
      summary: partially update the specified ConfigMap
      tags:
      - ConfigMap
      x-codegen-request-body-name: body
    put:
      operationId: replaceNamespacedConfigMap
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the ConfigMap
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/v1.ConfigMap'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.ConfigMap'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.ConfigMap'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.ConfigMap'
          description: OK
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.ConfigMap'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.ConfigMap'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.ConfigMap'
          description: Created
      summary: replace the specified ConfigMap
      tags:
      - ConfigMap
      x-codegen-request-body-name: body
  /api/v1/namespaces/{namespace}/events:
    get:
      operationId: listNamespacedEvent
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything.
        in: query
        name: labelSelector
        schema:
          type: string
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        in: query
        name: fieldSelector
        schema:
          type: string
      - description: "If true, partially initialized resources are included in the\
          \ response."
        in: query
        name: includeUninitialized
        schema:
          type: boolean
      - description: "Watch for changes to the described resources and return them\
          \ as a stream of add, update, and remove notifications. Specify resourceVersion."
        in: query
        name: watch
        schema:
          type: boolean
      - description: "When specified with a watch call, shows changes that occur after\
          \ that particular version of a resource. Defaults to changes from the beginning\
          \ of history. When specified for list: - if unset, then the result is returned\
          \ from remote storage based on quorum-read flag; - if it's 0, then we simply\
          \ return what we currently have in cache, no guarantee; - if set to non\
          \ zero, then the result is at least as fresh as given rv."
        in: query
        name: resourceVersion
        schema:
          type: string
      - description: "Timeout for the list/watch call. This limits the duration of\
          \ the call, regardless of any activity or inactivity."
        in: query
        name: timeoutSeconds
        schema:
          type: integer
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        in: query
        name: limit
        schema:
          type: integer
      - description: "The continue option should be set when retrieving more results\
          \ from the server. Since this value is server defined, clients may only\
          \ use the continue value from a previous query result with identical query\
          \ parameters (except for the value of continue) and the server may reject\
          \ a continue value it does not recognize. If the specified continue value\
          \ is no longer valid whether due to expiration (generally five to fifteen\
          \ minutes) or a configuration change on the server the server will respond\
          \ with a 410 ResourceExpired error indicating the client must restart their\
          \ list without the continue field. This field is not supported when watch\
          \ is true. Clients may start a watch from the last resourceVersion value\
          \ returned by the server and not miss any modifications."
        in: query
        name: continue
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.EventList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.EventList'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.EventList'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/v1.EventList'
            application/vnd.kubernetes.protobuf;stream=watch:
              schema:
                $ref: '#/components/schemas/v1.EventList'
          description: OK
      summary: list or watch objects of kind Event
      tags:
      - Events
  /api/v1/namespaces/{namespace}/events/{name}:
    get:
      operationId: readNamespacedEvent
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: Should this value be exported.  Export strips fields that a user
          can not specify.
        in: query
        name: export
        schema:
          type: boolean
      - description: Should the export be exact.  Exact export maintains cluster-specific
          fields like 'Namespace'.
        in: query
        name: exact
        schema:
          type: boolean
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the Event
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Event'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Event'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Event'
          description: OK
      summary: read the specified Event
      tags:
      - Events
  /api/v1/namespaces/{namespace}/persistentvolumeclaims:
    delete:
      operationId: deletecollectionNamespacedPersistentVolumeClaim
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything.
        in: query
        name: labelSelector
        schema:
          type: string
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        in: query
        name: fieldSelector
        schema:
          type: string
      - description: "If true, partially initialized resources are included in the\
          \ response."
        in: query
        name: includeUninitialized
        schema:
          type: boolean
      - description: "Watch for changes to the described resources and return them\
          \ as a stream of add, update, and remove notifications. Specify resourceVersion."
        in: query
        name: watch
        schema:
          type: boolean
      - description: "When specified with a watch call, shows changes that occur after\
          \ that particular version of a resource. Defaults to changes from the beginning\
          \ of history. When specified for list: - if unset, then the result is returned\
          \ from remote storage based on quorum-read flag; - if it's 0, then we simply\
          \ return what we currently have in cache, no guarantee; - if set to non\
          \ zero, then the result is at least as fresh as given rv."
        in: query
        name: resourceVersion
        schema:
          type: string
      - description: "Timeout for the list/watch call. This limits the duration of\
          \ the call, regardless of any activity or inactivity."
        in: query
        name: timeoutSeconds
        schema:
          type: integer
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        in: query
        name: limit
        schema:
          type: integer
      - description: "The continue option should be set when retrieving more results\
          \ from the server. Since this value is server defined, clients may only\
          \ use the continue value from a previous query result with identical query\
          \ parameters (except for the value of continue) and the server may reject\
          \ a continue value it does not recognize. If the specified continue value\
          \ is no longer valid whether due to expiration (generally five to fifteen\
          \ minutes) or a configuration change on the server the server will respond\
          \ with a 410 ResourceExpired error indicating the client must restart their\
          \ list without the continue field. This field is not supported when watch\
          \ is true. Clients may start a watch from the last resourceVersion value\
          \ returned by the server and not miss any modifications."
        in: query
        name: continue
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Status'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Status'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Status'
          description: OK
      summary: delete collection of PersistentVolumeClaim
      tags:
      - PersistentVolumeClaim
    get:
      operationId: listNamespacedPersistentVolumeClaim
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything.
        in: query
        name: labelSelector
        schema:
          type: string
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        in: query
        name: fieldSelector
        schema:
          type: string
      - description: "If true, partially initialized resources are included in the\
          \ response."
        in: query
        name: includeUninitialized
        schema:
          type: boolean
      - description: "Watch for changes to the described resources and return them\
          \ as a stream of add, update, and remove notifications. Specify resourceVersion."
        in: query
        name: watch
        schema:
          type: boolean
      - description: "When specified with a watch call, shows changes that occur after\
          \ that particular version of a resource. Defaults to changes from the beginning\
          \ of history. When specified for list: - if unset, then the result is returned\
          \ from remote storage based on quorum-read flag; - if it's 0, then we simply\
          \ return what we currently have in cache, no guarantee; - if set to non\
          \ zero, then the result is at least as fresh as given rv."
        in: query
        name: resourceVersion
        schema:
          type: string
      - description: "Timeout for the list/watch call. This limits the duration of\
          \ the call, regardless of any activity or inactivity."
        in: query
        name: timeoutSeconds
        schema:
          type: integer
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        in: query
        name: limit
        schema:
          type: integer
      - description: "The continue option should be set when retrieving more results\
          \ from the server. Since this value is server defined, clients may only\
          \ use the continue value from a previous query result with identical query\
          \ parameters (except for the value of continue) and the server may reject\
          \ a continue value it does not recognize. If the specified continue value\
          \ is no longer valid whether due to expiration (generally five to fifteen\
          \ minutes) or a configuration change on the server the server will respond\
          \ with a 410 ResourceExpired error indicating the client must restart their\
          \ list without the continue field. This field is not supported when watch\
          \ is true. Clients may start a watch from the last resourceVersion value\
          \ returned by the server and not miss any modifications."
        in: query
        name: continue
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.PersistentVolumeClaimList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.PersistentVolumeClaimList'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.PersistentVolumeClaimList'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/v1.PersistentVolumeClaimList'
            application/vnd.kubernetes.protobuf;stream=watch:
              schema:
                $ref: '#/components/schemas/v1.PersistentVolumeClaimList'
          description: OK
      summary: list or watch objects of kind PersistentVolumeClaim
      tags:
      - PersistentVolumeClaim
    post:
      operationId: createNamespacedPersistentVolumeClaim
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/v1.PersistentVolumeClaim'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.PersistentVolumeClaim'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.PersistentVolumeClaim'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.PersistentVolumeClaim'
          description: OK
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.PersistentVolumeClaim'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.PersistentVolumeClaim'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.PersistentVolumeClaim'
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.PersistentVolumeClaim'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.PersistentVolumeClaim'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.PersistentVolumeClaim'
          description: Accepted
      summary: create a PersistentVolumeClaim
      tags:
      - PersistentVolumeClaim
      x-codegen-request-body-name: body
  /api/v1/namespaces/{namespace}/persistentvolumeclaims/{name}:
    delete:
      operationId: deleteNamespacedPersistentVolumeClaim
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: "The duration in seconds before the object should be deleted.\
          \ Value must be non-negative integer. The value zero indicates delete immediately.\
          \ If this value is nil, the default grace period for the specified type\
          \ will be used. Defaults to a per object value if not specified. zero means\
          \ delete immediately."
        in: query
        name: gracePeriodSeconds
        schema:
          type: integer
      - description: "Deprecated: please use the PropagationPolicy, this field will\
          \ be deprecated in 1.7. Should the dependent objects be orphaned. If true/false,\
          \ the \"orphan\" finalizer will be added to/removed from the object's finalizers\
          \ list. Either this field or PropagationPolicy may be set, but not both."
        in: query
        name: orphanDependents
        schema:
          type: boolean
      - description: "Whether and how garbage collection will be performed. Either\
          \ this field or OrphanDependents may be set, but not both. The default policy\
          \ is decided by the existing finalizer set in the metadata.finalizers and\
          \ the resource-specific default policy. Acceptable values are: 'Orphan'\
          \ - orphan the dependents; 'Background' - allow the garbage collector to\
          \ delete the dependents in the background; 'Foreground' - a cascading policy\
          \ that deletes all dependents in the foreground."
        in: query
        name: propagationPolicy
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the PersistentVolumeClaim
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/v1.DeleteOptions'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Status'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Status'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Status'
          description: OK
      summary: delete a PersistentVolumeClaim
      tags:
      - PersistentVolumeClaim
      x-codegen-request-body-name: body
    get:
      operationId: readNamespacedPersistentVolumeClaim
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: Should this value be exported.  Export strips fields that a user
          can not specify.
        in: query
        name: export
        schema:
          type: boolean
      - description: Should the export be exact.  Exact export maintains cluster-specific
          fields like 'Namespace'.
        in: query
        name: exact
        schema:
          type: boolean
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the PersistentVolumeClaim
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.PersistentVolumeClaim'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.PersistentVolumeClaim'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.PersistentVolumeClaim'
          description: OK
      summary: read the specified PersistentVolumeClaim
      tags:
      - PersistentVolumeClaim
    patch:
      operationId: patchNamespacedPersistentVolumeClaim
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the PersistentVolumeClaim
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/v1.Patch'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/v1.Patch'
          application/strategic-merge-patch+json:
            schema:
              $ref: '#/components/schemas/v1.Patch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.PersistentVolumeClaim'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.PersistentVolumeClaim'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.PersistentVolumeClaim'
          description: OK
      summary: partially update the specified PersistentVolumeClaim
      tags:
      - PersistentVolumeClaim
      x-codegen-request-body-name: body
    put:
      operationId: replaceNamespacedPersistentVolumeClaim
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the PersistentVolumeClaim
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/v1.PersistentVolumeClaim'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.PersistentVolumeClaim'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.PersistentVolumeClaim'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.PersistentVolumeClaim'
          description: OK
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.PersistentVolumeClaim'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.PersistentVolumeClaim'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.PersistentVolumeClaim'
          description: Created
      summary: replace the specified PersistentVolumeClaim
      tags:
      - PersistentVolumeClaim
      x-codegen-request-body-name: body
  /api/v1/namespaces/{namespace}/pods:
    delete:
      operationId: deletecollectionNamespacedPod
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything.
        in: query
        name: labelSelector
        schema:
          type: string
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        in: query
        name: fieldSelector
        schema:
          type: string
      - description: "If true, partially initialized resources are included in the\
          \ response."
        in: query
        name: includeUninitialized
        schema:
          type: boolean
      - description: "Watch for changes to the described resources and return them\
          \ as a stream of add, update, and remove notifications. Specify resourceVersion."
        in: query
        name: watch
        schema:
          type: boolean
      - description: "When specified with a watch call, shows changes that occur after\
          \ that particular version of a resource. Defaults to changes from the beginning\
          \ of history. When specified for list: - if unset, then the result is returned\
          \ from remote storage based on quorum-read flag; - if it's 0, then we simply\
          \ return what we currently have in cache, no guarantee; - if set to non\
          \ zero, then the result is at least as fresh as given rv."
        in: query
        name: resourceVersion
        schema:
          type: string
      - description: "Timeout for the list/watch call. This limits the duration of\
          \ the call, regardless of any activity or inactivity."
        in: query
        name: timeoutSeconds
        schema:
          type: integer
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        in: query
        name: limit
        schema:
          type: integer
      - description: "The continue option should be set when retrieving more results\
          \ from the server. Since this value is server defined, clients may only\
          \ use the continue value from a previous query result with identical query\
          \ parameters (except for the value of continue) and the server may reject\
          \ a continue value it does not recognize. If the specified continue value\
          \ is no longer valid whether due to expiration (generally five to fifteen\
          \ minutes) or a configuration change on the server the server will respond\
          \ with a 410 ResourceExpired error indicating the client must restart their\
          \ list without the continue field. This field is not supported when watch\
          \ is true. Clients may start a watch from the last resourceVersion value\
          \ returned by the server and not miss any modifications."
        in: query
        name: continue
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Status'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Status'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Status'
          description: OK
      summary: delete collection of Pod
      tags:
      - Pod
    get:
      operationId: listNamespacedPod
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything.
        in: query
        name: labelSelector
        schema:
          type: string
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        in: query
        name: fieldSelector
        schema:
          type: string
      - description: "If true, partially initialized resources are included in the\
          \ response."
        in: query
        name: includeUninitialized
        schema:
          type: boolean
      - description: "Watch for changes to the described resources and return them\
          \ as a stream of add, update, and remove notifications. Specify resourceVersion."
        in: query
        name: watch
        schema:
          type: boolean
      - description: "When specified with a watch call, shows changes that occur after\
          \ that particular version of a resource. Defaults to changes from the beginning\
          \ of history. When specified for list: - if unset, then the result is returned\
          \ from remote storage based on quorum-read flag; - if it's 0, then we simply\
          \ return what we currently have in cache, no guarantee; - if set to non\
          \ zero, then the result is at least as fresh as given rv."
        in: query
        name: resourceVersion
        schema:
          type: string
      - description: "Timeout for the list/watch call. This limits the duration of\
          \ the call, regardless of any activity or inactivity."
        in: query
        name: timeoutSeconds
        schema:
          type: integer
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        in: query
        name: limit
        schema:
          type: integer
      - description: "The continue option should be set when retrieving more results\
          \ from the server. Since this value is server defined, clients may only\
          \ use the continue value from a previous query result with identical query\
          \ parameters (except for the value of continue) and the server may reject\
          \ a continue value it does not recognize. If the specified continue value\
          \ is no longer valid whether due to expiration (generally five to fifteen\
          \ minutes) or a configuration change on the server the server will respond\
          \ with a 410 ResourceExpired error indicating the client must restart their\
          \ list without the continue field. This field is not supported when watch\
          \ is true. Clients may start a watch from the last resourceVersion value\
          \ returned by the server and not miss any modifications."
        in: query
        name: continue
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.PodList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.PodList'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.PodList'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/v1.PodList'
            application/vnd.kubernetes.protobuf;stream=watch:
              schema:
                $ref: '#/components/schemas/v1.PodList'
          description: OK
      summary: list or watch objects of kind Pod
      tags:
      - Pod
    post:
      operationId: createNamespacedPod
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/v1.Pod'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Pod'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Pod'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Pod'
          description: OK
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Pod'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Pod'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Pod'
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Pod'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Pod'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Pod'
          description: Accepted
      summary: create a Pod
      tags:
      - Pod
      x-codegen-request-body-name: body
  /api/v1/namespaces/{namespace}/pods/{name}:
    delete:
      operationId: deleteNamespacedPod
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: "The duration in seconds before the object should be deleted.\
          \ Value must be non-negative integer. The value zero indicates delete immediately.\
          \ If this value is nil, the default grace period for the specified type\
          \ will be used. Defaults to a per object value if not specified. zero means\
          \ delete immediately."
        in: query
        name: gracePeriodSeconds
        schema:
          type: integer
      - description: "Deprecated: please use the PropagationPolicy, this field will\
          \ be deprecated in 1.7. Should the dependent objects be orphaned. If true/false,\
          \ the \"orphan\" finalizer will be added to/removed from the object's finalizers\
          \ list. Either this field or PropagationPolicy may be set, but not both."
        in: query
        name: orphanDependents
        schema:
          type: boolean
      - description: "Whether and how garbage collection will be performed. Either\
          \ this field or OrphanDependents may be set, but not both. The default policy\
          \ is decided by the existing finalizer set in the metadata.finalizers and\
          \ the resource-specific default policy. Acceptable values are: 'Orphan'\
          \ - orphan the dependents; 'Background' - allow the garbage collector to\
          \ delete the dependents in the background; 'Foreground' - a cascading policy\
          \ that deletes all dependents in the foreground."
        in: query
        name: propagationPolicy
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the Pod
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/v1.DeleteOptions'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Status'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Status'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Status'
          description: OK
      summary: delete a Pod
      tags:
      - Pod
      x-codegen-request-body-name: body
    get:
      operationId: readNamespacedPod
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: Should this value be exported.  Export strips fields that a user
          can not specify.
        in: query
        name: export
        schema:
          type: boolean
      - description: Should the export be exact.  Exact export maintains cluster-specific
          fields like 'Namespace'.
        in: query
        name: exact
        schema:
          type: boolean
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the Pod
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Pod'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Pod'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Pod'
          description: OK
      summary: read the specified Pod
      tags:
      - Pod
    patch:
      operationId: patchNamespacedPod
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the Pod
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/v1.Patch'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/v1.Patch'
          application/strategic-merge-patch+json:
            schema:
              $ref: '#/components/schemas/v1.Patch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Pod'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Pod'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Pod'
          description: OK
      summary: partially update the specified Pod
      tags:
      - Pod
      x-codegen-request-body-name: body
    put:
      operationId: replaceNamespacedPod
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the Pod
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/v1.Pod'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Pod'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Pod'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Pod'
          description: OK
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Pod'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Pod'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Pod'
          description: Created
      summary: replace the specified Pod
      tags:
      - Pod
      x-codegen-request-body-name: body
  /api/v1/namespaces/{namespace}/pods/{name}/exec:
    get:
      operationId: connectGetNamespacedPodExec
      parameters:
      - description: Redirect the standard input stream of the pod for this call.
          Defaults to false.
        in: query
        name: stdin
        schema:
          type: boolean
      - description: Redirect the standard output stream of the pod for this call.
          Defaults to true.
        in: query
        name: stdout
        schema:
          type: boolean
      - description: Redirect the standard error stream of the pod for this call.
          Defaults to true.
        in: query
        name: stderr
        schema:
          type: boolean
      - description: TTY if true indicates that a tty will be allocated for the exec
          call. Defaults to false.
        in: query
        name: tty
        schema:
          type: boolean
      - description: Container in which to execute the command. Defaults to only container
          if there is only one container in the pod.
        in: query
        name: container
        schema:
          type: string
      - description: Command is the remote command to execute. argv array. Not executed
          within a shell.
        in: query
        name: command
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the Pod
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: string
          description: No response was specified
      summary: connect GET requests to exec of Pod
      tags:
      - Pod
    post:
      operationId: connectPostNamespacedPodExec
      parameters:
      - description: Redirect the standard input stream of the pod for this call.
          Defaults to false.
        in: query
        name: stdin
        schema:
          type: boolean
      - description: Redirect the standard output stream of the pod for this call.
          Defaults to true.
        in: query
        name: stdout
        schema:
          type: boolean
      - description: Redirect the standard error stream of the pod for this call.
          Defaults to true.
        in: query
        name: stderr
        schema:
          type: boolean
      - description: TTY if true indicates that a tty will be allocated for the exec
          call. Defaults to false.
        in: query
        name: tty
        schema:
          type: boolean
      - description: Container in which to execute the command. Defaults to only container
          if there is only one container in the pod.
        in: query
        name: container
        schema:
          type: string
      - description: Command is the remote command to execute. argv array. Not executed
          within a shell.
        in: query
        name: command
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the Pod
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            '*/*':
              schema:
                type: string
          description: No response was specified
      summary: connect POST requests to exec of Pod
      tags:
      - Pod
  /api/v1/namespaces/{namespace}/pods/{name}/log:
    get:
      operationId: readNamespacedPodLog
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: The container for which to stream logs. Defaults to only container
          if there is one container in the pod.
        in: query
        name: container
        schema:
          type: string
      - description: Follow the log stream of the pod. Defaults to false.
        in: query
        name: follow
        schema:
          type: boolean
      - description: Return previous terminated container logs. Defaults to false.
        in: query
        name: previous
        schema:
          type: boolean
      - description: "A relative time in seconds before the current time from which\
          \ to show logs. If this value precedes the time a pod was started, only\
          \ logs since the pod start will be returned. If this value is in the future,\
          \ no logs will be returned. Only one of sinceSeconds or sinceTime may be\
          \ specified."
        in: query
        name: sinceSeconds
        schema:
          type: integer
      - description: "If true, add an RFC3339 or RFC3339Nano timestamp at the beginning\
          \ of every line of log output. Defaults to false."
        in: query
        name: timestamps
        schema:
          type: boolean
      - description: "If set, the number of lines from the end of the logs to show.\
          \ If not specified, logs are shown from the creation of the container or\
          \ sinceSeconds or sinceTime"
        in: query
        name: tailLines
        schema:
          type: integer
      - description: "If set, the number of bytes to read from the server before terminating\
          \ the log output. This may not display a complete final line of logging,\
          \ and may return slightly more or slightly less than the specified limit."
        in: query
        name: limitBytes
        schema:
          type: integer
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the Pod
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            text/plain:
              schema:
                type: string
            application/json:
              schema:
                type: string
            application/yaml:
              schema:
                type: string
            application/vnd.kubernetes.protobuf:
              schema:
                type: string
          description: OK
      summary: read log of the specified Pod
      tags:
      - Pod
  /api/v1/namespaces/{namespace}/resourcequotas:
    get:
      operationId: listNamespacedResourceQuota
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything.
        in: query
        name: labelSelector
        schema:
          type: string
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        in: query
        name: fieldSelector
        schema:
          type: string
      - description: "If true, partially initialized resources are included in the\
          \ response."
        in: query
        name: includeUninitialized
        schema:
          type: boolean
      - description: "Watch for changes to the described resources and return them\
          \ as a stream of add, update, and remove notifications. Specify resourceVersion."
        in: query
        name: watch
        schema:
          type: boolean
      - description: "When specified with a watch call, shows changes that occur after\
          \ that particular version of a resource. Defaults to changes from the beginning\
          \ of history. When specified for list: - if unset, then the result is returned\
          \ from remote storage based on quorum-read flag; - if it's 0, then we simply\
          \ return what we currently have in cache, no guarantee; - if set to non\
          \ zero, then the result is at least as fresh as given rv."
        in: query
        name: resourceVersion
        schema:
          type: string
      - description: "Timeout for the list/watch call. This limits the duration of\
          \ the call, regardless of any activity or inactivity."
        in: query
        name: timeoutSeconds
        schema:
          type: integer
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        in: query
        name: limit
        schema:
          type: integer
      - description: "The continue option should be set when retrieving more results\
          \ from the server. Since this value is server defined, clients may only\
          \ use the continue value from a previous query result with identical query\
          \ parameters (except for the value of continue) and the server may reject\
          \ a continue value it does not recognize. If the specified continue value\
          \ is no longer valid whether due to expiration (generally five to fifteen\
          \ minutes) or a configuration change on the server the server will respond\
          \ with a 410 ResourceExpired error indicating the client must restart their\
          \ list without the continue field. This field is not supported when watch\
          \ is true. Clients may start a watch from the last resourceVersion value\
          \ returned by the server and not miss any modifications."
        in: query
        name: continue
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.ResourceQuotaList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.ResourceQuotaList'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.ResourceQuotaList'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/v1.ResourceQuotaList'
            application/vnd.kubernetes.protobuf;stream=watch:
              schema:
                $ref: '#/components/schemas/v1.ResourceQuotaList'
          description: OK
      summary: list or watch objects of kind ResourceQuota
      tags:
      - ResourceQuota
  /api/v1/namespaces/{namespace}/secrets:
    delete:
      operationId: deletecollectionNamespacedSecret
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything.
        in: query
        name: labelSelector
        schema:
          type: string
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        in: query
        name: fieldSelector
        schema:
          type: string
      - description: "If true, partially initialized resources are included in the\
          \ response."
        in: query
        name: includeUninitialized
        schema:
          type: boolean
      - description: "Watch for changes to the described resources and return them\
          \ as a stream of add, update, and remove notifications. Specify resourceVersion."
        in: query
        name: watch
        schema:
          type: boolean
      - description: "When specified with a watch call, shows changes that occur after\
          \ that particular version of a resource. Defaults to changes from the beginning\
          \ of history. When specified for list: - if unset, then the result is returned\
          \ from remote storage based on quorum-read flag; - if it's 0, then we simply\
          \ return what we currently have in cache, no guarantee; - if set to non\
          \ zero, then the result is at least as fresh as given rv."
        in: query
        name: resourceVersion
        schema:
          type: string
      - description: "Timeout for the list/watch call. This limits the duration of\
          \ the call, regardless of any activity or inactivity."
        in: query
        name: timeoutSeconds
        schema:
          type: integer
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        in: query
        name: limit
        schema:
          type: integer
      - description: "The continue option should be set when retrieving more results\
          \ from the server. Since this value is server defined, clients may only\
          \ use the continue value from a previous query result with identical query\
          \ parameters (except for the value of continue) and the server may reject\
          \ a continue value it does not recognize. If the specified continue value\
          \ is no longer valid whether due to expiration (generally five to fifteen\
          \ minutes) or a configuration change on the server the server will respond\
          \ with a 410 ResourceExpired error indicating the client must restart their\
          \ list without the continue field. This field is not supported when watch\
          \ is true. Clients may start a watch from the last resourceVersion value\
          \ returned by the server and not miss any modifications."
        in: query
        name: continue
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Status'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Status'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Status'
          description: OK
      summary: delete collection of Secret
      tags:
      - Secret
    get:
      operationId: listNamespacedSecret
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything.
        in: query
        name: labelSelector
        schema:
          type: string
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        in: query
        name: fieldSelector
        schema:
          type: string
      - description: "If true, partially initialized resources are included in the\
          \ response."
        in: query
        name: includeUninitialized
        schema:
          type: boolean
      - description: "Watch for changes to the described resources and return them\
          \ as a stream of add, update, and remove notifications. Specify resourceVersion."
        in: query
        name: watch
        schema:
          type: boolean
      - description: "When specified with a watch call, shows changes that occur after\
          \ that particular version of a resource. Defaults to changes from the beginning\
          \ of history. When specified for list: - if unset, then the result is returned\
          \ from remote storage based on quorum-read flag; - if it's 0, then we simply\
          \ return what we currently have in cache, no guarantee; - if set to non\
          \ zero, then the result is at least as fresh as given rv."
        in: query
        name: resourceVersion
        schema:
          type: string
      - description: "Timeout for the list/watch call. This limits the duration of\
          \ the call, regardless of any activity or inactivity."
        in: query
        name: timeoutSeconds
        schema:
          type: integer
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        in: query
        name: limit
        schema:
          type: integer
      - description: "The continue option should be set when retrieving more results\
          \ from the server. Since this value is server defined, clients may only\
          \ use the continue value from a previous query result with identical query\
          \ parameters (except for the value of continue) and the server may reject\
          \ a continue value it does not recognize. If the specified continue value\
          \ is no longer valid whether due to expiration (generally five to fifteen\
          \ minutes) or a configuration change on the server the server will respond\
          \ with a 410 ResourceExpired error indicating the client must restart their\
          \ list without the continue field. This field is not supported when watch\
          \ is true. Clients may start a watch from the last resourceVersion value\
          \ returned by the server and not miss any modifications."
        in: query
        name: continue
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.SecretList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.SecretList'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.SecretList'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/v1.SecretList'
            application/vnd.kubernetes.protobuf;stream=watch:
              schema:
                $ref: '#/components/schemas/v1.SecretList'
          description: OK
      summary: list or watch objects of kind Secret
      tags:
      - Secret
    post:
      operationId: createNamespacedSecret
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/v1.Secret'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Secret'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Secret'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Secret'
          description: OK
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Secret'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Secret'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Secret'
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Secret'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Secret'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Secret'
          description: Accepted
      summary: create a Secret
      tags:
      - Secret
      x-codegen-request-body-name: body
  /api/v1/namespaces/{namespace}/secrets/{name}:
    delete:
      operationId: deleteNamespacedSecret
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: "The duration in seconds before the object should be deleted.\
          \ Value must be non-negative integer. The value zero indicates delete immediately.\
          \ If this value is nil, the default grace period for the specified type\
          \ will be used. Defaults to a per object value if not specified. zero means\
          \ delete immediately."
        in: query
        name: gracePeriodSeconds
        schema:
          type: integer
      - description: "Deprecated: please use the PropagationPolicy, this field will\
          \ be deprecated in 1.7. Should the dependent objects be orphaned. If true/false,\
          \ the \"orphan\" finalizer will be added to/removed from the object's finalizers\
          \ list. Either this field or PropagationPolicy may be set, but not both."
        in: query
        name: orphanDependents
        schema:
          type: boolean
      - description: "Whether and how garbage collection will be performed. Either\
          \ this field or OrphanDependents may be set, but not both. The default policy\
          \ is decided by the existing finalizer set in the metadata.finalizers and\
          \ the resource-specific default policy. Acceptable values are: 'Orphan'\
          \ - orphan the dependents; 'Background' - allow the garbage collector to\
          \ delete the dependents in the background; 'Foreground' - a cascading policy\
          \ that deletes all dependents in the foreground."
        in: query
        name: propagationPolicy
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the Secret
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/v1.DeleteOptions'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Status'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Status'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Status'
          description: OK
      summary: delete a Secret
      tags:
      - Secret
      x-codegen-request-body-name: body
    get:
      operationId: readNamespacedSecret
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: Should this value be exported.  Export strips fields that a user
          can not specify.
        in: query
        name: export
        schema:
          type: boolean
      - description: Should the export be exact.  Exact export maintains cluster-specific
          fields like 'Namespace'.
        in: query
        name: exact
        schema:
          type: boolean
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the Secret
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Secret'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Secret'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Secret'
          description: OK
      summary: read the specified Secret
      tags:
      - Secret
    patch:
      operationId: patchNamespacedSecret
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the Secret
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/v1.Patch'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/v1.Patch'
          application/strategic-merge-patch+json:
            schema:
              $ref: '#/components/schemas/v1.Patch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Secret'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Secret'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Secret'
          description: OK
      summary: partially update the specified Secret
      tags:
      - Secret
      x-codegen-request-body-name: body
    put:
      operationId: replaceNamespacedSecret
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the Secret
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/v1.Secret'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Secret'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Secret'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Secret'
          description: OK
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Secret'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Secret'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Secret'
          description: Created
      summary: replace the specified Secret
      tags:
      - Secret
      x-codegen-request-body-name: body
  /api/v1/namespaces/{namespace}/services:
    get:
      operationId: listNamespacedService
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything.
        in: query
        name: labelSelector
        schema:
          type: string
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        in: query
        name: fieldSelector
        schema:
          type: string
      - description: "If true, partially initialized resources are included in the\
          \ response."
        in: query
        name: includeUninitialized
        schema:
          type: boolean
      - description: "Watch for changes to the described resources and return them\
          \ as a stream of add, update, and remove notifications. Specify resourceVersion."
        in: query
        name: watch
        schema:
          type: boolean
      - description: "When specified with a watch call, shows changes that occur after\
          \ that particular version of a resource. Defaults to changes from the beginning\
          \ of history. When specified for list: - if unset, then the result is returned\
          \ from remote storage based on quorum-read flag; - if it's 0, then we simply\
          \ return what we currently have in cache, no guarantee; - if set to non\
          \ zero, then the result is at least as fresh as given rv."
        in: query
        name: resourceVersion
        schema:
          type: string
      - description: "Timeout for the list/watch call. This limits the duration of\
          \ the call, regardless of any activity or inactivity."
        in: query
        name: timeoutSeconds
        schema:
          type: integer
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        in: query
        name: limit
        schema:
          type: integer
      - description: "The continue option should be set when retrieving more results\
          \ from the server. Since this value is server defined, clients may only\
          \ use the continue value from a previous query result with identical query\
          \ parameters (except for the value of continue) and the server may reject\
          \ a continue value it does not recognize. If the specified continue value\
          \ is no longer valid whether due to expiration (generally five to fifteen\
          \ minutes) or a configuration change on the server the server will respond\
          \ with a 410 ResourceExpired error indicating the client must restart their\
          \ list without the continue field. This field is not supported when watch\
          \ is true. Clients may start a watch from the last resourceVersion value\
          \ returned by the server and not miss any modifications."
        in: query
        name: continue
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.ServiceList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.ServiceList'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.ServiceList'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/v1.ServiceList'
            application/vnd.kubernetes.protobuf;stream=watch:
              schema:
                $ref: '#/components/schemas/v1.ServiceList'
          description: OK
      summary: list or watch objects of kind Service
      tags:
      - Service
    post:
      operationId: createNamespacedService
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/v1.Service'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Service'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Service'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Service'
          description: OK
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Service'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Service'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Service'
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Service'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Service'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Service'
          description: Accepted
      summary: create a Service
      tags:
      - Service
      x-codegen-request-body-name: body
  /api/v1/namespaces/{namespace}/services/{name}:
    delete:
      operationId: deleteNamespacedService
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: "The duration in seconds before the object should be deleted.\
          \ Value must be non-negative integer. The value zero indicates delete immediately.\
          \ If this value is nil, the default grace period for the specified type\
          \ will be used. Defaults to a per object value if not specified. zero means\
          \ delete immediately."
        in: query
        name: gracePeriodSeconds
        schema:
          type: integer
      - description: "Deprecated: please use the PropagationPolicy, this field will\
          \ be deprecated in 1.7. Should the dependent objects be orphaned. If true/false,\
          \ the \"orphan\" finalizer will be added to/removed from the object's finalizers\
          \ list. Either this field or PropagationPolicy may be set, but not both."
        in: query
        name: orphanDependents
        schema:
          type: boolean
      - description: "Whether and how garbage collection will be performed. Either\
          \ this field or OrphanDependents may be set, but not both. The default policy\
          \ is decided by the existing finalizer set in the metadata.finalizers and\
          \ the resource-specific default policy. Acceptable values are: 'Orphan'\
          \ - orphan the dependents; 'Background' - allow the garbage collector to\
          \ delete the dependents in the background; 'Foreground' - a cascading policy\
          \ that deletes all dependents in the foreground."
        in: query
        name: propagationPolicy
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the Service
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/v1.DeleteOptions'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Status'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Status'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Status'
          description: OK
      summary: delete a Service
      tags:
      - Service
      x-codegen-request-body-name: body
    get:
      operationId: readNamespacedService
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: Should this value be exported.  Export strips fields that a user
          can not specify.
        in: query
        name: export
        schema:
          type: boolean
      - description: Should the export be exact.  Exact export maintains cluster-specific
          fields like 'Namespace'.
        in: query
        name: exact
        schema:
          type: boolean
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the Service
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Service'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Service'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Service'
          description: OK
      summary: read the specified Service
      tags:
      - Service
    patch:
      operationId: patchNamespacedService
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the Service
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/v1.Patch'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/v1.Patch'
          application/strategic-merge-patch+json:
            schema:
              $ref: '#/components/schemas/v1.Patch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Service'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Service'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Service'
          description: OK
      summary: partially update the specified Service
      tags:
      - Service
      x-codegen-request-body-name: body
    put:
      operationId: replaceNamespacedService
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the Service
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/v1.Service'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Service'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Service'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Service'
          description: OK
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Service'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Service'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Service'
          description: Created
      summary: replace the specified Service
      tags:
      - Service
      x-codegen-request-body-name: body
  /apis/apps.openshift.io/v1/namespaces/{namespace}/deploymentconfigs:
    delete:
      operationId: deletecollectionNamespacedDeploymentConfig
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything.
        in: query
        name: labelSelector
        schema:
          type: string
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        in: query
        name: fieldSelector
        schema:
          type: string
      - description: "If true, partially initialized resources are included in the\
          \ response."
        in: query
        name: includeUninitialized
        schema:
          type: boolean
      - description: "Watch for changes to the described resources and return them\
          \ as a stream of add, update, and remove notifications. Specify resourceVersion."
        in: query
        name: watch
        schema:
          type: boolean
      - description: "When specified with a watch call, shows changes that occur after\
          \ that particular version of a resource. Defaults to changes from the beginning\
          \ of history. When specified for list: - if unset, then the result is returned\
          \ from remote storage based on quorum-read flag; - if it's 0, then we simply\
          \ return what we currently have in cache, no guarantee; - if set to non\
          \ zero, then the result is at least as fresh as given rv."
        in: query
        name: resourceVersion
        schema:
          type: string
      - description: "Timeout for the list/watch call. This limits the duration of\
          \ the call, regardless of any activity or inactivity."
        in: query
        name: timeoutSeconds
        schema:
          type: integer
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        in: query
        name: limit
        schema:
          type: integer
      - description: "The continue option should be set when retrieving more results\
          \ from the server. Since this value is server defined, clients may only\
          \ use the continue value from a previous query result with identical query\
          \ parameters (except for the value of continue) and the server may reject\
          \ a continue value it does not recognize. If the specified continue value\
          \ is no longer valid whether due to expiration (generally five to fifteen\
          \ minutes) or a configuration change on the server the server will respond\
          \ with a 410 ResourceExpired error indicating the client must restart their\
          \ list without the continue field. This field is not supported when watch\
          \ is true. Clients may start a watch from the last resourceVersion value\
          \ returned by the server and not miss any modifications."
        in: query
        name: continue
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Status'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Status'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Status'
          description: OK
      summary: delete collection of DeploymentConfig
      tags:
      - DeploymentConfig
    get:
      operationId: listNamespacedDeploymentConfig
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything.
        in: query
        name: labelSelector
        schema:
          type: string
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        in: query
        name: fieldSelector
        schema:
          type: string
      - description: "If true, partially initialized resources are included in the\
          \ response."
        in: query
        name: includeUninitialized
        schema:
          type: boolean
      - description: "Watch for changes to the described resources and return them\
          \ as a stream of add, update, and remove notifications. Specify resourceVersion."
        in: query
        name: watch
        schema:
          type: boolean
      - description: "When specified with a watch call, shows changes that occur after\
          \ that particular version of a resource. Defaults to changes from the beginning\
          \ of history. When specified for list: - if unset, then the result is returned\
          \ from remote storage based on quorum-read flag; - if it's 0, then we simply\
          \ return what we currently have in cache, no guarantee; - if set to non\
          \ zero, then the result is at least as fresh as given rv."
        in: query
        name: resourceVersion
        schema:
          type: string
      - description: "Timeout for the list/watch call. This limits the duration of\
          \ the call, regardless of any activity or inactivity."
        in: query
        name: timeoutSeconds
        schema:
          type: integer
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        in: query
        name: limit
        schema:
          type: integer
      - description: "The continue option should be set when retrieving more results\
          \ from the server. Since this value is server defined, clients may only\
          \ use the continue value from a previous query result with identical query\
          \ parameters (except for the value of continue) and the server may reject\
          \ a continue value it does not recognize. If the specified continue value\
          \ is no longer valid whether due to expiration (generally five to fifteen\
          \ minutes) or a configuration change on the server the server will respond\
          \ with a 410 ResourceExpired error indicating the client must restart their\
          \ list without the continue field. This field is not supported when watch\
          \ is true. Clients may start a watch from the last resourceVersion value\
          \ returned by the server and not miss any modifications."
        in: query
        name: continue
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.DeploymentConfigList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.DeploymentConfigList'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.DeploymentConfigList'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/v1.DeploymentConfigList'
            application/vnd.kubernetes.protobuf;stream=watch:
              schema:
                $ref: '#/components/schemas/v1.DeploymentConfigList'
          description: OK
      summary: list or watch objects of kind DeploymentConfig
      tags:
      - DeploymentConfig
    post:
      operationId: createNamespacedDeploymentConfig
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/v1.DeploymentConfig'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.DeploymentConfig'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.DeploymentConfig'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.DeploymentConfig'
          description: OK
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.DeploymentConfig'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.DeploymentConfig'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.DeploymentConfig'
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.DeploymentConfig'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.DeploymentConfig'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.DeploymentConfig'
          description: Accepted
      summary: create a DeploymentConfig
      tags:
      - DeploymentConfig
      x-codegen-request-body-name: body
  /apis/apps.openshift.io/v1/namespaces/{namespace}/deploymentconfigs/{name}:
    delete:
      operationId: deleteNamespacedDeploymentConfig
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: "The duration in seconds before the object should be deleted.\
          \ Value must be non-negative integer. The value zero indicates delete immediately.\
          \ If this value is nil, the default grace period for the specified type\
          \ will be used. Defaults to a per object value if not specified. zero means\
          \ delete immediately."
        in: query
        name: gracePeriodSeconds
        schema:
          type: integer
      - description: "Deprecated: please use the PropagationPolicy, this field will\
          \ be deprecated in 1.7. Should the dependent objects be orphaned. If true/false,\
          \ the \"orphan\" finalizer will be added to/removed from the object's finalizers\
          \ list. Either this field or PropagationPolicy may be set, but not both."
        in: query
        name: orphanDependents
        schema:
          type: boolean
      - description: "Whether and how garbage collection will be performed. Either\
          \ this field or OrphanDependents may be set, but not both. The default policy\
          \ is decided by the existing finalizer set in the metadata.finalizers and\
          \ the resource-specific default policy. Acceptable values are: 'Orphan'\
          \ - orphan the dependents; 'Background' - allow the garbage collector to\
          \ delete the dependents in the background; 'Foreground' - a cascading policy\
          \ that deletes all dependents in the foreground."
        in: query
        name: propagationPolicy
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the DeploymentConfig
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/v1.DeleteOptions'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Status'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Status'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Status'
          description: OK
      summary: delete a DeploymentConfig
      tags:
      - DeploymentConfig
      x-codegen-request-body-name: body
    get:
      operationId: readNamespacedDeploymentConfig
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: Should this value be exported.  Export strips fields that a user
          can not specify.
        in: query
        name: export
        schema:
          type: boolean
      - description: Should the export be exact.  Exact export maintains cluster-specific
          fields like 'Namespace'.
        in: query
        name: exact
        schema:
          type: boolean
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the DeploymentConfig
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.DeploymentConfig'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.DeploymentConfig'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.DeploymentConfig'
          description: OK
      summary: read the specified DeploymentConfig
      tags:
      - DeploymentConfig
    patch:
      operationId: patchNamespacedDeploymentConfig
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the DeploymentConfig
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/v1.Patch'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/v1.Patch'
          application/strategic-merge-patch+json:
            schema:
              $ref: '#/components/schemas/v1.Patch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.DeploymentConfig'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.DeploymentConfig'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.DeploymentConfig'
          description: OK
      summary: partially update the specified DeploymentConfig
      tags:
      - DeploymentConfig
      x-codegen-request-body-name: body
    put:
      operationId: replaceNamespacedDeploymentConfig
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the DeploymentConfig
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/v1.DeploymentConfig'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.DeploymentConfig'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.DeploymentConfig'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.DeploymentConfig'
          description: OK
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.DeploymentConfig'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.DeploymentConfig'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.DeploymentConfig'
          description: Created
      summary: replace the specified DeploymentConfig
      tags:
      - DeploymentConfig
      x-codegen-request-body-name: body
  /apis/apps.openshift.io/v1/namespaces/{namespace}/deploymentconfigs/{name}/scale:
    get:
      operationId: readNamespacedDeploymentConfigScale
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the Scale
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1beta1.Scale'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1beta1.Scale'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1beta1.Scale'
          description: OK
      summary: read scale of the specified DeploymentConfig
      tags:
      - DeploymentConfig
    patch:
      operationId: patchNamespacedDeploymentConfigScale
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the Scale
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/v1.Patch'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/v1.Patch'
          application/strategic-merge-patch+json:
            schema:
              $ref: '#/components/schemas/v1.Patch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1beta1.Scale'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1beta1.Scale'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1beta1.Scale'
          description: OK
      summary: partially update scale of the specified DeploymentConfig
      tags:
      - DeploymentConfig
      x-codegen-request-body-name: body
    put:
      operationId: replaceNamespacedDeploymentConfigScale
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the Scale
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/v1beta1.Scale'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1beta1.Scale'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1beta1.Scale'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1beta1.Scale'
          description: OK
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1beta1.Scale'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1beta1.Scale'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1beta1.Scale'
          description: Created
      summary: replace scale of the specified DeploymentConfig
      tags:
      - DeploymentConfig
      x-codegen-request-body-name: body
  /apis/apps/v1/namespaces/{namespace}/deployments:
    delete:
      operationId: deletecollectionNamespacedDeployment
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything.
        in: query
        name: labelSelector
        schema:
          type: string
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        in: query
        name: fieldSelector
        schema:
          type: string
      - description: "If true, partially initialized resources are included in the\
          \ response."
        in: query
        name: includeUninitialized
        schema:
          type: boolean
      - description: "Watch for changes to the described resources and return them\
          \ as a stream of add, update, and remove notifications. Specify resourceVersion."
        in: query
        name: watch
        schema:
          type: boolean
      - description: "When specified with a watch call, shows changes that occur after\
          \ that particular version of a resource. Defaults to changes from the beginning\
          \ of history. When specified for list: - if unset, then the result is returned\
          \ from remote storage based on quorum-read flag; - if it's 0, then we simply\
          \ return what we currently have in cache, no guarantee; - if set to non\
          \ zero, then the result is at least as fresh as given rv."
        in: query
        name: resourceVersion
        schema:
          type: string
      - description: "Timeout for the list/watch call. This limits the duration of\
          \ the call, regardless of any activity or inactivity."
        in: query
        name: timeoutSeconds
        schema:
          type: integer
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        in: query
        name: limit
        schema:
          type: integer
      - description: "The continue option should be set when retrieving more results\
          \ from the server. Since this value is server defined, clients may only\
          \ use the continue value from a previous query result with identical query\
          \ parameters (except for the value of continue) and the server may reject\
          \ a continue value it does not recognize. If the specified continue value\
          \ is no longer valid whether due to expiration (generally five to fifteen\
          \ minutes) or a configuration change on the server the server will respond\
          \ with a 410 ResourceExpired error indicating the client must restart their\
          \ list without the continue field. This field is not supported when watch\
          \ is true. Clients may start a watch from the last resourceVersion value\
          \ returned by the server and not miss any modifications."
        in: query
        name: continue
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Status'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Status'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Status'
          description: OK
      summary: delete collection of Deployment
      tags:
      - Deployment
    get:
      operationId: listNamespacedDeployment
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything.
        in: query
        name: labelSelector
        schema:
          type: string
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        in: query
        name: fieldSelector
        schema:
          type: string
      - description: "If true, partially initialized resources are included in the\
          \ response."
        in: query
        name: includeUninitialized
        schema:
          type: boolean
      - description: "Watch for changes to the described resources and return them\
          \ as a stream of add, update, and remove notifications. Specify resourceVersion."
        in: query
        name: watch
        schema:
          type: boolean
      - description: "When specified with a watch call, shows changes that occur after\
          \ that particular version of a resource. Defaults to changes from the beginning\
          \ of history. When specified for list: - if unset, then the result is returned\
          \ from remote storage based on quorum-read flag; - if it's 0, then we simply\
          \ return what we currently have in cache, no guarantee; - if set to non\
          \ zero, then the result is at least as fresh as given rv."
        in: query
        name: resourceVersion
        schema:
          type: string
      - description: "Timeout for the list/watch call. This limits the duration of\
          \ the call, regardless of any activity or inactivity."
        in: query
        name: timeoutSeconds
        schema:
          type: integer
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        in: query
        name: limit
        schema:
          type: integer
      - description: "The continue option should be set when retrieving more results\
          \ from the server. Since this value is server defined, clients may only\
          \ use the continue value from a previous query result with identical query\
          \ parameters (except for the value of continue) and the server may reject\
          \ a continue value it does not recognize. If the specified continue value\
          \ is no longer valid whether due to expiration (generally five to fifteen\
          \ minutes) or a configuration change on the server the server will respond\
          \ with a 410 ResourceExpired error indicating the client must restart their\
          \ list without the continue field. This field is not supported when watch\
          \ is true. Clients may start a watch from the last resourceVersion value\
          \ returned by the server and not miss any modifications."
        in: query
        name: continue
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.DeploymentList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.DeploymentList'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.DeploymentList'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/v1.DeploymentList'
            application/vnd.kubernetes.protobuf;stream=watch:
              schema:
                $ref: '#/components/schemas/v1.DeploymentList'
          description: OK
      summary: list or watch objects of kind Deployment
      tags:
      - Deployment
    post:
      operationId: createNamespacedDeployment
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/v1.Deployment'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Deployment'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Deployment'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Deployment'
          description: OK
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Deployment'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Deployment'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Deployment'
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Deployment'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Deployment'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Deployment'
          description: Accepted
      summary: create a Deployment
      tags:
      - Deployment
      x-codegen-request-body-name: body
  /apis/apps/v1/namespaces/{namespace}/deployments/{name}:
    delete:
      operationId: deleteNamespacedDeployment
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: "The duration in seconds before the object should be deleted.\
          \ Value must be non-negative integer. The value zero indicates delete immediately.\
          \ If this value is nil, the default grace period for the specified type\
          \ will be used. Defaults to a per object value if not specified. zero means\
          \ delete immediately."
        in: query
        name: gracePeriodSeconds
        schema:
          type: integer
      - description: "Deprecated: please use the PropagationPolicy, this field will\
          \ be deprecated in 1.7. Should the dependent objects be orphaned. If true/false,\
          \ the \"orphan\" finalizer will be added to/removed from the object's finalizers\
          \ list. Either this field or PropagationPolicy may be set, but not both."
        in: query
        name: orphanDependents
        schema:
          type: boolean
      - description: "Whether and how garbage collection will be performed. Either\
          \ this field or OrphanDependents may be set, but not both. The default policy\
          \ is decided by the existing finalizer set in the metadata.finalizers and\
          \ the resource-specific default policy. Acceptable values are: 'Orphan'\
          \ - orphan the dependents; 'Background' - allow the garbage collector to\
          \ delete the dependents in the background; 'Foreground' - a cascading policy\
          \ that deletes all dependents in the foreground."
        in: query
        name: propagationPolicy
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the Deployment
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/v1.DeleteOptions'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Status'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Status'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Status'
          description: OK
      summary: delete a Deployment
      tags:
      - Deployment
      x-codegen-request-body-name: body
    get:
      operationId: readNamespacedDeployment
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: Should this value be exported.  Export strips fields that a user
          can not specify.
        in: query
        name: export
        schema:
          type: boolean
      - description: Should the export be exact.  Exact export maintains cluster-specific
          fields like 'Namespace'.
        in: query
        name: exact
        schema:
          type: boolean
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the Deployment
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Deployment'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Deployment'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Deployment'
          description: OK
      summary: read the specified Deployment
      tags:
      - Deployment
    patch:
      operationId: patchNamespacedDeployment
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the Deployment
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/v1.Patch'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/v1.Patch'
          application/strategic-merge-patch+json:
            schema:
              $ref: '#/components/schemas/v1.Patch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Deployment'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Deployment'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Deployment'
          description: OK
      summary: partially update the specified Deployment
      tags:
      - Deployment
      x-codegen-request-body-name: body
    put:
      operationId: replaceNamespacedDeployment
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the Deployment
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/v1.Deployment'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Deployment'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Deployment'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Deployment'
          description: OK
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Deployment'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Deployment'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Deployment'
          description: Created
      summary: replace the specified Deployment
      tags:
      - Deployment
      x-codegen-request-body-name: body
  /apis/apps/v1/namespaces/{namespace}/deployments/{name}/scale:
    get:
      operationId: readNamespacedDeploymentScale
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the Scale
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Scale'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Scale'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Scale'
          description: OK
      summary: read scale of the specified Deployment
      tags:
      - Deployment
    patch:
      operationId: patchNamespacedDeploymentScale
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the Scale
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/v1.Patch'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/v1.Patch'
          application/strategic-merge-patch+json:
            schema:
              $ref: '#/components/schemas/v1.Patch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Scale'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Scale'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Scale'
          description: OK
      summary: partially update scale of the specified Deployment
      tags:
      - Deployment
      x-codegen-request-body-name: body
    put:
      operationId: replaceNamespacedDeploymentScale
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the Scale
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/v1.Scale'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Scale'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Scale'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Scale'
          description: OK
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Scale'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Scale'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Scale'
          description: Created
      summary: replace scale of the specified Deployment
      tags:
      - Deployment
      x-codegen-request-body-name: body
  /apis/apps/v1/namespaces/{namespace}/deployments/{name}/status:
    get:
      operationId: readNamespacedDeploymentStatus
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the Deployment
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Deployment'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Deployment'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Deployment'
          description: OK
      summary: read status of the specified Deployment
      tags:
      - Deployment
    patch:
      operationId: patchNamespacedDeploymentStatus
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the Deployment
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/v1.Patch'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/v1.Patch'
          application/strategic-merge-patch+json:
            schema:
              $ref: '#/components/schemas/v1.Patch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Deployment'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Deployment'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Deployment'
          description: OK
      summary: partially update status of the specified Deployment
      tags:
      - Deployment
      x-codegen-request-body-name: body
    put:
      operationId: replaceNamespacedDeploymentStatus
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the Deployment
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/v1.Deployment'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Deployment'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Deployment'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Deployment'
          description: OK
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Deployment'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Deployment'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Deployment'
          description: Created
      summary: replace status of the specified Deployment
      tags:
      - Deployment
      x-codegen-request-body-name: body
  /apis/apps/v1/namespaces/{namespace}/replicasets:
    delete:
      operationId: deletecollectionNamespacedReplicaSet
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything.
        in: query
        name: labelSelector
        schema:
          type: string
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        in: query
        name: fieldSelector
        schema:
          type: string
      - description: "If true, partially initialized resources are included in the\
          \ response."
        in: query
        name: includeUninitialized
        schema:
          type: boolean
      - description: "Watch for changes to the described resources and return them\
          \ as a stream of add, update, and remove notifications. Specify resourceVersion."
        in: query
        name: watch
        schema:
          type: boolean
      - description: "When specified with a watch call, shows changes that occur after\
          \ that particular version of a resource. Defaults to changes from the beginning\
          \ of history. When specified for list: - if unset, then the result is returned\
          \ from remote storage based on quorum-read flag; - if it's 0, then we simply\
          \ return what we currently have in cache, no guarantee; - if set to non\
          \ zero, then the result is at least as fresh as given rv."
        in: query
        name: resourceVersion
        schema:
          type: string
      - description: "Timeout for the list/watch call. This limits the duration of\
          \ the call, regardless of any activity or inactivity."
        in: query
        name: timeoutSeconds
        schema:
          type: integer
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        in: query
        name: limit
        schema:
          type: integer
      - description: "The continue option should be set when retrieving more results\
          \ from the server. Since this value is server defined, clients may only\
          \ use the continue value from a previous query result with identical query\
          \ parameters (except for the value of continue) and the server may reject\
          \ a continue value it does not recognize. If the specified continue value\
          \ is no longer valid whether due to expiration (generally five to fifteen\
          \ minutes) or a configuration change on the server the server will respond\
          \ with a 410 ResourceExpired error indicating the client must restart their\
          \ list without the continue field. This field is not supported when watch\
          \ is true. Clients may start a watch from the last resourceVersion value\
          \ returned by the server and not miss any modifications."
        in: query
        name: continue
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Status'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Status'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Status'
          description: OK
      summary: delete collection of ReplicaSet
      tags:
      - ReplicaSet
    get:
      operationId: listNamespacedReplicaSet
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything.
        in: query
        name: labelSelector
        schema:
          type: string
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        in: query
        name: fieldSelector
        schema:
          type: string
      - description: "If true, partially initialized resources are included in the\
          \ response."
        in: query
        name: includeUninitialized
        schema:
          type: boolean
      - description: "Watch for changes to the described resources and return them\
          \ as a stream of add, update, and remove notifications. Specify resourceVersion."
        in: query
        name: watch
        schema:
          type: boolean
      - description: "When specified with a watch call, shows changes that occur after\
          \ that particular version of a resource. Defaults to changes from the beginning\
          \ of history. When specified for list: - if unset, then the result is returned\
          \ from remote storage based on quorum-read flag; - if it's 0, then we simply\
          \ return what we currently have in cache, no guarantee; - if set to non\
          \ zero, then the result is at least as fresh as given rv."
        in: query
        name: resourceVersion
        schema:
          type: string
      - description: "Timeout for the list/watch call. This limits the duration of\
          \ the call, regardless of any activity or inactivity."
        in: query
        name: timeoutSeconds
        schema:
          type: integer
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        in: query
        name: limit
        schema:
          type: integer
      - description: "The continue option should be set when retrieving more results\
          \ from the server. Since this value is server defined, clients may only\
          \ use the continue value from a previous query result with identical query\
          \ parameters (except for the value of continue) and the server may reject\
          \ a continue value it does not recognize. If the specified continue value\
          \ is no longer valid whether due to expiration (generally five to fifteen\
          \ minutes) or a configuration change on the server the server will respond\
          \ with a 410 ResourceExpired error indicating the client must restart their\
          \ list without the continue field. This field is not supported when watch\
          \ is true. Clients may start a watch from the last resourceVersion value\
          \ returned by the server and not miss any modifications."
        in: query
        name: continue
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.ReplicaSetList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.ReplicaSetList'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.ReplicaSetList'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/v1.ReplicaSetList'
            application/vnd.kubernetes.protobuf;stream=watch:
              schema:
                $ref: '#/components/schemas/v1.ReplicaSetList'
          description: OK
      summary: list or watch objects of kind ReplicaSet
      tags:
      - ReplicaSet
    post:
      operationId: createNamespacedReplicaSet
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/v1.ReplicaSet'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.ReplicaSet'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.ReplicaSet'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.ReplicaSet'
          description: OK
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.ReplicaSet'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.ReplicaSet'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.ReplicaSet'
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.ReplicaSet'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.ReplicaSet'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.ReplicaSet'
          description: Accepted
      summary: create a ReplicaSet
      tags:
      - ReplicaSet
      x-codegen-request-body-name: body
  /apis/apps/v1/namespaces/{namespace}/replicasets/{name}:
    delete:
      operationId: deleteNamespacedReplicaSet
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: "The duration in seconds before the object should be deleted.\
          \ Value must be non-negative integer. The value zero indicates delete immediately.\
          \ If this value is nil, the default grace period for the specified type\
          \ will be used. Defaults to a per object value if not specified. zero means\
          \ delete immediately."
        in: query
        name: gracePeriodSeconds
        schema:
          type: integer
      - description: "Deprecated: please use the PropagationPolicy, this field will\
          \ be deprecated in 1.7. Should the dependent objects be orphaned. If true/false,\
          \ the \"orphan\" finalizer will be added to/removed from the object's finalizers\
          \ list. Either this field or PropagationPolicy may be set, but not both."
        in: query
        name: orphanDependents
        schema:
          type: boolean
      - description: "Whether and how garbage collection will be performed. Either\
          \ this field or OrphanDependents may be set, but not both. The default policy\
          \ is decided by the existing finalizer set in the metadata.finalizers and\
          \ the resource-specific default policy. Acceptable values are: 'Orphan'\
          \ - orphan the dependents; 'Background' - allow the garbage collector to\
          \ delete the dependents in the background; 'Foreground' - a cascading policy\
          \ that deletes all dependents in the foreground."
        in: query
        name: propagationPolicy
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the ReplicaSet
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/v1.DeleteOptions'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Status'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Status'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Status'
          description: OK
      summary: delete a ReplicaSet
      tags:
      - ReplicaSet
      x-codegen-request-body-name: body
    get:
      operationId: readNamespacedReplicaSet
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: Should this value be exported.  Export strips fields that a user
          can not specify.
        in: query
        name: export
        schema:
          type: boolean
      - description: Should the export be exact.  Exact export maintains cluster-specific
          fields like 'Namespace'.
        in: query
        name: exact
        schema:
          type: boolean
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the ReplicaSet
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.ReplicaSet'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.ReplicaSet'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.ReplicaSet'
          description: OK
      summary: read the specified ReplicaSet
      tags:
      - ReplicaSet
    patch:
      operationId: patchNamespacedReplicaSet
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the ReplicaSet
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/v1.Patch'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/v1.Patch'
          application/strategic-merge-patch+json:
            schema:
              $ref: '#/components/schemas/v1.Patch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.ReplicaSet'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.ReplicaSet'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.ReplicaSet'
          description: OK
      summary: partially update the specified ReplicaSet
      tags:
      - ReplicaSet
      x-codegen-request-body-name: body
    put:
      operationId: replaceNamespacedReplicaSet
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the ReplicaSet
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/v1.ReplicaSet'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.ReplicaSet'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.ReplicaSet'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.ReplicaSet'
          description: OK
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.ReplicaSet'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.ReplicaSet'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.ReplicaSet'
          description: Created
      summary: replace the specified ReplicaSet
      tags:
      - ReplicaSet
      x-codegen-request-body-name: body
  /apis/apps/v1/namespaces/{namespace}/replicasets/{name}/scale:
    get:
      operationId: readNamespacedReplicaSetScale
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the Scale
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Scale'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Scale'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Scale'
          description: OK
      summary: read scale of the specified ReplicaSet
      tags:
      - ReplicaSet
    patch:
      operationId: patchNamespacedReplicaSetScale
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the Scale
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/v1.Patch'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/v1.Patch'
          application/strategic-merge-patch+json:
            schema:
              $ref: '#/components/schemas/v1.Patch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Scale'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Scale'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Scale'
          description: OK
      summary: partially update scale of the specified ReplicaSet
      tags:
      - ReplicaSet
      x-codegen-request-body-name: body
    put:
      operationId: replaceNamespacedReplicaSetScale
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the Scale
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/v1.Scale'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Scale'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Scale'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Scale'
          description: OK
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Scale'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Scale'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Scale'
          description: Created
      summary: replace scale of the specified ReplicaSet
      tags:
      - ReplicaSet
      x-codegen-request-body-name: body
  /apis/apps/v1/namespaces/{namespace}/replicasets/{name}/status:
    get:
      operationId: readNamespacedReplicaSetStatus
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the ReplicaSet
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.ReplicaSet'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.ReplicaSet'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.ReplicaSet'
          description: OK
      summary: read status of the specified ReplicaSet
      tags:
      - ReplicaSet
    patch:
      operationId: patchNamespacedReplicaSetStatus
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the ReplicaSet
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/v1.Patch'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/v1.Patch'
          application/strategic-merge-patch+json:
            schema:
              $ref: '#/components/schemas/v1.Patch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.ReplicaSet'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.ReplicaSet'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.ReplicaSet'
          description: OK
      summary: partially update status of the specified ReplicaSet
      tags:
      - ReplicaSet
      x-codegen-request-body-name: body
    put:
      operationId: replaceNamespacedReplicaSetStatus
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the ReplicaSet
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/v1.ReplicaSet'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.ReplicaSet'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.ReplicaSet'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.ReplicaSet'
          description: OK
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.ReplicaSet'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.ReplicaSet'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.ReplicaSet'
          description: Created
      summary: replace status of the specified ReplicaSet
      tags:
      - ReplicaSet
      x-codegen-request-body-name: body
  /apis/apps/v1/namespaces/{namespace}/statefulsets:
    delete:
      operationId: deletecollectionNamespacedStatefulSet
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything.
        in: query
        name: labelSelector
        schema:
          type: string
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        in: query
        name: fieldSelector
        schema:
          type: string
      - description: "If true, partially initialized resources are included in the\
          \ response."
        in: query
        name: includeUninitialized
        schema:
          type: boolean
      - description: "Watch for changes to the described resources and return them\
          \ as a stream of add, update, and remove notifications. Specify resourceVersion."
        in: query
        name: watch
        schema:
          type: boolean
      - description: "When specified with a watch call, shows changes that occur after\
          \ that particular version of a resource. Defaults to changes from the beginning\
          \ of history. When specified for list: - if unset, then the result is returned\
          \ from remote storage based on quorum-read flag; - if it's 0, then we simply\
          \ return what we currently have in cache, no guarantee; - if set to non\
          \ zero, then the result is at least as fresh as given rv."
        in: query
        name: resourceVersion
        schema:
          type: string
      - description: "Timeout for the list/watch call. This limits the duration of\
          \ the call, regardless of any activity or inactivity."
        in: query
        name: timeoutSeconds
        schema:
          type: integer
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        in: query
        name: limit
        schema:
          type: integer
      - description: "The continue option should be set when retrieving more results\
          \ from the server. Since this value is server defined, clients may only\
          \ use the continue value from a previous query result with identical query\
          \ parameters (except for the value of continue) and the server may reject\
          \ a continue value it does not recognize. If the specified continue value\
          \ is no longer valid whether due to expiration (generally five to fifteen\
          \ minutes) or a configuration change on the server the server will respond\
          \ with a 410 ResourceExpired error indicating the client must restart their\
          \ list without the continue field. This field is not supported when watch\
          \ is true. Clients may start a watch from the last resourceVersion value\
          \ returned by the server and not miss any modifications."
        in: query
        name: continue
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Status'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Status'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Status'
          description: OK
      summary: delete collection of StatefulSet
      tags:
      - StatefulSet
    get:
      operationId: listNamespacedStatefulSet
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything.
        in: query
        name: labelSelector
        schema:
          type: string
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        in: query
        name: fieldSelector
        schema:
          type: string
      - description: "If true, partially initialized resources are included in the\
          \ response."
        in: query
        name: includeUninitialized
        schema:
          type: boolean
      - description: "Watch for changes to the described resources and return them\
          \ as a stream of add, update, and remove notifications. Specify resourceVersion."
        in: query
        name: watch
        schema:
          type: boolean
      - description: "When specified with a watch call, shows changes that occur after\
          \ that particular version of a resource. Defaults to changes from the beginning\
          \ of history. When specified for list: - if unset, then the result is returned\
          \ from remote storage based on quorum-read flag; - if it's 0, then we simply\
          \ return what we currently have in cache, no guarantee; - if set to non\
          \ zero, then the result is at least as fresh as given rv."
        in: query
        name: resourceVersion
        schema:
          type: string
      - description: "Timeout for the list/watch call. This limits the duration of\
          \ the call, regardless of any activity or inactivity."
        in: query
        name: timeoutSeconds
        schema:
          type: integer
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        in: query
        name: limit
        schema:
          type: integer
      - description: "The continue option should be set when retrieving more results\
          \ from the server. Since this value is server defined, clients may only\
          \ use the continue value from a previous query result with identical query\
          \ parameters (except for the value of continue) and the server may reject\
          \ a continue value it does not recognize. If the specified continue value\
          \ is no longer valid whether due to expiration (generally five to fifteen\
          \ minutes) or a configuration change on the server the server will respond\
          \ with a 410 ResourceExpired error indicating the client must restart their\
          \ list without the continue field. This field is not supported when watch\
          \ is true. Clients may start a watch from the last resourceVersion value\
          \ returned by the server and not miss any modifications."
        in: query
        name: continue
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.StatefulSetList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.StatefulSetList'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.StatefulSetList'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/v1.StatefulSetList'
            application/vnd.kubernetes.protobuf;stream=watch:
              schema:
                $ref: '#/components/schemas/v1.StatefulSetList'
          description: OK
      summary: list or watch objects of kind StatefulSet
      tags:
      - StatefulSet
    post:
      operationId: createNamespacedStatefulSet
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/v1.StatefulSet'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.StatefulSet'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.StatefulSet'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.StatefulSet'
          description: OK
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.StatefulSet'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.StatefulSet'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.StatefulSet'
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.StatefulSet'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.StatefulSet'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.StatefulSet'
          description: Accepted
      summary: create a StatefulSet
      tags:
      - StatefulSet
      x-codegen-request-body-name: body
  /apis/apps/v1/namespaces/{namespace}/statefulsets/{name}:
    delete:
      operationId: deleteNamespacedStatefulSet
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: "The duration in seconds before the object should be deleted.\
          \ Value must be non-negative integer. The value zero indicates delete immediately.\
          \ If this value is nil, the default grace period for the specified type\
          \ will be used. Defaults to a per object value if not specified. zero means\
          \ delete immediately."
        in: query
        name: gracePeriodSeconds
        schema:
          type: integer
      - description: "Deprecated: please use the PropagationPolicy, this field will\
          \ be deprecated in 1.7. Should the dependent objects be orphaned. If true/false,\
          \ the \"orphan\" finalizer will be added to/removed from the object's finalizers\
          \ list. Either this field or PropagationPolicy may be set, but not both."
        in: query
        name: orphanDependents
        schema:
          type: boolean
      - description: "Whether and how garbage collection will be performed. Either\
          \ this field or OrphanDependents may be set, but not both. The default policy\
          \ is decided by the existing finalizer set in the metadata.finalizers and\
          \ the resource-specific default policy. Acceptable values are: 'Orphan'\
          \ - orphan the dependents; 'Background' - allow the garbage collector to\
          \ delete the dependents in the background; 'Foreground' - a cascading policy\
          \ that deletes all dependents in the foreground."
        in: query
        name: propagationPolicy
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the StatefulSet
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/v1.DeleteOptions'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Status'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Status'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Status'
          description: OK
      summary: delete a StatefulSet
      tags:
      - StatefulSet
      x-codegen-request-body-name: body
    get:
      operationId: readNamespacedStatefulSet
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: Should this value be exported.  Export strips fields that a user
          can not specify.
        in: query
        name: export
        schema:
          type: boolean
      - description: Should the export be exact.  Exact export maintains cluster-specific
          fields like 'Namespace'.
        in: query
        name: exact
        schema:
          type: boolean
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the StatefulSet
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.StatefulSet'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.StatefulSet'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.StatefulSet'
          description: OK
      summary: read the specified StatefulSet
      tags:
      - StatefulSet
    patch:
      operationId: patchNamespacedStatefulSet
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the StatefulSet
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/v1.Patch'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/v1.Patch'
          application/strategic-merge-patch+json:
            schema:
              $ref: '#/components/schemas/v1.Patch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.StatefulSet'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.StatefulSet'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.StatefulSet'
          description: OK
      summary: partially update the specified StatefulSet
      tags:
      - StatefulSet
      x-codegen-request-body-name: body
    put:
      operationId: replaceNamespacedStatefulSet
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the StatefulSet
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/v1.StatefulSet'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.StatefulSet'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.StatefulSet'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.StatefulSet'
          description: OK
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.StatefulSet'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.StatefulSet'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.StatefulSet'
          description: Created
      summary: replace the specified StatefulSet
      tags:
      - StatefulSet
      x-codegen-request-body-name: body
  /apis/apps/v1/namespaces/{namespace}/statefulsets/{name}/scale:
    get:
      operationId: readNamespacedStatefulSetScale
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the Scale
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Scale'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Scale'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Scale'
          description: OK
      summary: read scale of the specified StatefulSet
      tags:
      - StatefulSet
    patch:
      operationId: patchNamespacedStatefulSetScale
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the Scale
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/v1.Patch'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/v1.Patch'
          application/strategic-merge-patch+json:
            schema:
              $ref: '#/components/schemas/v1.Patch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Scale'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Scale'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Scale'
          description: OK
      summary: partially update scale of the specified StatefulSet
      tags:
      - StatefulSet
      x-codegen-request-body-name: body
    put:
      operationId: replaceNamespacedStatefulSetScale
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the Scale
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/v1.Scale'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Scale'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Scale'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Scale'
          description: OK
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Scale'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Scale'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Scale'
          description: Created
      summary: replace scale of the specified StatefulSet
      tags:
      - StatefulSet
      x-codegen-request-body-name: body
  /apis/apps/v1/namespaces/{namespace}/statefulsets/{name}/status:
    get:
      operationId: readNamespacedStatefulSetStatus
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the StatefulSet
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.StatefulSet'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.StatefulSet'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.StatefulSet'
          description: OK
      summary: read status of the specified StatefulSet
      tags:
      - StatefulSet
    patch:
      operationId: patchNamespacedStatefulSetStatus
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the StatefulSet
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/v1.Patch'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/v1.Patch'
          application/strategic-merge-patch+json:
            schema:
              $ref: '#/components/schemas/v1.Patch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.StatefulSet'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.StatefulSet'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.StatefulSet'
          description: OK
      summary: partially update status of the specified StatefulSet
      tags:
      - StatefulSet
      x-codegen-request-body-name: body
    put:
      operationId: replaceNamespacedStatefulSetStatus
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the StatefulSet
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/v1.StatefulSet'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.StatefulSet'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.StatefulSet'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.StatefulSet'
          description: OK
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.StatefulSet'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.StatefulSet'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.StatefulSet'
          description: Created
      summary: replace status of the specified StatefulSet
      tags:
      - StatefulSet
      x-codegen-request-body-name: body
  /apis/autoscaling/v1/namespaces/{namespace}/horizontalpodautoscalers:
    delete:
      operationId: deletecollectionNamespacedHorizontalPodAutoscaler
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything.
        in: query
        name: labelSelector
        schema:
          type: string
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        in: query
        name: fieldSelector
        schema:
          type: string
      - description: "If true, partially initialized resources are included in the\
          \ response."
        in: query
        name: includeUninitialized
        schema:
          type: boolean
      - description: "Watch for changes to the described resources and return them\
          \ as a stream of add, update, and remove notifications. Specify resourceVersion."
        in: query
        name: watch
        schema:
          type: boolean
      - description: "When specified with a watch call, shows changes that occur after\
          \ that particular version of a resource. Defaults to changes from the beginning\
          \ of history. When specified for list: - if unset, then the result is returned\
          \ from remote storage based on quorum-read flag; - if it's 0, then we simply\
          \ return what we currently have in cache, no guarantee; - if set to non\
          \ zero, then the result is at least as fresh as given rv."
        in: query
        name: resourceVersion
        schema:
          type: string
      - description: "Timeout for the list/watch call. This limits the duration of\
          \ the call, regardless of any activity or inactivity."
        in: query
        name: timeoutSeconds
        schema:
          type: integer
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        in: query
        name: limit
        schema:
          type: integer
      - description: "The continue option should be set when retrieving more results\
          \ from the server. Since this value is server defined, clients may only\
          \ use the continue value from a previous query result with identical query\
          \ parameters (except for the value of continue) and the server may reject\
          \ a continue value it does not recognize. If the specified continue value\
          \ is no longer valid whether due to expiration (generally five to fifteen\
          \ minutes) or a configuration change on the server the server will respond\
          \ with a 410 ResourceExpired error indicating the client must restart their\
          \ list without the continue field. This field is not supported when watch\
          \ is true. Clients may start a watch from the last resourceVersion value\
          \ returned by the server and not miss any modifications."
        in: query
        name: continue
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Status'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Status'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Status'
          description: OK
      summary: delete collection of HorizontalPodAutoscaler
      tags:
      - HorizontalPodAutoscaler
    get:
      operationId: listNamespacedHorizontalPodAutoscaler
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything.
        in: query
        name: labelSelector
        schema:
          type: string
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        in: query
        name: fieldSelector
        schema:
          type: string
      - description: "If true, partially initialized resources are included in the\
          \ response."
        in: query
        name: includeUninitialized
        schema:
          type: boolean
      - description: "Watch for changes to the described resources and return them\
          \ as a stream of add, update, and remove notifications. Specify resourceVersion."
        in: query
        name: watch
        schema:
          type: boolean
      - description: "When specified with a watch call, shows changes that occur after\
          \ that particular version of a resource. Defaults to changes from the beginning\
          \ of history. When specified for list: - if unset, then the result is returned\
          \ from remote storage based on quorum-read flag; - if it's 0, then we simply\
          \ return what we currently have in cache, no guarantee; - if set to non\
          \ zero, then the result is at least as fresh as given rv."
        in: query
        name: resourceVersion
        schema:
          type: string
      - description: "Timeout for the list/watch call. This limits the duration of\
          \ the call, regardless of any activity or inactivity."
        in: query
        name: timeoutSeconds
        schema:
          type: integer
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        in: query
        name: limit
        schema:
          type: integer
      - description: "The continue option should be set when retrieving more results\
          \ from the server. Since this value is server defined, clients may only\
          \ use the continue value from a previous query result with identical query\
          \ parameters (except for the value of continue) and the server may reject\
          \ a continue value it does not recognize. If the specified continue value\
          \ is no longer valid whether due to expiration (generally five to fifteen\
          \ minutes) or a configuration change on the server the server will respond\
          \ with a 410 ResourceExpired error indicating the client must restart their\
          \ list without the continue field. This field is not supported when watch\
          \ is true. Clients may start a watch from the last resourceVersion value\
          \ returned by the server and not miss any modifications."
        in: query
        name: continue
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.HorizontalPodAutoscalerList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.HorizontalPodAutoscalerList'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.HorizontalPodAutoscalerList'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/v1.HorizontalPodAutoscalerList'
            application/vnd.kubernetes.protobuf;stream=watch:
              schema:
                $ref: '#/components/schemas/v1.HorizontalPodAutoscalerList'
          description: OK
      summary: list or watch objects of kind HorizontalPodAutoscaler
      tags:
      - HorizontalPodAutoscaler
    post:
      operationId: createNamespacedHorizontalPodAutoscaler
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/v1.HorizontalPodAutoscaler'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.HorizontalPodAutoscaler'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.HorizontalPodAutoscaler'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.HorizontalPodAutoscaler'
          description: OK
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.HorizontalPodAutoscaler'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.HorizontalPodAutoscaler'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.HorizontalPodAutoscaler'
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.HorizontalPodAutoscaler'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.HorizontalPodAutoscaler'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.HorizontalPodAutoscaler'
          description: Accepted
      summary: create a HorizontalPodAutoscaler
      tags:
      - HorizontalPodAutoscaler
      x-codegen-request-body-name: body
  /apis/autoscaling/v1/namespaces/{namespace}/horizontalpodautoscalers/{name}:
    delete:
      operationId: deleteNamespacedHorizontalPodAutoscaler
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: "The duration in seconds before the object should be deleted.\
          \ Value must be non-negative integer. The value zero indicates delete immediately.\
          \ If this value is nil, the default grace period for the specified type\
          \ will be used. Defaults to a per object value if not specified. zero means\
          \ delete immediately."
        in: query
        name: gracePeriodSeconds
        schema:
          type: integer
      - description: "Deprecated: please use the PropagationPolicy, this field will\
          \ be deprecated in 1.7. Should the dependent objects be orphaned. If true/false,\
          \ the \"orphan\" finalizer will be added to/removed from the object's finalizers\
          \ list. Either this field or PropagationPolicy may be set, but not both."
        in: query
        name: orphanDependents
        schema:
          type: boolean
      - description: "Whether and how garbage collection will be performed. Either\
          \ this field or OrphanDependents may be set, but not both. The default policy\
          \ is decided by the existing finalizer set in the metadata.finalizers and\
          \ the resource-specific default policy. Acceptable values are: 'Orphan'\
          \ - orphan the dependents; 'Background' - allow the garbage collector to\
          \ delete the dependents in the background; 'Foreground' - a cascading policy\
          \ that deletes all dependents in the foreground."
        in: query
        name: propagationPolicy
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the HorizontalPodAutoscaler
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/v1.DeleteOptions'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Status'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Status'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Status'
          description: OK
      summary: delete a HorizontalPodAutoscaler
      tags:
      - HorizontalPodAutoscaler
      x-codegen-request-body-name: body
    get:
      operationId: readNamespacedHorizontalPodAutoscaler
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: Should this value be exported.  Export strips fields that a user
          can not specify.
        in: query
        name: export
        schema:
          type: boolean
      - description: Should the export be exact.  Exact export maintains cluster-specific
          fields like 'Namespace'.
        in: query
        name: exact
        schema:
          type: boolean
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the HorizontalPodAutoscaler
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.HorizontalPodAutoscaler'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.HorizontalPodAutoscaler'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.HorizontalPodAutoscaler'
          description: OK
      summary: read the specified HorizontalPodAutoscaler
      tags:
      - HorizontalPodAutoscaler
    patch:
      operationId: patchNamespacedHorizontalPodAutoscaler
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the HorizontalPodAutoscaler
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/v1.Patch'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/v1.Patch'
          application/strategic-merge-patch+json:
            schema:
              $ref: '#/components/schemas/v1.Patch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.HorizontalPodAutoscaler'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.HorizontalPodAutoscaler'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.HorizontalPodAutoscaler'
          description: OK
      summary: partially update the specified HorizontalPodAutoscaler
      tags:
      - HorizontalPodAutoscaler
      x-codegen-request-body-name: body
    put:
      operationId: replaceNamespacedHorizontalPodAutoscaler
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the HorizontalPodAutoscaler
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/v1.HorizontalPodAutoscaler'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.HorizontalPodAutoscaler'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.HorizontalPodAutoscaler'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.HorizontalPodAutoscaler'
          description: OK
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.HorizontalPodAutoscaler'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.HorizontalPodAutoscaler'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.HorizontalPodAutoscaler'
          description: Created
      summary: replace the specified HorizontalPodAutoscaler
      tags:
      - HorizontalPodAutoscaler
      x-codegen-request-body-name: body
  /apis/autoscaling/v1/namespaces/{namespace}/horizontalpodautoscalers/{name}/status:
    get:
      operationId: readNamespacedHorizontalPodAutoscalerStatus
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the HorizontalPodAutoscaler
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.HorizontalPodAutoscaler'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.HorizontalPodAutoscaler'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.HorizontalPodAutoscaler'
          description: OK
      summary: read status of the specified HorizontalPodAutoscaler
      tags:
      - HorizontalPodAutoscaler
    patch:
      operationId: patchNamespacedHorizontalPodAutoscalerStatus
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the HorizontalPodAutoscaler
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/v1.Patch'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/v1.Patch'
          application/strategic-merge-patch+json:
            schema:
              $ref: '#/components/schemas/v1.Patch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.HorizontalPodAutoscaler'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.HorizontalPodAutoscaler'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.HorizontalPodAutoscaler'
          description: OK
      summary: partially update status of the specified HorizontalPodAutoscaler
      tags:
      - HorizontalPodAutoscaler
      x-codegen-request-body-name: body
    put:
      operationId: replaceNamespacedHorizontalPodAutoscalerStatus
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the HorizontalPodAutoscaler
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/v1.HorizontalPodAutoscaler'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.HorizontalPodAutoscaler'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.HorizontalPodAutoscaler'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.HorizontalPodAutoscaler'
          description: OK
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.HorizontalPodAutoscaler'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.HorizontalPodAutoscaler'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.HorizontalPodAutoscaler'
          description: Created
      summary: replace status of the specified HorizontalPodAutoscaler
      tags:
      - HorizontalPodAutoscaler
      x-codegen-request-body-name: body
  /apis/build.openshift.io/v1/namespaces/{namespace}/buildconfigs:
    delete:
      operationId: deletecollectionNamespacedBuildConfig
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything.
        in: query
        name: labelSelector
        schema:
          type: string
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        in: query
        name: fieldSelector
        schema:
          type: string
      - description: "If true, partially initialized resources are included in the\
          \ response."
        in: query
        name: includeUninitialized
        schema:
          type: boolean
      - description: "Watch for changes to the described resources and return them\
          \ as a stream of add, update, and remove notifications. Specify resourceVersion."
        in: query
        name: watch
        schema:
          type: boolean
      - description: "When specified with a watch call, shows changes that occur after\
          \ that particular version of a resource. Defaults to changes from the beginning\
          \ of history. When specified for list: - if unset, then the result is returned\
          \ from remote storage based on quorum-read flag; - if it's 0, then we simply\
          \ return what we currently have in cache, no guarantee; - if set to non\
          \ zero, then the result is at least as fresh as given rv."
        in: query
        name: resourceVersion
        schema:
          type: string
      - description: "Timeout for the list/watch call. This limits the duration of\
          \ the call, regardless of any activity or inactivity."
        in: query
        name: timeoutSeconds
        schema:
          type: integer
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        in: query
        name: limit
        schema:
          type: integer
      - description: "The continue option should be set when retrieving more results\
          \ from the server. Since this value is server defined, clients may only\
          \ use the continue value from a previous query result with identical query\
          \ parameters (except for the value of continue) and the server may reject\
          \ a continue value it does not recognize. If the specified continue value\
          \ is no longer valid whether due to expiration (generally five to fifteen\
          \ minutes) or a configuration change on the server the server will respond\
          \ with a 410 ResourceExpired error indicating the client must restart their\
          \ list without the continue field. This field is not supported when watch\
          \ is true. Clients may start a watch from the last resourceVersion value\
          \ returned by the server and not miss any modifications."
        in: query
        name: continue
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Status'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Status'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Status'
          description: OK
      summary: delete collection of BuildConfig
      tags:
      - BuildConfig
    get:
      operationId: listNamespacedBuildConfig
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything.
        in: query
        name: labelSelector
        schema:
          type: string
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        in: query
        name: fieldSelector
        schema:
          type: string
      - description: "If true, partially initialized resources are included in the\
          \ response."
        in: query
        name: includeUninitialized
        schema:
          type: boolean
      - description: "Watch for changes to the described resources and return them\
          \ as a stream of add, update, and remove notifications. Specify resourceVersion."
        in: query
        name: watch
        schema:
          type: boolean
      - description: "When specified with a watch call, shows changes that occur after\
          \ that particular version of a resource. Defaults to changes from the beginning\
          \ of history. When specified for list: - if unset, then the result is returned\
          \ from remote storage based on quorum-read flag; - if it's 0, then we simply\
          \ return what we currently have in cache, no guarantee; - if set to non\
          \ zero, then the result is at least as fresh as given rv."
        in: query
        name: resourceVersion
        schema:
          type: string
      - description: "Timeout for the list/watch call. This limits the duration of\
          \ the call, regardless of any activity or inactivity."
        in: query
        name: timeoutSeconds
        schema:
          type: integer
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        in: query
        name: limit
        schema:
          type: integer
      - description: "The continue option should be set when retrieving more results\
          \ from the server. Since this value is server defined, clients may only\
          \ use the continue value from a previous query result with identical query\
          \ parameters (except for the value of continue) and the server may reject\
          \ a continue value it does not recognize. If the specified continue value\
          \ is no longer valid whether due to expiration (generally five to fifteen\
          \ minutes) or a configuration change on the server the server will respond\
          \ with a 410 ResourceExpired error indicating the client must restart their\
          \ list without the continue field. This field is not supported when watch\
          \ is true. Clients may start a watch from the last resourceVersion value\
          \ returned by the server and not miss any modifications."
        in: query
        name: continue
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.BuildConfigList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.BuildConfigList'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.BuildConfigList'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/v1.BuildConfigList'
            application/vnd.kubernetes.protobuf;stream=watch:
              schema:
                $ref: '#/components/schemas/v1.BuildConfigList'
          description: OK
      summary: list or watch objects of kind BuildConfig
      tags:
      - BuildConfig
    post:
      operationId: createNamespacedBuildConfig
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/v1.BuildConfig'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.BuildConfig'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.BuildConfig'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.BuildConfig'
          description: OK
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.BuildConfig'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.BuildConfig'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.BuildConfig'
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.BuildConfig'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.BuildConfig'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.BuildConfig'
          description: Accepted
      summary: create a BuildConfig
      tags:
      - BuildConfig
      x-codegen-request-body-name: body
  /apis/build.openshift.io/v1/namespaces/{namespace}/buildconfigs/{name}:
    delete:
      operationId: deleteNamespacedBuildConfig
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: "The duration in seconds before the object should be deleted.\
          \ Value must be non-negative integer. The value zero indicates delete immediately.\
          \ If this value is nil, the default grace period for the specified type\
          \ will be used. Defaults to a per object value if not specified. zero means\
          \ delete immediately."
        in: query
        name: gracePeriodSeconds
        schema:
          type: integer
      - description: "Deprecated: please use the PropagationPolicy, this field will\
          \ be deprecated in 1.7. Should the dependent objects be orphaned. If true/false,\
          \ the \"orphan\" finalizer will be added to/removed from the object's finalizers\
          \ list. Either this field or PropagationPolicy may be set, but not both."
        in: query
        name: orphanDependents
        schema:
          type: boolean
      - description: "Whether and how garbage collection will be performed. Either\
          \ this field or OrphanDependents may be set, but not both. The default policy\
          \ is decided by the existing finalizer set in the metadata.finalizers and\
          \ the resource-specific default policy. Acceptable values are: 'Orphan'\
          \ - orphan the dependents; 'Background' - allow the garbage collector to\
          \ delete the dependents in the background; 'Foreground' - a cascading policy\
          \ that deletes all dependents in the foreground."
        in: query
        name: propagationPolicy
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the BuildConfig
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/v1.DeleteOptions'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Status'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Status'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Status'
          description: OK
      summary: delete a BuildConfig
      tags:
      - BuildConfig
      x-codegen-request-body-name: body
    get:
      operationId: readNamespacedBuildConfig
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: Should this value be exported.  Export strips fields that a user
          can not specify.
        in: query
        name: export
        schema:
          type: boolean
      - description: Should the export be exact.  Exact export maintains cluster-specific
          fields like 'Namespace'.
        in: query
        name: exact
        schema:
          type: boolean
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the BuildConfig
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.BuildConfig'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.BuildConfig'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.BuildConfig'
          description: OK
      summary: read the specified BuildConfig
      tags:
      - BuildConfig
    patch:
      operationId: patchNamespacedBuildConfig
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the BuildConfig
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/v1.Patch'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/v1.Patch'
          application/strategic-merge-patch+json:
            schema:
              $ref: '#/components/schemas/v1.Patch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.BuildConfig'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.BuildConfig'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.BuildConfig'
          description: OK
      summary: partially update the specified BuildConfig
      tags:
      - BuildConfig
      x-codegen-request-body-name: body
    put:
      operationId: replaceNamespacedBuildConfig
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the BuildConfig
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/v1.BuildConfig'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.BuildConfig'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.BuildConfig'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.BuildConfig'
          description: OK
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.BuildConfig'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.BuildConfig'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.BuildConfig'
          description: Created
      summary: replace the specified BuildConfig
      tags:
      - BuildConfig
      x-codegen-request-body-name: body
  /apis/build.openshift.io/v1/namespaces/{namespace}/buildconfigs/{name}/instantiate:
    post:
      operationId: createNamespacedBuildConfigInstantiate
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the BuildRequest
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/v1.BuildRequest'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Build'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Build'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Build'
          description: OK
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Build'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Build'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Build'
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Build'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Build'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Build'
          description: Accepted
      summary: create instantiate of a BuildConfig
      tags:
      - BuildConfig
      x-codegen-request-body-name: body
  /apis/build.openshift.io/v1/namespaces/{namespace}/builds:
    delete:
      operationId: deletecollectionNamespacedBuild
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything.
        in: query
        name: labelSelector
        schema:
          type: string
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        in: query
        name: fieldSelector
        schema:
          type: string
      - description: "If true, partially initialized resources are included in the\
          \ response."
        in: query
        name: includeUninitialized
        schema:
          type: boolean
      - description: "Watch for changes to the described resources and return them\
          \ as a stream of add, update, and remove notifications. Specify resourceVersion."
        in: query
        name: watch
        schema:
          type: boolean
      - description: "When specified with a watch call, shows changes that occur after\
          \ that particular version of a resource. Defaults to changes from the beginning\
          \ of history. When specified for list: - if unset, then the result is returned\
          \ from remote storage based on quorum-read flag; - if it's 0, then we simply\
          \ return what we currently have in cache, no guarantee; - if set to non\
          \ zero, then the result is at least as fresh as given rv."
        in: query
        name: resourceVersion
        schema:
          type: string
      - description: "Timeout for the list/watch call. This limits the duration of\
          \ the call, regardless of any activity or inactivity."
        in: query
        name: timeoutSeconds
        schema:
          type: integer
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        in: query
        name: limit
        schema:
          type: integer
      - description: "The continue option should be set when retrieving more results\
          \ from the server. Since this value is server defined, clients may only\
          \ use the continue value from a previous query result with identical query\
          \ parameters (except for the value of continue) and the server may reject\
          \ a continue value it does not recognize. If the specified continue value\
          \ is no longer valid whether due to expiration (generally five to fifteen\
          \ minutes) or a configuration change on the server the server will respond\
          \ with a 410 ResourceExpired error indicating the client must restart their\
          \ list without the continue field. This field is not supported when watch\
          \ is true. Clients may start a watch from the last resourceVersion value\
          \ returned by the server and not miss any modifications."
        in: query
        name: continue
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Status'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Status'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Status'
          description: OK
      summary: delete collection of Build
      tags:
      - Builds
    get:
      operationId: listNamespacedBuild
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything.
        in: query
        name: labelSelector
        schema:
          type: string
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        in: query
        name: fieldSelector
        schema:
          type: string
      - description: "If true, partially initialized resources are included in the\
          \ response."
        in: query
        name: includeUninitialized
        schema:
          type: boolean
      - description: "Watch for changes to the described resources and return them\
          \ as a stream of add, update, and remove notifications. Specify resourceVersion."
        in: query
        name: watch
        schema:
          type: boolean
      - description: "When specified with a watch call, shows changes that occur after\
          \ that particular version of a resource. Defaults to changes from the beginning\
          \ of history. When specified for list: - if unset, then the result is returned\
          \ from remote storage based on quorum-read flag; - if it's 0, then we simply\
          \ return what we currently have in cache, no guarantee; - if set to non\
          \ zero, then the result is at least as fresh as given rv."
        in: query
        name: resourceVersion
        schema:
          type: string
      - description: "Timeout for the list/watch call. This limits the duration of\
          \ the call, regardless of any activity or inactivity."
        in: query
        name: timeoutSeconds
        schema:
          type: integer
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        in: query
        name: limit
        schema:
          type: integer
      - description: "The continue option should be set when retrieving more results\
          \ from the server. Since this value is server defined, clients may only\
          \ use the continue value from a previous query result with identical query\
          \ parameters (except for the value of continue) and the server may reject\
          \ a continue value it does not recognize. If the specified continue value\
          \ is no longer valid whether due to expiration (generally five to fifteen\
          \ minutes) or a configuration change on the server the server will respond\
          \ with a 410 ResourceExpired error indicating the client must restart their\
          \ list without the continue field. This field is not supported when watch\
          \ is true. Clients may start a watch from the last resourceVersion value\
          \ returned by the server and not miss any modifications."
        in: query
        name: continue
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.BuildList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.BuildList'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.BuildList'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/v1.BuildList'
            application/vnd.kubernetes.protobuf;stream=watch:
              schema:
                $ref: '#/components/schemas/v1.BuildList'
          description: OK
      summary: list or watch objects of kind Build
      tags:
      - Builds
    post:
      operationId: createNamespacedBuild
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/v1.Build'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Build'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Build'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Build'
          description: OK
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Build'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Build'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Build'
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Build'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Build'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Build'
          description: Accepted
      summary: create a Build
      tags:
      - Builds
      x-codegen-request-body-name: body
  /apis/build.openshift.io/v1/namespaces/{namespace}/builds/{name}:
    delete:
      operationId: deleteNamespacedBuild
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: "The duration in seconds before the object should be deleted.\
          \ Value must be non-negative integer. The value zero indicates delete immediately.\
          \ If this value is nil, the default grace period for the specified type\
          \ will be used. Defaults to a per object value if not specified. zero means\
          \ delete immediately."
        in: query
        name: gracePeriodSeconds
        schema:
          type: integer
      - description: "Deprecated: please use the PropagationPolicy, this field will\
          \ be deprecated in 1.7. Should the dependent objects be orphaned. If true/false,\
          \ the \"orphan\" finalizer will be added to/removed from the object's finalizers\
          \ list. Either this field or PropagationPolicy may be set, but not both."
        in: query
        name: orphanDependents
        schema:
          type: boolean
      - description: "Whether and how garbage collection will be performed. Either\
          \ this field or OrphanDependents may be set, but not both. The default policy\
          \ is decided by the existing finalizer set in the metadata.finalizers and\
          \ the resource-specific default policy. Acceptable values are: 'Orphan'\
          \ - orphan the dependents; 'Background' - allow the garbage collector to\
          \ delete the dependents in the background; 'Foreground' - a cascading policy\
          \ that deletes all dependents in the foreground."
        in: query
        name: propagationPolicy
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the Build
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/v1.DeleteOptions'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Status'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Status'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Status'
          description: OK
      summary: delete a Build
      tags:
      - Builds
      x-codegen-request-body-name: body
    get:
      operationId: readNamespacedBuild
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: Should this value be exported.  Export strips fields that a user
          can not specify.
        in: query
        name: export
        schema:
          type: boolean
      - description: Should the export be exact.  Exact export maintains cluster-specific
          fields like 'Namespace'.
        in: query
        name: exact
        schema:
          type: boolean
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the Build
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Build'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Build'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Build'
          description: OK
      summary: read the specified Build
      tags:
      - Builds
    patch:
      operationId: patchNamespacedBuild
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the Build
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/v1.Patch'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/v1.Patch'
          application/strategic-merge-patch+json:
            schema:
              $ref: '#/components/schemas/v1.Patch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Build'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Build'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Build'
          description: OK
      summary: partially update the specified Build
      tags:
      - Builds
      x-codegen-request-body-name: body
    put:
      operationId: replaceNamespacedBuild
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the Build
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/v1.Build'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Build'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Build'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Build'
          description: OK
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Build'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Build'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Build'
          description: Created
      summary: replace the specified Build
      tags:
      - Builds
      x-codegen-request-body-name: body
  /apis/build.openshift.io/v1/namespaces/{namespace}/builds/{name}/log:
    get:
      operationId: readNamespacedBuildLog
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: cointainer for which to stream logs. Defaults to only container
          if there is one container in the pod.
        in: query
        name: container
        schema:
          type: string
      - description: follow if true indicates that the build log should be streamed
          until the build terminates.
        in: query
        name: follow
        schema:
          type: boolean
      - description: previous returns previous build logs. Defaults to false.
        in: query
        name: previous
        schema:
          type: boolean
      - description: "sinceSeconds is a relative time in seconds before the current\
          \ time from which to show logs. If this value precedes the time a pod was\
          \ started, only logs since the pod start will be returned. If this value\
          \ is in the future, no logs will be returned. Only one of sinceSeconds or\
          \ sinceTime may be specified."
        in: query
        name: sinceSeconds
        schema:
          type: integer
      - description: "timestamps, If true, add an RFC3339 or RFC3339Nano timestamp\
          \ at the beginning of every line of log output. Defaults to false."
        in: query
        name: timestamps
        schema:
          type: boolean
      - description: "tailLines, If set, is the number of lines from the end of the\
          \ logs to show. If not specified, logs are shown from the creation of the\
          \ container or sinceSeconds or sinceTime"
        in: query
        name: tailLines
        schema:
          type: integer
      - description: "limitBytes, If set, is the number of bytes to read from the\
          \ server before terminating the log output. This may not display a complete\
          \ final line of logging, and may return slightly more or slightly less than\
          \ the specified limit."
        in: query
        name: limitBytes
        schema:
          type: integer
      - description: noWait if true causes the call to return immediately even if
          the build is not available yet. Otherwise the server will wait until the
          build has started.
        in: query
        name: nowait
        schema:
          type: boolean
      - description: version of the build for which to view logs.
        in: query
        name: version
        schema:
          type: integer
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the BuildLog
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.BuildLog'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.BuildLog'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.BuildLog'
          description: OK
      summary: read log of the specified Build
      tags:
      - Builds
  /apis/image.openshift.io/v1/namespaces/{namespace}/imagestreams:
    delete:
      operationId: deletecollectionNamespacedImageStream
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything.
        in: query
        name: labelSelector
        schema:
          type: string
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        in: query
        name: fieldSelector
        schema:
          type: string
      - description: "If true, partially initialized resources are included in the\
          \ response."
        in: query
        name: includeUninitialized
        schema:
          type: boolean
      - description: "Watch for changes to the described resources and return them\
          \ as a stream of add, update, and remove notifications. Specify resourceVersion."
        in: query
        name: watch
        schema:
          type: boolean
      - description: "When specified with a watch call, shows changes that occur after\
          \ that particular version of a resource. Defaults to changes from the beginning\
          \ of history. When specified for list: - if unset, then the result is returned\
          \ from remote storage based on quorum-read flag; - if it's 0, then we simply\
          \ return what we currently have in cache, no guarantee; - if set to non\
          \ zero, then the result is at least as fresh as given rv."
        in: query
        name: resourceVersion
        schema:
          type: string
      - description: "Timeout for the list/watch call. This limits the duration of\
          \ the call, regardless of any activity or inactivity."
        in: query
        name: timeoutSeconds
        schema:
          type: integer
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        in: query
        name: limit
        schema:
          type: integer
      - description: "The continue option should be set when retrieving more results\
          \ from the server. Since this value is server defined, clients may only\
          \ use the continue value from a previous query result with identical query\
          \ parameters (except for the value of continue) and the server may reject\
          \ a continue value it does not recognize. If the specified continue value\
          \ is no longer valid whether due to expiration (generally five to fifteen\
          \ minutes) or a configuration change on the server the server will respond\
          \ with a 410 ResourceExpired error indicating the client must restart their\
          \ list without the continue field. This field is not supported when watch\
          \ is true. Clients may start a watch from the last resourceVersion value\
          \ returned by the server and not miss any modifications."
        in: query
        name: continue
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Status'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Status'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Status'
          description: OK
      summary: delete collection of ImageStream
      tags:
      - ImageStream
    get:
      operationId: listNamespacedImageStream
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything.
        in: query
        name: labelSelector
        schema:
          type: string
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        in: query
        name: fieldSelector
        schema:
          type: string
      - description: "If true, partially initialized resources are included in the\
          \ response."
        in: query
        name: includeUninitialized
        schema:
          type: boolean
      - description: "Watch for changes to the described resources and return them\
          \ as a stream of add, update, and remove notifications. Specify resourceVersion."
        in: query
        name: watch
        schema:
          type: boolean
      - description: "When specified with a watch call, shows changes that occur after\
          \ that particular version of a resource. Defaults to changes from the beginning\
          \ of history. When specified for list: - if unset, then the result is returned\
          \ from remote storage based on quorum-read flag; - if it's 0, then we simply\
          \ return what we currently have in cache, no guarantee; - if set to non\
          \ zero, then the result is at least as fresh as given rv."
        in: query
        name: resourceVersion
        schema:
          type: string
      - description: "Timeout for the list/watch call. This limits the duration of\
          \ the call, regardless of any activity or inactivity."
        in: query
        name: timeoutSeconds
        schema:
          type: integer
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        in: query
        name: limit
        schema:
          type: integer
      - description: "The continue option should be set when retrieving more results\
          \ from the server. Since this value is server defined, clients may only\
          \ use the continue value from a previous query result with identical query\
          \ parameters (except for the value of continue) and the server may reject\
          \ a continue value it does not recognize. If the specified continue value\
          \ is no longer valid whether due to expiration (generally five to fifteen\
          \ minutes) or a configuration change on the server the server will respond\
          \ with a 410 ResourceExpired error indicating the client must restart their\
          \ list without the continue field. This field is not supported when watch\
          \ is true. Clients may start a watch from the last resourceVersion value\
          \ returned by the server and not miss any modifications."
        in: query
        name: continue
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.ImageStreamList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.ImageStreamList'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.ImageStreamList'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/v1.ImageStreamList'
            application/vnd.kubernetes.protobuf;stream=watch:
              schema:
                $ref: '#/components/schemas/v1.ImageStreamList'
          description: OK
      summary: list or watch objects of kind ImageStream
      tags:
      - ImageStream
    post:
      operationId: createNamespacedImageStream
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/v1.ImageStream'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.ImageStream'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.ImageStream'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.ImageStream'
          description: OK
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.ImageStream'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.ImageStream'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.ImageStream'
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.ImageStream'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.ImageStream'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.ImageStream'
          description: Accepted
      summary: create an ImageStream
      tags:
      - ImageStream
      x-codegen-request-body-name: body
  /apis/image.openshift.io/v1/namespaces/{namespace}/imagestreams/{name}:
    delete:
      operationId: deleteNamespacedImageStream
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: "The duration in seconds before the object should be deleted.\
          \ Value must be non-negative integer. The value zero indicates delete immediately.\
          \ If this value is nil, the default grace period for the specified type\
          \ will be used. Defaults to a per object value if not specified. zero means\
          \ delete immediately."
        in: query
        name: gracePeriodSeconds
        schema:
          type: integer
      - description: "Deprecated: please use the PropagationPolicy, this field will\
          \ be deprecated in 1.7. Should the dependent objects be orphaned. If true/false,\
          \ the \"orphan\" finalizer will be added to/removed from the object's finalizers\
          \ list. Either this field or PropagationPolicy may be set, but not both."
        in: query
        name: orphanDependents
        schema:
          type: boolean
      - description: "Whether and how garbage collection will be performed. Either\
          \ this field or OrphanDependents may be set, but not both. The default policy\
          \ is decided by the existing finalizer set in the metadata.finalizers and\
          \ the resource-specific default policy. Acceptable values are: 'Orphan'\
          \ - orphan the dependents; 'Background' - allow the garbage collector to\
          \ delete the dependents in the background; 'Foreground' - a cascading policy\
          \ that deletes all dependents in the foreground."
        in: query
        name: propagationPolicy
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the ImageStream
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/v1.DeleteOptions'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Status'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Status'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Status'
          description: OK
      summary: delete an ImageStream
      tags:
      - ImageStream
      x-codegen-request-body-name: body
    get:
      operationId: readNamespacedImageStream
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: Should this value be exported.  Export strips fields that a user
          can not specify.
        in: query
        name: export
        schema:
          type: boolean
      - description: Should the export be exact.  Exact export maintains cluster-specific
          fields like 'Namespace'.
        in: query
        name: exact
        schema:
          type: boolean
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the ImageStream
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.ImageStream'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.ImageStream'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.ImageStream'
          description: OK
      summary: read the specified ImageStream
      tags:
      - ImageStream
    patch:
      operationId: patchNamespacedImageStream
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the ImageStream
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/v1.Patch'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/v1.Patch'
          application/strategic-merge-patch+json:
            schema:
              $ref: '#/components/schemas/v1.Patch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.ImageStream'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.ImageStream'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.ImageStream'
          description: OK
      summary: partially update the specified ImageStream
      tags:
      - ImageStream
      x-codegen-request-body-name: body
    put:
      operationId: replaceNamespacedImageStream
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the ImageStream
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/v1.ImageStream'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.ImageStream'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.ImageStream'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.ImageStream'
          description: OK
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.ImageStream'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.ImageStream'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.ImageStream'
          description: Created
      summary: replace the specified ImageStream
      tags:
      - ImageStream
      x-codegen-request-body-name: body
  /apis/image.openshift.io/v1/namespaces/{namespace}/imagestreamtags:
    get:
      operationId: listNamespacedImageStreamTag
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything.
        in: query
        name: labelSelector
        schema:
          type: string
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        in: query
        name: fieldSelector
        schema:
          type: string
      - description: "If true, partially initialized resources are included in the\
          \ response."
        in: query
        name: includeUninitialized
        schema:
          type: boolean
      - description: "Watch for changes to the described resources and return them\
          \ as a stream of add, update, and remove notifications. Specify resourceVersion."
        in: query
        name: watch
        schema:
          type: boolean
      - description: "When specified with a watch call, shows changes that occur after\
          \ that particular version of a resource. Defaults to changes from the beginning\
          \ of history. When specified for list: - if unset, then the result is returned\
          \ from remote storage based on quorum-read flag; - if it's 0, then we simply\
          \ return what we currently have in cache, no guarantee; - if set to non\
          \ zero, then the result is at least as fresh as given rv."
        in: query
        name: resourceVersion
        schema:
          type: string
      - description: "Timeout for the list/watch call. This limits the duration of\
          \ the call, regardless of any activity or inactivity."
        in: query
        name: timeoutSeconds
        schema:
          type: integer
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        in: query
        name: limit
        schema:
          type: integer
      - description: "The continue option should be set when retrieving more results\
          \ from the server. Since this value is server defined, clients may only\
          \ use the continue value from a previous query result with identical query\
          \ parameters (except for the value of continue) and the server may reject\
          \ a continue value it does not recognize. If the specified continue value\
          \ is no longer valid whether due to expiration (generally five to fifteen\
          \ minutes) or a configuration change on the server the server will respond\
          \ with a 410 ResourceExpired error indicating the client must restart their\
          \ list without the continue field. This field is not supported when watch\
          \ is true. Clients may start a watch from the last resourceVersion value\
          \ returned by the server and not miss any modifications."
        in: query
        name: continue
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.ImageStreamTagList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.ImageStreamTagList'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.ImageStreamTagList'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/v1.ImageStreamTagList'
            application/vnd.kubernetes.protobuf;stream=watch:
              schema:
                $ref: '#/components/schemas/v1.ImageStreamTagList'
          description: OK
      summary: list objects of kind ImageStreamTag
      tags:
      - ImageStreamTag
    post:
      operationId: createNamespacedImageStreamTag
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/v1.ImageStreamTag'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.ImageStreamTag'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.ImageStreamTag'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.ImageStreamTag'
          description: OK
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.ImageStreamTag'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.ImageStreamTag'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.ImageStreamTag'
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.ImageStreamTag'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.ImageStreamTag'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.ImageStreamTag'
          description: Accepted
      summary: create an ImageStreamTag
      tags:
      - ImageStreamTag
      x-codegen-request-body-name: body
  /apis/image.openshift.io/v1/namespaces/{namespace}/imagestreamtags/{name}:
    delete:
      operationId: deleteNamespacedImageStreamTag
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: "The duration in seconds before the object should be deleted.\
          \ Value must be non-negative integer. The value zero indicates delete immediately.\
          \ If this value is nil, the default grace period for the specified type\
          \ will be used. Defaults to a per object value if not specified. zero means\
          \ delete immediately."
        in: query
        name: gracePeriodSeconds
        schema:
          type: integer
      - description: "Deprecated: please use the PropagationPolicy, this field will\
          \ be deprecated in 1.7. Should the dependent objects be orphaned. If true/false,\
          \ the \"orphan\" finalizer will be added to/removed from the object's finalizers\
          \ list. Either this field or PropagationPolicy may be set, but not both."
        in: query
        name: orphanDependents
        schema:
          type: boolean
      - description: "Whether and how garbage collection will be performed. Either\
          \ this field or OrphanDependents may be set, but not both. The default policy\
          \ is decided by the existing finalizer set in the metadata.finalizers and\
          \ the resource-specific default policy. Acceptable values are: 'Orphan'\
          \ - orphan the dependents; 'Background' - allow the garbage collector to\
          \ delete the dependents in the background; 'Foreground' - a cascading policy\
          \ that deletes all dependents in the foreground."
        in: query
        name: propagationPolicy
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the ImageStreamTag
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/v1.DeleteOptions'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Status'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Status'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Status'
          description: OK
      summary: delete an ImageStreamTag
      tags:
      - ImageStreamTag
      x-codegen-request-body-name: body
    get:
      operationId: readNamespacedImageStreamTag
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the ImageStreamTag
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.ImageStreamTag'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.ImageStreamTag'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.ImageStreamTag'
          description: OK
      summary: read the specified ImageStreamTag
      tags:
      - ImageStreamTag
    patch:
      operationId: patchNamespacedImageStreamTag
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the ImageStreamTag
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/v1.Patch'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/v1.Patch'
          application/strategic-merge-patch+json:
            schema:
              $ref: '#/components/schemas/v1.Patch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.ImageStreamTag'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.ImageStreamTag'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.ImageStreamTag'
          description: OK
      summary: partially update the specified ImageStreamTag
      tags:
      - ImageStreamTag
      x-codegen-request-body-name: body
    put:
      operationId: replaceNamespacedImageStreamTag
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the ImageStreamTag
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/v1.ImageStreamTag'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.ImageStreamTag'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.ImageStreamTag'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.ImageStreamTag'
          description: OK
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.ImageStreamTag'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.ImageStreamTag'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.ImageStreamTag'
          description: Created
      summary: replace the specified ImageStreamTag
      tags:
      - ImageStreamTag
      x-codegen-request-body-name: body
  /apis/route.openshift.io/v1/namespaces/{namespace}/routes:
    delete:
      operationId: deletecollectionNamespacedRoute
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything.
        in: query
        name: labelSelector
        schema:
          type: string
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        in: query
        name: fieldSelector
        schema:
          type: string
      - description: "If true, partially initialized resources are included in the\
          \ response."
        in: query
        name: includeUninitialized
        schema:
          type: boolean
      - description: "Watch for changes to the described resources and return them\
          \ as a stream of add, update, and remove notifications. Specify resourceVersion."
        in: query
        name: watch
        schema:
          type: boolean
      - description: "When specified with a watch call, shows changes that occur after\
          \ that particular version of a resource. Defaults to changes from the beginning\
          \ of history. When specified for list: - if unset, then the result is returned\
          \ from remote storage based on quorum-read flag; - if it's 0, then we simply\
          \ return what we currently have in cache, no guarantee; - if set to non\
          \ zero, then the result is at least as fresh as given rv."
        in: query
        name: resourceVersion
        schema:
          type: string
      - description: "Timeout for the list/watch call. This limits the duration of\
          \ the call, regardless of any activity or inactivity."
        in: query
        name: timeoutSeconds
        schema:
          type: integer
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        in: query
        name: limit
        schema:
          type: integer
      - description: "The continue option should be set when retrieving more results\
          \ from the server. Since this value is server defined, clients may only\
          \ use the continue value from a previous query result with identical query\
          \ parameters (except for the value of continue) and the server may reject\
          \ a continue value it does not recognize. If the specified continue value\
          \ is no longer valid whether due to expiration (generally five to fifteen\
          \ minutes) or a configuration change on the server the server will respond\
          \ with a 410 ResourceExpired error indicating the client must restart their\
          \ list without the continue field. This field is not supported when watch\
          \ is true. Clients may start a watch from the last resourceVersion value\
          \ returned by the server and not miss any modifications."
        in: query
        name: continue
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Status'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Status'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Status'
          description: OK
      summary: delete collection of Route
      tags:
      - Route
    get:
      operationId: listNamespacedRoute
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything.
        in: query
        name: labelSelector
        schema:
          type: string
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        in: query
        name: fieldSelector
        schema:
          type: string
      - description: "If true, partially initialized resources are included in the\
          \ response."
        in: query
        name: includeUninitialized
        schema:
          type: boolean
      - description: "Watch for changes to the described resources and return them\
          \ as a stream of add, update, and remove notifications. Specify resourceVersion."
        in: query
        name: watch
        schema:
          type: boolean
      - description: "When specified with a watch call, shows changes that occur after\
          \ that particular version of a resource. Defaults to changes from the beginning\
          \ of history. When specified for list: - if unset, then the result is returned\
          \ from remote storage based on quorum-read flag; - if it's 0, then we simply\
          \ return what we currently have in cache, no guarantee; - if set to non\
          \ zero, then the result is at least as fresh as given rv."
        in: query
        name: resourceVersion
        schema:
          type: string
      - description: "Timeout for the list/watch call. This limits the duration of\
          \ the call, regardless of any activity or inactivity."
        in: query
        name: timeoutSeconds
        schema:
          type: integer
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        in: query
        name: limit
        schema:
          type: integer
      - description: "The continue option should be set when retrieving more results\
          \ from the server. Since this value is server defined, clients may only\
          \ use the continue value from a previous query result with identical query\
          \ parameters (except for the value of continue) and the server may reject\
          \ a continue value it does not recognize. If the specified continue value\
          \ is no longer valid whether due to expiration (generally five to fifteen\
          \ minutes) or a configuration change on the server the server will respond\
          \ with a 410 ResourceExpired error indicating the client must restart their\
          \ list without the continue field. This field is not supported when watch\
          \ is true. Clients may start a watch from the last resourceVersion value\
          \ returned by the server and not miss any modifications."
        in: query
        name: continue
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.RouteList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.RouteList'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.RouteList'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/v1.RouteList'
            application/vnd.kubernetes.protobuf;stream=watch:
              schema:
                $ref: '#/components/schemas/v1.RouteList'
          description: OK
      summary: list or watch objects of kind Route
      tags:
      - Route
    post:
      operationId: createNamespacedRoute
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/v1.Route'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Route'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Route'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Route'
          description: OK
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Route'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Route'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Route'
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Route'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Route'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Route'
          description: Accepted
      summary: create a Route
      tags:
      - Route
      x-codegen-request-body-name: body
  /apis/route.openshift.io/v1/namespaces/{namespace}/routes/{name}:
    delete:
      operationId: deleteNamespacedRoute
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: "The duration in seconds before the object should be deleted.\
          \ Value must be non-negative integer. The value zero indicates delete immediately.\
          \ If this value is nil, the default grace period for the specified type\
          \ will be used. Defaults to a per object value if not specified. zero means\
          \ delete immediately."
        in: query
        name: gracePeriodSeconds
        schema:
          type: integer
      - description: "Deprecated: please use the PropagationPolicy, this field will\
          \ be deprecated in 1.7. Should the dependent objects be orphaned. If true/false,\
          \ the \"orphan\" finalizer will be added to/removed from the object's finalizers\
          \ list. Either this field or PropagationPolicy may be set, but not both."
        in: query
        name: orphanDependents
        schema:
          type: boolean
      - description: "Whether and how garbage collection will be performed. Either\
          \ this field or OrphanDependents may be set, but not both. The default policy\
          \ is decided by the existing finalizer set in the metadata.finalizers and\
          \ the resource-specific default policy. Acceptable values are: 'Orphan'\
          \ - orphan the dependents; 'Background' - allow the garbage collector to\
          \ delete the dependents in the background; 'Foreground' - a cascading policy\
          \ that deletes all dependents in the foreground."
        in: query
        name: propagationPolicy
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the Route
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/v1.DeleteOptions'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Status'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Status'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Status'
          description: OK
      summary: delete a Route
      tags:
      - Route
      x-codegen-request-body-name: body
    get:
      operationId: readNamespacedRoute
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: Should this value be exported.  Export strips fields that a user
          can not specify.
        in: query
        name: export
        schema:
          type: boolean
      - description: Should the export be exact.  Exact export maintains cluster-specific
          fields like 'Namespace'.
        in: query
        name: exact
        schema:
          type: boolean
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the Route
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Route'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Route'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Route'
          description: OK
      summary: read the specified Route
      tags:
      - Route
    patch:
      operationId: patchNamespacedRoute
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the Route
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/v1.Patch'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/v1.Patch'
          application/strategic-merge-patch+json:
            schema:
              $ref: '#/components/schemas/v1.Patch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Route'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Route'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Route'
          description: OK
      summary: partially update the specified Route
      tags:
      - Route
      x-codegen-request-body-name: body
    put:
      operationId: replaceNamespacedRoute
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the Route
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/v1.Route'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Route'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Route'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Route'
          description: OK
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Route'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Route'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Route'
          description: Created
      summary: replace the specified Route
      tags:
      - Route
      x-codegen-request-body-name: body
  /apis/route.openshift.io/v1/namespaces/{namespace}/routes/{name}/status:
    get:
      operationId: readNamespacedRouteStatus
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the Route
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Route'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Route'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Route'
          description: OK
      summary: read status of the specified Route
      tags:
      - Route
    patch:
      operationId: patchNamespacedRouteStatus
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the Route
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/v1.Patch'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/v1.Patch'
          application/strategic-merge-patch+json:
            schema:
              $ref: '#/components/schemas/v1.Patch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Route'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Route'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Route'
          description: OK
      summary: partially update status of the specified Route
      tags:
      - Route
      x-codegen-request-body-name: body
    put:
      operationId: replaceNamespacedRouteStatus
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the Route
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/v1.Route'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Route'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Route'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Route'
          description: OK
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Route'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Route'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Route'
          description: Created
      summary: replace status of the specified Route
      tags:
      - Route
      x-codegen-request-body-name: body
  /apis/template.openshift.io/v1/namespaces/{namespace}/templateinstances:
    delete:
      operationId: deletecollectionNamespacedTemplateInstance
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything.
        in: query
        name: labelSelector
        schema:
          type: string
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        in: query
        name: fieldSelector
        schema:
          type: string
      - description: "If true, partially initialized resources are included in the\
          \ response."
        in: query
        name: includeUninitialized
        schema:
          type: boolean
      - description: "Watch for changes to the described resources and return them\
          \ as a stream of add, update, and remove notifications. Specify resourceVersion."
        in: query
        name: watch
        schema:
          type: boolean
      - description: "When specified with a watch call, shows changes that occur after\
          \ that particular version of a resource. Defaults to changes from the beginning\
          \ of history. When specified for list: - if unset, then the result is returned\
          \ from remote storage based on quorum-read flag; - if it's 0, then we simply\
          \ return what we currently have in cache, no guarantee; - if set to non\
          \ zero, then the result is at least as fresh as given rv."
        in: query
        name: resourceVersion
        schema:
          type: string
      - description: "Timeout for the list/watch call. This limits the duration of\
          \ the call, regardless of any activity or inactivity."
        in: query
        name: timeoutSeconds
        schema:
          type: integer
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        in: query
        name: limit
        schema:
          type: integer
      - description: "The continue option should be set when retrieving more results\
          \ from the server. Since this value is server defined, clients may only\
          \ use the continue value from a previous query result with identical query\
          \ parameters (except for the value of continue) and the server may reject\
          \ a continue value it does not recognize. If the specified continue value\
          \ is no longer valid whether due to expiration (generally five to fifteen\
          \ minutes) or a configuration change on the server the server will respond\
          \ with a 410 ResourceExpired error indicating the client must restart their\
          \ list without the continue field. This field is not supported when watch\
          \ is true. Clients may start a watch from the last resourceVersion value\
          \ returned by the server and not miss any modifications."
        in: query
        name: continue
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Status'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Status'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Status'
          description: OK
      summary: delete collection of TemplateInstance
      tags:
      - TemplateInstance
    get:
      operationId: listNamespacedTemplateInstance
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything.
        in: query
        name: labelSelector
        schema:
          type: string
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        in: query
        name: fieldSelector
        schema:
          type: string
      - description: "If true, partially initialized resources are included in the\
          \ response."
        in: query
        name: includeUninitialized
        schema:
          type: boolean
      - description: "Watch for changes to the described resources and return them\
          \ as a stream of add, update, and remove notifications. Specify resourceVersion."
        in: query
        name: watch
        schema:
          type: boolean
      - description: "When specified with a watch call, shows changes that occur after\
          \ that particular version of a resource. Defaults to changes from the beginning\
          \ of history. When specified for list: - if unset, then the result is returned\
          \ from remote storage based on quorum-read flag; - if it's 0, then we simply\
          \ return what we currently have in cache, no guarantee; - if set to non\
          \ zero, then the result is at least as fresh as given rv."
        in: query
        name: resourceVersion
        schema:
          type: string
      - description: "Timeout for the list/watch call. This limits the duration of\
          \ the call, regardless of any activity or inactivity."
        in: query
        name: timeoutSeconds
        schema:
          type: integer
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        in: query
        name: limit
        schema:
          type: integer
      - description: "The continue option should be set when retrieving more results\
          \ from the server. Since this value is server defined, clients may only\
          \ use the continue value from a previous query result with identical query\
          \ parameters (except for the value of continue) and the server may reject\
          \ a continue value it does not recognize. If the specified continue value\
          \ is no longer valid whether due to expiration (generally five to fifteen\
          \ minutes) or a configuration change on the server the server will respond\
          \ with a 410 ResourceExpired error indicating the client must restart their\
          \ list without the continue field. This field is not supported when watch\
          \ is true. Clients may start a watch from the last resourceVersion value\
          \ returned by the server and not miss any modifications."
        in: query
        name: continue
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.TemplateInstanceList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.TemplateInstanceList'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.TemplateInstanceList'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/v1.TemplateInstanceList'
            application/vnd.kubernetes.protobuf;stream=watch:
              schema:
                $ref: '#/components/schemas/v1.TemplateInstanceList'
          description: OK
      summary: list or watch objects of kind TemplateInstance
      tags:
      - TemplateInstance
    post:
      operationId: createNamespacedTemplateInstance
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/v1.TemplateInstance'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.TemplateInstance'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.TemplateInstance'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.TemplateInstance'
          description: OK
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.TemplateInstance'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.TemplateInstance'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.TemplateInstance'
          description: Created
        "202":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.TemplateInstance'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.TemplateInstance'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.TemplateInstance'
          description: Accepted
      summary: create a TemplateInstance
      tags:
      - TemplateInstance
      x-codegen-request-body-name: body
  /apis/template.openshift.io/v1/namespaces/{namespace}/templateinstances/{name}:
    delete:
      operationId: deleteNamespacedTemplateInstance
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: "The duration in seconds before the object should be deleted.\
          \ Value must be non-negative integer. The value zero indicates delete immediately.\
          \ If this value is nil, the default grace period for the specified type\
          \ will be used. Defaults to a per object value if not specified. zero means\
          \ delete immediately."
        in: query
        name: gracePeriodSeconds
        schema:
          type: integer
      - description: "Deprecated: please use the PropagationPolicy, this field will\
          \ be deprecated in 1.7. Should the dependent objects be orphaned. If true/false,\
          \ the \"orphan\" finalizer will be added to/removed from the object's finalizers\
          \ list. Either this field or PropagationPolicy may be set, but not both."
        in: query
        name: orphanDependents
        schema:
          type: boolean
      - description: "Whether and how garbage collection will be performed. Either\
          \ this field or OrphanDependents may be set, but not both. The default policy\
          \ is decided by the existing finalizer set in the metadata.finalizers and\
          \ the resource-specific default policy. Acceptable values are: 'Orphan'\
          \ - orphan the dependents; 'Background' - allow the garbage collector to\
          \ delete the dependents in the background; 'Foreground' - a cascading policy\
          \ that deletes all dependents in the foreground."
        in: query
        name: propagationPolicy
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the TemplateInstance
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/v1.DeleteOptions'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Status'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Status'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Status'
          description: OK
      summary: delete a TemplateInstance
      tags:
      - TemplateInstance
      x-codegen-request-body-name: body
    get:
      operationId: readNamespacedTemplateInstance
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: Should this value be exported.  Export strips fields that a user
          can not specify.
        in: query
        name: export
        schema:
          type: boolean
      - description: Should the export be exact.  Exact export maintains cluster-specific
          fields like 'Namespace'.
        in: query
        name: exact
        schema:
          type: boolean
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the TemplateInstance
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.TemplateInstance'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.TemplateInstance'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.TemplateInstance'
          description: OK
      summary: read the specified TemplateInstance
      tags:
      - TemplateInstance
    patch:
      operationId: patchNamespacedTemplateInstance
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the TemplateInstance
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/v1.Patch'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/v1.Patch'
          application/strategic-merge-patch+json:
            schema:
              $ref: '#/components/schemas/v1.Patch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.TemplateInstance'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.TemplateInstance'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.TemplateInstance'
          description: OK
      summary: partially update the specified TemplateInstance
      tags:
      - TemplateInstance
      x-codegen-request-body-name: body
    put:
      operationId: replaceNamespacedTemplateInstance
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the TemplateInstance
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/v1.TemplateInstance'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.TemplateInstance'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.TemplateInstance'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.TemplateInstance'
          description: OK
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.TemplateInstance'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.TemplateInstance'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.TemplateInstance'
          description: Created
      summary: replace the specified TemplateInstance
      tags:
      - TemplateInstance
      x-codegen-request-body-name: body
  /apis/template.openshift.io/v1/namespaces/{namespace}/templateinstances/{name}/status:
    get:
      operationId: readNamespacedTemplateInstanceStatus
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the TemplateInstance
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.TemplateInstance'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.TemplateInstance'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.TemplateInstance'
          description: OK
      summary: read status of the specified TemplateInstance
      tags:
      - TemplateInstance
  /apis/template.openshift.io/v1/templateinstances:
    get:
      operationId: listTemplateInstanceForAllNamespaces
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything.
        in: query
        name: labelSelector
        schema:
          type: string
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        in: query
        name: fieldSelector
        schema:
          type: string
      - description: "If true, partially initialized resources are included in the\
          \ response."
        in: query
        name: includeUninitialized
        schema:
          type: boolean
      - description: "Watch for changes to the described resources and return them\
          \ as a stream of add, update, and remove notifications. Specify resourceVersion."
        in: query
        name: watch
        schema:
          type: boolean
      - description: "When specified with a watch call, shows changes that occur after\
          \ that particular version of a resource. Defaults to changes from the beginning\
          \ of history. When specified for list: - if unset, then the result is returned\
          \ from remote storage based on quorum-read flag; - if it's 0, then we simply\
          \ return what we currently have in cache, no guarantee; - if set to non\
          \ zero, then the result is at least as fresh as given rv."
        in: query
        name: resourceVersion
        schema:
          type: string
      - description: "Timeout for the list/watch call. This limits the duration of\
          \ the call, regardless of any activity or inactivity."
        in: query
        name: timeoutSeconds
        schema:
          type: integer
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        in: query
        name: limit
        schema:
          type: integer
      - description: "The continue option should be set when retrieving more results\
          \ from the server. Since this value is server defined, clients may only\
          \ use the continue value from a previous query result with identical query\
          \ parameters (except for the value of continue) and the server may reject\
          \ a continue value it does not recognize. If the specified continue value\
          \ is no longer valid whether due to expiration (generally five to fifteen\
          \ minutes) or a configuration change on the server the server will respond\
          \ with a 410 ResourceExpired error indicating the client must restart their\
          \ list without the continue field. This field is not supported when watch\
          \ is true. Clients may start a watch from the last resourceVersion value\
          \ returned by the server and not miss any modifications."
        in: query
        name: continue
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.TemplateInstanceList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.TemplateInstanceList'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.TemplateInstanceList'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/v1.TemplateInstanceList'
            application/vnd.kubernetes.protobuf;stream=watch:
              schema:
                $ref: '#/components/schemas/v1.TemplateInstanceList'
          description: OK
      summary: list or watch objects of kind TemplateInstance
      tags:
      - TemplateInstance
  /apis/template.openshift.io/v1/namespaces/{namespace}/templates:
    get:
      operationId: listNamespacedTemplate
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything.
        in: query
        name: labelSelector
        schema:
          type: string
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        in: query
        name: fieldSelector
        schema:
          type: string
      - description: "If true, partially initialized resources are included in the\
          \ response."
        in: query
        name: includeUninitialized
        schema:
          type: boolean
      - description: "Watch for changes to the described resources and return them\
          \ as a stream of add, update, and remove notifications. Specify resourceVersion."
        in: query
        name: watch
        schema:
          type: boolean
      - description: "When specified with a watch call, shows changes that occur after\
          \ that particular version of a resource. Defaults to changes from the beginning\
          \ of history. When specified for list: - if unset, then the result is returned\
          \ from remote storage based on quorum-read flag; - if it's 0, then we simply\
          \ return what we currently have in cache, no guarantee; - if set to non\
          \ zero, then the result is at least as fresh as given rv."
        in: query
        name: resourceVersion
        schema:
          type: string
      - description: "Timeout for the list/watch call. This limits the duration of\
          \ the call, regardless of any activity or inactivity."
        in: query
        name: timeoutSeconds
        schema:
          type: integer
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        in: query
        name: limit
        schema:
          type: integer
      - description: "The continue option should be set when retrieving more results\
          \ from the server. Since this value is server defined, clients may only\
          \ use the continue value from a previous query result with identical query\
          \ parameters (except for the value of continue) and the server may reject\
          \ a continue value it does not recognize. If the specified continue value\
          \ is no longer valid whether due to expiration (generally five to fifteen\
          \ minutes) or a configuration change on the server the server will respond\
          \ with a 410 ResourceExpired error indicating the client must restart their\
          \ list without the continue field. This field is not supported when watch\
          \ is true. Clients may start a watch from the last resourceVersion value\
          \ returned by the server and not miss any modifications."
        in: query
        name: continue
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.TemplateList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.TemplateList'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.TemplateList'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/v1.TemplateList'
            application/vnd.kubernetes.protobuf;stream=watch:
              schema:
                $ref: '#/components/schemas/v1.TemplateList'
          description: OK
      summary: list or watch objects of kind Template
      tags:
      - Template
  /apis/template.openshift.io/v1/namespaces/{namespace}/templates/{name}:
    delete:
      operationId: deleteNamespacedTemplate
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: "The duration in seconds before the object should be deleted.\
          \ Value must be non-negative integer. The value zero indicates delete immediately.\
          \ If this value is nil, the default grace period for the specified type\
          \ will be used. Defaults to a per object value if not specified. zero means\
          \ delete immediately."
        in: query
        name: gracePeriodSeconds
        schema:
          type: integer
      - description: "Deprecated: please use the PropagationPolicy, this field will\
          \ be deprecated in 1.7. Should the dependent objects be orphaned. If true/false,\
          \ the \"orphan\" finalizer will be added to/removed from the object's finalizers\
          \ list. Either this field or PropagationPolicy may be set, but not both."
        in: query
        name: orphanDependents
        schema:
          type: boolean
      - description: "Whether and how garbage collection will be performed. Either\
          \ this field or OrphanDependents may be set, but not both. The default policy\
          \ is decided by the existing finalizer set in the metadata.finalizers and\
          \ the resource-specific default policy. Acceptable values are: 'Orphan'\
          \ - orphan the dependents; 'Background' - allow the garbage collector to\
          \ delete the dependents in the background; 'Foreground' - a cascading policy\
          \ that deletes all dependents in the foreground."
        in: query
        name: propagationPolicy
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the Template
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/v1.DeleteOptions'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Status'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Status'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Status'
          description: OK
      summary: delete a Template
      tags:
      - Template
      x-codegen-request-body-name: body
    get:
      operationId: readNamespacedTemplate
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: Should this value be exported.  Export strips fields that a user
          can not specify.
        in: query
        name: export
        schema:
          type: boolean
      - description: Should the export be exact.  Exact export maintains cluster-specific
          fields like 'Namespace'.
        in: query
        name: exact
        schema:
          type: boolean
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the Template
        in: path
        name: name
        required: true
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Template'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Template'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Template'
          description: OK
      summary: read the specified Template
      tags:
      - Template
    patch:
      operationId: patchNamespacedTemplate
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the Template
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          application/json-patch+json:
            schema:
              $ref: '#/components/schemas/v1.Patch'
          application/merge-patch+json:
            schema:
              $ref: '#/components/schemas/v1.Patch'
          application/strategic-merge-patch+json:
            schema:
              $ref: '#/components/schemas/v1.Patch'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Template'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Template'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Template'
          description: OK
      summary: partially update the specified Template
      tags:
      - Template
      x-codegen-request-body-name: body
    put:
      operationId: replaceNamespacedTemplate
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: "object name and auth scope, such as for teams and projects"
        in: path
        name: namespace
        required: true
        schema:
          type: string
      - description: name of the Template
        in: path
        name: name
        required: true
        schema:
          type: string
      requestBody:
        content:
          '*/*':
            schema:
              $ref: '#/components/schemas/v1.Template'
        required: true
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Template'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Template'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Template'
          description: OK
        "201":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.Template'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.Template'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.Template'
          description: Created
      summary: replace the specified Template
      tags:
      - Template
      x-codegen-request-body-name: body
  /apis/template.openshift.io/v1/templates:
    get:
      operationId: listTemplateForAllNamespaces
      parameters:
      - description: "If 'true', then the output is pretty printed."
        in: query
        name: pretty
        schema:
          type: string
      - description: A selector to restrict the list of returned objects by their
          labels. Defaults to everything.
        in: query
        name: labelSelector
        schema:
          type: string
      - description: A selector to restrict the list of returned objects by their
          fields. Defaults to everything.
        in: query
        name: fieldSelector
        schema:
          type: string
      - description: "If true, partially initialized resources are included in the\
          \ response."
        in: query
        name: includeUninitialized
        schema:
          type: boolean
      - description: "Watch for changes to the described resources and return them\
          \ as a stream of add, update, and remove notifications. Specify resourceVersion."
        in: query
        name: watch
        schema:
          type: boolean
      - description: "When specified with a watch call, shows changes that occur after\
          \ that particular version of a resource. Defaults to changes from the beginning\
          \ of history. When specified for list: - if unset, then the result is returned\
          \ from remote storage based on quorum-read flag; - if it's 0, then we simply\
          \ return what we currently have in cache, no guarantee; - if set to non\
          \ zero, then the result is at least as fresh as given rv."
        in: query
        name: resourceVersion
        schema:
          type: string
      - description: "Timeout for the list/watch call. This limits the duration of\
          \ the call, regardless of any activity or inactivity."
        in: query
        name: timeoutSeconds
        schema:
          type: integer
      - description: |-
          limit is a maximum number of responses to return for a list call. If more items exist, the server will set the `continue` field on the list metadata to a value that can be used with the same initial query to retrieve the next set of results. Setting a limit may return fewer than the requested amount of items (up to zero items) in the event all requested objects are filtered out and clients should only use the presence of the continue field to determine whether more results are available. Servers may choose not to support the limit argument and will return all of the available results. If limit is specified and the continue field is empty, clients may assume that no more results are available. This field is not supported if watch is true.

          The server guarantees that the objects returned when using continue will be identical to issuing a single list call without a limit - that is, no objects created, modified, or deleted after the first request is issued will be included in any subsequent continued requests. This is sometimes referred to as a consistent snapshot, and ensures that a client that is using limit to receive smaller chunks of a very large result can ensure they see all possible objects. If objects are updated during a chunked list the version of the object that was present at the time the first list result was calculated is returned.
        in: query
        name: limit
        schema:
          type: integer
      - description: "The continue option should be set when retrieving more results\
          \ from the server. Since this value is server defined, clients may only\
          \ use the continue value from a previous query result with identical query\
          \ parameters (except for the value of continue) and the server may reject\
          \ a continue value it does not recognize. If the specified continue value\
          \ is no longer valid whether due to expiration (generally five to fifteen\
          \ minutes) or a configuration change on the server the server will respond\
          \ with a 410 ResourceExpired error indicating the client must restart their\
          \ list without the continue field. This field is not supported when watch\
          \ is true. Clients may start a watch from the last resourceVersion value\
          \ returned by the server and not miss any modifications."
        in: query
        name: continue
        schema:
          type: string
      responses:
        "200":
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/v1.TemplateList'
            application/yaml:
              schema:
                $ref: '#/components/schemas/v1.TemplateList'
            application/vnd.kubernetes.protobuf:
              schema:
                $ref: '#/components/schemas/v1.TemplateList'
            application/json;stream=watch:
              schema:
                $ref: '#/components/schemas/v1.TemplateList'
            application/vnd.kubernetes.protobuf;stream=watch:
              schema:
                $ref: '#/components/schemas/v1.TemplateList'
          description: OK
      summary: list or watch objects of kind Template
      tags:
      - Template
components:
  schemas:
    v1.APIResource:
      description: APIResource specifies the name of a resource and whether it is
        namespaced.
      properties:
        categories:
          description: categories is a list of the grouped resources this resource
            belongs to (e.g. 'all')
          items:
            type: string
          type: array
        group:
          description: "group is the preferred group of the resource.  Empty implies\
            \ the group of the containing resource list. For subresources, this may\
            \ have a different value, for example: Scale\"."
          type: string
        kind:
          description: kind is the kind for the resource (e.g. 'Foo' is the kind for
            a resource 'foo')
          type: string
        name:
          description: name is the plural name of the resource.
          type: string
        namespaced:
          description: namespaced indicates if a resource is namespaced or not.
          type: boolean
        shortNames:
          description: shortNames is a list of suggested short names of the resource.
          items:
            type: string
          type: array
        singularName:
          description: singularName is the singular name of the resource.  This allows
            clients to handle plural and singular opaquely. The singularName is more
            correct for reporting status on a single item and both singular and plural
            are allowed from the kubectl CLI interface.
          type: string
        verbs:
          description: "verbs is a list of supported kube verbs (this includes get,\
            \ list, watch, create, update, patch, delete, deletecollection, and proxy)"
          items:
            type: string
          type: array
        version:
          description: "version is the preferred version of the resource.  Empty implies\
            \ the version of the containing resource list For subresources, this may\
            \ have a different value, for example: v1 (while inside a v1beta1 version\
            \ of the core resource's group)\"."
          type: string
      required:
      - kind
      - name
      - namespaced
      - singularName
      - verbs
      type: object
    v1.APIResourceList:
      description: "APIResourceList is a list of APIResource, it is used to expose\
        \ the name of the resources supported in a specific group and version, and\
        \ if the resource is namespaced."
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
          type: string
        groupVersion:
          description: groupVersion is the group and version this APIResourceList
            is for.
          type: string
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
          type: string
        resources:
          description: resources contains the name of the resources and if they are
            namespaced.
          items:
            $ref: '#/components/schemas/v1.APIResource'
          type: array
      required:
      - groupVersion
      - resources
      type: object
    v1.AWSElasticBlockStoreVolumeSource:
      description: |-
        Represents a Persistent Disk resource in AWS.

        An AWS EBS disk must exist before mounting to a container. The disk must also be in the same AWS zone as the kubelet. An AWS EBS disk can only be mounted as read/write once. AWS EBS volumes support ownership management and SELinux relabeling.
      example:
        partition: 5
        volumeID: volumeID
        readOnly: true
        fsType: fsType
      properties:
        fsType:
          description: "Filesystem type of the volume that you want to mount. Tip:\
            \ Ensure that the filesystem type is supported by the host operating system.\
            \ Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"\
            ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore"
          type: string
        partition:
          description: "The partition in the volume that you want to mount. If omitted,\
            \ the default is to mount by volume name. Examples: For volume /dev/sda1,\
            \ you specify the partition as \"1\". Similarly, the volume partition\
            \ for /dev/sda is \"0\" (or you can leave the property empty)."
          format: int32
          type: integer
        readOnly:
          description: "Specify \"true\" to force and set the ReadOnly property in\
            \ VolumeMounts to \"true\". If omitted, the default is \"false\". More\
            \ info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore"
          type: boolean
        volumeID:
          description: "Unique ID of the persistent disk resource in AWS (Amazon EBS\
            \ volume). More info: https://kubernetes.io/docs/concepts/storage/volumes#awselasticblockstore"
          type: string
      required:
      - volumeID
      type: object
    v1.Affinity:
      description: Affinity is a group of affinity scheduling rules.
      example:
        nodeAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
            nodeSelectorTerms:
            - matchExpressions:
              - values:
                - values
                - values
                key: key
                operator: operator
              - values:
                - values
                - values
                key: key
                operator: operator
              matchFields:
              - values:
                - values
                - values
                key: key
                operator: operator
              - values:
                - values
                - values
                key: key
                operator: operator
            - matchExpressions:
              - values:
                - values
                - values
                key: key
                operator: operator
              - values:
                - values
                - values
                key: key
                operator: operator
              matchFields:
              - values:
                - values
                - values
                key: key
                operator: operator
              - values:
                - values
                - values
                key: key
                operator: operator
          preferredDuringSchedulingIgnoredDuringExecution:
          - preference:
              matchExpressions:
              - values:
                - values
                - values
                key: key
                operator: operator
              - values:
                - values
                - values
                key: key
                operator: operator
              matchFields:
              - values:
                - values
                - values
                key: key
                operator: operator
              - values:
                - values
                - values
                key: key
                operator: operator
            weight: 6
          - preference:
              matchExpressions:
              - values:
                - values
                - values
                key: key
                operator: operator
              - values:
                - values
                - values
                key: key
                operator: operator
              matchFields:
              - values:
                - values
                - values
                key: key
                operator: operator
              - values:
                - values
                - values
                key: key
                operator: operator
            weight: 6
        podAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - values:
                - values
                - values
                key: key
                operator: operator
              - values:
                - values
                - values
                key: key
                operator: operator
              matchLabels: "{}"
            topologyKey: topologyKey
            namespaces:
            - namespaces
            - namespaces
          - labelSelector:
              matchExpressions:
              - values:
                - values
                - values
                key: key
                operator: operator
              - values:
                - values
                - values
                key: key
                operator: operator
              matchLabels: "{}"
            topologyKey: topologyKey
            namespaces:
            - namespaces
            - namespaces
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                matchLabels: "{}"
              topologyKey: topologyKey
              namespaces:
              - namespaces
              - namespaces
            weight: 1
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                matchLabels: "{}"
              topologyKey: topologyKey
              namespaces:
              - namespaces
              - namespaces
            weight: 1
        podAntiAffinity:
          requiredDuringSchedulingIgnoredDuringExecution:
          - labelSelector:
              matchExpressions:
              - values:
                - values
                - values
                key: key
                operator: operator
              - values:
                - values
                - values
                key: key
                operator: operator
              matchLabels: "{}"
            topologyKey: topologyKey
            namespaces:
            - namespaces
            - namespaces
          - labelSelector:
              matchExpressions:
              - values:
                - values
                - values
                key: key
                operator: operator
              - values:
                - values
                - values
                key: key
                operator: operator
              matchLabels: "{}"
            topologyKey: topologyKey
            namespaces:
            - namespaces
            - namespaces
          preferredDuringSchedulingIgnoredDuringExecution:
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                matchLabels: "{}"
              topologyKey: topologyKey
              namespaces:
              - namespaces
              - namespaces
            weight: 1
          - podAffinityTerm:
              labelSelector:
                matchExpressions:
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                matchLabels: "{}"
              topologyKey: topologyKey
              namespaces:
              - namespaces
              - namespaces
            weight: 1
      properties:
        nodeAffinity:
          $ref: '#/components/schemas/v1.NodeAffinity'
        podAffinity:
          $ref: '#/components/schemas/v1.PodAffinity'
        podAntiAffinity:
          $ref: '#/components/schemas/v1.PodAntiAffinity'
      type: object
    v1.AllowedFlexVolume:
      description: AllowedFlexVolume represents a single Flexvolume that is allowed
        to be used.
      properties:
        driver:
          description: Driver is the name of the Flexvolume driver.
          type: string
      required:
      - driver
      type: object
    v1.AttachedVolume:
      description: AttachedVolume describes a volume attached to a node
      properties:
        devicePath:
          description: DevicePath represents the device path where the volume should
            be available
          type: string
        name:
          description: Name of the attached volume
          type: string
      required:
      - devicePath
      - name
      type: object
    v1.AzureDiskVolumeSource:
      description: AzureDisk represents an Azure Data Disk mount on the host and bind
        mount to the pod.
      example:
        diskName: diskName
        kind: "{}"
        readOnly: true
        cachingMode: "{}"
        diskURI: diskURI
        fsType: fsType
      properties:
        cachingMode:
          $ref: '#/components/schemas/v1.AzureDataDiskCachingMode'
        diskName:
          description: The Name of the data disk in the blob storage
          type: string
        diskURI:
          description: The URI the data disk in the blob storage
          type: string
        fsType:
          description: "Filesystem type to mount. Must be a filesystem type supported\
            \ by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly\
            \ inferred to be \"ext4\" if unspecified."
          type: string
        kind:
          $ref: '#/components/schemas/v1.AzureDataDiskKind'
        readOnly:
          description: Defaults to false (read/write). ReadOnly here will force the
            ReadOnly setting in VolumeMounts.
          type: boolean
      required:
      - diskName
      - diskURI
      type: object
    v1.AzureFilePersistentVolumeSource:
      description: AzureFile represents an Azure File Service mount on the host and
        bind mount to the pod.
      properties:
        readOnly:
          description: Defaults to false (read/write). ReadOnly here will force the
            ReadOnly setting in VolumeMounts.
          type: boolean
        secretName:
          description: the name of secret that contains Azure Storage Account Name
            and Key
          type: string
        secretNamespace:
          description: the namespace of the secret that contains Azure Storage Account
            Name and Key default is the same as the Pod
          type: string
        shareName:
          description: Share Name
          type: string
      required:
      - secretName
      - secretNamespace
      - shareName
      type: object
    v1.AzureFileVolumeSource:
      description: AzureFile represents an Azure File Service mount on the host and
        bind mount to the pod.
      example:
        secretName: secretName
        readOnly: true
        shareName: shareName
      properties:
        readOnly:
          description: Defaults to false (read/write). ReadOnly here will force the
            ReadOnly setting in VolumeMounts.
          type: boolean
        secretName:
          description: the name of secret that contains Azure Storage Account Name
            and Key
          type: string
        shareName:
          description: Share Name
          type: string
      required:
      - secretName
      - shareName
      type: object
    v1.Binding:
      description: "Binding ties one object to another; for example, a pod is bound\
        \ to a node by a scheduler. Deprecated in 1.7, please use the bindings subresource\
        \ of pods instead."
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
          type: string
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: '#/components/schemas/v1.ObjectMeta'
        target:
          $ref: '#/components/schemas/v1.ObjectReference'
      required:
      - target
      type: object
    v1.CSIPersistentVolumeSource:
      description: Represents storage that is managed by an external CSI volume driver
        (Beta feature)
      properties:
        controllerPublishSecretRef:
          $ref: '#/components/schemas/v1.SecretReference'
        driver:
          description: Driver is the name of the driver to use for this volume. Required.
          type: string
        fsType:
          description: "Filesystem type to mount. Must be a filesystem type supported\
            \ by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\"."
          type: string
        nodePublishSecretRef:
          $ref: '#/components/schemas/v1.SecretReference'
        nodeStageSecretRef:
          $ref: '#/components/schemas/v1.SecretReference'
        readOnly:
          description: "Optional: The value to pass to ControllerPublishVolumeRequest.\
            \ Defaults to false (read/write)."
          type: boolean
        volumeAttributes:
          description: Attributes of the volume to publish.
          properties: {}
          type: object
        volumeHandle:
          description: VolumeHandle is the unique volume name returned by the CSI
            volume plugin’s CreateVolume to refer to the volume on all subsequent
            calls. Required.
          type: string
      required:
      - driver
      - volumeHandle
      type: object
    v1.Capabilities:
      description: Adds and removes POSIX capabilities from running containers.
      example:
        add:
        - "{}"
        - "{}"
        drop:
        - "{}"
        - "{}"
      properties:
        add:
          description: Added capabilities
          items:
            $ref: '#/components/schemas/v1.Capability'
          type: array
        drop:
          description: Removed capabilities
          items:
            $ref: '#/components/schemas/v1.Capability'
          type: array
      type: object
    v1.CephFSPersistentVolumeSource:
      description: Represents a Ceph Filesystem mount that lasts the lifetime of a
        pod Cephfs volumes do not support ownership management or SELinux relabeling.
      properties:
        monitors:
          description: "Required: Monitors is a collection of Ceph monitors More info:\
            \ https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it"
          items:
            type: string
          type: array
        path:
          description: "Optional: Used as the mounted root, rather than the full Ceph\
            \ tree, default is /"
          type: string
        readOnly:
          description: "Optional: Defaults to false (read/write). ReadOnly here will\
            \ force the ReadOnly setting in VolumeMounts. More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it"
          type: boolean
        secretFile:
          description: "Optional: SecretFile is the path to key ring for User, default\
            \ is /etc/ceph/user.secret More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it"
          type: string
        secretRef:
          $ref: '#/components/schemas/v1.SecretReference'
        user:
          description: "Optional: User is the rados user name, default is admin More\
            \ info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it"
          type: string
      required:
      - monitors
      type: object
    v1.CephFSVolumeSource:
      description: Represents a Ceph Filesystem mount that lasts the lifetime of a
        pod Cephfs volumes do not support ownership management or SELinux relabeling.
      example:
        path: path
        secretRef:
          name: name
        secretFile: secretFile
        readOnly: true
        user: user
        monitors:
        - monitors
        - monitors
      properties:
        monitors:
          description: "Required: Monitors is a collection of Ceph monitors More info:\
            \ https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it"
          items:
            type: string
          type: array
        path:
          description: "Optional: Used as the mounted root, rather than the full Ceph\
            \ tree, default is /"
          type: string
        readOnly:
          description: "Optional: Defaults to false (read/write). ReadOnly here will\
            \ force the ReadOnly setting in VolumeMounts. More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it"
          type: boolean
        secretFile:
          description: "Optional: SecretFile is the path to key ring for User, default\
            \ is /etc/ceph/user.secret More info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it"
          type: string
        secretRef:
          $ref: '#/components/schemas/v1.LocalObjectReference'
        user:
          description: "Optional: User is the rados user name, default is admin More\
            \ info: https://releases.k8s.io/HEAD/examples/volumes/cephfs/README.md#how-to-use-it"
          type: string
      required:
      - monitors
      type: object
    v1.CinderPersistentVolumeSource:
      description: Represents a cinder volume resource in Openstack. A Cinder volume
        must exist before mounting to a container. The volume must also be in the
        same region as the kubelet. Cinder volumes support ownership management and
        SELinux relabeling.
      properties:
        fsType:
          description: "Filesystem type to mount. Must be a filesystem type supported\
            \ by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\"\
            . Implicitly inferred to be \"ext4\" if unspecified. More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md"
          type: string
        readOnly:
          description: "Optional: Defaults to false (read/write). ReadOnly here will\
            \ force the ReadOnly setting in VolumeMounts. More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md"
          type: boolean
        secretRef:
          $ref: '#/components/schemas/v1.SecretReference'
        volumeID:
          description: "volume id used to identify the volume in cinder More info:\
            \ https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md"
          type: string
      required:
      - volumeID
      type: object
    v1.CinderVolumeSource:
      description: Represents a cinder volume resource in Openstack. A Cinder volume
        must exist before mounting to a container. The volume must also be in the
        same region as the kubelet. Cinder volumes support ownership management and
        SELinux relabeling.
      example:
        secretRef:
          name: name
        volumeID: volumeID
        readOnly: true
        fsType: fsType
      properties:
        fsType:
          description: "Filesystem type to mount. Must be a filesystem type supported\
            \ by the host operating system. Examples: \"ext4\", \"xfs\", \"ntfs\"\
            . Implicitly inferred to be \"ext4\" if unspecified. More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md"
          type: string
        readOnly:
          description: "Optional: Defaults to false (read/write). ReadOnly here will\
            \ force the ReadOnly setting in VolumeMounts. More info: https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md"
          type: boolean
        secretRef:
          $ref: '#/components/schemas/v1.LocalObjectReference'
        volumeID:
          description: "volume id used to identify the volume in cinder More info:\
            \ https://releases.k8s.io/HEAD/examples/mysql-cinder-pd/README.md"
          type: string
      required:
      - volumeID
      type: object
    v1.ClientIPConfig:
      description: ClientIPConfig represents the configurations of Client IP based
        session affinity.
      example:
        timeoutSeconds: 5
      properties:
        timeoutSeconds:
          description: timeoutSeconds specifies the seconds of ClientIP type session
            sticky time. The value must be >0 && <=86400(for 1 day) if ServiceAffinity
            == "ClientIP". Default value is 10800(for 3 hours).
          format: int32
          type: integer
      type: object
    v1.ComponentCondition:
      description: Information about the condition of a component.
      properties:
        error:
          description: "Condition error code for a component. For example, a health\
            \ check error code."
          type: string
        message:
          description: "Message about the condition for a component. For example,\
            \ information about a health check."
          type: string
        status:
          description: "Status of the condition for a component. Valid values for\
            \ \"Healthy\": \"True\", \"False\", or \"Unknown\"."
          type: string
        type:
          description: "Type of condition for a component. Valid value: \"Healthy\""
          type: string
      required:
      - status
      - type
      type: object
    v1.ComponentStatus:
      description: ComponentStatus (and ComponentStatusList) holds the cluster validation
        info.
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
          type: string
        conditions:
          description: List of component conditions observed
          items:
            $ref: '#/components/schemas/v1.ComponentCondition'
          type: array
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: '#/components/schemas/v1.ObjectMeta'
      type: object
    v1.ComponentStatusList:
      description: Status of all the conditions for the component as a list of ComponentStatus
        objects.
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
          type: string
        items:
          description: List of ComponentStatus objects.
          items:
            $ref: '#/components/schemas/v1.ComponentStatus'
          type: array
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: '#/components/schemas/v1.ListMeta'
      required:
      - items
      type: object
    v1.ConfigMap:
      description: ConfigMap holds configuration data for pods to consume.
      example:
        metadata:
          generation: 6
          finalizers:
          - finalizers
          - finalizers
          resourceVersion: resourceVersion
          annotations: "{}"
          generateName: generateName
          deletionTimestamp: deletionTimestamp
          labels: "{}"
          ownerReferences:
          - uid: uid
            controller: true
            apiVersion: apiVersion
            kind: kind
            name: name
            blockOwnerDeletion: true
          - uid: uid
            controller: true
            apiVersion: apiVersion
            kind: kind
            name: name
            blockOwnerDeletion: true
          selfLink: selfLink
          deletionGracePeriodSeconds: 0
          uid: uid
          initializers:
            result:
              reason: reason
              metadata:
                continue: continue
                resourceVersion: resourceVersion
                selfLink: selfLink
              apiVersion: apiVersion
              code: 1
              kind: kind
              details:
                uid: uid
                kind: kind
                causes:
                - reason: reason
                  field: field
                  message: message
                - reason: reason
                  field: field
                  message: message
                retryAfterSeconds: 5
                name: name
                group: group
              message: message
              status: status
            pending:
            - name: name
            - name: name
          clusterName: clusterName
          creationTimestamp: creationTimestamp
          name: name
          namespace: namespace
        apiVersion: apiVersion
        data: "{}"
        binaryData: "{}"
        kind: kind
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
          type: string
        binaryData:
          description: "BinaryData contains the binary data. Each key must consist\
            \ of alphanumeric characters, '-', '_' or '.'. BinaryData can contain\
            \ byte sequences that are not in the UTF-8 range. The keys stored in BinaryData\
            \ must not overlap with the ones in the Data field, this is enforced during\
            \ validation process. Using this field will require 1.10+ apiserver and\
            \ kubelet."
          properties: {}
          type: object
        data:
          description: "Data contains the configuration data. Each key must consist\
            \ of alphanumeric characters, '-', '_' or '.'. Values with non-UTF-8 byte\
            \ sequences must use the BinaryData field. The keys stored in Data must\
            \ not overlap with the keys in the BinaryData field, this is enforced\
            \ during validation process."
          properties: {}
          type: object
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: '#/components/schemas/v1.ObjectMeta'
      type: object
    v1.ConfigMapEnvSource:
      description: |-
        ConfigMapEnvSource selects a ConfigMap to populate the environment variables with.

        The contents of the target ConfigMap's Data field will represent the key-value pairs as environment variables.
      example:
        name: name
        optional: true
      properties:
        name:
          description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
          type: string
        optional:
          description: Specify whether the ConfigMap must be defined
          type: boolean
      type: object
    v1.ConfigMapKeySelector:
      description: Selects a key from a ConfigMap.
      example:
        name: name
        optional: true
        key: key
      properties:
        key:
          description: The key to select.
          type: string
        name:
          description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
          type: string
        optional:
          description: Specify whether the ConfigMap or it's key must be defined
          type: boolean
      required:
      - key
      type: object
    v1.ConfigMapList:
      description: ConfigMapList is a resource containing a list of ConfigMap objects.
      example:
        metadata:
          continue: continue
          resourceVersion: resourceVersion
          selfLink: selfLink
        apiVersion: apiVersion
        kind: kind
        items:
        - metadata:
            generation: 6
            finalizers:
            - finalizers
            - finalizers
            resourceVersion: resourceVersion
            annotations: "{}"
            generateName: generateName
            deletionTimestamp: deletionTimestamp
            labels: "{}"
            ownerReferences:
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            selfLink: selfLink
            deletionGracePeriodSeconds: 0
            uid: uid
            initializers:
              result:
                reason: reason
                metadata:
                  continue: continue
                  resourceVersion: resourceVersion
                  selfLink: selfLink
                apiVersion: apiVersion
                code: 1
                kind: kind
                details:
                  uid: uid
                  kind: kind
                  causes:
                  - reason: reason
                    field: field
                    message: message
                  - reason: reason
                    field: field
                    message: message
                  retryAfterSeconds: 5
                  name: name
                  group: group
                message: message
                status: status
              pending:
              - name: name
              - name: name
            clusterName: clusterName
            creationTimestamp: creationTimestamp
            name: name
            namespace: namespace
          apiVersion: apiVersion
          data: "{}"
          binaryData: "{}"
          kind: kind
        - metadata:
            generation: 6
            finalizers:
            - finalizers
            - finalizers
            resourceVersion: resourceVersion
            annotations: "{}"
            generateName: generateName
            deletionTimestamp: deletionTimestamp
            labels: "{}"
            ownerReferences:
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            selfLink: selfLink
            deletionGracePeriodSeconds: 0
            uid: uid
            initializers:
              result:
                reason: reason
                metadata:
                  continue: continue
                  resourceVersion: resourceVersion
                  selfLink: selfLink
                apiVersion: apiVersion
                code: 1
                kind: kind
                details:
                  uid: uid
                  kind: kind
                  causes:
                  - reason: reason
                    field: field
                    message: message
                  - reason: reason
                    field: field
                    message: message
                  retryAfterSeconds: 5
                  name: name
                  group: group
                message: message
                status: status
              pending:
              - name: name
              - name: name
            clusterName: clusterName
            creationTimestamp: creationTimestamp
            name: name
            namespace: namespace
          apiVersion: apiVersion
          data: "{}"
          binaryData: "{}"
          kind: kind
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
          type: string
        items:
          description: Items is the list of ConfigMaps.
          items:
            $ref: '#/components/schemas/v1.ConfigMap'
          type: array
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: '#/components/schemas/v1.ListMeta'
      required:
      - items
      type: object
    v1.ConfigMapNodeConfigSource:
      description: ConfigMapNodeConfigSource contains the information to reference
        a ConfigMap as a config source for the Node.
      properties:
        kubeletConfigKey:
          description: KubeletConfigKey declares which key of the referenced ConfigMap
            corresponds to the KubeletConfiguration structure This field is required
            in all cases.
          type: string
        name:
          description: Name is the metadata.name of the referenced ConfigMap. This
            field is required in all cases.
          type: string
        namespace:
          description: Namespace is the metadata.namespace of the referenced ConfigMap.
            This field is required in all cases.
          type: string
        resourceVersion:
          description: "ResourceVersion is the metadata.ResourceVersion of the referenced\
            \ ConfigMap. This field is forbidden in Node.Spec, and required in Node.Status."
          type: string
        uid:
          description: "UID is the metadata.UID of the referenced ConfigMap. This\
            \ field is forbidden in Node.Spec, and required in Node.Status."
          type: string
      required:
      - kubeletConfigKey
      - name
      - namespace
      type: object
    v1.ConfigMapProjection:
      description: |-
        Adapts a ConfigMap into a projected volume.

        The contents of the target ConfigMap's Data field will be presented in a projected volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths. Note that this is identical to a configmap volume source without the default mode.
      example:
        name: name
        optional: true
        items:
        - mode: 9
          path: path
          key: key
        - mode: 9
          path: path
          key: key
      properties:
        items:
          description: "If unspecified, each key-value pair in the Data field of the\
            \ referenced ConfigMap will be projected into the volume as a file whose\
            \ name is the key and content is the value. If specified, the listed keys\
            \ will be projected into the specified paths, and unlisted keys will not\
            \ be present. If a key is specified which is not present in the ConfigMap,\
            \ the volume setup will error unless it is marked optional. Paths must\
            \ be relative and may not contain the '..' path or start with '..'."
          items:
            $ref: '#/components/schemas/v1.KeyToPath'
          type: array
        name:
          description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
          type: string
        optional:
          description: Specify whether the ConfigMap or it's keys must be defined
          type: boolean
      type: object
    v1.ConfigMapVolumeSource:
      description: |-
        Adapts a ConfigMap into a volume.

        The contents of the target ConfigMap's Data field will be presented in a volume as files using the keys in the Data field as the file names, unless the items element is populated with specific mappings of keys to paths. ConfigMap volumes support ownership management and SELinux relabeling.
      example:
        defaultMode: 9
        name: name
        optional: true
        items:
        - mode: 9
          path: path
          key: key
        - mode: 9
          path: path
          key: key
      properties:
        defaultMode:
          description: "Optional: mode bits to use on created files by default. Must\
            \ be a value between 0 and 0777. Defaults to 0644. Directories within\
            \ the path are not affected by this setting. This might be in conflict\
            \ with other options that affect the file mode, like fsGroup, and the\
            \ result can be other mode bits set."
          format: int32
          type: integer
        items:
          description: "If unspecified, each key-value pair in the Data field of the\
            \ referenced ConfigMap will be projected into the volume as a file whose\
            \ name is the key and content is the value. If specified, the listed keys\
            \ will be projected into the specified paths, and unlisted keys will not\
            \ be present. If a key is specified which is not present in the ConfigMap,\
            \ the volume setup will error unless it is marked optional. Paths must\
            \ be relative and may not contain the '..' path or start with '..'."
          items:
            $ref: '#/components/schemas/v1.KeyToPath'
          type: array
        name:
          description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
          type: string
        optional:
          description: Specify whether the ConfigMap or it's keys must be defined
          type: boolean
      type: object
    v1.Container:
      description: A single application container that you want to run within a pod.
      example:
        volumeDevices:
        - devicePath: devicePath
          name: name
        - devicePath: devicePath
          name: name
        image: image
        imagePullPolicy: imagePullPolicy
        livenessProbe:
          failureThreshold: 5
          periodSeconds: 2
          tcpSocket:
            port: port
            host: host
          timeoutSeconds: 9
          successThreshold: 7
          initialDelaySeconds: 5
          exec:
            command:
            - command
            - command
          httpGet:
            path: path
            scheme: scheme
            port: port
            host: host
            httpHeaders:
            - name: name
              value: value
            - name: name
              value: value
        stdin: true
        terminationMessagePolicy: terminationMessagePolicy
        terminationMessagePath: terminationMessagePath
        workingDir: workingDir
        resources:
          requests: "{}"
          limits: "{}"
        securityContext:
          privileged: true
          runAsUser: 7
          capabilities:
            add:
            - "{}"
            - "{}"
            drop:
            - "{}"
            - "{}"
          seLinuxOptions:
            role: role
            level: level
            type: type
            user: user
          allowPrivilegeEscalation: true
          runAsGroup: 4
          runAsNonRoot: true
          readOnlyRootFilesystem: true
        env:
        - name: name
          value: value
          valueFrom:
            secretKeyRef:
              name: name
              optional: true
              key: key
            resourceFieldRef:
              divisor: divisor
              resource: resource
              containerName: containerName
            configMapKeyRef:
              name: name
              optional: true
              key: key
            fieldRef:
              apiVersion: apiVersion
              fieldPath: fieldPath
        - name: name
          value: value
          valueFrom:
            secretKeyRef:
              name: name
              optional: true
              key: key
            resourceFieldRef:
              divisor: divisor
              resource: resource
              containerName: containerName
            configMapKeyRef:
              name: name
              optional: true
              key: key
            fieldRef:
              apiVersion: apiVersion
              fieldPath: fieldPath
        ports:
        - protocol: protocol
          hostIP: hostIP
          name: name
          containerPort: 3
          hostPort: 2
        - protocol: protocol
          hostIP: hostIP
          name: name
          containerPort: 3
          hostPort: 2
        command:
        - command
        - command
        volumeMounts:
        - mountPath: mountPath
          mountPropagation: "{}"
          name: name
          readOnly: true
          subPath: subPath
        - mountPath: mountPath
          mountPropagation: "{}"
          name: name
          readOnly: true
          subPath: subPath
        args:
        - args
        - args
        lifecycle:
          postStart:
            tcpSocket:
              port: port
              host: host
            exec:
              command:
              - command
              - command
            httpGet:
              path: path
              scheme: scheme
              port: port
              host: host
              httpHeaders:
              - name: name
                value: value
              - name: name
                value: value
          preStop:
            tcpSocket:
              port: port
              host: host
            exec:
              command:
              - command
              - command
            httpGet:
              path: path
              scheme: scheme
              port: port
              host: host
              httpHeaders:
              - name: name
                value: value
              - name: name
                value: value
        name: name
        tty: true
        readinessProbe:
          failureThreshold: 5
          periodSeconds: 2
          tcpSocket:
            port: port
            host: host
          timeoutSeconds: 9
          successThreshold: 7
          initialDelaySeconds: 5
          exec:
            command:
            - command
            - command
          httpGet:
            path: path
            scheme: scheme
            port: port
            host: host
            httpHeaders:
            - name: name
              value: value
            - name: name
              value: value
        stdinOnce: true
        envFrom:
        - configMapRef:
            name: name
            optional: true
          prefix: prefix
          secretRef:
            name: name
            optional: true
        - configMapRef:
            name: name
            optional: true
          prefix: prefix
          secretRef:
            name: name
            optional: true
      properties:
        args:
          description: "Arguments to the entrypoint. The docker image's CMD is used\
            \ if this is not provided. Variable references $(VAR_NAME) are expanded\
            \ using the container's environment. If a variable cannot be resolved,\
            \ the reference in the input string will be unchanged. The $(VAR_NAME)\
            \ syntax can be escaped with a double $$, ie: $$(VAR_NAME). Escaped references\
            \ will never be expanded, regardless of whether the variable exists or\
            \ not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell"
          items:
            type: string
          type: array
        command:
          description: "Entrypoint array. Not executed within a shell. The docker\
            \ image's ENTRYPOINT is used if this is not provided. Variable references\
            \ $(VAR_NAME) are expanded using the container's environment. If a variable\
            \ cannot be resolved, the reference in the input string will be unchanged.\
            \ The $(VAR_NAME) syntax can be escaped with a double $$, ie: $$(VAR_NAME).\
            \ Escaped references will never be expanded, regardless of whether the\
            \ variable exists or not. Cannot be updated. More info: https://kubernetes.io/docs/tasks/inject-data-application/define-command-argument-container/#running-a-command-in-a-shell"
          items:
            type: string
          type: array
        env:
          description: List of environment variables to set in the container. Cannot
            be updated.
          items:
            $ref: '#/components/schemas/v1.EnvVar'
          type: array
        envFrom:
          description: "List of sources to populate environment variables in the container.\
            \ The keys defined within a source must be a C_IDENTIFIER. All invalid\
            \ keys will be reported as an event when the container is starting. When\
            \ a key exists in multiple sources, the value associated with the last\
            \ source will take precedence. Values defined by an Env with a duplicate\
            \ key will take precedence. Cannot be updated."
          items:
            $ref: '#/components/schemas/v1.EnvFromSource'
          type: array
        image:
          description: "Docker image name. More info: https://kubernetes.io/docs/concepts/containers/images\
            \ This field is optional to allow higher level config management to default\
            \ or override container images in workload controllers like Deployments\
            \ and StatefulSets."
          type: string
        imagePullPolicy:
          description: "Image pull policy. One of Always, Never, IfNotPresent. Defaults\
            \ to Always if :latest tag is specified, or IfNotPresent otherwise. Cannot\
            \ be updated. More info: https://kubernetes.io/docs/concepts/containers/images#updating-images"
          type: string
        lifecycle:
          $ref: '#/components/schemas/v1.Lifecycle'
        livenessProbe:
          $ref: '#/components/schemas/v1.Probe'
        name:
          description: Name of the container specified as a DNS_LABEL. Each container
            in a pod must have a unique name (DNS_LABEL). Cannot be updated.
          type: string
        ports:
          description: "List of ports to expose from the container. Exposing a port\
            \ here gives the system additional information about the network connections\
            \ a container uses, but is primarily informational. Not specifying a port\
            \ here DOES NOT prevent that port from being exposed. Any port which is\
            \ listening on the default \"0.0.0.0\" address inside a container will\
            \ be accessible from the network. Cannot be updated."
          items:
            $ref: '#/components/schemas/v1.ContainerPort'
          type: array
        readinessProbe:
          $ref: '#/components/schemas/v1.Probe'
        resources:
          $ref: '#/components/schemas/v1.ResourceRequirements'
        securityContext:
          $ref: '#/components/schemas/v1.SecurityContext'
        stdin:
          description: "Whether this container should allocate a buffer for stdin\
            \ in the container runtime. If this is not set, reads from stdin in the\
            \ container will always result in EOF. Default is false."
          type: boolean
        stdinOnce:
          description: "Whether the container runtime should close the stdin channel\
            \ after it has been opened by a single attach. When stdin is true the\
            \ stdin stream will remain open across multiple attach sessions. If stdinOnce\
            \ is set to true, stdin is opened on container start, is empty until the\
            \ first client attaches to stdin, and then remains open and accepts data\
            \ until the client disconnects, at which time stdin is closed and remains\
            \ closed until the container is restarted. If this flag is false, a container\
            \ processes that reads from stdin will never receive an EOF. Default is\
            \ false"
          type: boolean
        terminationMessagePath:
          description: "Optional: Path at which the file to which the container's\
            \ termination message will be written is mounted into the container's\
            \ filesystem. Message written is intended to be brief final status, such\
            \ as an assertion failure message. Will be truncated by the node if greater\
            \ than 4096 bytes. The total message length across all containers will\
            \ be limited to 12kb. Defaults to /dev/termination-log. Cannot be updated."
          type: string
        terminationMessagePolicy:
          description: "Indicate how the termination message should be populated.\
            \ File will use the contents of terminationMessagePath to populate the\
            \ container status message on both success and failure. FallbackToLogsOnError\
            \ will use the last chunk of container log output if the termination message\
            \ file is empty and the container exited with an error. The log output\
            \ is limited to 2048 bytes or 80 lines, whichever is smaller. Defaults\
            \ to File. Cannot be updated."
          type: string
        tty:
          description: "Whether this container should allocate a TTY for itself, also\
            \ requires 'stdin' to be true. Default is false."
          type: boolean
        volumeDevices:
          description: volumeDevices is the list of block devices to be used by the
            container. This is an alpha feature and may change in the future.
          items:
            $ref: '#/components/schemas/v1.VolumeDevice'
          type: array
        volumeMounts:
          description: Pod volumes to mount into the container's filesystem. Cannot
            be updated.
          items:
            $ref: '#/components/schemas/v1.VolumeMount'
          type: array
        workingDir:
          description: "Container's working directory. If not specified, the container\
            \ runtime's default will be used, which might be configured in the container\
            \ image. Cannot be updated."
          type: string
      required:
      - name
      type: object
    v1.ContainerImage:
      description: Describe a container image
      properties:
        names:
          description: "Names by which this image is known. e.g. [\"k8s.gcr.io/hyperkube:v1.0.7\"\
            , \"dockerhub.io/google_containers/hyperkube:v1.0.7\"]"
          items:
            type: string
          type: array
        sizeBytes:
          description: The size of the image in bytes.
          format: int64
          type: integer
      required:
      - names
      type: object
    v1.ContainerPort:
      description: ContainerPort represents a network port in a single container.
      example:
        protocol: protocol
        hostIP: hostIP
        name: name
        containerPort: 3
        hostPort: 2
      properties:
        containerPort:
          description: "Number of port to expose on the pod's IP address. This must\
            \ be a valid port number, 0 < x < 65536."
          format: int32
          type: integer
        hostIP:
          description: What host IP to bind the external port to.
          type: string
        hostPort:
          description: "Number of port to expose on the host. If specified, this must\
            \ be a valid port number, 0 < x < 65536. If HostNetwork is specified,\
            \ this must match ContainerPort. Most containers do not need this."
          format: int32
          type: integer
        name:
          description: "If specified, this must be an IANA_SVC_NAME and unique within\
            \ the pod. Each named port in a pod must have a unique name. Name for\
            \ the port that can be referred to by services."
          type: string
        protocol:
          description: Protocol for port. Must be UDP or TCP. Defaults to "TCP".
          type: string
      required:
      - containerPort
      type: object
    v1.ContainerState:
      description: "ContainerState holds a possible state of container. Only one of\
        \ its members may be specified. If none of them is specified, the default\
        \ one is ContainerStateWaiting."
      example:
        running:
          startedAt: startedAt
        waiting:
          reason: reason
          message: message
        terminated:
          reason: reason
          exitCode: 6
          startedAt: startedAt
          containerID: containerID
          message: message
          signal: 6
          finishedAt: finishedAt
      properties:
        running:
          $ref: '#/components/schemas/v1.ContainerStateRunning'
        terminated:
          $ref: '#/components/schemas/v1.ContainerStateTerminated'
        waiting:
          $ref: '#/components/schemas/v1.ContainerStateWaiting'
      type: object
    v1.ContainerStateRunning:
      description: ContainerStateRunning is a running state of a container.
      example:
        startedAt: startedAt
      properties:
        startedAt:
          description: Time at which the container was last (re-)started
          type: string
      type: object
    v1.ContainerStateTerminated:
      description: ContainerStateTerminated is a terminated state of a container.
      example:
        reason: reason
        exitCode: 6
        startedAt: startedAt
        containerID: containerID
        message: message
        signal: 6
        finishedAt: finishedAt
      properties:
        containerID:
          description: Container's ID in the format 'docker://<container_id>'
          type: string
        exitCode:
          description: Exit status from the last termination of the container
          format: int32
          type: integer
        finishedAt:
          description: Time at which the container last terminated
          type: string
        message:
          description: Message regarding the last termination of the container
          type: string
        reason:
          description: (brief) reason from the last termination of the container
          type: string
        signal:
          description: Signal from the last termination of the container
          format: int32
          type: integer
        startedAt:
          description: Time at which previous execution of the container started
          type: string
      required:
      - exitCode
      type: object
    v1.ContainerStateWaiting:
      description: ContainerStateWaiting is a waiting state of a container.
      example:
        reason: reason
        message: message
      properties:
        message:
          description: Message regarding why the container is not yet running.
          type: string
        reason:
          description: (brief) reason the container is not yet running.
          type: string
      type: object
    v1.ContainerStatus:
      description: ContainerStatus contains details for the current status of this
        container.
      example:
        image: image
        imageID: imageID
        restartCount: 5
        ready: true
        name: name
        state:
          running:
            startedAt: startedAt
          waiting:
            reason: reason
            message: message
          terminated:
            reason: reason
            exitCode: 6
            startedAt: startedAt
            containerID: containerID
            message: message
            signal: 6
            finishedAt: finishedAt
        containerID: containerID
        lastState:
          running:
            startedAt: startedAt
          waiting:
            reason: reason
            message: message
          terminated:
            reason: reason
            exitCode: 6
            startedAt: startedAt
            containerID: containerID
            message: message
            signal: 6
            finishedAt: finishedAt
      properties:
        containerID:
          description: Container's ID in the format 'docker://<container_id>'.
          type: string
        image:
          description: "The image the container is running. More info: https://kubernetes.io/docs/concepts/containers/images"
          type: string
        imageID:
          description: ImageID of the container's image.
          type: string
        lastState:
          $ref: '#/components/schemas/v1.ContainerState'
        name:
          description: This must be a DNS_LABEL. Each container in a pod must have
            a unique name. Cannot be updated.
          type: string
        ready:
          description: Specifies whether the container has passed its readiness probe.
          type: boolean
        restartCount:
          description: "The number of times the container has been restarted, currently\
            \ based on the number of dead containers that have not yet been removed.\
            \ Note that this is calculated from dead containers. But those containers\
            \ are subject to garbage collection. This value will get capped at 5 by\
            \ GC."
          format: int32
          type: integer
        state:
          $ref: '#/components/schemas/v1.ContainerState'
      required:
      - image
      - imageID
      - name
      - ready
      - restartCount
      type: object
    v1.DaemonEndpoint:
      description: DaemonEndpoint contains information about a single Daemon endpoint.
      properties:
        Port:
          description: Port number of the given endpoint.
          format: int32
          type: integer
      required:
      - Port
      type: object
    v1.DeleteOptions:
      description: DeleteOptions may be provided when deleting an API object.
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
          type: string
        gracePeriodSeconds:
          description: "The duration in seconds before the object should be deleted.\
            \ Value must be non-negative integer. The value zero indicates delete\
            \ immediately. If this value is nil, the default grace period for the\
            \ specified type will be used. Defaults to a per object value if not specified.\
            \ zero means delete immediately."
          format: int64
          type: integer
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
          type: string
        orphanDependents:
          description: "Deprecated: please use the PropagationPolicy, this field will\
            \ be deprecated in 1.7. Should the dependent objects be orphaned. If true/false,\
            \ the \"orphan\" finalizer will be added to/removed from the object's\
            \ finalizers list. Either this field or PropagationPolicy may be set,\
            \ but not both."
          type: boolean
        preconditions:
          $ref: '#/components/schemas/v1.Preconditions'
        propagationPolicy:
          $ref: '#/components/schemas/v1.DeletionPropagation'
      type: object
    v1.DownwardAPIProjection:
      description: Represents downward API info for projecting into a projected volume.
        Note that this is identical to a downwardAPI volume source without the default
        mode.
      example:
        items:
        - mode: 8
          path: path
          resourceFieldRef:
            divisor: divisor
            resource: resource
            containerName: containerName
          fieldRef:
            apiVersion: apiVersion
            fieldPath: fieldPath
        - mode: 8
          path: path
          resourceFieldRef:
            divisor: divisor
            resource: resource
            containerName: containerName
          fieldRef:
            apiVersion: apiVersion
            fieldPath: fieldPath
      properties:
        items:
          description: Items is a list of DownwardAPIVolume file
          items:
            $ref: '#/components/schemas/v1.DownwardAPIVolumeFile'
          type: array
      type: object
    v1.DownwardAPIVolumeFile:
      description: DownwardAPIVolumeFile represents information to create the file
        containing the pod field
      example:
        mode: 8
        path: path
        resourceFieldRef:
          divisor: divisor
          resource: resource
          containerName: containerName
        fieldRef:
          apiVersion: apiVersion
          fieldPath: fieldPath
      properties:
        fieldRef:
          $ref: '#/components/schemas/v1.ObjectFieldSelector'
        mode:
          description: "Optional: mode bits to use on this file, must be a value between\
            \ 0 and 0777. If not specified, the volume defaultMode will be used. This\
            \ might be in conflict with other options that affect the file mode, like\
            \ fsGroup, and the result can be other mode bits set."
          format: int32
          type: integer
        path:
          description: "Required: Path is  the relative path name of the file to be\
            \ created. Must not be absolute or contain the '..' path. Must be utf-8\
            \ encoded. The first item of the relative path must not start with '..'"
          type: string
        resourceFieldRef:
          $ref: '#/components/schemas/v1.ResourceFieldSelector'
      required:
      - path
      type: object
    v1.DownwardAPIVolumeSource:
      description: DownwardAPIVolumeSource represents a volume containing downward
        API info. Downward API volumes support ownership management and SELinux relabeling.
      example:
        defaultMode: 6
        items:
        - mode: 8
          path: path
          resourceFieldRef:
            divisor: divisor
            resource: resource
            containerName: containerName
          fieldRef:
            apiVersion: apiVersion
            fieldPath: fieldPath
        - mode: 8
          path: path
          resourceFieldRef:
            divisor: divisor
            resource: resource
            containerName: containerName
          fieldRef:
            apiVersion: apiVersion
            fieldPath: fieldPath
      properties:
        defaultMode:
          description: "Optional: mode bits to use on created files by default. Must\
            \ be a value between 0 and 0777. Defaults to 0644. Directories within\
            \ the path are not affected by this setting. This might be in conflict\
            \ with other options that affect the file mode, like fsGroup, and the\
            \ result can be other mode bits set."
          format: int32
          type: integer
        items:
          description: Items is a list of downward API volume file
          items:
            $ref: '#/components/schemas/v1.DownwardAPIVolumeFile'
          type: array
      type: object
    v1.EmptyDirVolumeSource:
      description: Represents an empty directory for a pod. Empty directory volumes
        support ownership management and SELinux relabeling.
      example:
        sizeLimit: sizeLimit
        medium: medium
      properties:
        medium:
          description: "What type of storage medium should back this directory. The\
            \ default is \"\" which means to use the node's default medium. Must be\
            \ an empty string (default) or Memory. More info: https://kubernetes.io/docs/concepts/storage/volumes#emptydir"
          type: string
        sizeLimit:
          description: "Total amount of local storage required for this EmptyDir volume.\
            \ The size limit is also applicable for memory medium. The maximum usage\
            \ on memory medium EmptyDir would be the minimum value between the SizeLimit\
            \ specified here and the sum of memory limits of all containers in a pod.\
            \ The default is nil which means that the limit is undefined. More info:\
            \ http://kubernetes.io/docs/user-guide/volumes#emptydir"
          type: string
      type: object
    v1.EndpointAddress:
      description: EndpointAddress is a tuple that describes single IP address.
      properties:
        hostname:
          description: The Hostname of this endpoint
          type: string
        ip:
          description: "The IP of this endpoint. May not be loopback (127.0.0.0/8),\
            \ link-local (169.254.0.0/16), or link-local multicast ((224.0.0.0/24).\
            \ IPv6 is also accepted but not fully supported on all platforms. Also,\
            \ certain kubernetes components, like kube-proxy, are not IPv6 ready."
          type: string
        nodeName:
          description: "Optional: Node hosting this endpoint. This can be used to\
            \ determine endpoints local to a node."
          type: string
        targetRef:
          $ref: '#/components/schemas/v1.ObjectReference'
      required:
      - ip
      type: object
    v1.EndpointPort:
      description: EndpointPort is a tuple that describes a single port.
      properties:
        name:
          description: The name of this port (corresponds to ServicePort.Name). Must
            be a DNS_LABEL. Optional only if one port is defined.
          type: string
        port:
          description: The port number of the endpoint.
          format: int32
          type: integer
        protocol:
          description: The IP protocol for this port. Must be UDP or TCP. Default
            is TCP.
          type: string
      required:
      - port
      type: object
    v1.EndpointSubset:
      description: |-
        EndpointSubset is a group of addresses with a common set of ports. The expanded set of endpoints is the Cartesian product of Addresses x Ports. For example, given:
          {
            Addresses: [{"ip": "10.10.1.1"}, {"ip": "10.10.2.2"}],
            Ports:     [{"name": "a", "port": 8675}, {"name": "b", "port": 309}]
          }
        The resulting set of endpoints can be viewed as:
            a: [ 10.10.1.1:8675, 10.10.2.2:8675 ],
            b: [ 10.10.1.1:309, 10.10.2.2:309 ]
      properties:
        addresses:
          description: IP addresses which offer the related ports that are marked
            as ready. These endpoints should be considered safe for load balancers
            and clients to utilize.
          items:
            $ref: '#/components/schemas/v1.EndpointAddress'
          type: array
        notReadyAddresses:
          description: "IP addresses which offer the related ports but are not currently\
            \ marked as ready because they have not yet finished starting, have recently\
            \ failed a readiness check, or have recently failed a liveness check."
          items:
            $ref: '#/components/schemas/v1.EndpointAddress'
          type: array
        ports:
          description: Port numbers available on the related IP addresses.
          items:
            $ref: '#/components/schemas/v1.EndpointPort'
          type: array
      type: object
    v1.Endpoints:
      description: |-
        Endpoints is a collection of endpoints that implement the actual service. Example:
          Name: "mysvc",
          Subsets: [
            {
              Addresses: [{"ip": "10.10.1.1"}, {"ip": "10.10.2.2"}],
              Ports: [{"name": "a", "port": 8675}, {"name": "b", "port": 309}]
            },
            {
              Addresses: [{"ip": "10.10.3.3"}],
              Ports: [{"name": "a", "port": 93}, {"name": "b", "port": 76}]
            },
         ]
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
          type: string
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: '#/components/schemas/v1.ObjectMeta'
        subsets:
          description: "The set of all endpoints is the union of all subsets. Addresses\
            \ are placed into subsets according to the IPs they share. A single address\
            \ with multiple ports, some of which are ready and some of which are not\
            \ (because they come from different containers) will result in the address\
            \ being displayed in different subsets for the different ports. No address\
            \ will appear in both Addresses and NotReadyAddresses in the same subset.\
            \ Sets of addresses and ports that comprise a service."
          items:
            $ref: '#/components/schemas/v1.EndpointSubset'
          type: array
      type: object
    v1.EndpointsList:
      description: EndpointsList is a list of endpoints.
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
          type: string
        items:
          description: List of endpoints.
          items:
            $ref: '#/components/schemas/v1.Endpoints'
          type: array
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: '#/components/schemas/v1.ListMeta'
      required:
      - items
      type: object
    v1.EnvFromSource:
      description: EnvFromSource represents the source of a set of ConfigMaps
      example:
        configMapRef:
          name: name
          optional: true
        prefix: prefix
        secretRef:
          name: name
          optional: true
      properties:
        configMapRef:
          $ref: '#/components/schemas/v1.ConfigMapEnvSource'
        prefix:
          description: An optional identifier to prepend to each key in the ConfigMap.
            Must be a C_IDENTIFIER.
          type: string
        secretRef:
          $ref: '#/components/schemas/v1.SecretEnvSource'
      type: object
    v1.EnvVar:
      description: EnvVar represents an environment variable present in a Container.
      example:
        name: name
        value: value
        valueFrom:
          secretKeyRef:
            name: name
            optional: true
            key: key
          resourceFieldRef:
            divisor: divisor
            resource: resource
            containerName: containerName
          configMapKeyRef:
            name: name
            optional: true
            key: key
          fieldRef:
            apiVersion: apiVersion
            fieldPath: fieldPath
      properties:
        name:
          description: Name of the environment variable. Must be a C_IDENTIFIER.
          type: string
        value:
          description: "Variable references $(VAR_NAME) are expanded using the previous\
            \ defined environment variables in the container and any service environment\
            \ variables. If a variable cannot be resolved, the reference in the input\
            \ string will be unchanged. The $(VAR_NAME) syntax can be escaped with\
            \ a double $$, ie: $$(VAR_NAME). Escaped references will never be expanded,\
            \ regardless of whether the variable exists or not. Defaults to \"\"."
          type: string
        valueFrom:
          $ref: '#/components/schemas/v1.EnvVarSource'
      required:
      - name
      type: object
    v1.EnvVarSource:
      description: EnvVarSource represents a source for the value of an EnvVar.
      example:
        secretKeyRef:
          name: name
          optional: true
          key: key
        resourceFieldRef:
          divisor: divisor
          resource: resource
          containerName: containerName
        configMapKeyRef:
          name: name
          optional: true
          key: key
        fieldRef:
          apiVersion: apiVersion
          fieldPath: fieldPath
      properties:
        configMapKeyRef:
          $ref: '#/components/schemas/v1.ConfigMapKeySelector'
        fieldRef:
          $ref: '#/components/schemas/v1.ObjectFieldSelector'
        resourceFieldRef:
          $ref: '#/components/schemas/v1.ResourceFieldSelector'
        secretKeyRef:
          $ref: '#/components/schemas/v1.SecretKeySelector'
      type: object
    v1.Event:
      description: Event is a report of an event somewhere in the cluster.
      example:
        reason: reason
        metadata:
          generation: 6
          finalizers:
          - finalizers
          - finalizers
          resourceVersion: resourceVersion
          annotations: "{}"
          generateName: generateName
          deletionTimestamp: deletionTimestamp
          labels: "{}"
          ownerReferences:
          - uid: uid
            controller: true
            apiVersion: apiVersion
            kind: kind
            name: name
            blockOwnerDeletion: true
          - uid: uid
            controller: true
            apiVersion: apiVersion
            kind: kind
            name: name
            blockOwnerDeletion: true
          selfLink: selfLink
          deletionGracePeriodSeconds: 0
          uid: uid
          initializers:
            result:
              reason: reason
              metadata:
                continue: continue
                resourceVersion: resourceVersion
                selfLink: selfLink
              apiVersion: apiVersion
              code: 1
              kind: kind
              details:
                uid: uid
                kind: kind
                causes:
                - reason: reason
                  field: field
                  message: message
                - reason: reason
                  field: field
                  message: message
                retryAfterSeconds: 5
                name: name
                group: group
              message: message
              status: status
            pending:
            - name: name
            - name: name
          clusterName: clusterName
          creationTimestamp: creationTimestamp
          name: name
          namespace: namespace
        involvedObject:
          uid: uid
          apiVersion: apiVersion
          kind: kind
          resourceVersion: resourceVersion
          fieldPath: fieldPath
          name: name
          namespace: namespace
        reportingInstance: reportingInstance
        kind: kind
        count: 0
        source:
          component: component
          host: host
        message: message
        type: type
        reportingComponent: reportingComponent
        firstTimestamp: firstTimestamp
        apiVersion: apiVersion
        related:
          uid: uid
          apiVersion: apiVersion
          kind: kind
          resourceVersion: resourceVersion
          fieldPath: fieldPath
          name: name
          namespace: namespace
        lastTimestamp: lastTimestamp
        series:
          count: 6
          lastObservedTime: lastObservedTime
          state: state
        eventTime: eventTime
        action: action
      properties:
        action:
          description: What action was taken/failed regarding to the Regarding object.
          type: string
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
          type: string
        count:
          description: The number of times this event has occurred.
          format: int32
          type: integer
        eventTime:
          description: Time when this Event was first observed.
          type: string
        firstTimestamp:
          description: The time at which the event was first recorded. (Time of server
            receipt is in TypeMeta.)
          type: string
        involvedObject:
          $ref: '#/components/schemas/v1.ObjectReference'
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
          type: string
        lastTimestamp:
          description: The time at which the most recent occurrence of this event
            was recorded.
          type: string
        message:
          description: A human-readable description of the status of this operation.
          type: string
        metadata:
          $ref: '#/components/schemas/v1.ObjectMeta'
        reason:
          description: "This should be a short, machine understandable string that\
            \ gives the reason for the transition into the object's current status."
          type: string
        related:
          $ref: '#/components/schemas/v1.ObjectReference'
        reportingComponent:
          description: "Name of the controller that emitted this Event, e.g. `kubernetes.io/kubelet`."
          type: string
        reportingInstance:
          description: "ID of the controller instance, e.g. `kubelet-xyzf`."
          type: string
        series:
          $ref: '#/components/schemas/v1.EventSeries'
        source:
          $ref: '#/components/schemas/v1.EventSource'
        type:
          description: "Type of this event (Normal, Warning), new types could be added\
            \ in the future"
          type: string
      required:
      - involvedObject
      - metadata
      - reportingComponent
      - reportingInstance
      type: object
    v1.EventList:
      description: EventList is a list of events.
      example:
        metadata:
          continue: continue
          resourceVersion: resourceVersion
          selfLink: selfLink
        apiVersion: apiVersion
        kind: kind
        items:
        - reason: reason
          metadata:
            generation: 6
            finalizers:
            - finalizers
            - finalizers
            resourceVersion: resourceVersion
            annotations: "{}"
            generateName: generateName
            deletionTimestamp: deletionTimestamp
            labels: "{}"
            ownerReferences:
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            selfLink: selfLink
            deletionGracePeriodSeconds: 0
            uid: uid
            initializers:
              result:
                reason: reason
                metadata:
                  continue: continue
                  resourceVersion: resourceVersion
                  selfLink: selfLink
                apiVersion: apiVersion
                code: 1
                kind: kind
                details:
                  uid: uid
                  kind: kind
                  causes:
                  - reason: reason
                    field: field
                    message: message
                  - reason: reason
                    field: field
                    message: message
                  retryAfterSeconds: 5
                  name: name
                  group: group
                message: message
                status: status
              pending:
              - name: name
              - name: name
            clusterName: clusterName
            creationTimestamp: creationTimestamp
            name: name
            namespace: namespace
          involvedObject:
            uid: uid
            apiVersion: apiVersion
            kind: kind
            resourceVersion: resourceVersion
            fieldPath: fieldPath
            name: name
            namespace: namespace
          reportingInstance: reportingInstance
          kind: kind
          count: 0
          source:
            component: component
            host: host
          message: message
          type: type
          reportingComponent: reportingComponent
          firstTimestamp: firstTimestamp
          apiVersion: apiVersion
          related:
            uid: uid
            apiVersion: apiVersion
            kind: kind
            resourceVersion: resourceVersion
            fieldPath: fieldPath
            name: name
            namespace: namespace
          lastTimestamp: lastTimestamp
          series:
            count: 6
            lastObservedTime: lastObservedTime
            state: state
          eventTime: eventTime
          action: action
        - reason: reason
          metadata:
            generation: 6
            finalizers:
            - finalizers
            - finalizers
            resourceVersion: resourceVersion
            annotations: "{}"
            generateName: generateName
            deletionTimestamp: deletionTimestamp
            labels: "{}"
            ownerReferences:
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            selfLink: selfLink
            deletionGracePeriodSeconds: 0
            uid: uid
            initializers:
              result:
                reason: reason
                metadata:
                  continue: continue
                  resourceVersion: resourceVersion
                  selfLink: selfLink
                apiVersion: apiVersion
                code: 1
                kind: kind
                details:
                  uid: uid
                  kind: kind
                  causes:
                  - reason: reason
                    field: field
                    message: message
                  - reason: reason
                    field: field
                    message: message
                  retryAfterSeconds: 5
                  name: name
                  group: group
                message: message
                status: status
              pending:
              - name: name
              - name: name
            clusterName: clusterName
            creationTimestamp: creationTimestamp
            name: name
            namespace: namespace
          involvedObject:
            uid: uid
            apiVersion: apiVersion
            kind: kind
            resourceVersion: resourceVersion
            fieldPath: fieldPath
            name: name
            namespace: namespace
          reportingInstance: reportingInstance
          kind: kind
          count: 0
          source:
            component: component
            host: host
          message: message
          type: type
          reportingComponent: reportingComponent
          firstTimestamp: firstTimestamp
          apiVersion: apiVersion
          related:
            uid: uid
            apiVersion: apiVersion
            kind: kind
            resourceVersion: resourceVersion
            fieldPath: fieldPath
            name: name
            namespace: namespace
          lastTimestamp: lastTimestamp
          series:
            count: 6
            lastObservedTime: lastObservedTime
            state: state
          eventTime: eventTime
          action: action
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
          type: string
        items:
          description: List of events
          items:
            $ref: '#/components/schemas/v1.Event'
          type: array
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: '#/components/schemas/v1.ListMeta'
      required:
      - items
      type: object
    v1.EventSeries:
      description: "EventSeries contain information on series of events, i.e. thing\
        \ that was/is happening continuously for some time."
      example:
        count: 6
        lastObservedTime: lastObservedTime
        state: state
      properties:
        count:
          description: Number of occurrences in this series up to the last heartbeat
            time
          format: int32
          type: integer
        lastObservedTime:
          description: Time of the last occurrence observed
          type: string
        state:
          description: "State of this Series: Ongoing or Finished"
          type: string
      type: object
    v1.EventSource:
      description: EventSource contains information for an event.
      example:
        component: component
        host: host
      properties:
        host:
          description: Node name on which the event is generated.
          type: string
        component:
          description: Component from which the event is generated.
          type: string
      type: object
    v1.ExecAction:
      description: ExecAction describes a "run in container" action.
      example:
        command:
        - command
        - command
      properties:
        command:
          description: "Command is the command line to execute inside the container,\
            \ the working directory for the command  is root ('/') in the container's\
            \ filesystem. The command is simply exec'd, it is not run inside a shell,\
            \ so traditional shell instructions ('|', etc) won't work. To use a shell,\
            \ you need to explicitly call out to that shell. Exit status of 0 is treated\
            \ as live/healthy and non-zero is unhealthy."
          items:
            type: string
          type: array
      type: object
    v1.FCVolumeSource:
      description: Represents a Fibre Channel volume. Fibre Channel volumes can only
        be mounted as read/write once. Fibre Channel volumes support ownership management
        and SELinux relabeling.
      example:
        lun: 9
        targetWWNs:
        - targetWWNs
        - targetWWNs
        readOnly: true
        wwids:
        - wwids
        - wwids
        fsType: fsType
      properties:
        fsType:
          description: "Filesystem type to mount. Must be a filesystem type supported\
            \ by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly\
            \ inferred to be \"ext4\" if unspecified."
          type: string
        lun:
          description: "Optional: FC target lun number"
          format: int32
          type: integer
        readOnly:
          description: "Optional: Defaults to false (read/write). ReadOnly here will\
            \ force the ReadOnly setting in VolumeMounts."
          type: boolean
        targetWWNs:
          description: "Optional: FC target worldwide names (WWNs)"
          items:
            type: string
          type: array
        wwids:
          description: "Optional: FC volume world wide identifiers (wwids) Either\
            \ wwids or combination of targetWWNs and lun must be set, but not both\
            \ simultaneously."
          items:
            type: string
          type: array
      type: object
    v1.FSGroupStrategyOptions:
      description: FSGroupStrategyOptions defines the strategy type and options used
        to create the strategy.
      properties:
        ranges:
          description: Ranges are the allowed ranges of fs groups.  If you would like
            to force a single fs group then supply a single range with the same start
            and end.
          items:
            $ref: '#/components/schemas/v1.IDRange'
          type: array
        type:
          description: Type is the strategy that will dictate what FSGroup is used
            in the SecurityContext.
          type: string
      type: object
    v1.FlexPersistentVolumeSource:
      description: FlexPersistentVolumeSource represents a generic persistent volume
        resource that is provisioned/attached using an exec based plugin.
      properties:
        driver:
          description: Driver is the name of the driver to use for this volume.
          type: string
        fsType:
          description: "Filesystem type to mount. Must be a filesystem type supported\
            \ by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". The default\
            \ filesystem depends on FlexVolume script."
          type: string
        options:
          description: "Optional: Extra command options if any."
          properties: {}
          type: object
        readOnly:
          description: "Optional: Defaults to false (read/write). ReadOnly here will\
            \ force the ReadOnly setting in VolumeMounts."
          type: boolean
        secretRef:
          $ref: '#/components/schemas/v1.SecretReference'
      required:
      - driver
      type: object
    v1.FlexVolumeSource:
      description: FlexVolume represents a generic volume resource that is provisioned/attached
        using an exec based plugin.
      example:
        driver: driver
        options: "{}"
        secretRef:
          name: name
        readOnly: true
        fsType: fsType
      properties:
        driver:
          description: Driver is the name of the driver to use for this volume.
          type: string
        fsType:
          description: "Filesystem type to mount. Must be a filesystem type supported\
            \ by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". The default\
            \ filesystem depends on FlexVolume script."
          type: string
        options:
          description: "Optional: Extra command options if any."
          properties: {}
          type: object
        readOnly:
          description: "Optional: Defaults to false (read/write). ReadOnly here will\
            \ force the ReadOnly setting in VolumeMounts."
          type: boolean
        secretRef:
          $ref: '#/components/schemas/v1.LocalObjectReference'
      required:
      - driver
      type: object
    v1.FlockerVolumeSource:
      description: Represents a Flocker volume mounted by the Flocker agent. One and
        only one of datasetName and datasetUUID should be set. Flocker volumes do
        not support ownership management or SELinux relabeling.
      example:
        datasetName: datasetName
        datasetUUID: datasetUUID
      properties:
        datasetName:
          description: Name of the dataset stored as metadata -> name on the dataset
            for Flocker should be considered as deprecated
          type: string
        datasetUUID:
          description: UUID of the dataset. This is unique identifier of a Flocker
            dataset
          type: string
      type: object
    v1.GCEPersistentDiskVolumeSource:
      description: |-
        Represents a Persistent Disk resource in Google Compute Engine.

        A GCE PD must exist before mounting to a container. The disk must also be in the same GCE project and zone as the kubelet. A GCE PD can only be mounted as read/write once or read-only many times. GCE PDs support ownership management and SELinux relabeling.
      example:
        partition: 6
        readOnly: true
        pdName: pdName
        fsType: fsType
      properties:
        fsType:
          description: "Filesystem type of the volume that you want to mount. Tip:\
            \ Ensure that the filesystem type is supported by the host operating system.\
            \ Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"\
            ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk"
          type: string
        partition:
          description: "The partition in the volume that you want to mount. If omitted,\
            \ the default is to mount by volume name. Examples: For volume /dev/sda1,\
            \ you specify the partition as \"1\". Similarly, the volume partition\
            \ for /dev/sda is \"0\" (or you can leave the property empty). More info:\
            \ https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk"
          format: int32
          type: integer
        pdName:
          description: "Unique name of the PD resource in GCE. Used to identify the\
            \ disk in GCE. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk"
          type: string
        readOnly:
          description: "ReadOnly here will force the ReadOnly setting in VolumeMounts.\
            \ Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#gcepersistentdisk"
          type: boolean
      required:
      - pdName
      type: object
    v1.GitRepoVolumeSource:
      description: |-
        Represents a volume that is populated with the contents of a git repository. Git repo volumes do not support ownership management. Git repo volumes support SELinux relabeling.

        DEPRECATED: GitRepo is deprecated. To provision a container with a git repo, mount an EmptyDir into an InitContainer that clones the repo using git, then mount the EmptyDir into the Pod's container.
      example:
        repository: repository
        directory: directory
        revision: revision
      properties:
        directory:
          description: "Target directory name. Must not contain or start with '..'.\
            \  If '.' is supplied, the volume directory will be the git repository.\
            \  Otherwise, if specified, the volume will contain the git repository\
            \ in the subdirectory with the given name."
          type: string
        repository:
          description: Repository URL
          type: string
        revision:
          description: Commit hash for the specified revision.
          type: string
      required:
      - repository
      type: object
    v1.GlusterfsVolumeSource:
      description: Represents a Glusterfs mount that lasts the lifetime of a pod.
        Glusterfs volumes do not support ownership management or SELinux relabeling.
      example:
        path: path
        endpoints: endpoints
        readOnly: true
      properties:
        endpoints:
          description: "EndpointsName is the endpoint name that details Glusterfs\
            \ topology. More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod"
          type: string
        path:
          description: "Path is the Glusterfs volume path. More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod"
          type: string
        readOnly:
          description: "ReadOnly here will force the Glusterfs volume to be mounted\
            \ with read-only permissions. Defaults to false. More info: https://releases.k8s.io/HEAD/examples/volumes/glusterfs/README.md#create-a-pod"
          type: boolean
      required:
      - endpoints
      - path
      type: object
    v1.HTTPGetAction:
      description: HTTPGetAction describes an action based on HTTP Get requests.
      example:
        path: path
        scheme: scheme
        port: port
        host: host
        httpHeaders:
        - name: name
          value: value
        - name: name
          value: value
      properties:
        host:
          description: "Host name to connect to, defaults to the pod IP. You probably\
            \ want to set \"Host\" in httpHeaders instead."
          type: string
        httpHeaders:
          description: Custom headers to set in the request. HTTP allows repeated
            headers.
          items:
            $ref: '#/components/schemas/v1.HTTPHeader'
          type: array
        path:
          description: Path to access on the HTTP server.
          type: string
        port:
          description: Name or number of the port to access on the container. Number
            must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
          type: string
        scheme:
          description: Scheme to use for connecting to the host. Defaults to HTTP.
          type: string
      required:
      - port
      type: object
    v1.HTTPHeader:
      description: HTTPHeader describes a custom header to be used in HTTP probes
      example:
        name: name
        value: value
      properties:
        name:
          description: The header field name
          type: string
        value:
          description: The header field value
          type: string
      required:
      - name
      - value
      type: object
    v1.Handler:
      description: Handler defines a specific action that should be taken
      example:
        tcpSocket:
          port: port
          host: host
        exec:
          command:
          - command
          - command
        httpGet:
          path: path
          scheme: scheme
          port: port
          host: host
          httpHeaders:
          - name: name
            value: value
          - name: name
            value: value
      properties:
        exec:
          $ref: '#/components/schemas/v1.ExecAction'
        httpGet:
          $ref: '#/components/schemas/v1.HTTPGetAction'
        tcpSocket:
          $ref: '#/components/schemas/v1.TCPSocketAction'
      type: object
    v1.HostAlias:
      description: HostAlias holds the mapping between IP and hostnames that will
        be injected as an entry in the pod's hosts file.
      example:
        ip: ip
        hostnames:
        - hostnames
        - hostnames
      properties:
        hostnames:
          description: Hostnames for the above IP address.
          items:
            type: string
          type: array
        ip:
          description: IP address of the host file entry.
          type: string
      type: object
    v1.HostPathVolumeSource:
      description: Represents a host path mapped into a pod. Host path volumes do
        not support ownership management or SELinux relabeling.
      example:
        path: path
        type: "{}"
      properties:
        path:
          description: "Path of the directory on the host. If the path is a symlink,\
            \ it will follow the link to the real path. More info: https://kubernetes.io/docs/concepts/storage/volumes#hostpath"
          type: string
        type:
          $ref: '#/components/schemas/v1.HostPathType'
      required:
      - path
      type: object
    v1.IDRange:
      description: IDRange provides a min/max of an allowed range of IDs.
      properties:
        max:
          description: "Max is the end of the range, inclusive."
          format: int64
          type: integer
        min:
          description: "Min is the start of the range, inclusive."
          format: int64
          type: integer
      type: object
    v1.ISCSIPersistentVolumeSource:
      description: ISCSIPersistentVolumeSource represents an ISCSI disk. ISCSI volumes
        can only be mounted as read/write once. ISCSI volumes support ownership management
        and SELinux relabeling.
      properties:
        chapAuthDiscovery:
          description: whether support iSCSI Discovery CHAP authentication
          type: boolean
        chapAuthSession:
          description: whether support iSCSI Session CHAP authentication
          type: boolean
        fsType:
          description: "Filesystem type of the volume that you want to mount. Tip:\
            \ Ensure that the filesystem type is supported by the host operating system.\
            \ Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"\
            ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi"
          type: string
        initiatorName:
          description: "Custom iSCSI Initiator Name. If initiatorName is specified\
            \ with iscsiInterface simultaneously, new iSCSI interface <target portal>:<volume\
            \ name> will be created for the connection."
          type: string
        iqn:
          description: Target iSCSI Qualified Name.
          type: string
        iscsiInterface:
          description: iSCSI Interface Name that uses an iSCSI transport. Defaults
            to 'default' (tcp).
          type: string
        lun:
          description: iSCSI Target Lun number.
          format: int32
          type: integer
        portals:
          description: iSCSI Target Portal List. The Portal is either an IP or ip_addr:port
            if the port is other than default (typically TCP ports 860 and 3260).
          items:
            type: string
          type: array
        readOnly:
          description: ReadOnly here will force the ReadOnly setting in VolumeMounts.
            Defaults to false.
          type: boolean
        secretRef:
          $ref: '#/components/schemas/v1.SecretReference'
        targetPortal:
          description: iSCSI Target Portal. The Portal is either an IP or ip_addr:port
            if the port is other than default (typically TCP ports 860 and 3260).
          type: string
      required:
      - iqn
      - lun
      - targetPortal
      type: object
    v1.ISCSIVolumeSource:
      description: Represents an ISCSI disk. ISCSI volumes can only be mounted as
        read/write once. ISCSI volumes support ownership management and SELinux relabeling.
      example:
        chapAuthSession: true
        iscsiInterface: iscsiInterface
        lun: 3
        chapAuthDiscovery: true
        iqn: iqn
        portals:
        - portals
        - portals
        secretRef:
          name: name
        initiatorName: initiatorName
        readOnly: true
        fsType: fsType
        targetPortal: targetPortal
      properties:
        chapAuthDiscovery:
          description: whether support iSCSI Discovery CHAP authentication
          type: boolean
        chapAuthSession:
          description: whether support iSCSI Session CHAP authentication
          type: boolean
        fsType:
          description: "Filesystem type of the volume that you want to mount. Tip:\
            \ Ensure that the filesystem type is supported by the host operating system.\
            \ Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"\
            ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#iscsi"
          type: string
        initiatorName:
          description: "Custom iSCSI Initiator Name. If initiatorName is specified\
            \ with iscsiInterface simultaneously, new iSCSI interface <target portal>:<volume\
            \ name> will be created for the connection."
          type: string
        iqn:
          description: Target iSCSI Qualified Name.
          type: string
        iscsiInterface:
          description: iSCSI Interface Name that uses an iSCSI transport. Defaults
            to 'default' (tcp).
          type: string
        lun:
          description: iSCSI Target Lun number.
          format: int32
          type: integer
        portals:
          description: iSCSI Target Portal List. The portal is either an IP or ip_addr:port
            if the port is other than default (typically TCP ports 860 and 3260).
          items:
            type: string
          type: array
        readOnly:
          description: ReadOnly here will force the ReadOnly setting in VolumeMounts.
            Defaults to false.
          type: boolean
        secretRef:
          $ref: '#/components/schemas/v1.LocalObjectReference'
        targetPortal:
          description: iSCSI Target Portal. The Portal is either an IP or ip_addr:port
            if the port is other than default (typically TCP ports 860 and 3260).
          type: string
      required:
      - iqn
      - lun
      - targetPortal
      type: object
    v1.Initializer:
      description: Initializer is information about an initializer that has not yet
        completed.
      example:
        name: name
      properties:
        name:
          description: name of the process that is responsible for initializing this
            object.
          type: string
      required:
      - name
      type: object
    v1.Initializers:
      description: Initializers tracks the progress of initialization.
      example:
        result:
          reason: reason
          metadata:
            continue: continue
            resourceVersion: resourceVersion
            selfLink: selfLink
          apiVersion: apiVersion
          code: 1
          kind: kind
          details:
            uid: uid
            kind: kind
            causes:
            - reason: reason
              field: field
              message: message
            - reason: reason
              field: field
              message: message
            retryAfterSeconds: 5
            name: name
            group: group
          message: message
          status: status
        pending:
        - name: name
        - name: name
      properties:
        pending:
          description: "Pending is a list of initializers that must execute in order\
            \ before this object is visible. When the last pending initializer is\
            \ removed, and no failing result is set, the initializers struct will\
            \ be set to nil and the object is considered as initialized and visible\
            \ to all clients."
          items:
            $ref: '#/components/schemas/v1.Initializer'
          type: array
        result:
          $ref: '#/components/schemas/v1.Status'
      required:
      - pending
      type: object
    v1.KeyToPath:
      description: Maps a string key to a path within a volume.
      example:
        mode: 9
        path: path
        key: key
      properties:
        key:
          description: The key to project.
          type: string
        mode:
          description: "Optional: mode bits to use on this file, must be a value between\
            \ 0 and 0777. If not specified, the volume defaultMode will be used. This\
            \ might be in conflict with other options that affect the file mode, like\
            \ fsGroup, and the result can be other mode bits set."
          format: int32
          type: integer
        path:
          description: The relative path of the file to map the key to. May not be
            an absolute path. May not contain the path element '..'. May not start
            with the string '..'.
          type: string
      required:
      - key
      - path
      type: object
    v1.LabelSelector:
      description: A label selector is a label query over a set of resources. The
        result of matchLabels and matchExpressions are ANDed. An empty label selector
        matches all objects. A null label selector matches no objects.
      example:
        matchExpressions:
        - values:
          - values
          - values
          key: key
          operator: operator
        - values:
          - values
          - values
          key: key
          operator: operator
        matchLabels: "{}"
      properties:
        matchExpressions:
          description: matchExpressions is a list of label selector requirements.
            The requirements are ANDed.
          items:
            $ref: '#/components/schemas/v1.LabelSelectorRequirement'
          type: array
        matchLabels:
          description: "matchLabels is a map of {key,value} pairs. A single {key,value}\
            \ in the matchLabels map is equivalent to an element of matchExpressions,\
            \ whose key field is \"key\", the operator is \"In\", and the values array\
            \ contains only \"value\". The requirements are ANDed."
          properties: {}
          type: object
      type: object
    v1.LabelSelectorRequirement:
      description: "A label selector requirement is a selector that contains values,\
        \ a key, and an operator that relates the key and values."
      example:
        values:
        - values
        - values
        key: key
        operator: operator
      properties:
        key:
          description: key is the label key that the selector applies to.
          type: string
        operator:
          description: "operator represents a key's relationship to a set of values.\
            \ Valid operators are In, NotIn, Exists and DoesNotExist."
          type: string
        values:
          description: "values is an array of string values. If the operator is In\
            \ or NotIn, the values array must be non-empty. If the operator is Exists\
            \ or DoesNotExist, the values array must be empty. This array is replaced\
            \ during a strategic merge patch."
          items:
            type: string
          type: array
      required:
      - key
      - operator
      type: object
    v1.Lifecycle:
      description: "Lifecycle describes actions that the management system should\
        \ take in response to container lifecycle events. For the PostStart and PreStop\
        \ lifecycle handlers, management of the container blocks until the action\
        \ is complete, unless the container process fails, in which case the handler\
        \ is aborted."
      example:
        postStart:
          tcpSocket:
            port: port
            host: host
          exec:
            command:
            - command
            - command
          httpGet:
            path: path
            scheme: scheme
            port: port
            host: host
            httpHeaders:
            - name: name
              value: value
            - name: name
              value: value
        preStop:
          tcpSocket:
            port: port
            host: host
          exec:
            command:
            - command
            - command
          httpGet:
            path: path
            scheme: scheme
            port: port
            host: host
            httpHeaders:
            - name: name
              value: value
            - name: name
              value: value
      properties:
        postStart:
          $ref: '#/components/schemas/v1.Handler'
        preStop:
          $ref: '#/components/schemas/v1.Handler'
      type: object
    v1.LimitRange:
      description: LimitRange sets resource usage limits for each kind of resource
        in a Namespace.
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
          type: string
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: '#/components/schemas/v1.ObjectMeta'
        spec:
          $ref: '#/components/schemas/v1.LimitRangeSpec'
      type: object
    v1.LimitRangeItem:
      description: LimitRangeItem defines a min/max usage limit for any resource that
        matches on kind.
      properties:
        default:
          description: Default resource requirement limit value by resource name if
            resource limit is omitted.
          properties: {}
          type: object
        defaultRequest:
          description: DefaultRequest is the default resource requirement request
            value by resource name if resource request is omitted.
          properties: {}
          type: object
        max:
          description: Max usage constraints on this kind by resource name.
          properties: {}
          type: object
        maxLimitRequestRatio:
          description: "MaxLimitRequestRatio if specified, the named resource must\
            \ have a request and limit that are both non-zero where limit divided\
            \ by request is less than or equal to the enumerated value; this represents\
            \ the max burst for the named resource."
          properties: {}
          type: object
        min:
          description: Min usage constraints on this kind by resource name.
          properties: {}
          type: object
        type:
          description: Type of resource that this limit applies to.
          type: string
      type: object
    v1.LimitRangeList:
      description: LimitRangeList is a list of LimitRange items.
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
          type: string
        items:
          description: "Items is a list of LimitRange objects. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/"
          items:
            $ref: '#/components/schemas/v1.LimitRange'
          type: array
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: '#/components/schemas/v1.ListMeta'
      required:
      - items
      type: object
    v1.LimitRangeSpec:
      description: LimitRangeSpec defines a min/max usage limit for resources that
        match on kind.
      properties:
        limits:
          description: Limits is the list of LimitRangeItem objects that are enforced.
          items:
            $ref: '#/components/schemas/v1.LimitRangeItem'
          type: array
      required:
      - limits
      type: object
    v1.ListMeta:
      description: "ListMeta describes metadata that synthetic resources must have,\
        \ including lists and various status objects. A resource may have only one\
        \ of {ObjectMeta, ListMeta}."
      example:
        continue: continue
        resourceVersion: resourceVersion
        selfLink: selfLink
      properties:
        continue:
          description: "continue may be set if the user set a limit on the number\
            \ of items returned, and indicates that the server has more data available.\
            \ The value is opaque and may be used to issue another request to the\
            \ endpoint that served this list to retrieve the next set of available\
            \ objects. Continuing a list may not be possible if the server configuration\
            \ has changed or more than a few minutes have passed. The resourceVersion\
            \ field returned when using this continue value will be identical to the\
            \ value in the first response."
          type: string
        resourceVersion:
          description: "String that identifies the server's internal version of this\
            \ object that can be used by clients to determine when objects have changed.\
            \ Value must be treated as opaque by clients and passed unmodified back\
            \ to the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency"
          type: string
        selfLink:
          description: selfLink is a URL representing this object. Populated by the
            system. Read-only.
          type: string
      type: object
    v1.LoadBalancerIngress:
      description: "LoadBalancerIngress represents the status of a load-balancer ingress\
        \ point: traffic intended for the service should be sent to an ingress point."
      example:
        hostname: hostname
        ip: ip
      properties:
        hostname:
          description: Hostname is set for load-balancer ingress points that are DNS
            based (typically AWS load-balancers)
          type: string
        ip:
          description: IP is set for load-balancer ingress points that are IP based
            (typically GCE or OpenStack load-balancers)
          type: string
      type: object
    v1.LoadBalancerStatus:
      description: LoadBalancerStatus represents the status of a load-balancer.
      example:
        ingress:
        - hostname: hostname
          ip: ip
        - hostname: hostname
          ip: ip
      properties:
        ingress:
          description: Ingress is a list containing ingress points for the load-balancer.
            Traffic intended for the service should be sent to these ingress points.
          items:
            $ref: '#/components/schemas/v1.LoadBalancerIngress'
          type: array
      type: object
    v1.LocalObjectReference:
      description: LocalObjectReference contains enough information to let you locate
        the referenced object inside the same namespace.
      example:
        name: name
      properties:
        name:
          description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
          type: string
      type: object
    v1.LocalVolumeSource:
      description: Local represents directly-attached storage with node affinity (Beta
        feature)
      properties:
        path:
          description: "The full path to the volume on the node. It can be either\
            \ a directory or block device (disk, partition, ...). Directories can\
            \ be represented only by PersistentVolume with VolumeMode=Filesystem.\
            \ Block devices can be represented only by VolumeMode=Block, which also\
            \ requires the BlockVolume alpha feature gate to be enabled."
          type: string
      required:
      - path
      type: object
    v1.NFSVolumeSource:
      description: Represents an NFS mount that lasts the lifetime of a pod. NFS volumes
        do not support ownership management or SELinux relabeling.
      example:
        path: path
        server: server
        readOnly: true
      properties:
        path:
          description: "Path that is exported by the NFS server. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs"
          type: string
        readOnly:
          description: "ReadOnly here will force the NFS export to be mounted with\
            \ read-only permissions. Defaults to false. More info: https://kubernetes.io/docs/concepts/storage/volumes#nfs"
          type: boolean
        server:
          description: "Server is the hostname or IP address of the NFS server. More\
            \ info: https://kubernetes.io/docs/concepts/storage/volumes#nfs"
          type: string
      required:
      - path
      - server
      type: object
    v1.Namespace:
      description: Namespace provides a scope for Names. Use of multiple namespaces
        is optional.
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
          type: string
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: '#/components/schemas/v1.ObjectMeta'
        spec:
          $ref: '#/components/schemas/v1.NamespaceSpec'
        status:
          $ref: '#/components/schemas/v1.NamespaceStatus'
      type: object
    v1.NamespaceList:
      description: NamespaceList is a list of Namespaces.
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
          type: string
        items:
          description: "Items is the list of Namespace objects in the list. More info:\
            \ https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/"
          items:
            $ref: '#/components/schemas/v1.Namespace'
          type: array
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: '#/components/schemas/v1.ListMeta'
      required:
      - items
      type: object
    v1.NamespaceSpec:
      description: NamespaceSpec describes the attributes on a Namespace.
      properties:
        finalizers:
          description: "Finalizers is an opaque list of values that must be empty\
            \ to permanently remove object from storage. More info: https://kubernetes.io/docs/tasks/administer-cluster/namespaces/"
          items:
            $ref: '#/components/schemas/v1.FinalizerName'
          type: array
      type: object
    v1.NamespaceStatus:
      description: NamespaceStatus is information about the current status of a Namespace.
      properties:
        phase:
          description: "Phase is the current lifecycle phase of the namespace. More\
            \ info: https://kubernetes.io/docs/tasks/administer-cluster/namespaces/"
          type: string
      type: object
    v1.Node:
      description: Node is a worker node in Kubernetes. Each node will have a unique
        identifier in the cache (i.e. in etcd).
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
          type: string
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: '#/components/schemas/v1.ObjectMeta'
        spec:
          $ref: '#/components/schemas/v1.NodeSpec'
        status:
          $ref: '#/components/schemas/v1.NodeStatus'
      type: object
    v1.NodeAddress:
      description: NodeAddress contains information for the node's address.
      properties:
        address:
          description: The node address.
          type: string
        type:
          description: "Node address type, one of Hostname, ExternalIP or InternalIP."
          type: string
      required:
      - address
      - type
      type: object
    v1.NodeAffinity:
      description: Node affinity is a group of node affinity scheduling rules.
      example:
        requiredDuringSchedulingIgnoredDuringExecution:
          nodeSelectorTerms:
          - matchExpressions:
            - values:
              - values
              - values
              key: key
              operator: operator
            - values:
              - values
              - values
              key: key
              operator: operator
            matchFields:
            - values:
              - values
              - values
              key: key
              operator: operator
            - values:
              - values
              - values
              key: key
              operator: operator
          - matchExpressions:
            - values:
              - values
              - values
              key: key
              operator: operator
            - values:
              - values
              - values
              key: key
              operator: operator
            matchFields:
            - values:
              - values
              - values
              key: key
              operator: operator
            - values:
              - values
              - values
              key: key
              operator: operator
        preferredDuringSchedulingIgnoredDuringExecution:
        - preference:
            matchExpressions:
            - values:
              - values
              - values
              key: key
              operator: operator
            - values:
              - values
              - values
              key: key
              operator: operator
            matchFields:
            - values:
              - values
              - values
              key: key
              operator: operator
            - values:
              - values
              - values
              key: key
              operator: operator
          weight: 6
        - preference:
            matchExpressions:
            - values:
              - values
              - values
              key: key
              operator: operator
            - values:
              - values
              - values
              key: key
              operator: operator
            matchFields:
            - values:
              - values
              - values
              key: key
              operator: operator
            - values:
              - values
              - values
              key: key
              operator: operator
          weight: 6
      properties:
        preferredDuringSchedulingIgnoredDuringExecution:
          description: "The scheduler will prefer to schedule pods to nodes that satisfy\
            \ the affinity expressions specified by this field, but it may choose\
            \ a node that violates one or more of the expressions. The node that is\
            \ most preferred is the one with the greatest sum of weights, i.e. for\
            \ each node that meets all of the scheduling requirements (resource request,\
            \ requiredDuringScheduling affinity expressions, etc.), compute a sum\
            \ by iterating through the elements of this field and adding \"weight\"\
            \ to the sum if the node matches the corresponding matchExpressions; the\
            \ node(s) with the highest sum are the most preferred."
          items:
            $ref: '#/components/schemas/v1.PreferredSchedulingTerm'
          type: array
        requiredDuringSchedulingIgnoredDuringExecution:
          $ref: '#/components/schemas/v1.NodeSelector'
      type: object
    v1.NodeCondition:
      description: NodeCondition contains condition information for a node.
      properties:
        lastHeartbeatTime:
          description: Last time we got an update on a given condition.
          type: string
        lastTransitionTime:
          description: Last time the condition transit from one status to another.
          type: string
        message:
          description: Human readable message indicating details about last transition.
          type: string
        reason:
          description: (brief) reason for the condition's last transition.
          type: string
        status:
          description: "Status of the condition, one of True, False, Unknown."
          type: string
        type:
          description: Type of node condition.
          type: string
      required:
      - status
      - type
      type: object
    v1.NodeConfigSource:
      description: NodeConfigSource specifies a source of node configuration. Exactly
        one subfield (excluding metadata) must be non-nil.
      properties:
        configMap:
          $ref: '#/components/schemas/v1.ConfigMapNodeConfigSource'
      type: object
    v1.NodeConfigStatus:
      description: NodeConfigStatus describes the status of the config assigned by
        Node.Spec.ConfigSource.
      properties:
        active:
          $ref: '#/components/schemas/v1.NodeConfigSource'
        assigned:
          $ref: '#/components/schemas/v1.NodeConfigSource'
        error:
          description: "Error describes any problems reconciling the Spec.ConfigSource\
            \ to the Active config. Errors may occur, for example, attempting to checkpoint\
            \ Spec.ConfigSource to the local Assigned record, attempting to checkpoint\
            \ the payload associated with Spec.ConfigSource, attempting to load or\
            \ validate the Assigned config, etc. Errors may occur at different points\
            \ while syncing config. Earlier errors (e.g. download or checkpointing\
            \ errors) will not result in a rollback to LastKnownGood, and may resolve\
            \ across Kubelet retries. Later errors (e.g. loading or validating a checkpointed\
            \ config) will result in a rollback to LastKnownGood. In the latter case,\
            \ it is usually possible to resolve the error by fixing the config assigned\
            \ in Spec.ConfigSource. You can find additional information for debugging\
            \ by searching the error message in the Kubelet log. Error is a human-readable\
            \ description of the error state; machines can check whether or not Error\
            \ is empty, but should not rely on the stability of the Error text across\
            \ Kubelet versions."
          type: string
        lastKnownGood:
          $ref: '#/components/schemas/v1.NodeConfigSource'
      type: object
    v1.NodeDaemonEndpoints:
      description: NodeDaemonEndpoints lists ports opened by daemons running on the
        Node.
      properties:
        kubeletEndpoint:
          $ref: '#/components/schemas/v1.DaemonEndpoint'
      type: object
    v1.NodeList:
      description: NodeList is the whole list of all Nodes which have been registered
        with master.
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
          type: string
        items:
          description: List of nodes
          items:
            $ref: '#/components/schemas/v1.Node'
          type: array
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: '#/components/schemas/v1.ListMeta'
      required:
      - items
      type: object
    v1.NodeSelector:
      description: "A node selector represents the union of the results of one or\
        \ more label queries over a set of nodes; that is, it represents the OR of\
        \ the selectors represented by the node selector terms."
      example:
        nodeSelectorTerms:
        - matchExpressions:
          - values:
            - values
            - values
            key: key
            operator: operator
          - values:
            - values
            - values
            key: key
            operator: operator
          matchFields:
          - values:
            - values
            - values
            key: key
            operator: operator
          - values:
            - values
            - values
            key: key
            operator: operator
        - matchExpressions:
          - values:
            - values
            - values
            key: key
            operator: operator
          - values:
            - values
            - values
            key: key
            operator: operator
          matchFields:
          - values:
            - values
            - values
            key: key
            operator: operator
          - values:
            - values
            - values
            key: key
            operator: operator
      properties:
        nodeSelectorTerms:
          description: Required. A list of node selector terms. The terms are ORed.
          items:
            $ref: '#/components/schemas/v1.NodeSelectorTerm'
          type: array
      required:
      - nodeSelectorTerms
      type: object
    v1.NodeSelectorRequirement:
      description: "A node selector requirement is a selector that contains values,\
        \ a key, and an operator that relates the key and values."
      example:
        values:
        - values
        - values
        key: key
        operator: operator
      properties:
        key:
          description: The label key that the selector applies to.
          type: string
        operator:
          description: "Represents a key's relationship to a set of values. Valid\
            \ operators are In, NotIn, Exists, DoesNotExist. Gt, and Lt."
          type: string
        values:
          description: "An array of string values. If the operator is In or NotIn,\
            \ the values array must be non-empty. If the operator is Exists or DoesNotExist,\
            \ the values array must be empty. If the operator is Gt or Lt, the values\
            \ array must have a single element, which will be interpreted as an integer.\
            \ This array is replaced during a strategic merge patch."
          items:
            type: string
          type: array
      required:
      - key
      - operator
      type: object
    v1.NodeSelectorTerm:
      description: A null or empty node selector term matches no objects. The requirements
        of them are ANDed. The TopologySelectorTerm type implements a subset of the
        NodeSelectorTerm.
      example:
        matchExpressions:
        - values:
          - values
          - values
          key: key
          operator: operator
        - values:
          - values
          - values
          key: key
          operator: operator
        matchFields:
        - values:
          - values
          - values
          key: key
          operator: operator
        - values:
          - values
          - values
          key: key
          operator: operator
      properties:
        matchExpressions:
          description: A list of node selector requirements by node's labels.
          items:
            $ref: '#/components/schemas/v1.NodeSelectorRequirement'
          type: array
        matchFields:
          description: A list of node selector requirements by node's fields.
          items:
            $ref: '#/components/schemas/v1.NodeSelectorRequirement'
          type: array
      type: object
    v1.NodeSpec:
      description: NodeSpec describes the attributes that a node is created with.
      properties:
        configSource:
          $ref: '#/components/schemas/v1.NodeConfigSource'
        externalID:
          description: "Deprecated. Not all kubelets will set this field. Remove field\
            \ after 1.13. see: https://issues.k8s.io/61966"
          type: string
        podCIDR:
          description: PodCIDR represents the pod IP range assigned to the node.
          type: string
        providerID:
          description: "ID of the node assigned by the cloud provider in the format:\
            \ <ProviderName>://<ProviderSpecificNodeID>"
          type: string
        taints:
          description: "If specified, the node's taints."
          items:
            $ref: '#/components/schemas/v1.Taint'
          type: array
        unschedulable:
          description: "Unschedulable controls node schedulability of new pods. By\
            \ default, node is schedulable. More info: https://kubernetes.io/docs/concepts/nodes/node/#manual-node-administration"
          type: boolean
      type: object
    v1.NodeStatus:
      description: NodeStatus is information about the current status of a node.
      properties:
        addresses:
          description: "List of addresses reachable to the node. Queried from cloud\
            \ provider, if available. More info: https://kubernetes.io/docs/concepts/nodes/node/#addresses"
          items:
            $ref: '#/components/schemas/v1.NodeAddress'
          type: array
        allocatable:
          description: Allocatable represents the resources of a node that are available
            for scheduling. Defaults to Capacity.
          properties: {}
          type: object
        capacity:
          description: "Capacity represents the total resources of a node. More info:\
            \ https://kubernetes.io/docs/concepts/storage/persistent-volumes#capacity"
          properties: {}
          type: object
        conditions:
          description: "Conditions is an array of current observed node conditions.\
            \ More info: https://kubernetes.io/docs/concepts/nodes/node/#condition"
          items:
            $ref: '#/components/schemas/v1.NodeCondition'
          type: array
        config:
          $ref: '#/components/schemas/v1.NodeConfigStatus'
        daemonEndpoints:
          $ref: '#/components/schemas/v1.NodeDaemonEndpoints'
        images:
          description: List of container images on this node
          items:
            $ref: '#/components/schemas/v1.ContainerImage'
          type: array
        nodeInfo:
          $ref: '#/components/schemas/v1.NodeSystemInfo'
        phase:
          description: "NodePhase is the recently observed lifecycle phase of the\
            \ node. More info: https://kubernetes.io/docs/concepts/nodes/node/#phase\
            \ The field is never populated, and now is deprecated."
          type: string
        volumesAttached:
          description: List of volumes that are attached to the node.
          items:
            $ref: '#/components/schemas/v1.AttachedVolume'
          type: array
        volumesInUse:
          description: List of attachable volumes in use (mounted) by the node.
          items:
            $ref: '#/components/schemas/v1.UniqueVolumeName'
          type: array
      type: object
    v1.NodeSystemInfo:
      description: NodeSystemInfo is a set of ids/uuids to uniquely identify the node.
      properties:
        architecture:
          description: The Architecture reported by the node
          type: string
        bootID:
          description: Boot ID reported by the node.
          type: string
        containerRuntimeVersion:
          description: ContainerRuntime Version reported by the node through runtime
            remote API (e.g. docker://1.5.0).
          type: string
        kernelVersion:
          description: Kernel Version reported by the node from 'uname -r' (e.g. 3.16.0-0.bpo.4-amd64).
          type: string
        kubeProxyVersion:
          description: KubeProxy Version reported by the node.
          type: string
        kubeletVersion:
          description: Kubelet Version reported by the node.
          type: string
        machineID:
          description: "MachineID reported by the node. For unique machine identification\
            \ in the cluster this field is preferred. Learn more from man(5) machine-id:\
            \ http://man7.org/linux/man-pages/man5/machine-id.5.html"
          type: string
        operatingSystem:
          description: The Operating System reported by the node
          type: string
        osImage:
          description: OS Image reported by the node from /etc/os-release (e.g. Debian
            GNU/Linux 7 (wheezy)).
          type: string
        systemUUID:
          description: SystemUUID reported by the node. For unique machine identification
            MachineID is preferred. This field is specific to Red Hat hosts https://access.redhat.com/documentation/en-US/Red_Hat_Subscription_Management/1/html/RHSM/getting-system-uuid.html
          type: string
      required:
      - architecture
      - bootID
      - containerRuntimeVersion
      - kernelVersion
      - kubeProxyVersion
      - kubeletVersion
      - machineID
      - operatingSystem
      - osImage
      - systemUUID
      type: object
    v1.ObjectFieldSelector:
      description: ObjectFieldSelector selects an APIVersioned field of an object.
      example:
        apiVersion: apiVersion
        fieldPath: fieldPath
      properties:
        apiVersion:
          description: "Version of the schema the FieldPath is written in terms of,\
            \ defaults to \"v1\"."
          type: string
        fieldPath:
          description: Path of the field to select in the specified API version.
          type: string
      required:
      - fieldPath
      type: object
    v1.ObjectMeta:
      description: "ObjectMeta is metadata that all persisted resources must have,\
        \ which includes all objects users must create."
      example:
        generation: 6
        finalizers:
        - finalizers
        - finalizers
        resourceVersion: resourceVersion
        annotations: "{}"
        generateName: generateName
        deletionTimestamp: deletionTimestamp
        labels: "{}"
        ownerReferences:
        - uid: uid
          controller: true
          apiVersion: apiVersion
          kind: kind
          name: name
          blockOwnerDeletion: true
        - uid: uid
          controller: true
          apiVersion: apiVersion
          kind: kind
          name: name
          blockOwnerDeletion: true
        selfLink: selfLink
        deletionGracePeriodSeconds: 0
        uid: uid
        initializers:
          result:
            reason: reason
            metadata:
              continue: continue
              resourceVersion: resourceVersion
              selfLink: selfLink
            apiVersion: apiVersion
            code: 1
            kind: kind
            details:
              uid: uid
              kind: kind
              causes:
              - reason: reason
                field: field
                message: message
              - reason: reason
                field: field
                message: message
              retryAfterSeconds: 5
              name: name
              group: group
            message: message
            status: status
          pending:
          - name: name
          - name: name
        clusterName: clusterName
        creationTimestamp: creationTimestamp
        name: name
        namespace: namespace
      properties:
        annotations:
          description: "Annotations is an unstructured key value map stored with a\
            \ resource that may be set by external tools to store and retrieve arbitrary\
            \ metadata. They are not queryable and should be preserved when modifying\
            \ objects. More info: http://kubernetes.io/docs/user-guide/annotations"
          properties: {}
          type: object
        clusterName:
          description: The name of the cluster which the object belongs to. This is
            used to distinguish resources with same name and namespace in different
            clusters. This field is not set anywhere right now and apiserver is going
            to ignore it if set in create or update request.
          type: string
        creationTimestamp:
          description: |-
            CreationTimestamp is a timestamp representing the server time when this object was created. It is not guaranteed to be set in happens-before order across separate operations. Clients may not set this value. It is represented in RFC3339 form and is in UTC.

            Populated by the system. Read-only. Null for lists. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
          type: string
        deletionGracePeriodSeconds:
          description: Number of seconds allowed for this object to gracefully terminate
            before it will be removed from the system. Only set when deletionTimestamp
            is also set. May only be shortened. Read-only.
          format: int64
          type: integer
        deletionTimestamp:
          description: |-
            DeletionTimestamp is RFC 3339 date and time at which this resource will be deleted. This field is set by the server when a graceful deletion is requested by the user, and is not directly settable by a client. The resource is expected to be deleted (no longer visible from resource lists, and not reachable by name) after the time in this field, once the finalizers list is empty. As long as the finalizers list contains items, deletion is blocked. Once the deletionTimestamp is set, this value may not be unset or be set further into the future, although it may be shortened or the resource may be deleted prior to this time. For example, a user may request that a pod is deleted in 30 seconds. The Kubelet will react by sending a graceful termination signal to the containers in the pod. After that 30 seconds, the Kubelet will send a hard termination signal (SIGKILL) to the container and after cleanup, remove the pod from the API. In the presence of network partitions, this object may still exist after this timestamp, until an administrator or automated process can determine the resource is fully terminated. If not set, graceful deletion of the object has not been requested.

            Populated by the system when a graceful deletion is requested. Read-only. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#metadata
          type: string
        finalizers:
          description: "Must be empty before the object is deleted from the registry.\
            \ Each entry is an identifier for the responsible component that will\
            \ remove the entry from the list. If the deletionTimestamp of the object\
            \ is non-nil, entries in this list can only be removed."
          items:
            type: string
          type: array
        generateName:
          description: |-
            GenerateName is an optional prefix, used by the server, to generate a unique name ONLY IF the Name field has not been provided. If this field is used, the name returned to the client will be different than the name passed. This value will also be combined with a unique suffix. The provided value has the same validation rules as the Name field, and may be truncated by the length of the suffix required to make the value unique on the server.

            If this field is specified and the generated name exists, the server will NOT return a 409 - instead, it will either return 201 Created or 500 with Reason ServerTimeout indicating a unique name could not be found in the time allotted, and the client should retry (optionally after the time indicated in the Retry-After header).

            Applied only if Name is not specified. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#idempotency
          type: string
        generation:
          description: A sequence number representing a specific generation of the
            desired state. Populated by the system. Read-only.
          format: int64
          type: integer
        initializers:
          $ref: '#/components/schemas/v1.Initializers'
        labels:
          description: "Map of string keys and values that can be used to organize\
            \ and categorize (scope and select) objects. May match selectors of replication\
            \ controllers and services. More info: http://kubernetes.io/docs/user-guide/labels"
          properties: {}
          type: object
        name:
          description: "Name must be unique within a namespace. Is required when creating\
            \ resources, although some resources may allow a client to request the\
            \ generation of an appropriate name automatically. Name is primarily intended\
            \ for creation idempotence and configuration definition. Cannot be updated.\
            \ More info: http://kubernetes.io/docs/user-guide/identifiers#names"
          type: string
        namespace:
          description: |-
            Namespace defines the space within each name must be unique. An empty namespace is equivalent to the "default" namespace, but "default" is the canonical representation. Not all objects are required to be scoped to a namespace - the value of this field for those objects will be empty.

            Must be a DNS_LABEL. Cannot be updated. More info: http://kubernetes.io/docs/user-guide/namespaces
          type: string
        ownerReferences:
          description: "List of objects depended by this object. If ALL objects in\
            \ the list have been deleted, this object will be garbage collected. If\
            \ this object is managed by a controller, then an entry in this list will\
            \ point to this controller, with the controller field set to true. There\
            \ cannot be more than one managing controller."
          items:
            $ref: '#/components/schemas/v1.OwnerReference'
          type: array
        resourceVersion:
          description: |-
            An opaque value that represents the internal version of this object that can be used by clients to determine when objects have changed. May be used for optimistic concurrency, change detection, and the watch operation on a resource or set of resources. Clients must treat these values as opaque and passed unmodified back to the server. They may only be valid for a particular resource or set of resources.

            Populated by the system. Read-only. Value must be treated as opaque by clients and . More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency
          type: string
        selfLink:
          description: SelfLink is a URL representing this object. Populated by the
            system. Read-only.
          type: string
        uid:
          description: |-
            UID is the unique in time and space value for this object. It is typically generated by the server on successful creation of a resource and is not allowed to change on PUT operations.

            Populated by the system. Read-only. More info: http://kubernetes.io/docs/user-guide/identifiers#uids
          type: string
      type: object
    v1.ObjectReference:
      description: ObjectReference contains enough information to let you inspect
        or modify the referred object.
      example:
        uid: uid
        apiVersion: apiVersion
        kind: kind
        resourceVersion: resourceVersion
        fieldPath: fieldPath
        name: name
        namespace: namespace
      properties:
        apiVersion:
          description: API version of the referent.
          type: string
        fieldPath:
          description: "If referring to a piece of an object instead of an entire\
            \ object, this string should contain a valid JSON/Go field access statement,\
            \ such as desiredState.manifest.containers[2]. For example, if the object\
            \ reference is to a container within a pod, this would take on a value\
            \ like: \"spec.containers{name}\" (where \"name\" refers to the name of\
            \ the container that triggered the event) or if no container name is specified\
            \ \"spec.containers[2]\" (container with index 2 in this pod). This syntax\
            \ is chosen only to have some well-defined way of referencing a part of\
            \ an object."
          type: string
        kind:
          description: "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
          type: string
        name:
          description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
          type: string
        namespace:
          description: "Namespace of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/"
          type: string
        resourceVersion:
          description: "Specific resourceVersion to which this reference is made,\
            \ if any. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency"
          type: string
        uid:
          description: "UID of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#uids"
          type: string
      type: object
    v1.OwnerReference:
      description: "OwnerReference contains enough information to let you identify\
        \ an owning object. Currently, an owning object must be in the same namespace,\
        \ so there is no namespace field."
      example:
        uid: uid
        controller: true
        apiVersion: apiVersion
        kind: kind
        name: name
        blockOwnerDeletion: true
      properties:
        apiVersion:
          description: API version of the referent.
          type: string
        blockOwnerDeletion:
          description: "If true, AND if the owner has the \"foregroundDeletion\" finalizer,\
            \ then the owner cannot be deleted from the key-value store until this\
            \ reference is removed. Defaults to false. To set this field, a user needs\
            \ \"delete\" permission of the owner, otherwise 422 (Unprocessable Entity)\
            \ will be returned."
          type: boolean
        controller:
          description: "If true, this reference points to the managing controller."
          type: boolean
        kind:
          description: "Kind of the referent. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
          type: string
        name:
          description: "Name of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#names"
          type: string
        uid:
          description: "UID of the referent. More info: http://kubernetes.io/docs/user-guide/identifiers#uids"
          type: string
      required:
      - apiVersion
      - kind
      - name
      - uid
      type: object
    v1.Patch:
      description: Patch is provided to give a concrete name and type to the Kubernetes
        PATCH request body.
      type: object
    v1.PersistentVolume:
      description: "PersistentVolume (PV) is a storage resource provisioned by an\
        \ administrator. It is analogous to a node. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes"
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
          type: string
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: '#/components/schemas/v1.ObjectMeta'
        spec:
          $ref: '#/components/schemas/v1.PersistentVolumeSpec'
        status:
          $ref: '#/components/schemas/v1.PersistentVolumeStatus'
      type: object
    v1.PersistentVolumeClaim:
      description: PersistentVolumeClaim is a user's request for and claim to a persistent
        volume
      example:
        metadata:
          generation: 6
          finalizers:
          - finalizers
          - finalizers
          resourceVersion: resourceVersion
          annotations: "{}"
          generateName: generateName
          deletionTimestamp: deletionTimestamp
          labels: "{}"
          ownerReferences:
          - uid: uid
            controller: true
            apiVersion: apiVersion
            kind: kind
            name: name
            blockOwnerDeletion: true
          - uid: uid
            controller: true
            apiVersion: apiVersion
            kind: kind
            name: name
            blockOwnerDeletion: true
          selfLink: selfLink
          deletionGracePeriodSeconds: 0
          uid: uid
          initializers:
            result:
              reason: reason
              metadata:
                continue: continue
                resourceVersion: resourceVersion
                selfLink: selfLink
              apiVersion: apiVersion
              code: 1
              kind: kind
              details:
                uid: uid
                kind: kind
                causes:
                - reason: reason
                  field: field
                  message: message
                - reason: reason
                  field: field
                  message: message
                retryAfterSeconds: 5
                name: name
                group: group
              message: message
              status: status
            pending:
            - name: name
            - name: name
          clusterName: clusterName
          creationTimestamp: creationTimestamp
          name: name
          namespace: namespace
        apiVersion: apiVersion
        kind: kind
        spec:
          storageClassName: storageClassName
          volumeName: volumeName
          resources:
            requests: "{}"
            limits: "{}"
          selector:
            matchExpressions:
            - values:
              - values
              - values
              key: key
              operator: operator
            - values:
              - values
              - values
              key: key
              operator: operator
            matchLabels: "{}"
          accessModes:
          - "{}"
          - "{}"
          volumeMode: "{}"
        status:
          phase: phase
          accessModes:
          - "{}"
          - "{}"
          conditions:
          - reason: reason
            lastTransitionTime: lastTransitionTime
            message: message
            type: type
            lastProbeTime: lastProbeTime
            status: status
          - reason: reason
            lastTransitionTime: lastTransitionTime
            message: message
            type: type
            lastProbeTime: lastProbeTime
            status: status
          capacity: "{}"
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
          type: string
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: '#/components/schemas/v1.ObjectMeta'
        spec:
          $ref: '#/components/schemas/v1.PersistentVolumeClaimSpec'
        status:
          $ref: '#/components/schemas/v1.PersistentVolumeClaimStatus'
      type: object
    v1.PersistentVolumeClaimCondition:
      description: PersistentVolumeClaimCondition contails details about state of
        pvc
      example:
        reason: reason
        lastTransitionTime: lastTransitionTime
        message: message
        type: type
        lastProbeTime: lastProbeTime
        status: status
      properties:
        lastProbeTime:
          description: Last time we probed the condition.
          type: string
        lastTransitionTime:
          description: Last time the condition transitioned from one status to another.
          type: string
        message:
          description: Human-readable message indicating details about last transition.
          type: string
        reason:
          description: "Unique, this should be a short, machine understandable string\
            \ that gives the reason for condition's last transition. If it reports\
            \ \"ResizeStarted\" that means the underlying persistent volume is being\
            \ resized."
          type: string
        status:
          type: string
        type:
          type: string
      required:
      - status
      - type
      type: object
    v1.PersistentVolumeClaimList:
      description: PersistentVolumeClaimList is a list of PersistentVolumeClaim items.
      example:
        metadata:
          continue: continue
          resourceVersion: resourceVersion
          selfLink: selfLink
        apiVersion: apiVersion
        kind: kind
        items:
        - metadata:
            generation: 6
            finalizers:
            - finalizers
            - finalizers
            resourceVersion: resourceVersion
            annotations: "{}"
            generateName: generateName
            deletionTimestamp: deletionTimestamp
            labels: "{}"
            ownerReferences:
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            selfLink: selfLink
            deletionGracePeriodSeconds: 0
            uid: uid
            initializers:
              result:
                reason: reason
                metadata:
                  continue: continue
                  resourceVersion: resourceVersion
                  selfLink: selfLink
                apiVersion: apiVersion
                code: 1
                kind: kind
                details:
                  uid: uid
                  kind: kind
                  causes:
                  - reason: reason
                    field: field
                    message: message
                  - reason: reason
                    field: field
                    message: message
                  retryAfterSeconds: 5
                  name: name
                  group: group
                message: message
                status: status
              pending:
              - name: name
              - name: name
            clusterName: clusterName
            creationTimestamp: creationTimestamp
            name: name
            namespace: namespace
          apiVersion: apiVersion
          kind: kind
          spec:
            storageClassName: storageClassName
            volumeName: volumeName
            resources:
              requests: "{}"
              limits: "{}"
            selector:
              matchExpressions:
              - values:
                - values
                - values
                key: key
                operator: operator
              - values:
                - values
                - values
                key: key
                operator: operator
              matchLabels: "{}"
            accessModes:
            - "{}"
            - "{}"
            volumeMode: "{}"
          status:
            phase: phase
            accessModes:
            - "{}"
            - "{}"
            conditions:
            - reason: reason
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
              lastProbeTime: lastProbeTime
              status: status
            - reason: reason
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
              lastProbeTime: lastProbeTime
              status: status
            capacity: "{}"
        - metadata:
            generation: 6
            finalizers:
            - finalizers
            - finalizers
            resourceVersion: resourceVersion
            annotations: "{}"
            generateName: generateName
            deletionTimestamp: deletionTimestamp
            labels: "{}"
            ownerReferences:
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            selfLink: selfLink
            deletionGracePeriodSeconds: 0
            uid: uid
            initializers:
              result:
                reason: reason
                metadata:
                  continue: continue
                  resourceVersion: resourceVersion
                  selfLink: selfLink
                apiVersion: apiVersion
                code: 1
                kind: kind
                details:
                  uid: uid
                  kind: kind
                  causes:
                  - reason: reason
                    field: field
                    message: message
                  - reason: reason
                    field: field
                    message: message
                  retryAfterSeconds: 5
                  name: name
                  group: group
                message: message
                status: status
              pending:
              - name: name
              - name: name
            clusterName: clusterName
            creationTimestamp: creationTimestamp
            name: name
            namespace: namespace
          apiVersion: apiVersion
          kind: kind
          spec:
            storageClassName: storageClassName
            volumeName: volumeName
            resources:
              requests: "{}"
              limits: "{}"
            selector:
              matchExpressions:
              - values:
                - values
                - values
                key: key
                operator: operator
              - values:
                - values
                - values
                key: key
                operator: operator
              matchLabels: "{}"
            accessModes:
            - "{}"
            - "{}"
            volumeMode: "{}"
          status:
            phase: phase
            accessModes:
            - "{}"
            - "{}"
            conditions:
            - reason: reason
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
              lastProbeTime: lastProbeTime
              status: status
            - reason: reason
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
              lastProbeTime: lastProbeTime
              status: status
            capacity: "{}"
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
          type: string
        items:
          description: "A list of persistent volume claims. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims"
          items:
            $ref: '#/components/schemas/v1.PersistentVolumeClaim'
          type: array
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: '#/components/schemas/v1.ListMeta'
      required:
      - items
      type: object
    v1.PersistentVolumeClaimSpec:
      description: PersistentVolumeClaimSpec describes the common attributes of storage
        devices and allows a Source for provider-specific attributes
      example:
        storageClassName: storageClassName
        volumeName: volumeName
        resources:
          requests: "{}"
          limits: "{}"
        selector:
          matchExpressions:
          - values:
            - values
            - values
            key: key
            operator: operator
          - values:
            - values
            - values
            key: key
            operator: operator
          matchLabels: "{}"
        accessModes:
        - "{}"
        - "{}"
        volumeMode: "{}"
      properties:
        accessModes:
          description: "AccessModes contains the desired access modes the volume should\
            \ have. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1"
          items:
            $ref: '#/components/schemas/v1.PersistentVolumeAccessMode'
          type: array
        resources:
          $ref: '#/components/schemas/v1.ResourceRequirements'
        selector:
          $ref: '#/components/schemas/v1.LabelSelector'
        storageClassName:
          description: "Name of the StorageClass required by the claim. More info:\
            \ https://kubernetes.io/docs/concepts/storage/persistent-volumes#class-1"
          type: string
        volumeMode:
          $ref: '#/components/schemas/v1.PersistentVolumeMode'
        volumeName:
          description: VolumeName is the binding reference to the PersistentVolume
            backing this claim.
          type: string
      type: object
    v1.PersistentVolumeClaimStatus:
      description: PersistentVolumeClaimStatus is the current status of a persistent
        volume claim.
      example:
        phase: phase
        accessModes:
        - "{}"
        - "{}"
        conditions:
        - reason: reason
          lastTransitionTime: lastTransitionTime
          message: message
          type: type
          lastProbeTime: lastProbeTime
          status: status
        - reason: reason
          lastTransitionTime: lastTransitionTime
          message: message
          type: type
          lastProbeTime: lastProbeTime
          status: status
        capacity: "{}"
      properties:
        accessModes:
          description: "AccessModes contains the actual access modes the volume backing\
            \ the PVC has. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes-1"
          items:
            $ref: '#/components/schemas/v1.PersistentVolumeAccessMode'
          type: array
        capacity:
          description: Represents the actual resources of the underlying volume.
          properties: {}
          type: object
        conditions:
          description: Current Condition of persistent volume claim. If underlying
            persistent volume is being resized then the Condition will be set to 'ResizeStarted'.
          items:
            $ref: '#/components/schemas/v1.PersistentVolumeClaimCondition'
          type: array
        phase:
          description: Phase represents the current phase of PersistentVolumeClaim.
          type: string
      type: object
    v1.PersistentVolumeClaimVolumeSource:
      description: "PersistentVolumeClaimVolumeSource references the user's PVC in\
        \ the same namespace. This volume finds the bound PV and mounts that volume\
        \ for the pod. A PersistentVolumeClaimVolumeSource is, essentially, a wrapper\
        \ around another type of volume that is owned by someone else (the system)."
      example:
        claimName: claimName
        readOnly: true
      properties:
        claimName:
          description: "ClaimName is the name of a PersistentVolumeClaim in the same\
            \ namespace as the pod using this volume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#persistentvolumeclaims"
          type: string
        readOnly:
          description: Will force the ReadOnly setting in VolumeMounts. Default false.
          type: boolean
      required:
      - claimName
      type: object
    v1.PersistentVolumeList:
      description: PersistentVolumeList is a list of PersistentVolume items.
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
          type: string
        items:
          description: "List of persistent volumes. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes"
          items:
            $ref: '#/components/schemas/v1.PersistentVolume'
          type: array
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: '#/components/schemas/v1.ListMeta'
      required:
      - items
      type: object
    v1.PersistentVolumeSpec:
      description: PersistentVolumeSpec is the specification of a persistent volume.
      properties:
        accessModes:
          description: "AccessModes contains all ways the volume can be mounted. More\
            \ info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#access-modes"
          items:
            $ref: '#/components/schemas/v1.PersistentVolumeAccessMode'
          type: array
        awsElasticBlockStore:
          $ref: '#/components/schemas/v1.AWSElasticBlockStoreVolumeSource'
        azureDisk:
          $ref: '#/components/schemas/v1.AzureDiskVolumeSource'
        azureFile:
          $ref: '#/components/schemas/v1.AzureFilePersistentVolumeSource'
        capacity:
          description: "A description of the persistent volume's resources and capacity.\
            \ More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#capacity"
          properties: {}
          type: object
        cephfs:
          $ref: '#/components/schemas/v1.CephFSPersistentVolumeSource'
        cinder:
          $ref: '#/components/schemas/v1.CinderPersistentVolumeSource'
        claimRef:
          $ref: '#/components/schemas/v1.ObjectReference'
        csi:
          $ref: '#/components/schemas/v1.CSIPersistentVolumeSource'
        fc:
          $ref: '#/components/schemas/v1.FCVolumeSource'
        flexVolume:
          $ref: '#/components/schemas/v1.FlexPersistentVolumeSource'
        flocker:
          $ref: '#/components/schemas/v1.FlockerVolumeSource'
        gcePersistentDisk:
          $ref: '#/components/schemas/v1.GCEPersistentDiskVolumeSource'
        glusterfs:
          $ref: '#/components/schemas/v1.GlusterfsVolumeSource'
        hostPath:
          $ref: '#/components/schemas/v1.HostPathVolumeSource'
        iscsi:
          $ref: '#/components/schemas/v1.ISCSIPersistentVolumeSource'
        local:
          $ref: '#/components/schemas/v1.LocalVolumeSource'
        mountOptions:
          description: "A list of mount options, e.g. [\"ro\", \"soft\"]. Not validated\
            \ - mount will simply fail if one is invalid. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes/#mount-options"
          items:
            type: string
          type: array
        nfs:
          $ref: '#/components/schemas/v1.NFSVolumeSource'
        nodeAffinity:
          $ref: '#/components/schemas/v1.VolumeNodeAffinity'
        persistentVolumeReclaimPolicy:
          description: "What happens to a persistent volume when released from its\
            \ claim. Valid options are Retain (default for manually created PersistentVolumes),\
            \ Delete (default for dynamically provisioned PersistentVolumes), and\
            \ Recycle (deprecated). Recycle must be supported by the volume plugin\
            \ underlying this PersistentVolume. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#reclaiming"
          type: string
        photonPersistentDisk:
          $ref: '#/components/schemas/v1.PhotonPersistentDiskVolumeSource'
        portworxVolume:
          $ref: '#/components/schemas/v1.PortworxVolumeSource'
        quobyte:
          $ref: '#/components/schemas/v1.QuobyteVolumeSource'
        rbd:
          $ref: '#/components/schemas/v1.RBDPersistentVolumeSource'
        scaleIO:
          $ref: '#/components/schemas/v1.ScaleIOPersistentVolumeSource'
        storageClassName:
          description: Name of StorageClass to which this persistent volume belongs.
            Empty value means that this volume does not belong to any StorageClass.
          type: string
        storageos:
          $ref: '#/components/schemas/v1.StorageOSPersistentVolumeSource'
        volumeMode:
          $ref: '#/components/schemas/v1.PersistentVolumeMode'
        vsphereVolume:
          $ref: '#/components/schemas/v1.VsphereVirtualDiskVolumeSource'
      type: object
    v1.PersistentVolumeStatus:
      description: PersistentVolumeStatus is the current status of a persistent volume.
      properties:
        message:
          description: A human-readable message indicating details about why the volume
            is in this state.
          type: string
        phase:
          description: "Phase indicates if a volume is available, bound to a claim,\
            \ or released by a claim. More info: https://kubernetes.io/docs/concepts/storage/persistent-volumes#phase"
          type: string
        reason:
          description: Reason is a brief CamelCase string that describes any failure
            and is meant for machine parsing and tidy display in the CLI.
          type: string
      type: object
    v1.PhotonPersistentDiskVolumeSource:
      description: Represents a Photon Controller persistent disk resource.
      example:
        pdID: pdID
        fsType: fsType
      properties:
        fsType:
          description: "Filesystem type to mount. Must be a filesystem type supported\
            \ by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly\
            \ inferred to be \"ext4\" if unspecified."
          type: string
        pdID:
          description: ID that identifies Photon Controller persistent disk
          type: string
      required:
      - pdID
      type: object
    v1.Pod:
      description: Pod is a collection of containers that can run on a host. This
        resource is created by clients and scheduled onto hosts.
      example:
        metadata:
          generation: 6
          finalizers:
          - finalizers
          - finalizers
          resourceVersion: resourceVersion
          annotations: "{}"
          generateName: generateName
          deletionTimestamp: deletionTimestamp
          labels: "{}"
          ownerReferences:
          - uid: uid
            controller: true
            apiVersion: apiVersion
            kind: kind
            name: name
            blockOwnerDeletion: true
          - uid: uid
            controller: true
            apiVersion: apiVersion
            kind: kind
            name: name
            blockOwnerDeletion: true
          selfLink: selfLink
          deletionGracePeriodSeconds: 0
          uid: uid
          initializers:
            result:
              reason: reason
              metadata:
                continue: continue
                resourceVersion: resourceVersion
                selfLink: selfLink
              apiVersion: apiVersion
              code: 1
              kind: kind
              details:
                uid: uid
                kind: kind
                causes:
                - reason: reason
                  field: field
                  message: message
                - reason: reason
                  field: field
                  message: message
                retryAfterSeconds: 5
                name: name
                group: group
              message: message
              status: status
            pending:
            - name: name
            - name: name
          clusterName: clusterName
          creationTimestamp: creationTimestamp
          name: name
          namespace: namespace
        apiVersion: apiVersion
        kind: kind
        spec:
          dnsPolicy: dnsPolicy
          nodeName: nodeName
          terminationGracePeriodSeconds: 1
          dnsConfig:
            searches:
            - searches
            - searches
            nameservers:
            - nameservers
            - nameservers
            options:
            - name: name
              value: value
            - name: name
              value: value
          hostNetwork: true
          readinessGates:
          - conditionType: conditionType
          - conditionType: conditionType
          serviceAccountName: serviceAccountName
          imagePullSecrets:
          - name: name
          - name: name
          priorityClassName: priorityClassName
          hostAliases:
          - ip: ip
            hostnames:
            - hostnames
            - hostnames
          - ip: ip
            hostnames:
            - hostnames
            - hostnames
          securityContext:
            runAsUser: 6
            seLinuxOptions:
              role: role
              level: level
              type: type
              user: user
            fsGroup: 1
            supplementalGroups:
            - 7
            - 7
            runAsGroup: 1
            runAsNonRoot: true
            sysctls:
            - name: name
              value: value
            - name: name
              value: value
          nodeSelector: "{}"
          hostname: hostname
          tolerations:
          - effect: effect
            tolerationSeconds: 4
            value: value
            key: key
            operator: operator
          - effect: effect
            tolerationSeconds: 4
            value: value
            key: key
            operator: operator
          automountServiceAccountToken: true
          schedulerName: schedulerName
          activeDeadlineSeconds: 0
          hostIPC: true
          volumes:
          - quobyte:
              volume: volume
              registry: registry
              readOnly: true
              user: user
              group: group
            azureFile:
              secretName: secretName
              readOnly: true
              shareName: shareName
            flexVolume:
              driver: driver
              options: "{}"
              secretRef:
                name: name
              readOnly: true
              fsType: fsType
            secret:
              secretName: secretName
              defaultMode: 2
              optional: true
              items:
              - mode: 9
                path: path
                key: key
              - mode: 9
                path: path
                key: key
            projected:
              sources:
              - downwardAPI:
                  items:
                  - mode: 8
                    path: path
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                  - mode: 8
                    path: path
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                configMap:
                  name: name
                  optional: true
                  items:
                  - mode: 9
                    path: path
                    key: key
                  - mode: 9
                    path: path
                    key: key
                secret:
                  name: name
                  optional: true
                  items:
                  - mode: 9
                    path: path
                    key: key
                  - mode: 9
                    path: path
                    key: key
                serviceAccountToken:
                  path: path
                  audience: audience
                  expirationSeconds: 1
              - downwardAPI:
                  items:
                  - mode: 8
                    path: path
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                  - mode: 8
                    path: path
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                configMap:
                  name: name
                  optional: true
                  items:
                  - mode: 9
                    path: path
                    key: key
                  - mode: 9
                    path: path
                    key: key
                secret:
                  name: name
                  optional: true
                  items:
                  - mode: 9
                    path: path
                    key: key
                  - mode: 9
                    path: path
                    key: key
                serviceAccountToken:
                  path: path
                  audience: audience
                  expirationSeconds: 1
              defaultMode: 6
            cephfs:
              path: path
              secretRef:
                name: name
              secretFile: secretFile
              readOnly: true
              user: user
              monitors:
              - monitors
              - monitors
            scaleIO:
              system: system
              protectionDomain: protectionDomain
              sslEnabled: true
              storageMode: storageMode
              volumeName: volumeName
              secretRef:
                name: name
              readOnly: true
              fsType: fsType
              storagePool: storagePool
              gateway: gateway
            emptyDir:
              sizeLimit: sizeLimit
              medium: medium
            glusterfs:
              path: path
              endpoints: endpoints
              readOnly: true
            gcePersistentDisk:
              partition: 6
              readOnly: true
              pdName: pdName
              fsType: fsType
            photonPersistentDisk:
              pdID: pdID
              fsType: fsType
            azureDisk:
              diskName: diskName
              kind: "{}"
              readOnly: true
              cachingMode: "{}"
              diskURI: diskURI
              fsType: fsType
            cinder:
              secretRef:
                name: name
              volumeID: volumeID
              readOnly: true
              fsType: fsType
            downwardAPI:
              defaultMode: 6
              items:
              - mode: 8
                path: path
                resourceFieldRef:
                  divisor: divisor
                  resource: resource
                  containerName: containerName
                fieldRef:
                  apiVersion: apiVersion
                  fieldPath: fieldPath
              - mode: 8
                path: path
                resourceFieldRef:
                  divisor: divisor
                  resource: resource
                  containerName: containerName
                fieldRef:
                  apiVersion: apiVersion
                  fieldPath: fieldPath
            awsElasticBlockStore:
              partition: 5
              volumeID: volumeID
              readOnly: true
              fsType: fsType
            flocker:
              datasetName: datasetName
              datasetUUID: datasetUUID
            iscsi:
              chapAuthSession: true
              iscsiInterface: iscsiInterface
              lun: 3
              chapAuthDiscovery: true
              iqn: iqn
              portals:
              - portals
              - portals
              secretRef:
                name: name
              initiatorName: initiatorName
              readOnly: true
              fsType: fsType
              targetPortal: targetPortal
            rbd:
              image: image
              pool: pool
              secretRef:
                name: name
              readOnly: true
              fsType: fsType
              keyring: keyring
              user: user
              monitors:
              - monitors
              - monitors
            configMap:
              defaultMode: 9
              name: name
              optional: true
              items:
              - mode: 9
                path: path
                key: key
              - mode: 9
                path: path
                key: key
            storageos:
              volumeNamespace: volumeNamespace
              volumeName: volumeName
              secretRef:
                name: name
              readOnly: true
              fsType: fsType
            name: name
            nfs:
              path: path
              server: server
              readOnly: true
            persistentVolumeClaim:
              claimName: claimName
              readOnly: true
            gitRepo:
              repository: repository
              directory: directory
              revision: revision
            portworxVolume:
              volumeID: volumeID
              readOnly: true
              fsType: fsType
            vsphereVolume:
              storagePolicyName: storagePolicyName
              storagePolicyID: storagePolicyID
              volumePath: volumePath
              fsType: fsType
            fc:
              lun: 9
              targetWWNs:
              - targetWWNs
              - targetWWNs
              readOnly: true
              wwids:
              - wwids
              - wwids
              fsType: fsType
            hostPath:
              path: path
              type: "{}"
          - quobyte:
              volume: volume
              registry: registry
              readOnly: true
              user: user
              group: group
            azureFile:
              secretName: secretName
              readOnly: true
              shareName: shareName
            flexVolume:
              driver: driver
              options: "{}"
              secretRef:
                name: name
              readOnly: true
              fsType: fsType
            secret:
              secretName: secretName
              defaultMode: 2
              optional: true
              items:
              - mode: 9
                path: path
                key: key
              - mode: 9
                path: path
                key: key
            projected:
              sources:
              - downwardAPI:
                  items:
                  - mode: 8
                    path: path
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                  - mode: 8
                    path: path
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                configMap:
                  name: name
                  optional: true
                  items:
                  - mode: 9
                    path: path
                    key: key
                  - mode: 9
                    path: path
                    key: key
                secret:
                  name: name
                  optional: true
                  items:
                  - mode: 9
                    path: path
                    key: key
                  - mode: 9
                    path: path
                    key: key
                serviceAccountToken:
                  path: path
                  audience: audience
                  expirationSeconds: 1
              - downwardAPI:
                  items:
                  - mode: 8
                    path: path
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                  - mode: 8
                    path: path
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                configMap:
                  name: name
                  optional: true
                  items:
                  - mode: 9
                    path: path
                    key: key
                  - mode: 9
                    path: path
                    key: key
                secret:
                  name: name
                  optional: true
                  items:
                  - mode: 9
                    path: path
                    key: key
                  - mode: 9
                    path: path
                    key: key
                serviceAccountToken:
                  path: path
                  audience: audience
                  expirationSeconds: 1
              defaultMode: 6
            cephfs:
              path: path
              secretRef:
                name: name
              secretFile: secretFile
              readOnly: true
              user: user
              monitors:
              - monitors
              - monitors
            scaleIO:
              system: system
              protectionDomain: protectionDomain
              sslEnabled: true
              storageMode: storageMode
              volumeName: volumeName
              secretRef:
                name: name
              readOnly: true
              fsType: fsType
              storagePool: storagePool
              gateway: gateway
            emptyDir:
              sizeLimit: sizeLimit
              medium: medium
            glusterfs:
              path: path
              endpoints: endpoints
              readOnly: true
            gcePersistentDisk:
              partition: 6
              readOnly: true
              pdName: pdName
              fsType: fsType
            photonPersistentDisk:
              pdID: pdID
              fsType: fsType
            azureDisk:
              diskName: diskName
              kind: "{}"
              readOnly: true
              cachingMode: "{}"
              diskURI: diskURI
              fsType: fsType
            cinder:
              secretRef:
                name: name
              volumeID: volumeID
              readOnly: true
              fsType: fsType
            downwardAPI:
              defaultMode: 6
              items:
              - mode: 8
                path: path
                resourceFieldRef:
                  divisor: divisor
                  resource: resource
                  containerName: containerName
                fieldRef:
                  apiVersion: apiVersion
                  fieldPath: fieldPath
              - mode: 8
                path: path
                resourceFieldRef:
                  divisor: divisor
                  resource: resource
                  containerName: containerName
                fieldRef:
                  apiVersion: apiVersion
                  fieldPath: fieldPath
            awsElasticBlockStore:
              partition: 5
              volumeID: volumeID
              readOnly: true
              fsType: fsType
            flocker:
              datasetName: datasetName
              datasetUUID: datasetUUID
            iscsi:
              chapAuthSession: true
              iscsiInterface: iscsiInterface
              lun: 3
              chapAuthDiscovery: true
              iqn: iqn
              portals:
              - portals
              - portals
              secretRef:
                name: name
              initiatorName: initiatorName
              readOnly: true
              fsType: fsType
              targetPortal: targetPortal
            rbd:
              image: image
              pool: pool
              secretRef:
                name: name
              readOnly: true
              fsType: fsType
              keyring: keyring
              user: user
              monitors:
              - monitors
              - monitors
            configMap:
              defaultMode: 9
              name: name
              optional: true
              items:
              - mode: 9
                path: path
                key: key
              - mode: 9
                path: path
                key: key
            storageos:
              volumeNamespace: volumeNamespace
              volumeName: volumeName
              secretRef:
                name: name
              readOnly: true
              fsType: fsType
            name: name
            nfs:
              path: path
              server: server
              readOnly: true
            persistentVolumeClaim:
              claimName: claimName
              readOnly: true
            gitRepo:
              repository: repository
              directory: directory
              revision: revision
            portworxVolume:
              volumeID: volumeID
              readOnly: true
              fsType: fsType
            vsphereVolume:
              storagePolicyName: storagePolicyName
              storagePolicyID: storagePolicyID
              volumePath: volumePath
              fsType: fsType
            fc:
              lun: 9
              targetWWNs:
              - targetWWNs
              - targetWWNs
              readOnly: true
              wwids:
              - wwids
              - wwids
              fsType: fsType
            hostPath:
              path: path
              type: "{}"
          serviceAccount: serviceAccount
          priority: 1
          restartPolicy: restartPolicy
          shareProcessNamespace: true
          subdomain: subdomain
          containers:
          - volumeDevices:
            - devicePath: devicePath
              name: name
            - devicePath: devicePath
              name: name
            image: image
            imagePullPolicy: imagePullPolicy
            livenessProbe:
              failureThreshold: 5
              periodSeconds: 2
              tcpSocket:
                port: port
                host: host
              timeoutSeconds: 9
              successThreshold: 7
              initialDelaySeconds: 5
              exec:
                command:
                - command
                - command
              httpGet:
                path: path
                scheme: scheme
                port: port
                host: host
                httpHeaders:
                - name: name
                  value: value
                - name: name
                  value: value
            stdin: true
            terminationMessagePolicy: terminationMessagePolicy
            terminationMessagePath: terminationMessagePath
            workingDir: workingDir
            resources:
              requests: "{}"
              limits: "{}"
            securityContext:
              privileged: true
              runAsUser: 7
              capabilities:
                add:
                - "{}"
                - "{}"
                drop:
                - "{}"
                - "{}"
              seLinuxOptions:
                role: role
                level: level
                type: type
                user: user
              allowPrivilegeEscalation: true
              runAsGroup: 4
              runAsNonRoot: true
              readOnlyRootFilesystem: true
            env:
            - name: name
              value: value
              valueFrom:
                secretKeyRef:
                  name: name
                  optional: true
                  key: key
                resourceFieldRef:
                  divisor: divisor
                  resource: resource
                  containerName: containerName
                configMapKeyRef:
                  name: name
                  optional: true
                  key: key
                fieldRef:
                  apiVersion: apiVersion
                  fieldPath: fieldPath
            - name: name
              value: value
              valueFrom:
                secretKeyRef:
                  name: name
                  optional: true
                  key: key
                resourceFieldRef:
                  divisor: divisor
                  resource: resource
                  containerName: containerName
                configMapKeyRef:
                  name: name
                  optional: true
                  key: key
                fieldRef:
                  apiVersion: apiVersion
                  fieldPath: fieldPath
            ports:
            - protocol: protocol
              hostIP: hostIP
              name: name
              containerPort: 3
              hostPort: 2
            - protocol: protocol
              hostIP: hostIP
              name: name
              containerPort: 3
              hostPort: 2
            command:
            - command
            - command
            volumeMounts:
            - mountPath: mountPath
              mountPropagation: "{}"
              name: name
              readOnly: true
              subPath: subPath
            - mountPath: mountPath
              mountPropagation: "{}"
              name: name
              readOnly: true
              subPath: subPath
            args:
            - args
            - args
            lifecycle:
              postStart:
                tcpSocket:
                  port: port
                  host: host
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: port
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              preStop:
                tcpSocket:
                  port: port
                  host: host
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: port
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
            name: name
            tty: true
            readinessProbe:
              failureThreshold: 5
              periodSeconds: 2
              tcpSocket:
                port: port
                host: host
              timeoutSeconds: 9
              successThreshold: 7
              initialDelaySeconds: 5
              exec:
                command:
                - command
                - command
              httpGet:
                path: path
                scheme: scheme
                port: port
                host: host
                httpHeaders:
                - name: name
                  value: value
                - name: name
                  value: value
            stdinOnce: true
            envFrom:
            - configMapRef:
                name: name
                optional: true
              prefix: prefix
              secretRef:
                name: name
                optional: true
            - configMapRef:
                name: name
                optional: true
              prefix: prefix
              secretRef:
                name: name
                optional: true
          - volumeDevices:
            - devicePath: devicePath
              name: name
            - devicePath: devicePath
              name: name
            image: image
            imagePullPolicy: imagePullPolicy
            livenessProbe:
              failureThreshold: 5
              periodSeconds: 2
              tcpSocket:
                port: port
                host: host
              timeoutSeconds: 9
              successThreshold: 7
              initialDelaySeconds: 5
              exec:
                command:
                - command
                - command
              httpGet:
                path: path
                scheme: scheme
                port: port
                host: host
                httpHeaders:
                - name: name
                  value: value
                - name: name
                  value: value
            stdin: true
            terminationMessagePolicy: terminationMessagePolicy
            terminationMessagePath: terminationMessagePath
            workingDir: workingDir
            resources:
              requests: "{}"
              limits: "{}"
            securityContext:
              privileged: true
              runAsUser: 7
              capabilities:
                add:
                - "{}"
                - "{}"
                drop:
                - "{}"
                - "{}"
              seLinuxOptions:
                role: role
                level: level
                type: type
                user: user
              allowPrivilegeEscalation: true
              runAsGroup: 4
              runAsNonRoot: true
              readOnlyRootFilesystem: true
            env:
            - name: name
              value: value
              valueFrom:
                secretKeyRef:
                  name: name
                  optional: true
                  key: key
                resourceFieldRef:
                  divisor: divisor
                  resource: resource
                  containerName: containerName
                configMapKeyRef:
                  name: name
                  optional: true
                  key: key
                fieldRef:
                  apiVersion: apiVersion
                  fieldPath: fieldPath
            - name: name
              value: value
              valueFrom:
                secretKeyRef:
                  name: name
                  optional: true
                  key: key
                resourceFieldRef:
                  divisor: divisor
                  resource: resource
                  containerName: containerName
                configMapKeyRef:
                  name: name
                  optional: true
                  key: key
                fieldRef:
                  apiVersion: apiVersion
                  fieldPath: fieldPath
            ports:
            - protocol: protocol
              hostIP: hostIP
              name: name
              containerPort: 3
              hostPort: 2
            - protocol: protocol
              hostIP: hostIP
              name: name
              containerPort: 3
              hostPort: 2
            command:
            - command
            - command
            volumeMounts:
            - mountPath: mountPath
              mountPropagation: "{}"
              name: name
              readOnly: true
              subPath: subPath
            - mountPath: mountPath
              mountPropagation: "{}"
              name: name
              readOnly: true
              subPath: subPath
            args:
            - args
            - args
            lifecycle:
              postStart:
                tcpSocket:
                  port: port
                  host: host
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: port
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              preStop:
                tcpSocket:
                  port: port
                  host: host
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: port
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
            name: name
            tty: true
            readinessProbe:
              failureThreshold: 5
              periodSeconds: 2
              tcpSocket:
                port: port
                host: host
              timeoutSeconds: 9
              successThreshold: 7
              initialDelaySeconds: 5
              exec:
                command:
                - command
                - command
              httpGet:
                path: path
                scheme: scheme
                port: port
                host: host
                httpHeaders:
                - name: name
                  value: value
                - name: name
                  value: value
            stdinOnce: true
            envFrom:
            - configMapRef:
                name: name
                optional: true
              prefix: prefix
              secretRef:
                name: name
                optional: true
            - configMapRef:
                name: name
                optional: true
              prefix: prefix
              secretRef:
                name: name
                optional: true
          initContainers:
          - volumeDevices:
            - devicePath: devicePath
              name: name
            - devicePath: devicePath
              name: name
            image: image
            imagePullPolicy: imagePullPolicy
            livenessProbe:
              failureThreshold: 5
              periodSeconds: 2
              tcpSocket:
                port: port
                host: host
              timeoutSeconds: 9
              successThreshold: 7
              initialDelaySeconds: 5
              exec:
                command:
                - command
                - command
              httpGet:
                path: path
                scheme: scheme
                port: port
                host: host
                httpHeaders:
                - name: name
                  value: value
                - name: name
                  value: value
            stdin: true
            terminationMessagePolicy: terminationMessagePolicy
            terminationMessagePath: terminationMessagePath
            workingDir: workingDir
            resources:
              requests: "{}"
              limits: "{}"
            securityContext:
              privileged: true
              runAsUser: 7
              capabilities:
                add:
                - "{}"
                - "{}"
                drop:
                - "{}"
                - "{}"
              seLinuxOptions:
                role: role
                level: level
                type: type
                user: user
              allowPrivilegeEscalation: true
              runAsGroup: 4
              runAsNonRoot: true
              readOnlyRootFilesystem: true
            env:
            - name: name
              value: value
              valueFrom:
                secretKeyRef:
                  name: name
                  optional: true
                  key: key
                resourceFieldRef:
                  divisor: divisor
                  resource: resource
                  containerName: containerName
                configMapKeyRef:
                  name: name
                  optional: true
                  key: key
                fieldRef:
                  apiVersion: apiVersion
                  fieldPath: fieldPath
            - name: name
              value: value
              valueFrom:
                secretKeyRef:
                  name: name
                  optional: true
                  key: key
                resourceFieldRef:
                  divisor: divisor
                  resource: resource
                  containerName: containerName
                configMapKeyRef:
                  name: name
                  optional: true
                  key: key
                fieldRef:
                  apiVersion: apiVersion
                  fieldPath: fieldPath
            ports:
            - protocol: protocol
              hostIP: hostIP
              name: name
              containerPort: 3
              hostPort: 2
            - protocol: protocol
              hostIP: hostIP
              name: name
              containerPort: 3
              hostPort: 2
            command:
            - command
            - command
            volumeMounts:
            - mountPath: mountPath
              mountPropagation: "{}"
              name: name
              readOnly: true
              subPath: subPath
            - mountPath: mountPath
              mountPropagation: "{}"
              name: name
              readOnly: true
              subPath: subPath
            args:
            - args
            - args
            lifecycle:
              postStart:
                tcpSocket:
                  port: port
                  host: host
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: port
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              preStop:
                tcpSocket:
                  port: port
                  host: host
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: port
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
            name: name
            tty: true
            readinessProbe:
              failureThreshold: 5
              periodSeconds: 2
              tcpSocket:
                port: port
                host: host
              timeoutSeconds: 9
              successThreshold: 7
              initialDelaySeconds: 5
              exec:
                command:
                - command
                - command
              httpGet:
                path: path
                scheme: scheme
                port: port
                host: host
                httpHeaders:
                - name: name
                  value: value
                - name: name
                  value: value
            stdinOnce: true
            envFrom:
            - configMapRef:
                name: name
                optional: true
              prefix: prefix
              secretRef:
                name: name
                optional: true
            - configMapRef:
                name: name
                optional: true
              prefix: prefix
              secretRef:
                name: name
                optional: true
          - volumeDevices:
            - devicePath: devicePath
              name: name
            - devicePath: devicePath
              name: name
            image: image
            imagePullPolicy: imagePullPolicy
            livenessProbe:
              failureThreshold: 5
              periodSeconds: 2
              tcpSocket:
                port: port
                host: host
              timeoutSeconds: 9
              successThreshold: 7
              initialDelaySeconds: 5
              exec:
                command:
                - command
                - command
              httpGet:
                path: path
                scheme: scheme
                port: port
                host: host
                httpHeaders:
                - name: name
                  value: value
                - name: name
                  value: value
            stdin: true
            terminationMessagePolicy: terminationMessagePolicy
            terminationMessagePath: terminationMessagePath
            workingDir: workingDir
            resources:
              requests: "{}"
              limits: "{}"
            securityContext:
              privileged: true
              runAsUser: 7
              capabilities:
                add:
                - "{}"
                - "{}"
                drop:
                - "{}"
                - "{}"
              seLinuxOptions:
                role: role
                level: level
                type: type
                user: user
              allowPrivilegeEscalation: true
              runAsGroup: 4
              runAsNonRoot: true
              readOnlyRootFilesystem: true
            env:
            - name: name
              value: value
              valueFrom:
                secretKeyRef:
                  name: name
                  optional: true
                  key: key
                resourceFieldRef:
                  divisor: divisor
                  resource: resource
                  containerName: containerName
                configMapKeyRef:
                  name: name
                  optional: true
                  key: key
                fieldRef:
                  apiVersion: apiVersion
                  fieldPath: fieldPath
            - name: name
              value: value
              valueFrom:
                secretKeyRef:
                  name: name
                  optional: true
                  key: key
                resourceFieldRef:
                  divisor: divisor
                  resource: resource
                  containerName: containerName
                configMapKeyRef:
                  name: name
                  optional: true
                  key: key
                fieldRef:
                  apiVersion: apiVersion
                  fieldPath: fieldPath
            ports:
            - protocol: protocol
              hostIP: hostIP
              name: name
              containerPort: 3
              hostPort: 2
            - protocol: protocol
              hostIP: hostIP
              name: name
              containerPort: 3
              hostPort: 2
            command:
            - command
            - command
            volumeMounts:
            - mountPath: mountPath
              mountPropagation: "{}"
              name: name
              readOnly: true
              subPath: subPath
            - mountPath: mountPath
              mountPropagation: "{}"
              name: name
              readOnly: true
              subPath: subPath
            args:
            - args
            - args
            lifecycle:
              postStart:
                tcpSocket:
                  port: port
                  host: host
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: port
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              preStop:
                tcpSocket:
                  port: port
                  host: host
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: port
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
            name: name
            tty: true
            readinessProbe:
              failureThreshold: 5
              periodSeconds: 2
              tcpSocket:
                port: port
                host: host
              timeoutSeconds: 9
              successThreshold: 7
              initialDelaySeconds: 5
              exec:
                command:
                - command
                - command
              httpGet:
                path: path
                scheme: scheme
                port: port
                host: host
                httpHeaders:
                - name: name
                  value: value
                - name: name
                  value: value
            stdinOnce: true
            envFrom:
            - configMapRef:
                name: name
                optional: true
              prefix: prefix
              secretRef:
                name: name
                optional: true
            - configMapRef:
                name: name
                optional: true
              prefix: prefix
              secretRef:
                name: name
                optional: true
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                - matchExpressions:
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  matchFields:
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                - matchExpressions:
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  matchFields:
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
              preferredDuringSchedulingIgnoredDuringExecution:
              - preference:
                  matchExpressions:
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  matchFields:
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                weight: 6
              - preference:
                  matchExpressions:
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  matchFields:
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                weight: 6
            podAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
              - labelSelector:
                  matchExpressions:
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  matchLabels: "{}"
                topologyKey: topologyKey
                namespaces:
                - namespaces
                - namespaces
              - labelSelector:
                  matchExpressions:
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  matchLabels: "{}"
                topologyKey: topologyKey
                namespaces:
                - namespaces
                - namespaces
              preferredDuringSchedulingIgnoredDuringExecution:
              - podAffinityTerm:
                  labelSelector:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchLabels: "{}"
                  topologyKey: topologyKey
                  namespaces:
                  - namespaces
                  - namespaces
                weight: 1
              - podAffinityTerm:
                  labelSelector:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchLabels: "{}"
                  topologyKey: topologyKey
                  namespaces:
                  - namespaces
                  - namespaces
                weight: 1
            podAntiAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
              - labelSelector:
                  matchExpressions:
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  matchLabels: "{}"
                topologyKey: topologyKey
                namespaces:
                - namespaces
                - namespaces
              - labelSelector:
                  matchExpressions:
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  matchLabels: "{}"
                topologyKey: topologyKey
                namespaces:
                - namespaces
                - namespaces
              preferredDuringSchedulingIgnoredDuringExecution:
              - podAffinityTerm:
                  labelSelector:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchLabels: "{}"
                  topologyKey: topologyKey
                  namespaces:
                  - namespaces
                  - namespaces
                weight: 1
              - podAffinityTerm:
                  labelSelector:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchLabels: "{}"
                  topologyKey: topologyKey
                  namespaces:
                  - namespaces
                  - namespaces
                weight: 1
          hostPID: true
        status:
          phase: phase
          reason: reason
          podIP: podIP
          containerStatuses:
          - image: image
            imageID: imageID
            restartCount: 5
            ready: true
            name: name
            state:
              running:
                startedAt: startedAt
              waiting:
                reason: reason
                message: message
              terminated:
                reason: reason
                exitCode: 6
                startedAt: startedAt
                containerID: containerID
                message: message
                signal: 6
                finishedAt: finishedAt
            containerID: containerID
            lastState:
              running:
                startedAt: startedAt
              waiting:
                reason: reason
                message: message
              terminated:
                reason: reason
                exitCode: 6
                startedAt: startedAt
                containerID: containerID
                message: message
                signal: 6
                finishedAt: finishedAt
          - image: image
            imageID: imageID
            restartCount: 5
            ready: true
            name: name
            state:
              running:
                startedAt: startedAt
              waiting:
                reason: reason
                message: message
              terminated:
                reason: reason
                exitCode: 6
                startedAt: startedAt
                containerID: containerID
                message: message
                signal: 6
                finishedAt: finishedAt
            containerID: containerID
            lastState:
              running:
                startedAt: startedAt
              waiting:
                reason: reason
                message: message
              terminated:
                reason: reason
                exitCode: 6
                startedAt: startedAt
                containerID: containerID
                message: message
                signal: 6
                finishedAt: finishedAt
          hostIP: hostIP
          startTime: startTime
          nominatedNodeName: nominatedNodeName
          qosClass: qosClass
          conditions:
          - reason: reason
            lastTransitionTime: lastTransitionTime
            message: message
            type: type
            lastProbeTime: lastProbeTime
            status: status
          - reason: reason
            lastTransitionTime: lastTransitionTime
            message: message
            type: type
            lastProbeTime: lastProbeTime
            status: status
          message: message
          initContainerStatuses:
          - image: image
            imageID: imageID
            restartCount: 5
            ready: true
            name: name
            state:
              running:
                startedAt: startedAt
              waiting:
                reason: reason
                message: message
              terminated:
                reason: reason
                exitCode: 6
                startedAt: startedAt
                containerID: containerID
                message: message
                signal: 6
                finishedAt: finishedAt
            containerID: containerID
            lastState:
              running:
                startedAt: startedAt
              waiting:
                reason: reason
                message: message
              terminated:
                reason: reason
                exitCode: 6
                startedAt: startedAt
                containerID: containerID
                message: message
                signal: 6
                finishedAt: finishedAt
          - image: image
            imageID: imageID
            restartCount: 5
            ready: true
            name: name
            state:
              running:
                startedAt: startedAt
              waiting:
                reason: reason
                message: message
              terminated:
                reason: reason
                exitCode: 6
                startedAt: startedAt
                containerID: containerID
                message: message
                signal: 6
                finishedAt: finishedAt
            containerID: containerID
            lastState:
              running:
                startedAt: startedAt
              waiting:
                reason: reason
                message: message
              terminated:
                reason: reason
                exitCode: 6
                startedAt: startedAt
                containerID: containerID
                message: message
                signal: 6
                finishedAt: finishedAt
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
          type: string
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: '#/components/schemas/v1.ObjectMeta'
        spec:
          $ref: '#/components/schemas/v1.PodSpec'
        status:
          $ref: '#/components/schemas/v1.PodStatus'
      type: object
    v1.PodAffinity:
      description: Pod affinity is a group of inter pod affinity scheduling rules.
      example:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
            - values:
              - values
              - values
              key: key
              operator: operator
            - values:
              - values
              - values
              key: key
              operator: operator
            matchLabels: "{}"
          topologyKey: topologyKey
          namespaces:
          - namespaces
          - namespaces
        - labelSelector:
            matchExpressions:
            - values:
              - values
              - values
              key: key
              operator: operator
            - values:
              - values
              - values
              key: key
              operator: operator
            matchLabels: "{}"
          topologyKey: topologyKey
          namespaces:
          - namespaces
          - namespaces
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - values:
                - values
                - values
                key: key
                operator: operator
              - values:
                - values
                - values
                key: key
                operator: operator
              matchLabels: "{}"
            topologyKey: topologyKey
            namespaces:
            - namespaces
            - namespaces
          weight: 1
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - values:
                - values
                - values
                key: key
                operator: operator
              - values:
                - values
                - values
                key: key
                operator: operator
              matchLabels: "{}"
            topologyKey: topologyKey
            namespaces:
            - namespaces
            - namespaces
          weight: 1
      properties:
        preferredDuringSchedulingIgnoredDuringExecution:
          description: "The scheduler will prefer to schedule pods to nodes that satisfy\
            \ the affinity expressions specified by this field, but it may choose\
            \ a node that violates one or more of the expressions. The node that is\
            \ most preferred is the one with the greatest sum of weights, i.e. for\
            \ each node that meets all of the scheduling requirements (resource request,\
            \ requiredDuringScheduling affinity expressions, etc.), compute a sum\
            \ by iterating through the elements of this field and adding \"weight\"\
            \ to the sum if the node has pods which matches the corresponding podAffinityTerm;\
            \ the node(s) with the highest sum are the most preferred."
          items:
            $ref: '#/components/schemas/v1.WeightedPodAffinityTerm'
          type: array
        requiredDuringSchedulingIgnoredDuringExecution:
          description: "If the affinity requirements specified by this field are not\
            \ met at scheduling time, the pod will not be scheduled onto the node.\
            \ If the affinity requirements specified by this field cease to be met\
            \ at some point during pod execution (e.g. due to a pod label update),\
            \ the system may or may not try to eventually evict the pod from its node.\
            \ When there are multiple elements, the lists of nodes corresponding to\
            \ each podAffinityTerm are intersected, i.e. all terms must be satisfied."
          items:
            $ref: '#/components/schemas/v1.PodAffinityTerm'
          type: array
      type: object
    v1.PodAffinityTerm:
      description: "Defines a set of pods (namely those matching the labelSelector\
        \ relative to the given namespace(s)) that this pod should be co-located (affinity)\
        \ or not co-located (anti-affinity) with, where co-located is defined as running\
        \ on a node whose value of the label with key <topologyKey> matches that of\
        \ any node on which a pod of the set of pods is running"
      example:
        labelSelector:
          matchExpressions:
          - values:
            - values
            - values
            key: key
            operator: operator
          - values:
            - values
            - values
            key: key
            operator: operator
          matchLabels: "{}"
        topologyKey: topologyKey
        namespaces:
        - namespaces
        - namespaces
      properties:
        labelSelector:
          $ref: '#/components/schemas/v1.LabelSelector'
        namespaces:
          description: namespaces specifies which namespaces the labelSelector applies
            to (matches against); null or empty list means "this pod's namespace"
          items:
            type: string
          type: array
        topologyKey:
          description: "This pod should be co-located (affinity) or not co-located\
            \ (anti-affinity) with the pods matching the labelSelector in the specified\
            \ namespaces, where co-located is defined as running on a node whose value\
            \ of the label with key topologyKey matches that of any node on which\
            \ any of the selected pods is running. Empty topologyKey is not allowed."
          type: string
      required:
      - topologyKey
      type: object
    v1.PodAntiAffinity:
      description: Pod anti affinity is a group of inter pod anti affinity scheduling
        rules.
      example:
        requiredDuringSchedulingIgnoredDuringExecution:
        - labelSelector:
            matchExpressions:
            - values:
              - values
              - values
              key: key
              operator: operator
            - values:
              - values
              - values
              key: key
              operator: operator
            matchLabels: "{}"
          topologyKey: topologyKey
          namespaces:
          - namespaces
          - namespaces
        - labelSelector:
            matchExpressions:
            - values:
              - values
              - values
              key: key
              operator: operator
            - values:
              - values
              - values
              key: key
              operator: operator
            matchLabels: "{}"
          topologyKey: topologyKey
          namespaces:
          - namespaces
          - namespaces
        preferredDuringSchedulingIgnoredDuringExecution:
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - values:
                - values
                - values
                key: key
                operator: operator
              - values:
                - values
                - values
                key: key
                operator: operator
              matchLabels: "{}"
            topologyKey: topologyKey
            namespaces:
            - namespaces
            - namespaces
          weight: 1
        - podAffinityTerm:
            labelSelector:
              matchExpressions:
              - values:
                - values
                - values
                key: key
                operator: operator
              - values:
                - values
                - values
                key: key
                operator: operator
              matchLabels: "{}"
            topologyKey: topologyKey
            namespaces:
            - namespaces
            - namespaces
          weight: 1
      properties:
        preferredDuringSchedulingIgnoredDuringExecution:
          description: "The scheduler will prefer to schedule pods to nodes that satisfy\
            \ the anti-affinity expressions specified by this field, but it may choose\
            \ a node that violates one or more of the expressions. The node that is\
            \ most preferred is the one with the greatest sum of weights, i.e. for\
            \ each node that meets all of the scheduling requirements (resource request,\
            \ requiredDuringScheduling anti-affinity expressions, etc.), compute a\
            \ sum by iterating through the elements of this field and adding \"weight\"\
            \ to the sum if the node has pods which matches the corresponding podAffinityTerm;\
            \ the node(s) with the highest sum are the most preferred."
          items:
            $ref: '#/components/schemas/v1.WeightedPodAffinityTerm'
          type: array
        requiredDuringSchedulingIgnoredDuringExecution:
          description: "If the anti-affinity requirements specified by this field\
            \ are not met at scheduling time, the pod will not be scheduled onto the\
            \ node. If the anti-affinity requirements specified by this field cease\
            \ to be met at some point during pod execution (e.g. due to a pod label\
            \ update), the system may or may not try to eventually evict the pod from\
            \ its node. When there are multiple elements, the lists of nodes corresponding\
            \ to each podAffinityTerm are intersected, i.e. all terms must be satisfied."
          items:
            $ref: '#/components/schemas/v1.PodAffinityTerm'
          type: array
      type: object
    v1.PodCondition:
      description: PodCondition contains details for the current condition of this
        pod.
      example:
        reason: reason
        lastTransitionTime: lastTransitionTime
        message: message
        type: type
        lastProbeTime: lastProbeTime
        status: status
      properties:
        lastProbeTime:
          description: Last time we probed the condition.
          type: string
        lastTransitionTime:
          description: Last time the condition transitioned from one status to another.
          type: string
        message:
          description: Human-readable message indicating details about last transition.
          type: string
        reason:
          description: "Unique, one-word, CamelCase reason for the condition's last\
            \ transition."
          type: string
        status:
          description: "Status is the status of the condition. Can be True, False,\
            \ Unknown. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-conditions"
          type: string
        type:
          description: "Type is the type of the condition. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-conditions"
          type: string
      required:
      - status
      - type
      type: object
    v1.PodDNSConfig:
      description: PodDNSConfig defines the DNS parameters of a pod in addition to
        those generated from DNSPolicy.
      example:
        searches:
        - searches
        - searches
        nameservers:
        - nameservers
        - nameservers
        options:
        - name: name
          value: value
        - name: name
          value: value
      properties:
        nameservers:
          description: A list of DNS name server IP addresses. This will be appended
            to the base nameservers generated from DNSPolicy. Duplicated nameservers
            will be removed.
          items:
            type: string
          type: array
        options:
          description: A list of DNS resolver options. This will be merged with the
            base options generated from DNSPolicy. Duplicated entries will be removed.
            Resolution options given in Options will override those that appear in
            the base DNSPolicy.
          items:
            $ref: '#/components/schemas/v1.PodDNSConfigOption'
          type: array
        searches:
          description: A list of DNS search domains for host-name lookup. This will
            be appended to the base search paths generated from DNSPolicy. Duplicated
            search paths will be removed.
          items:
            type: string
          type: array
      type: object
    v1.PodDNSConfigOption:
      description: PodDNSConfigOption defines DNS resolver options of a pod.
      example:
        name: name
        value: value
      properties:
        name:
          description: Required.
          type: string
        value:
          type: string
      type: object
    v1.PodList:
      description: PodList is a list of Pods.
      example:
        metadata:
          continue: continue
          resourceVersion: resourceVersion
          selfLink: selfLink
        apiVersion: apiVersion
        kind: kind
        items:
        - metadata:
            generation: 6
            finalizers:
            - finalizers
            - finalizers
            resourceVersion: resourceVersion
            annotations: "{}"
            generateName: generateName
            deletionTimestamp: deletionTimestamp
            labels: "{}"
            ownerReferences:
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            selfLink: selfLink
            deletionGracePeriodSeconds: 0
            uid: uid
            initializers:
              result:
                reason: reason
                metadata:
                  continue: continue
                  resourceVersion: resourceVersion
                  selfLink: selfLink
                apiVersion: apiVersion
                code: 1
                kind: kind
                details:
                  uid: uid
                  kind: kind
                  causes:
                  - reason: reason
                    field: field
                    message: message
                  - reason: reason
                    field: field
                    message: message
                  retryAfterSeconds: 5
                  name: name
                  group: group
                message: message
                status: status
              pending:
              - name: name
              - name: name
            clusterName: clusterName
            creationTimestamp: creationTimestamp
            name: name
            namespace: namespace
          apiVersion: apiVersion
          kind: kind
          spec:
            dnsPolicy: dnsPolicy
            nodeName: nodeName
            terminationGracePeriodSeconds: 1
            dnsConfig:
              searches:
              - searches
              - searches
              nameservers:
              - nameservers
              - nameservers
              options:
              - name: name
                value: value
              - name: name
                value: value
            hostNetwork: true
            readinessGates:
            - conditionType: conditionType
            - conditionType: conditionType
            serviceAccountName: serviceAccountName
            imagePullSecrets:
            - name: name
            - name: name
            priorityClassName: priorityClassName
            hostAliases:
            - ip: ip
              hostnames:
              - hostnames
              - hostnames
            - ip: ip
              hostnames:
              - hostnames
              - hostnames
            securityContext:
              runAsUser: 6
              seLinuxOptions:
                role: role
                level: level
                type: type
                user: user
              fsGroup: 1
              supplementalGroups:
              - 7
              - 7
              runAsGroup: 1
              runAsNonRoot: true
              sysctls:
              - name: name
                value: value
              - name: name
                value: value
            nodeSelector: "{}"
            hostname: hostname
            tolerations:
            - effect: effect
              tolerationSeconds: 4
              value: value
              key: key
              operator: operator
            - effect: effect
              tolerationSeconds: 4
              value: value
              key: key
              operator: operator
            automountServiceAccountToken: true
            schedulerName: schedulerName
            activeDeadlineSeconds: 0
            hostIPC: true
            volumes:
            - quobyte:
                volume: volume
                registry: registry
                readOnly: true
                user: user
                group: group
              azureFile:
                secretName: secretName
                readOnly: true
                shareName: shareName
              flexVolume:
                driver: driver
                options: "{}"
                secretRef:
                  name: name
                readOnly: true
                fsType: fsType
              secret:
                secretName: secretName
                defaultMode: 2
                optional: true
                items:
                - mode: 9
                  path: path
                  key: key
                - mode: 9
                  path: path
                  key: key
              projected:
                sources:
                - downwardAPI:
                    items:
                    - mode: 8
                      path: path
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                    - mode: 8
                      path: path
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  configMap:
                    name: name
                    optional: true
                    items:
                    - mode: 9
                      path: path
                      key: key
                    - mode: 9
                      path: path
                      key: key
                  secret:
                    name: name
                    optional: true
                    items:
                    - mode: 9
                      path: path
                      key: key
                    - mode: 9
                      path: path
                      key: key
                  serviceAccountToken:
                    path: path
                    audience: audience
                    expirationSeconds: 1
                - downwardAPI:
                    items:
                    - mode: 8
                      path: path
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                    - mode: 8
                      path: path
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  configMap:
                    name: name
                    optional: true
                    items:
                    - mode: 9
                      path: path
                      key: key
                    - mode: 9
                      path: path
                      key: key
                  secret:
                    name: name
                    optional: true
                    items:
                    - mode: 9
                      path: path
                      key: key
                    - mode: 9
                      path: path
                      key: key
                  serviceAccountToken:
                    path: path
                    audience: audience
                    expirationSeconds: 1
                defaultMode: 6
              cephfs:
                path: path
                secretRef:
                  name: name
                secretFile: secretFile
                readOnly: true
                user: user
                monitors:
                - monitors
                - monitors
              scaleIO:
                system: system
                protectionDomain: protectionDomain
                sslEnabled: true
                storageMode: storageMode
                volumeName: volumeName
                secretRef:
                  name: name
                readOnly: true
                fsType: fsType
                storagePool: storagePool
                gateway: gateway
              emptyDir:
                sizeLimit: sizeLimit
                medium: medium
              glusterfs:
                path: path
                endpoints: endpoints
                readOnly: true
              gcePersistentDisk:
                partition: 6
                readOnly: true
                pdName: pdName
                fsType: fsType
              photonPersistentDisk:
                pdID: pdID
                fsType: fsType
              azureDisk:
                diskName: diskName
                kind: "{}"
                readOnly: true
                cachingMode: "{}"
                diskURI: diskURI
                fsType: fsType
              cinder:
                secretRef:
                  name: name
                volumeID: volumeID
                readOnly: true
                fsType: fsType
              downwardAPI:
                defaultMode: 6
                items:
                - mode: 8
                  path: path
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
                - mode: 8
                  path: path
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              awsElasticBlockStore:
                partition: 5
                volumeID: volumeID
                readOnly: true
                fsType: fsType
              flocker:
                datasetName: datasetName
                datasetUUID: datasetUUID
              iscsi:
                chapAuthSession: true
                iscsiInterface: iscsiInterface
                lun: 3
                chapAuthDiscovery: true
                iqn: iqn
                portals:
                - portals
                - portals
                secretRef:
                  name: name
                initiatorName: initiatorName
                readOnly: true
                fsType: fsType
                targetPortal: targetPortal
              rbd:
                image: image
                pool: pool
                secretRef:
                  name: name
                readOnly: true
                fsType: fsType
                keyring: keyring
                user: user
                monitors:
                - monitors
                - monitors
              configMap:
                defaultMode: 9
                name: name
                optional: true
                items:
                - mode: 9
                  path: path
                  key: key
                - mode: 9
                  path: path
                  key: key
              storageos:
                volumeNamespace: volumeNamespace
                volumeName: volumeName
                secretRef:
                  name: name
                readOnly: true
                fsType: fsType
              name: name
              nfs:
                path: path
                server: server
                readOnly: true
              persistentVolumeClaim:
                claimName: claimName
                readOnly: true
              gitRepo:
                repository: repository
                directory: directory
                revision: revision
              portworxVolume:
                volumeID: volumeID
                readOnly: true
                fsType: fsType
              vsphereVolume:
                storagePolicyName: storagePolicyName
                storagePolicyID: storagePolicyID
                volumePath: volumePath
                fsType: fsType
              fc:
                lun: 9
                targetWWNs:
                - targetWWNs
                - targetWWNs
                readOnly: true
                wwids:
                - wwids
                - wwids
                fsType: fsType
              hostPath:
                path: path
                type: "{}"
            - quobyte:
                volume: volume
                registry: registry
                readOnly: true
                user: user
                group: group
              azureFile:
                secretName: secretName
                readOnly: true
                shareName: shareName
              flexVolume:
                driver: driver
                options: "{}"
                secretRef:
                  name: name
                readOnly: true
                fsType: fsType
              secret:
                secretName: secretName
                defaultMode: 2
                optional: true
                items:
                - mode: 9
                  path: path
                  key: key
                - mode: 9
                  path: path
                  key: key
              projected:
                sources:
                - downwardAPI:
                    items:
                    - mode: 8
                      path: path
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                    - mode: 8
                      path: path
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  configMap:
                    name: name
                    optional: true
                    items:
                    - mode: 9
                      path: path
                      key: key
                    - mode: 9
                      path: path
                      key: key
                  secret:
                    name: name
                    optional: true
                    items:
                    - mode: 9
                      path: path
                      key: key
                    - mode: 9
                      path: path
                      key: key
                  serviceAccountToken:
                    path: path
                    audience: audience
                    expirationSeconds: 1
                - downwardAPI:
                    items:
                    - mode: 8
                      path: path
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                    - mode: 8
                      path: path
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  configMap:
                    name: name
                    optional: true
                    items:
                    - mode: 9
                      path: path
                      key: key
                    - mode: 9
                      path: path
                      key: key
                  secret:
                    name: name
                    optional: true
                    items:
                    - mode: 9
                      path: path
                      key: key
                    - mode: 9
                      path: path
                      key: key
                  serviceAccountToken:
                    path: path
                    audience: audience
                    expirationSeconds: 1
                defaultMode: 6
              cephfs:
                path: path
                secretRef:
                  name: name
                secretFile: secretFile
                readOnly: true
                user: user
                monitors:
                - monitors
                - monitors
              scaleIO:
                system: system
                protectionDomain: protectionDomain
                sslEnabled: true
                storageMode: storageMode
                volumeName: volumeName
                secretRef:
                  name: name
                readOnly: true
                fsType: fsType
                storagePool: storagePool
                gateway: gateway
              emptyDir:
                sizeLimit: sizeLimit
                medium: medium
              glusterfs:
                path: path
                endpoints: endpoints
                readOnly: true
              gcePersistentDisk:
                partition: 6
                readOnly: true
                pdName: pdName
                fsType: fsType
              photonPersistentDisk:
                pdID: pdID
                fsType: fsType
              azureDisk:
                diskName: diskName
                kind: "{}"
                readOnly: true
                cachingMode: "{}"
                diskURI: diskURI
                fsType: fsType
              cinder:
                secretRef:
                  name: name
                volumeID: volumeID
                readOnly: true
                fsType: fsType
              downwardAPI:
                defaultMode: 6
                items:
                - mode: 8
                  path: path
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
                - mode: 8
                  path: path
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              awsElasticBlockStore:
                partition: 5
                volumeID: volumeID
                readOnly: true
                fsType: fsType
              flocker:
                datasetName: datasetName
                datasetUUID: datasetUUID
              iscsi:
                chapAuthSession: true
                iscsiInterface: iscsiInterface
                lun: 3
                chapAuthDiscovery: true
                iqn: iqn
                portals:
                - portals
                - portals
                secretRef:
                  name: name
                initiatorName: initiatorName
                readOnly: true
                fsType: fsType
                targetPortal: targetPortal
              rbd:
                image: image
                pool: pool
                secretRef:
                  name: name
                readOnly: true
                fsType: fsType
                keyring: keyring
                user: user
                monitors:
                - monitors
                - monitors
              configMap:
                defaultMode: 9
                name: name
                optional: true
                items:
                - mode: 9
                  path: path
                  key: key
                - mode: 9
                  path: path
                  key: key
              storageos:
                volumeNamespace: volumeNamespace
                volumeName: volumeName
                secretRef:
                  name: name
                readOnly: true
                fsType: fsType
              name: name
              nfs:
                path: path
                server: server
                readOnly: true
              persistentVolumeClaim:
                claimName: claimName
                readOnly: true
              gitRepo:
                repository: repository
                directory: directory
                revision: revision
              portworxVolume:
                volumeID: volumeID
                readOnly: true
                fsType: fsType
              vsphereVolume:
                storagePolicyName: storagePolicyName
                storagePolicyID: storagePolicyID
                volumePath: volumePath
                fsType: fsType
              fc:
                lun: 9
                targetWWNs:
                - targetWWNs
                - targetWWNs
                readOnly: true
                wwids:
                - wwids
                - wwids
                fsType: fsType
              hostPath:
                path: path
                type: "{}"
            serviceAccount: serviceAccount
            priority: 1
            restartPolicy: restartPolicy
            shareProcessNamespace: true
            subdomain: subdomain
            containers:
            - volumeDevices:
              - devicePath: devicePath
                name: name
              - devicePath: devicePath
                name: name
              image: image
              imagePullPolicy: imagePullPolicy
              livenessProbe:
                failureThreshold: 5
                periodSeconds: 2
                tcpSocket:
                  port: port
                  host: host
                timeoutSeconds: 9
                successThreshold: 7
                initialDelaySeconds: 5
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: port
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              stdin: true
              terminationMessagePolicy: terminationMessagePolicy
              terminationMessagePath: terminationMessagePath
              workingDir: workingDir
              resources:
                requests: "{}"
                limits: "{}"
              securityContext:
                privileged: true
                runAsUser: 7
                capabilities:
                  add:
                  - "{}"
                  - "{}"
                  drop:
                  - "{}"
                  - "{}"
                seLinuxOptions:
                  role: role
                  level: level
                  type: type
                  user: user
                allowPrivilegeEscalation: true
                runAsGroup: 4
                runAsNonRoot: true
                readOnlyRootFilesystem: true
              env:
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    name: name
                    optional: true
                    key: key
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  configMapKeyRef:
                    name: name
                    optional: true
                    key: key
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    name: name
                    optional: true
                    key: key
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  configMapKeyRef:
                    name: name
                    optional: true
                    key: key
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              ports:
              - protocol: protocol
                hostIP: hostIP
                name: name
                containerPort: 3
                hostPort: 2
              - protocol: protocol
                hostIP: hostIP
                name: name
                containerPort: 3
                hostPort: 2
              command:
              - command
              - command
              volumeMounts:
              - mountPath: mountPath
                mountPropagation: "{}"
                name: name
                readOnly: true
                subPath: subPath
              - mountPath: mountPath
                mountPropagation: "{}"
                name: name
                readOnly: true
                subPath: subPath
              args:
              - args
              - args
              lifecycle:
                postStart:
                  tcpSocket:
                    port: port
                    host: host
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: port
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
                preStop:
                  tcpSocket:
                    port: port
                    host: host
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: port
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
              name: name
              tty: true
              readinessProbe:
                failureThreshold: 5
                periodSeconds: 2
                tcpSocket:
                  port: port
                  host: host
                timeoutSeconds: 9
                successThreshold: 7
                initialDelaySeconds: 5
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: port
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              stdinOnce: true
              envFrom:
              - configMapRef:
                  name: name
                  optional: true
                prefix: prefix
                secretRef:
                  name: name
                  optional: true
              - configMapRef:
                  name: name
                  optional: true
                prefix: prefix
                secretRef:
                  name: name
                  optional: true
            - volumeDevices:
              - devicePath: devicePath
                name: name
              - devicePath: devicePath
                name: name
              image: image
              imagePullPolicy: imagePullPolicy
              livenessProbe:
                failureThreshold: 5
                periodSeconds: 2
                tcpSocket:
                  port: port
                  host: host
                timeoutSeconds: 9
                successThreshold: 7
                initialDelaySeconds: 5
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: port
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              stdin: true
              terminationMessagePolicy: terminationMessagePolicy
              terminationMessagePath: terminationMessagePath
              workingDir: workingDir
              resources:
                requests: "{}"
                limits: "{}"
              securityContext:
                privileged: true
                runAsUser: 7
                capabilities:
                  add:
                  - "{}"
                  - "{}"
                  drop:
                  - "{}"
                  - "{}"
                seLinuxOptions:
                  role: role
                  level: level
                  type: type
                  user: user
                allowPrivilegeEscalation: true
                runAsGroup: 4
                runAsNonRoot: true
                readOnlyRootFilesystem: true
              env:
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    name: name
                    optional: true
                    key: key
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  configMapKeyRef:
                    name: name
                    optional: true
                    key: key
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    name: name
                    optional: true
                    key: key
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  configMapKeyRef:
                    name: name
                    optional: true
                    key: key
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              ports:
              - protocol: protocol
                hostIP: hostIP
                name: name
                containerPort: 3
                hostPort: 2
              - protocol: protocol
                hostIP: hostIP
                name: name
                containerPort: 3
                hostPort: 2
              command:
              - command
              - command
              volumeMounts:
              - mountPath: mountPath
                mountPropagation: "{}"
                name: name
                readOnly: true
                subPath: subPath
              - mountPath: mountPath
                mountPropagation: "{}"
                name: name
                readOnly: true
                subPath: subPath
              args:
              - args
              - args
              lifecycle:
                postStart:
                  tcpSocket:
                    port: port
                    host: host
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: port
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
                preStop:
                  tcpSocket:
                    port: port
                    host: host
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: port
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
              name: name
              tty: true
              readinessProbe:
                failureThreshold: 5
                periodSeconds: 2
                tcpSocket:
                  port: port
                  host: host
                timeoutSeconds: 9
                successThreshold: 7
                initialDelaySeconds: 5
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: port
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              stdinOnce: true
              envFrom:
              - configMapRef:
                  name: name
                  optional: true
                prefix: prefix
                secretRef:
                  name: name
                  optional: true
              - configMapRef:
                  name: name
                  optional: true
                prefix: prefix
                secretRef:
                  name: name
                  optional: true
            initContainers:
            - volumeDevices:
              - devicePath: devicePath
                name: name
              - devicePath: devicePath
                name: name
              image: image
              imagePullPolicy: imagePullPolicy
              livenessProbe:
                failureThreshold: 5
                periodSeconds: 2
                tcpSocket:
                  port: port
                  host: host
                timeoutSeconds: 9
                successThreshold: 7
                initialDelaySeconds: 5
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: port
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              stdin: true
              terminationMessagePolicy: terminationMessagePolicy
              terminationMessagePath: terminationMessagePath
              workingDir: workingDir
              resources:
                requests: "{}"
                limits: "{}"
              securityContext:
                privileged: true
                runAsUser: 7
                capabilities:
                  add:
                  - "{}"
                  - "{}"
                  drop:
                  - "{}"
                  - "{}"
                seLinuxOptions:
                  role: role
                  level: level
                  type: type
                  user: user
                allowPrivilegeEscalation: true
                runAsGroup: 4
                runAsNonRoot: true
                readOnlyRootFilesystem: true
              env:
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    name: name
                    optional: true
                    key: key
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  configMapKeyRef:
                    name: name
                    optional: true
                    key: key
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    name: name
                    optional: true
                    key: key
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  configMapKeyRef:
                    name: name
                    optional: true
                    key: key
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              ports:
              - protocol: protocol
                hostIP: hostIP
                name: name
                containerPort: 3
                hostPort: 2
              - protocol: protocol
                hostIP: hostIP
                name: name
                containerPort: 3
                hostPort: 2
              command:
              - command
              - command
              volumeMounts:
              - mountPath: mountPath
                mountPropagation: "{}"
                name: name
                readOnly: true
                subPath: subPath
              - mountPath: mountPath
                mountPropagation: "{}"
                name: name
                readOnly: true
                subPath: subPath
              args:
              - args
              - args
              lifecycle:
                postStart:
                  tcpSocket:
                    port: port
                    host: host
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: port
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
                preStop:
                  tcpSocket:
                    port: port
                    host: host
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: port
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
              name: name
              tty: true
              readinessProbe:
                failureThreshold: 5
                periodSeconds: 2
                tcpSocket:
                  port: port
                  host: host
                timeoutSeconds: 9
                successThreshold: 7
                initialDelaySeconds: 5
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: port
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              stdinOnce: true
              envFrom:
              - configMapRef:
                  name: name
                  optional: true
                prefix: prefix
                secretRef:
                  name: name
                  optional: true
              - configMapRef:
                  name: name
                  optional: true
                prefix: prefix
                secretRef:
                  name: name
                  optional: true
            - volumeDevices:
              - devicePath: devicePath
                name: name
              - devicePath: devicePath
                name: name
              image: image
              imagePullPolicy: imagePullPolicy
              livenessProbe:
                failureThreshold: 5
                periodSeconds: 2
                tcpSocket:
                  port: port
                  host: host
                timeoutSeconds: 9
                successThreshold: 7
                initialDelaySeconds: 5
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: port
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              stdin: true
              terminationMessagePolicy: terminationMessagePolicy
              terminationMessagePath: terminationMessagePath
              workingDir: workingDir
              resources:
                requests: "{}"
                limits: "{}"
              securityContext:
                privileged: true
                runAsUser: 7
                capabilities:
                  add:
                  - "{}"
                  - "{}"
                  drop:
                  - "{}"
                  - "{}"
                seLinuxOptions:
                  role: role
                  level: level
                  type: type
                  user: user
                allowPrivilegeEscalation: true
                runAsGroup: 4
                runAsNonRoot: true
                readOnlyRootFilesystem: true
              env:
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    name: name
                    optional: true
                    key: key
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  configMapKeyRef:
                    name: name
                    optional: true
                    key: key
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    name: name
                    optional: true
                    key: key
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  configMapKeyRef:
                    name: name
                    optional: true
                    key: key
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              ports:
              - protocol: protocol
                hostIP: hostIP
                name: name
                containerPort: 3
                hostPort: 2
              - protocol: protocol
                hostIP: hostIP
                name: name
                containerPort: 3
                hostPort: 2
              command:
              - command
              - command
              volumeMounts:
              - mountPath: mountPath
                mountPropagation: "{}"
                name: name
                readOnly: true
                subPath: subPath
              - mountPath: mountPath
                mountPropagation: "{}"
                name: name
                readOnly: true
                subPath: subPath
              args:
              - args
              - args
              lifecycle:
                postStart:
                  tcpSocket:
                    port: port
                    host: host
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: port
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
                preStop:
                  tcpSocket:
                    port: port
                    host: host
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: port
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
              name: name
              tty: true
              readinessProbe:
                failureThreshold: 5
                periodSeconds: 2
                tcpSocket:
                  port: port
                  host: host
                timeoutSeconds: 9
                successThreshold: 7
                initialDelaySeconds: 5
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: port
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              stdinOnce: true
              envFrom:
              - configMapRef:
                  name: name
                  optional: true
                prefix: prefix
                secretRef:
                  name: name
                  optional: true
              - configMapRef:
                  name: name
                  optional: true
                prefix: prefix
                secretRef:
                  name: name
                  optional: true
            affinity:
              nodeAffinity:
                requiredDuringSchedulingIgnoredDuringExecution:
                  nodeSelectorTerms:
                  - matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchFields:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                  - matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchFields:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                preferredDuringSchedulingIgnoredDuringExecution:
                - preference:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchFields:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                  weight: 6
                - preference:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchFields:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                  weight: 6
              podAffinity:
                requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchLabels: "{}"
                  topologyKey: topologyKey
                  namespaces:
                  - namespaces
                  - namespaces
                - labelSelector:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchLabels: "{}"
                  topologyKey: topologyKey
                  namespaces:
                  - namespaces
                  - namespaces
                preferredDuringSchedulingIgnoredDuringExecution:
                - podAffinityTerm:
                    labelSelector:
                      matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchLabels: "{}"
                    topologyKey: topologyKey
                    namespaces:
                    - namespaces
                    - namespaces
                  weight: 1
                - podAffinityTerm:
                    labelSelector:
                      matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchLabels: "{}"
                    topologyKey: topologyKey
                    namespaces:
                    - namespaces
                    - namespaces
                  weight: 1
              podAntiAffinity:
                requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchLabels: "{}"
                  topologyKey: topologyKey
                  namespaces:
                  - namespaces
                  - namespaces
                - labelSelector:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchLabels: "{}"
                  topologyKey: topologyKey
                  namespaces:
                  - namespaces
                  - namespaces
                preferredDuringSchedulingIgnoredDuringExecution:
                - podAffinityTerm:
                    labelSelector:
                      matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchLabels: "{}"
                    topologyKey: topologyKey
                    namespaces:
                    - namespaces
                    - namespaces
                  weight: 1
                - podAffinityTerm:
                    labelSelector:
                      matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchLabels: "{}"
                    topologyKey: topologyKey
                    namespaces:
                    - namespaces
                    - namespaces
                  weight: 1
            hostPID: true
          status:
            phase: phase
            reason: reason
            podIP: podIP
            containerStatuses:
            - image: image
              imageID: imageID
              restartCount: 5
              ready: true
              name: name
              state:
                running:
                  startedAt: startedAt
                waiting:
                  reason: reason
                  message: message
                terminated:
                  reason: reason
                  exitCode: 6
                  startedAt: startedAt
                  containerID: containerID
                  message: message
                  signal: 6
                  finishedAt: finishedAt
              containerID: containerID
              lastState:
                running:
                  startedAt: startedAt
                waiting:
                  reason: reason
                  message: message
                terminated:
                  reason: reason
                  exitCode: 6
                  startedAt: startedAt
                  containerID: containerID
                  message: message
                  signal: 6
                  finishedAt: finishedAt
            - image: image
              imageID: imageID
              restartCount: 5
              ready: true
              name: name
              state:
                running:
                  startedAt: startedAt
                waiting:
                  reason: reason
                  message: message
                terminated:
                  reason: reason
                  exitCode: 6
                  startedAt: startedAt
                  containerID: containerID
                  message: message
                  signal: 6
                  finishedAt: finishedAt
              containerID: containerID
              lastState:
                running:
                  startedAt: startedAt
                waiting:
                  reason: reason
                  message: message
                terminated:
                  reason: reason
                  exitCode: 6
                  startedAt: startedAt
                  containerID: containerID
                  message: message
                  signal: 6
                  finishedAt: finishedAt
            hostIP: hostIP
            startTime: startTime
            nominatedNodeName: nominatedNodeName
            qosClass: qosClass
            conditions:
            - reason: reason
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
              lastProbeTime: lastProbeTime
              status: status
            - reason: reason
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
              lastProbeTime: lastProbeTime
              status: status
            message: message
            initContainerStatuses:
            - image: image
              imageID: imageID
              restartCount: 5
              ready: true
              name: name
              state:
                running:
                  startedAt: startedAt
                waiting:
                  reason: reason
                  message: message
                terminated:
                  reason: reason
                  exitCode: 6
                  startedAt: startedAt
                  containerID: containerID
                  message: message
                  signal: 6
                  finishedAt: finishedAt
              containerID: containerID
              lastState:
                running:
                  startedAt: startedAt
                waiting:
                  reason: reason
                  message: message
                terminated:
                  reason: reason
                  exitCode: 6
                  startedAt: startedAt
                  containerID: containerID
                  message: message
                  signal: 6
                  finishedAt: finishedAt
            - image: image
              imageID: imageID
              restartCount: 5
              ready: true
              name: name
              state:
                running:
                  startedAt: startedAt
                waiting:
                  reason: reason
                  message: message
                terminated:
                  reason: reason
                  exitCode: 6
                  startedAt: startedAt
                  containerID: containerID
                  message: message
                  signal: 6
                  finishedAt: finishedAt
              containerID: containerID
              lastState:
                running:
                  startedAt: startedAt
                waiting:
                  reason: reason
                  message: message
                terminated:
                  reason: reason
                  exitCode: 6
                  startedAt: startedAt
                  containerID: containerID
                  message: message
                  signal: 6
                  finishedAt: finishedAt
        - metadata:
            generation: 6
            finalizers:
            - finalizers
            - finalizers
            resourceVersion: resourceVersion
            annotations: "{}"
            generateName: generateName
            deletionTimestamp: deletionTimestamp
            labels: "{}"
            ownerReferences:
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            selfLink: selfLink
            deletionGracePeriodSeconds: 0
            uid: uid
            initializers:
              result:
                reason: reason
                metadata:
                  continue: continue
                  resourceVersion: resourceVersion
                  selfLink: selfLink
                apiVersion: apiVersion
                code: 1
                kind: kind
                details:
                  uid: uid
                  kind: kind
                  causes:
                  - reason: reason
                    field: field
                    message: message
                  - reason: reason
                    field: field
                    message: message
                  retryAfterSeconds: 5
                  name: name
                  group: group
                message: message
                status: status
              pending:
              - name: name
              - name: name
            clusterName: clusterName
            creationTimestamp: creationTimestamp
            name: name
            namespace: namespace
          apiVersion: apiVersion
          kind: kind
          spec:
            dnsPolicy: dnsPolicy
            nodeName: nodeName
            terminationGracePeriodSeconds: 1
            dnsConfig:
              searches:
              - searches
              - searches
              nameservers:
              - nameservers
              - nameservers
              options:
              - name: name
                value: value
              - name: name
                value: value
            hostNetwork: true
            readinessGates:
            - conditionType: conditionType
            - conditionType: conditionType
            serviceAccountName: serviceAccountName
            imagePullSecrets:
            - name: name
            - name: name
            priorityClassName: priorityClassName
            hostAliases:
            - ip: ip
              hostnames:
              - hostnames
              - hostnames
            - ip: ip
              hostnames:
              - hostnames
              - hostnames
            securityContext:
              runAsUser: 6
              seLinuxOptions:
                role: role
                level: level
                type: type
                user: user
              fsGroup: 1
              supplementalGroups:
              - 7
              - 7
              runAsGroup: 1
              runAsNonRoot: true
              sysctls:
              - name: name
                value: value
              - name: name
                value: value
            nodeSelector: "{}"
            hostname: hostname
            tolerations:
            - effect: effect
              tolerationSeconds: 4
              value: value
              key: key
              operator: operator
            - effect: effect
              tolerationSeconds: 4
              value: value
              key: key
              operator: operator
            automountServiceAccountToken: true
            schedulerName: schedulerName
            activeDeadlineSeconds: 0
            hostIPC: true
            volumes:
            - quobyte:
                volume: volume
                registry: registry
                readOnly: true
                user: user
                group: group
              azureFile:
                secretName: secretName
                readOnly: true
                shareName: shareName
              flexVolume:
                driver: driver
                options: "{}"
                secretRef:
                  name: name
                readOnly: true
                fsType: fsType
              secret:
                secretName: secretName
                defaultMode: 2
                optional: true
                items:
                - mode: 9
                  path: path
                  key: key
                - mode: 9
                  path: path
                  key: key
              projected:
                sources:
                - downwardAPI:
                    items:
                    - mode: 8
                      path: path
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                    - mode: 8
                      path: path
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  configMap:
                    name: name
                    optional: true
                    items:
                    - mode: 9
                      path: path
                      key: key
                    - mode: 9
                      path: path
                      key: key
                  secret:
                    name: name
                    optional: true
                    items:
                    - mode: 9
                      path: path
                      key: key
                    - mode: 9
                      path: path
                      key: key
                  serviceAccountToken:
                    path: path
                    audience: audience
                    expirationSeconds: 1
                - downwardAPI:
                    items:
                    - mode: 8
                      path: path
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                    - mode: 8
                      path: path
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  configMap:
                    name: name
                    optional: true
                    items:
                    - mode: 9
                      path: path
                      key: key
                    - mode: 9
                      path: path
                      key: key
                  secret:
                    name: name
                    optional: true
                    items:
                    - mode: 9
                      path: path
                      key: key
                    - mode: 9
                      path: path
                      key: key
                  serviceAccountToken:
                    path: path
                    audience: audience
                    expirationSeconds: 1
                defaultMode: 6
              cephfs:
                path: path
                secretRef:
                  name: name
                secretFile: secretFile
                readOnly: true
                user: user
                monitors:
                - monitors
                - monitors
              scaleIO:
                system: system
                protectionDomain: protectionDomain
                sslEnabled: true
                storageMode: storageMode
                volumeName: volumeName
                secretRef:
                  name: name
                readOnly: true
                fsType: fsType
                storagePool: storagePool
                gateway: gateway
              emptyDir:
                sizeLimit: sizeLimit
                medium: medium
              glusterfs:
                path: path
                endpoints: endpoints
                readOnly: true
              gcePersistentDisk:
                partition: 6
                readOnly: true
                pdName: pdName
                fsType: fsType
              photonPersistentDisk:
                pdID: pdID
                fsType: fsType
              azureDisk:
                diskName: diskName
                kind: "{}"
                readOnly: true
                cachingMode: "{}"
                diskURI: diskURI
                fsType: fsType
              cinder:
                secretRef:
                  name: name
                volumeID: volumeID
                readOnly: true
                fsType: fsType
              downwardAPI:
                defaultMode: 6
                items:
                - mode: 8
                  path: path
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
                - mode: 8
                  path: path
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              awsElasticBlockStore:
                partition: 5
                volumeID: volumeID
                readOnly: true
                fsType: fsType
              flocker:
                datasetName: datasetName
                datasetUUID: datasetUUID
              iscsi:
                chapAuthSession: true
                iscsiInterface: iscsiInterface
                lun: 3
                chapAuthDiscovery: true
                iqn: iqn
                portals:
                - portals
                - portals
                secretRef:
                  name: name
                initiatorName: initiatorName
                readOnly: true
                fsType: fsType
                targetPortal: targetPortal
              rbd:
                image: image
                pool: pool
                secretRef:
                  name: name
                readOnly: true
                fsType: fsType
                keyring: keyring
                user: user
                monitors:
                - monitors
                - monitors
              configMap:
                defaultMode: 9
                name: name
                optional: true
                items:
                - mode: 9
                  path: path
                  key: key
                - mode: 9
                  path: path
                  key: key
              storageos:
                volumeNamespace: volumeNamespace
                volumeName: volumeName
                secretRef:
                  name: name
                readOnly: true
                fsType: fsType
              name: name
              nfs:
                path: path
                server: server
                readOnly: true
              persistentVolumeClaim:
                claimName: claimName
                readOnly: true
              gitRepo:
                repository: repository
                directory: directory
                revision: revision
              portworxVolume:
                volumeID: volumeID
                readOnly: true
                fsType: fsType
              vsphereVolume:
                storagePolicyName: storagePolicyName
                storagePolicyID: storagePolicyID
                volumePath: volumePath
                fsType: fsType
              fc:
                lun: 9
                targetWWNs:
                - targetWWNs
                - targetWWNs
                readOnly: true
                wwids:
                - wwids
                - wwids
                fsType: fsType
              hostPath:
                path: path
                type: "{}"
            - quobyte:
                volume: volume
                registry: registry
                readOnly: true
                user: user
                group: group
              azureFile:
                secretName: secretName
                readOnly: true
                shareName: shareName
              flexVolume:
                driver: driver
                options: "{}"
                secretRef:
                  name: name
                readOnly: true
                fsType: fsType
              secret:
                secretName: secretName
                defaultMode: 2
                optional: true
                items:
                - mode: 9
                  path: path
                  key: key
                - mode: 9
                  path: path
                  key: key
              projected:
                sources:
                - downwardAPI:
                    items:
                    - mode: 8
                      path: path
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                    - mode: 8
                      path: path
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  configMap:
                    name: name
                    optional: true
                    items:
                    - mode: 9
                      path: path
                      key: key
                    - mode: 9
                      path: path
                      key: key
                  secret:
                    name: name
                    optional: true
                    items:
                    - mode: 9
                      path: path
                      key: key
                    - mode: 9
                      path: path
                      key: key
                  serviceAccountToken:
                    path: path
                    audience: audience
                    expirationSeconds: 1
                - downwardAPI:
                    items:
                    - mode: 8
                      path: path
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                    - mode: 8
                      path: path
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  configMap:
                    name: name
                    optional: true
                    items:
                    - mode: 9
                      path: path
                      key: key
                    - mode: 9
                      path: path
                      key: key
                  secret:
                    name: name
                    optional: true
                    items:
                    - mode: 9
                      path: path
                      key: key
                    - mode: 9
                      path: path
                      key: key
                  serviceAccountToken:
                    path: path
                    audience: audience
                    expirationSeconds: 1
                defaultMode: 6
              cephfs:
                path: path
                secretRef:
                  name: name
                secretFile: secretFile
                readOnly: true
                user: user
                monitors:
                - monitors
                - monitors
              scaleIO:
                system: system
                protectionDomain: protectionDomain
                sslEnabled: true
                storageMode: storageMode
                volumeName: volumeName
                secretRef:
                  name: name
                readOnly: true
                fsType: fsType
                storagePool: storagePool
                gateway: gateway
              emptyDir:
                sizeLimit: sizeLimit
                medium: medium
              glusterfs:
                path: path
                endpoints: endpoints
                readOnly: true
              gcePersistentDisk:
                partition: 6
                readOnly: true
                pdName: pdName
                fsType: fsType
              photonPersistentDisk:
                pdID: pdID
                fsType: fsType
              azureDisk:
                diskName: diskName
                kind: "{}"
                readOnly: true
                cachingMode: "{}"
                diskURI: diskURI
                fsType: fsType
              cinder:
                secretRef:
                  name: name
                volumeID: volumeID
                readOnly: true
                fsType: fsType
              downwardAPI:
                defaultMode: 6
                items:
                - mode: 8
                  path: path
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
                - mode: 8
                  path: path
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              awsElasticBlockStore:
                partition: 5
                volumeID: volumeID
                readOnly: true
                fsType: fsType
              flocker:
                datasetName: datasetName
                datasetUUID: datasetUUID
              iscsi:
                chapAuthSession: true
                iscsiInterface: iscsiInterface
                lun: 3
                chapAuthDiscovery: true
                iqn: iqn
                portals:
                - portals
                - portals
                secretRef:
                  name: name
                initiatorName: initiatorName
                readOnly: true
                fsType: fsType
                targetPortal: targetPortal
              rbd:
                image: image
                pool: pool
                secretRef:
                  name: name
                readOnly: true
                fsType: fsType
                keyring: keyring
                user: user
                monitors:
                - monitors
                - monitors
              configMap:
                defaultMode: 9
                name: name
                optional: true
                items:
                - mode: 9
                  path: path
                  key: key
                - mode: 9
                  path: path
                  key: key
              storageos:
                volumeNamespace: volumeNamespace
                volumeName: volumeName
                secretRef:
                  name: name
                readOnly: true
                fsType: fsType
              name: name
              nfs:
                path: path
                server: server
                readOnly: true
              persistentVolumeClaim:
                claimName: claimName
                readOnly: true
              gitRepo:
                repository: repository
                directory: directory
                revision: revision
              portworxVolume:
                volumeID: volumeID
                readOnly: true
                fsType: fsType
              vsphereVolume:
                storagePolicyName: storagePolicyName
                storagePolicyID: storagePolicyID
                volumePath: volumePath
                fsType: fsType
              fc:
                lun: 9
                targetWWNs:
                - targetWWNs
                - targetWWNs
                readOnly: true
                wwids:
                - wwids
                - wwids
                fsType: fsType
              hostPath:
                path: path
                type: "{}"
            serviceAccount: serviceAccount
            priority: 1
            restartPolicy: restartPolicy
            shareProcessNamespace: true
            subdomain: subdomain
            containers:
            - volumeDevices:
              - devicePath: devicePath
                name: name
              - devicePath: devicePath
                name: name
              image: image
              imagePullPolicy: imagePullPolicy
              livenessProbe:
                failureThreshold: 5
                periodSeconds: 2
                tcpSocket:
                  port: port
                  host: host
                timeoutSeconds: 9
                successThreshold: 7
                initialDelaySeconds: 5
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: port
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              stdin: true
              terminationMessagePolicy: terminationMessagePolicy
              terminationMessagePath: terminationMessagePath
              workingDir: workingDir
              resources:
                requests: "{}"
                limits: "{}"
              securityContext:
                privileged: true
                runAsUser: 7
                capabilities:
                  add:
                  - "{}"
                  - "{}"
                  drop:
                  - "{}"
                  - "{}"
                seLinuxOptions:
                  role: role
                  level: level
                  type: type
                  user: user
                allowPrivilegeEscalation: true
                runAsGroup: 4
                runAsNonRoot: true
                readOnlyRootFilesystem: true
              env:
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    name: name
                    optional: true
                    key: key
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  configMapKeyRef:
                    name: name
                    optional: true
                    key: key
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    name: name
                    optional: true
                    key: key
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  configMapKeyRef:
                    name: name
                    optional: true
                    key: key
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              ports:
              - protocol: protocol
                hostIP: hostIP
                name: name
                containerPort: 3
                hostPort: 2
              - protocol: protocol
                hostIP: hostIP
                name: name
                containerPort: 3
                hostPort: 2
              command:
              - command
              - command
              volumeMounts:
              - mountPath: mountPath
                mountPropagation: "{}"
                name: name
                readOnly: true
                subPath: subPath
              - mountPath: mountPath
                mountPropagation: "{}"
                name: name
                readOnly: true
                subPath: subPath
              args:
              - args
              - args
              lifecycle:
                postStart:
                  tcpSocket:
                    port: port
                    host: host
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: port
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
                preStop:
                  tcpSocket:
                    port: port
                    host: host
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: port
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
              name: name
              tty: true
              readinessProbe:
                failureThreshold: 5
                periodSeconds: 2
                tcpSocket:
                  port: port
                  host: host
                timeoutSeconds: 9
                successThreshold: 7
                initialDelaySeconds: 5
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: port
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              stdinOnce: true
              envFrom:
              - configMapRef:
                  name: name
                  optional: true
                prefix: prefix
                secretRef:
                  name: name
                  optional: true
              - configMapRef:
                  name: name
                  optional: true
                prefix: prefix
                secretRef:
                  name: name
                  optional: true
            - volumeDevices:
              - devicePath: devicePath
                name: name
              - devicePath: devicePath
                name: name
              image: image
              imagePullPolicy: imagePullPolicy
              livenessProbe:
                failureThreshold: 5
                periodSeconds: 2
                tcpSocket:
                  port: port
                  host: host
                timeoutSeconds: 9
                successThreshold: 7
                initialDelaySeconds: 5
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: port
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              stdin: true
              terminationMessagePolicy: terminationMessagePolicy
              terminationMessagePath: terminationMessagePath
              workingDir: workingDir
              resources:
                requests: "{}"
                limits: "{}"
              securityContext:
                privileged: true
                runAsUser: 7
                capabilities:
                  add:
                  - "{}"
                  - "{}"
                  drop:
                  - "{}"
                  - "{}"
                seLinuxOptions:
                  role: role
                  level: level
                  type: type
                  user: user
                allowPrivilegeEscalation: true
                runAsGroup: 4
                runAsNonRoot: true
                readOnlyRootFilesystem: true
              env:
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    name: name
                    optional: true
                    key: key
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  configMapKeyRef:
                    name: name
                    optional: true
                    key: key
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    name: name
                    optional: true
                    key: key
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  configMapKeyRef:
                    name: name
                    optional: true
                    key: key
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              ports:
              - protocol: protocol
                hostIP: hostIP
                name: name
                containerPort: 3
                hostPort: 2
              - protocol: protocol
                hostIP: hostIP
                name: name
                containerPort: 3
                hostPort: 2
              command:
              - command
              - command
              volumeMounts:
              - mountPath: mountPath
                mountPropagation: "{}"
                name: name
                readOnly: true
                subPath: subPath
              - mountPath: mountPath
                mountPropagation: "{}"
                name: name
                readOnly: true
                subPath: subPath
              args:
              - args
              - args
              lifecycle:
                postStart:
                  tcpSocket:
                    port: port
                    host: host
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: port
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
                preStop:
                  tcpSocket:
                    port: port
                    host: host
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: port
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
              name: name
              tty: true
              readinessProbe:
                failureThreshold: 5
                periodSeconds: 2
                tcpSocket:
                  port: port
                  host: host
                timeoutSeconds: 9
                successThreshold: 7
                initialDelaySeconds: 5
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: port
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              stdinOnce: true
              envFrom:
              - configMapRef:
                  name: name
                  optional: true
                prefix: prefix
                secretRef:
                  name: name
                  optional: true
              - configMapRef:
                  name: name
                  optional: true
                prefix: prefix
                secretRef:
                  name: name
                  optional: true
            initContainers:
            - volumeDevices:
              - devicePath: devicePath
                name: name
              - devicePath: devicePath
                name: name
              image: image
              imagePullPolicy: imagePullPolicy
              livenessProbe:
                failureThreshold: 5
                periodSeconds: 2
                tcpSocket:
                  port: port
                  host: host
                timeoutSeconds: 9
                successThreshold: 7
                initialDelaySeconds: 5
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: port
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              stdin: true
              terminationMessagePolicy: terminationMessagePolicy
              terminationMessagePath: terminationMessagePath
              workingDir: workingDir
              resources:
                requests: "{}"
                limits: "{}"
              securityContext:
                privileged: true
                runAsUser: 7
                capabilities:
                  add:
                  - "{}"
                  - "{}"
                  drop:
                  - "{}"
                  - "{}"
                seLinuxOptions:
                  role: role
                  level: level
                  type: type
                  user: user
                allowPrivilegeEscalation: true
                runAsGroup: 4
                runAsNonRoot: true
                readOnlyRootFilesystem: true
              env:
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    name: name
                    optional: true
                    key: key
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  configMapKeyRef:
                    name: name
                    optional: true
                    key: key
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    name: name
                    optional: true
                    key: key
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  configMapKeyRef:
                    name: name
                    optional: true
                    key: key
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              ports:
              - protocol: protocol
                hostIP: hostIP
                name: name
                containerPort: 3
                hostPort: 2
              - protocol: protocol
                hostIP: hostIP
                name: name
                containerPort: 3
                hostPort: 2
              command:
              - command
              - command
              volumeMounts:
              - mountPath: mountPath
                mountPropagation: "{}"
                name: name
                readOnly: true
                subPath: subPath
              - mountPath: mountPath
                mountPropagation: "{}"
                name: name
                readOnly: true
                subPath: subPath
              args:
              - args
              - args
              lifecycle:
                postStart:
                  tcpSocket:
                    port: port
                    host: host
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: port
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
                preStop:
                  tcpSocket:
                    port: port
                    host: host
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: port
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
              name: name
              tty: true
              readinessProbe:
                failureThreshold: 5
                periodSeconds: 2
                tcpSocket:
                  port: port
                  host: host
                timeoutSeconds: 9
                successThreshold: 7
                initialDelaySeconds: 5
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: port
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              stdinOnce: true
              envFrom:
              - configMapRef:
                  name: name
                  optional: true
                prefix: prefix
                secretRef:
                  name: name
                  optional: true
              - configMapRef:
                  name: name
                  optional: true
                prefix: prefix
                secretRef:
                  name: name
                  optional: true
            - volumeDevices:
              - devicePath: devicePath
                name: name
              - devicePath: devicePath
                name: name
              image: image
              imagePullPolicy: imagePullPolicy
              livenessProbe:
                failureThreshold: 5
                periodSeconds: 2
                tcpSocket:
                  port: port
                  host: host
                timeoutSeconds: 9
                successThreshold: 7
                initialDelaySeconds: 5
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: port
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              stdin: true
              terminationMessagePolicy: terminationMessagePolicy
              terminationMessagePath: terminationMessagePath
              workingDir: workingDir
              resources:
                requests: "{}"
                limits: "{}"
              securityContext:
                privileged: true
                runAsUser: 7
                capabilities:
                  add:
                  - "{}"
                  - "{}"
                  drop:
                  - "{}"
                  - "{}"
                seLinuxOptions:
                  role: role
                  level: level
                  type: type
                  user: user
                allowPrivilegeEscalation: true
                runAsGroup: 4
                runAsNonRoot: true
                readOnlyRootFilesystem: true
              env:
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    name: name
                    optional: true
                    key: key
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  configMapKeyRef:
                    name: name
                    optional: true
                    key: key
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    name: name
                    optional: true
                    key: key
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  configMapKeyRef:
                    name: name
                    optional: true
                    key: key
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              ports:
              - protocol: protocol
                hostIP: hostIP
                name: name
                containerPort: 3
                hostPort: 2
              - protocol: protocol
                hostIP: hostIP
                name: name
                containerPort: 3
                hostPort: 2
              command:
              - command
              - command
              volumeMounts:
              - mountPath: mountPath
                mountPropagation: "{}"
                name: name
                readOnly: true
                subPath: subPath
              - mountPath: mountPath
                mountPropagation: "{}"
                name: name
                readOnly: true
                subPath: subPath
              args:
              - args
              - args
              lifecycle:
                postStart:
                  tcpSocket:
                    port: port
                    host: host
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: port
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
                preStop:
                  tcpSocket:
                    port: port
                    host: host
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: port
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
              name: name
              tty: true
              readinessProbe:
                failureThreshold: 5
                periodSeconds: 2
                tcpSocket:
                  port: port
                  host: host
                timeoutSeconds: 9
                successThreshold: 7
                initialDelaySeconds: 5
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: port
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              stdinOnce: true
              envFrom:
              - configMapRef:
                  name: name
                  optional: true
                prefix: prefix
                secretRef:
                  name: name
                  optional: true
              - configMapRef:
                  name: name
                  optional: true
                prefix: prefix
                secretRef:
                  name: name
                  optional: true
            affinity:
              nodeAffinity:
                requiredDuringSchedulingIgnoredDuringExecution:
                  nodeSelectorTerms:
                  - matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchFields:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                  - matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchFields:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                preferredDuringSchedulingIgnoredDuringExecution:
                - preference:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchFields:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                  weight: 6
                - preference:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchFields:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                  weight: 6
              podAffinity:
                requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchLabels: "{}"
                  topologyKey: topologyKey
                  namespaces:
                  - namespaces
                  - namespaces
                - labelSelector:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchLabels: "{}"
                  topologyKey: topologyKey
                  namespaces:
                  - namespaces
                  - namespaces
                preferredDuringSchedulingIgnoredDuringExecution:
                - podAffinityTerm:
                    labelSelector:
                      matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchLabels: "{}"
                    topologyKey: topologyKey
                    namespaces:
                    - namespaces
                    - namespaces
                  weight: 1
                - podAffinityTerm:
                    labelSelector:
                      matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchLabels: "{}"
                    topologyKey: topologyKey
                    namespaces:
                    - namespaces
                    - namespaces
                  weight: 1
              podAntiAffinity:
                requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchLabels: "{}"
                  topologyKey: topologyKey
                  namespaces:
                  - namespaces
                  - namespaces
                - labelSelector:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchLabels: "{}"
                  topologyKey: topologyKey
                  namespaces:
                  - namespaces
                  - namespaces
                preferredDuringSchedulingIgnoredDuringExecution:
                - podAffinityTerm:
                    labelSelector:
                      matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchLabels: "{}"
                    topologyKey: topologyKey
                    namespaces:
                    - namespaces
                    - namespaces
                  weight: 1
                - podAffinityTerm:
                    labelSelector:
                      matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchLabels: "{}"
                    topologyKey: topologyKey
                    namespaces:
                    - namespaces
                    - namespaces
                  weight: 1
            hostPID: true
          status:
            phase: phase
            reason: reason
            podIP: podIP
            containerStatuses:
            - image: image
              imageID: imageID
              restartCount: 5
              ready: true
              name: name
              state:
                running:
                  startedAt: startedAt
                waiting:
                  reason: reason
                  message: message
                terminated:
                  reason: reason
                  exitCode: 6
                  startedAt: startedAt
                  containerID: containerID
                  message: message
                  signal: 6
                  finishedAt: finishedAt
              containerID: containerID
              lastState:
                running:
                  startedAt: startedAt
                waiting:
                  reason: reason
                  message: message
                terminated:
                  reason: reason
                  exitCode: 6
                  startedAt: startedAt
                  containerID: containerID
                  message: message
                  signal: 6
                  finishedAt: finishedAt
            - image: image
              imageID: imageID
              restartCount: 5
              ready: true
              name: name
              state:
                running:
                  startedAt: startedAt
                waiting:
                  reason: reason
                  message: message
                terminated:
                  reason: reason
                  exitCode: 6
                  startedAt: startedAt
                  containerID: containerID
                  message: message
                  signal: 6
                  finishedAt: finishedAt
              containerID: containerID
              lastState:
                running:
                  startedAt: startedAt
                waiting:
                  reason: reason
                  message: message
                terminated:
                  reason: reason
                  exitCode: 6
                  startedAt: startedAt
                  containerID: containerID
                  message: message
                  signal: 6
                  finishedAt: finishedAt
            hostIP: hostIP
            startTime: startTime
            nominatedNodeName: nominatedNodeName
            qosClass: qosClass
            conditions:
            - reason: reason
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
              lastProbeTime: lastProbeTime
              status: status
            - reason: reason
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
              lastProbeTime: lastProbeTime
              status: status
            message: message
            initContainerStatuses:
            - image: image
              imageID: imageID
              restartCount: 5
              ready: true
              name: name
              state:
                running:
                  startedAt: startedAt
                waiting:
                  reason: reason
                  message: message
                terminated:
                  reason: reason
                  exitCode: 6
                  startedAt: startedAt
                  containerID: containerID
                  message: message
                  signal: 6
                  finishedAt: finishedAt
              containerID: containerID
              lastState:
                running:
                  startedAt: startedAt
                waiting:
                  reason: reason
                  message: message
                terminated:
                  reason: reason
                  exitCode: 6
                  startedAt: startedAt
                  containerID: containerID
                  message: message
                  signal: 6
                  finishedAt: finishedAt
            - image: image
              imageID: imageID
              restartCount: 5
              ready: true
              name: name
              state:
                running:
                  startedAt: startedAt
                waiting:
                  reason: reason
                  message: message
                terminated:
                  reason: reason
                  exitCode: 6
                  startedAt: startedAt
                  containerID: containerID
                  message: message
                  signal: 6
                  finishedAt: finishedAt
              containerID: containerID
              lastState:
                running:
                  startedAt: startedAt
                waiting:
                  reason: reason
                  message: message
                terminated:
                  reason: reason
                  exitCode: 6
                  startedAt: startedAt
                  containerID: containerID
                  message: message
                  signal: 6
                  finishedAt: finishedAt
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
          type: string
        items:
          description: "List of pods. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md"
          items:
            $ref: '#/components/schemas/v1.Pod'
          type: array
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: '#/components/schemas/v1.ListMeta'
      required:
      - items
      type: object
    v1.PodReadinessGate:
      description: PodReadinessGate contains the reference to a pod condition
      example:
        conditionType: conditionType
      properties:
        conditionType:
          description: ConditionType refers to a condition in the pod's condition
            list with matching type.
          type: string
      required:
      - conditionType
      type: object
    v1.PodSecurityContext:
      description: PodSecurityContext holds pod-level security attributes and common
        container settings. Some fields are also present in container.securityContext.  Field
        values of container.securityContext take precedence over field values of PodSecurityContext.
      example:
        runAsUser: 6
        seLinuxOptions:
          role: role
          level: level
          type: type
          user: user
        fsGroup: 1
        supplementalGroups:
        - 7
        - 7
        runAsGroup: 1
        runAsNonRoot: true
        sysctls:
        - name: name
          value: value
        - name: name
          value: value
      properties:
        fsGroup:
          description: "A special supplemental group that applies to all containers\
            \ in a pod. Some volume types allow the Kubelet to change the ownership\
            \ of that volume to be owned by the pod:\n\n1. The owning GID will be\
            \ the FSGroup 2. The setgid bit is set (new files created in the volume\
            \ will be owned by FSGroup) 3. The permission bits are OR'd with rw-rw "
          format: int64
          type: integer
        runAsGroup:
          description: "The GID to run the entrypoint of the container process. Uses\
            \ runtime default if unset. May also be set in SecurityContext.  If set\
            \ in both SecurityContext and PodSecurityContext, the value specified\
            \ in SecurityContext takes precedence for that container."
          format: int64
          type: integer
        runAsNonRoot:
          description: "Indicates that the container must run as a non-root user.\
            \ If true, the Kubelet will validate the image at runtime to ensure that\
            \ it does not run as UID 0 (root) and fail to start the container if it\
            \ does. If unset or false, no such validation will be performed. May also\
            \ be set in SecurityContext.  If set in both SecurityContext and PodSecurityContext,\
            \ the value specified in SecurityContext takes precedence."
          type: boolean
        runAsUser:
          description: "The UID to run the entrypoint of the container process. Defaults\
            \ to user specified in image metadata if unspecified. May also be set\
            \ in SecurityContext.  If set in both SecurityContext and PodSecurityContext,\
            \ the value specified in SecurityContext takes precedence for that container."
          format: int64
          type: integer
        seLinuxOptions:
          $ref: '#/components/schemas/v1.SELinuxOptions'
        supplementalGroups:
          description: "A list of groups applied to the first process run in each\
            \ container, in addition to the container's primary GID.  If unspecified,\
            \ no groups will be added to any container."
          items:
            type: integer
          type: array
        sysctls:
          description: Sysctls hold a list of namespaced sysctls used for the pod.
            Pods with unsupported sysctls (by the container runtime) might fail to
            launch.
          items:
            $ref: '#/components/schemas/v1.Sysctl'
          type: array
      type: object
    v1.PodSpec:
      description: PodSpec is a description of a pod.
      example:
        dnsPolicy: dnsPolicy
        nodeName: nodeName
        terminationGracePeriodSeconds: 1
        dnsConfig:
          searches:
          - searches
          - searches
          nameservers:
          - nameservers
          - nameservers
          options:
          - name: name
            value: value
          - name: name
            value: value
        hostNetwork: true
        readinessGates:
        - conditionType: conditionType
        - conditionType: conditionType
        serviceAccountName: serviceAccountName
        imagePullSecrets:
        - name: name
        - name: name
        priorityClassName: priorityClassName
        hostAliases:
        - ip: ip
          hostnames:
          - hostnames
          - hostnames
        - ip: ip
          hostnames:
          - hostnames
          - hostnames
        securityContext:
          runAsUser: 6
          seLinuxOptions:
            role: role
            level: level
            type: type
            user: user
          fsGroup: 1
          supplementalGroups:
          - 7
          - 7
          runAsGroup: 1
          runAsNonRoot: true
          sysctls:
          - name: name
            value: value
          - name: name
            value: value
        nodeSelector: "{}"
        hostname: hostname
        tolerations:
        - effect: effect
          tolerationSeconds: 4
          value: value
          key: key
          operator: operator
        - effect: effect
          tolerationSeconds: 4
          value: value
          key: key
          operator: operator
        automountServiceAccountToken: true
        schedulerName: schedulerName
        activeDeadlineSeconds: 0
        hostIPC: true
        volumes:
        - quobyte:
            volume: volume
            registry: registry
            readOnly: true
            user: user
            group: group
          azureFile:
            secretName: secretName
            readOnly: true
            shareName: shareName
          flexVolume:
            driver: driver
            options: "{}"
            secretRef:
              name: name
            readOnly: true
            fsType: fsType
          secret:
            secretName: secretName
            defaultMode: 2
            optional: true
            items:
            - mode: 9
              path: path
              key: key
            - mode: 9
              path: path
              key: key
          projected:
            sources:
            - downwardAPI:
                items:
                - mode: 8
                  path: path
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
                - mode: 8
                  path: path
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              configMap:
                name: name
                optional: true
                items:
                - mode: 9
                  path: path
                  key: key
                - mode: 9
                  path: path
                  key: key
              secret:
                name: name
                optional: true
                items:
                - mode: 9
                  path: path
                  key: key
                - mode: 9
                  path: path
                  key: key
              serviceAccountToken:
                path: path
                audience: audience
                expirationSeconds: 1
            - downwardAPI:
                items:
                - mode: 8
                  path: path
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
                - mode: 8
                  path: path
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              configMap:
                name: name
                optional: true
                items:
                - mode: 9
                  path: path
                  key: key
                - mode: 9
                  path: path
                  key: key
              secret:
                name: name
                optional: true
                items:
                - mode: 9
                  path: path
                  key: key
                - mode: 9
                  path: path
                  key: key
              serviceAccountToken:
                path: path
                audience: audience
                expirationSeconds: 1
            defaultMode: 6
          cephfs:
            path: path
            secretRef:
              name: name
            secretFile: secretFile
            readOnly: true
            user: user
            monitors:
            - monitors
            - monitors
          scaleIO:
            system: system
            protectionDomain: protectionDomain
            sslEnabled: true
            storageMode: storageMode
            volumeName: volumeName
            secretRef:
              name: name
            readOnly: true
            fsType: fsType
            storagePool: storagePool
            gateway: gateway
          emptyDir:
            sizeLimit: sizeLimit
            medium: medium
          glusterfs:
            path: path
            endpoints: endpoints
            readOnly: true
          gcePersistentDisk:
            partition: 6
            readOnly: true
            pdName: pdName
            fsType: fsType
          photonPersistentDisk:
            pdID: pdID
            fsType: fsType
          azureDisk:
            diskName: diskName
            kind: "{}"
            readOnly: true
            cachingMode: "{}"
            diskURI: diskURI
            fsType: fsType
          cinder:
            secretRef:
              name: name
            volumeID: volumeID
            readOnly: true
            fsType: fsType
          downwardAPI:
            defaultMode: 6
            items:
            - mode: 8
              path: path
              resourceFieldRef:
                divisor: divisor
                resource: resource
                containerName: containerName
              fieldRef:
                apiVersion: apiVersion
                fieldPath: fieldPath
            - mode: 8
              path: path
              resourceFieldRef:
                divisor: divisor
                resource: resource
                containerName: containerName
              fieldRef:
                apiVersion: apiVersion
                fieldPath: fieldPath
          awsElasticBlockStore:
            partition: 5
            volumeID: volumeID
            readOnly: true
            fsType: fsType
          flocker:
            datasetName: datasetName
            datasetUUID: datasetUUID
          iscsi:
            chapAuthSession: true
            iscsiInterface: iscsiInterface
            lun: 3
            chapAuthDiscovery: true
            iqn: iqn
            portals:
            - portals
            - portals
            secretRef:
              name: name
            initiatorName: initiatorName
            readOnly: true
            fsType: fsType
            targetPortal: targetPortal
          rbd:
            image: image
            pool: pool
            secretRef:
              name: name
            readOnly: true
            fsType: fsType
            keyring: keyring
            user: user
            monitors:
            - monitors
            - monitors
          configMap:
            defaultMode: 9
            name: name
            optional: true
            items:
            - mode: 9
              path: path
              key: key
            - mode: 9
              path: path
              key: key
          storageos:
            volumeNamespace: volumeNamespace
            volumeName: volumeName
            secretRef:
              name: name
            readOnly: true
            fsType: fsType
          name: name
          nfs:
            path: path
            server: server
            readOnly: true
          persistentVolumeClaim:
            claimName: claimName
            readOnly: true
          gitRepo:
            repository: repository
            directory: directory
            revision: revision
          portworxVolume:
            volumeID: volumeID
            readOnly: true
            fsType: fsType
          vsphereVolume:
            storagePolicyName: storagePolicyName
            storagePolicyID: storagePolicyID
            volumePath: volumePath
            fsType: fsType
          fc:
            lun: 9
            targetWWNs:
            - targetWWNs
            - targetWWNs
            readOnly: true
            wwids:
            - wwids
            - wwids
            fsType: fsType
          hostPath:
            path: path
            type: "{}"
        - quobyte:
            volume: volume
            registry: registry
            readOnly: true
            user: user
            group: group
          azureFile:
            secretName: secretName
            readOnly: true
            shareName: shareName
          flexVolume:
            driver: driver
            options: "{}"
            secretRef:
              name: name
            readOnly: true
            fsType: fsType
          secret:
            secretName: secretName
            defaultMode: 2
            optional: true
            items:
            - mode: 9
              path: path
              key: key
            - mode: 9
              path: path
              key: key
          projected:
            sources:
            - downwardAPI:
                items:
                - mode: 8
                  path: path
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
                - mode: 8
                  path: path
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              configMap:
                name: name
                optional: true
                items:
                - mode: 9
                  path: path
                  key: key
                - mode: 9
                  path: path
                  key: key
              secret:
                name: name
                optional: true
                items:
                - mode: 9
                  path: path
                  key: key
                - mode: 9
                  path: path
                  key: key
              serviceAccountToken:
                path: path
                audience: audience
                expirationSeconds: 1
            - downwardAPI:
                items:
                - mode: 8
                  path: path
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
                - mode: 8
                  path: path
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              configMap:
                name: name
                optional: true
                items:
                - mode: 9
                  path: path
                  key: key
                - mode: 9
                  path: path
                  key: key
              secret:
                name: name
                optional: true
                items:
                - mode: 9
                  path: path
                  key: key
                - mode: 9
                  path: path
                  key: key
              serviceAccountToken:
                path: path
                audience: audience
                expirationSeconds: 1
            defaultMode: 6
          cephfs:
            path: path
            secretRef:
              name: name
            secretFile: secretFile
            readOnly: true
            user: user
            monitors:
            - monitors
            - monitors
          scaleIO:
            system: system
            protectionDomain: protectionDomain
            sslEnabled: true
            storageMode: storageMode
            volumeName: volumeName
            secretRef:
              name: name
            readOnly: true
            fsType: fsType
            storagePool: storagePool
            gateway: gateway
          emptyDir:
            sizeLimit: sizeLimit
            medium: medium
          glusterfs:
            path: path
            endpoints: endpoints
            readOnly: true
          gcePersistentDisk:
            partition: 6
            readOnly: true
            pdName: pdName
            fsType: fsType
          photonPersistentDisk:
            pdID: pdID
            fsType: fsType
          azureDisk:
            diskName: diskName
            kind: "{}"
            readOnly: true
            cachingMode: "{}"
            diskURI: diskURI
            fsType: fsType
          cinder:
            secretRef:
              name: name
            volumeID: volumeID
            readOnly: true
            fsType: fsType
          downwardAPI:
            defaultMode: 6
            items:
            - mode: 8
              path: path
              resourceFieldRef:
                divisor: divisor
                resource: resource
                containerName: containerName
              fieldRef:
                apiVersion: apiVersion
                fieldPath: fieldPath
            - mode: 8
              path: path
              resourceFieldRef:
                divisor: divisor
                resource: resource
                containerName: containerName
              fieldRef:
                apiVersion: apiVersion
                fieldPath: fieldPath
          awsElasticBlockStore:
            partition: 5
            volumeID: volumeID
            readOnly: true
            fsType: fsType
          flocker:
            datasetName: datasetName
            datasetUUID: datasetUUID
          iscsi:
            chapAuthSession: true
            iscsiInterface: iscsiInterface
            lun: 3
            chapAuthDiscovery: true
            iqn: iqn
            portals:
            - portals
            - portals
            secretRef:
              name: name
            initiatorName: initiatorName
            readOnly: true
            fsType: fsType
            targetPortal: targetPortal
          rbd:
            image: image
            pool: pool
            secretRef:
              name: name
            readOnly: true
            fsType: fsType
            keyring: keyring
            user: user
            monitors:
            - monitors
            - monitors
          configMap:
            defaultMode: 9
            name: name
            optional: true
            items:
            - mode: 9
              path: path
              key: key
            - mode: 9
              path: path
              key: key
          storageos:
            volumeNamespace: volumeNamespace
            volumeName: volumeName
            secretRef:
              name: name
            readOnly: true
            fsType: fsType
          name: name
          nfs:
            path: path
            server: server
            readOnly: true
          persistentVolumeClaim:
            claimName: claimName
            readOnly: true
          gitRepo:
            repository: repository
            directory: directory
            revision: revision
          portworxVolume:
            volumeID: volumeID
            readOnly: true
            fsType: fsType
          vsphereVolume:
            storagePolicyName: storagePolicyName
            storagePolicyID: storagePolicyID
            volumePath: volumePath
            fsType: fsType
          fc:
            lun: 9
            targetWWNs:
            - targetWWNs
            - targetWWNs
            readOnly: true
            wwids:
            - wwids
            - wwids
            fsType: fsType
          hostPath:
            path: path
            type: "{}"
        serviceAccount: serviceAccount
        priority: 1
        restartPolicy: restartPolicy
        shareProcessNamespace: true
        subdomain: subdomain
        containers:
        - volumeDevices:
          - devicePath: devicePath
            name: name
          - devicePath: devicePath
            name: name
          image: image
          imagePullPolicy: imagePullPolicy
          livenessProbe:
            failureThreshold: 5
            periodSeconds: 2
            tcpSocket:
              port: port
              host: host
            timeoutSeconds: 9
            successThreshold: 7
            initialDelaySeconds: 5
            exec:
              command:
              - command
              - command
            httpGet:
              path: path
              scheme: scheme
              port: port
              host: host
              httpHeaders:
              - name: name
                value: value
              - name: name
                value: value
          stdin: true
          terminationMessagePolicy: terminationMessagePolicy
          terminationMessagePath: terminationMessagePath
          workingDir: workingDir
          resources:
            requests: "{}"
            limits: "{}"
          securityContext:
            privileged: true
            runAsUser: 7
            capabilities:
              add:
              - "{}"
              - "{}"
              drop:
              - "{}"
              - "{}"
            seLinuxOptions:
              role: role
              level: level
              type: type
              user: user
            allowPrivilegeEscalation: true
            runAsGroup: 4
            runAsNonRoot: true
            readOnlyRootFilesystem: true
          env:
          - name: name
            value: value
            valueFrom:
              secretKeyRef:
                name: name
                optional: true
                key: key
              resourceFieldRef:
                divisor: divisor
                resource: resource
                containerName: containerName
              configMapKeyRef:
                name: name
                optional: true
                key: key
              fieldRef:
                apiVersion: apiVersion
                fieldPath: fieldPath
          - name: name
            value: value
            valueFrom:
              secretKeyRef:
                name: name
                optional: true
                key: key
              resourceFieldRef:
                divisor: divisor
                resource: resource
                containerName: containerName
              configMapKeyRef:
                name: name
                optional: true
                key: key
              fieldRef:
                apiVersion: apiVersion
                fieldPath: fieldPath
          ports:
          - protocol: protocol
            hostIP: hostIP
            name: name
            containerPort: 3
            hostPort: 2
          - protocol: protocol
            hostIP: hostIP
            name: name
            containerPort: 3
            hostPort: 2
          command:
          - command
          - command
          volumeMounts:
          - mountPath: mountPath
            mountPropagation: "{}"
            name: name
            readOnly: true
            subPath: subPath
          - mountPath: mountPath
            mountPropagation: "{}"
            name: name
            readOnly: true
            subPath: subPath
          args:
          - args
          - args
          lifecycle:
            postStart:
              tcpSocket:
                port: port
                host: host
              exec:
                command:
                - command
                - command
              httpGet:
                path: path
                scheme: scheme
                port: port
                host: host
                httpHeaders:
                - name: name
                  value: value
                - name: name
                  value: value
            preStop:
              tcpSocket:
                port: port
                host: host
              exec:
                command:
                - command
                - command
              httpGet:
                path: path
                scheme: scheme
                port: port
                host: host
                httpHeaders:
                - name: name
                  value: value
                - name: name
                  value: value
          name: name
          tty: true
          readinessProbe:
            failureThreshold: 5
            periodSeconds: 2
            tcpSocket:
              port: port
              host: host
            timeoutSeconds: 9
            successThreshold: 7
            initialDelaySeconds: 5
            exec:
              command:
              - command
              - command
            httpGet:
              path: path
              scheme: scheme
              port: port
              host: host
              httpHeaders:
              - name: name
                value: value
              - name: name
                value: value
          stdinOnce: true
          envFrom:
          - configMapRef:
              name: name
              optional: true
            prefix: prefix
            secretRef:
              name: name
              optional: true
          - configMapRef:
              name: name
              optional: true
            prefix: prefix
            secretRef:
              name: name
              optional: true
        - volumeDevices:
          - devicePath: devicePath
            name: name
          - devicePath: devicePath
            name: name
          image: image
          imagePullPolicy: imagePullPolicy
          livenessProbe:
            failureThreshold: 5
            periodSeconds: 2
            tcpSocket:
              port: port
              host: host
            timeoutSeconds: 9
            successThreshold: 7
            initialDelaySeconds: 5
            exec:
              command:
              - command
              - command
            httpGet:
              path: path
              scheme: scheme
              port: port
              host: host
              httpHeaders:
              - name: name
                value: value
              - name: name
                value: value
          stdin: true
          terminationMessagePolicy: terminationMessagePolicy
          terminationMessagePath: terminationMessagePath
          workingDir: workingDir
          resources:
            requests: "{}"
            limits: "{}"
          securityContext:
            privileged: true
            runAsUser: 7
            capabilities:
              add:
              - "{}"
              - "{}"
              drop:
              - "{}"
              - "{}"
            seLinuxOptions:
              role: role
              level: level
              type: type
              user: user
            allowPrivilegeEscalation: true
            runAsGroup: 4
            runAsNonRoot: true
            readOnlyRootFilesystem: true
          env:
          - name: name
            value: value
            valueFrom:
              secretKeyRef:
                name: name
                optional: true
                key: key
              resourceFieldRef:
                divisor: divisor
                resource: resource
                containerName: containerName
              configMapKeyRef:
                name: name
                optional: true
                key: key
              fieldRef:
                apiVersion: apiVersion
                fieldPath: fieldPath
          - name: name
            value: value
            valueFrom:
              secretKeyRef:
                name: name
                optional: true
                key: key
              resourceFieldRef:
                divisor: divisor
                resource: resource
                containerName: containerName
              configMapKeyRef:
                name: name
                optional: true
                key: key
              fieldRef:
                apiVersion: apiVersion
                fieldPath: fieldPath
          ports:
          - protocol: protocol
            hostIP: hostIP
            name: name
            containerPort: 3
            hostPort: 2
          - protocol: protocol
            hostIP: hostIP
            name: name
            containerPort: 3
            hostPort: 2
          command:
          - command
          - command
          volumeMounts:
          - mountPath: mountPath
            mountPropagation: "{}"
            name: name
            readOnly: true
            subPath: subPath
          - mountPath: mountPath
            mountPropagation: "{}"
            name: name
            readOnly: true
            subPath: subPath
          args:
          - args
          - args
          lifecycle:
            postStart:
              tcpSocket:
                port: port
                host: host
              exec:
                command:
                - command
                - command
              httpGet:
                path: path
                scheme: scheme
                port: port
                host: host
                httpHeaders:
                - name: name
                  value: value
                - name: name
                  value: value
            preStop:
              tcpSocket:
                port: port
                host: host
              exec:
                command:
                - command
                - command
              httpGet:
                path: path
                scheme: scheme
                port: port
                host: host
                httpHeaders:
                - name: name
                  value: value
                - name: name
                  value: value
          name: name
          tty: true
          readinessProbe:
            failureThreshold: 5
            periodSeconds: 2
            tcpSocket:
              port: port
              host: host
            timeoutSeconds: 9
            successThreshold: 7
            initialDelaySeconds: 5
            exec:
              command:
              - command
              - command
            httpGet:
              path: path
              scheme: scheme
              port: port
              host: host
              httpHeaders:
              - name: name
                value: value
              - name: name
                value: value
          stdinOnce: true
          envFrom:
          - configMapRef:
              name: name
              optional: true
            prefix: prefix
            secretRef:
              name: name
              optional: true
          - configMapRef:
              name: name
              optional: true
            prefix: prefix
            secretRef:
              name: name
              optional: true
        initContainers:
        - volumeDevices:
          - devicePath: devicePath
            name: name
          - devicePath: devicePath
            name: name
          image: image
          imagePullPolicy: imagePullPolicy
          livenessProbe:
            failureThreshold: 5
            periodSeconds: 2
            tcpSocket:
              port: port
              host: host
            timeoutSeconds: 9
            successThreshold: 7
            initialDelaySeconds: 5
            exec:
              command:
              - command
              - command
            httpGet:
              path: path
              scheme: scheme
              port: port
              host: host
              httpHeaders:
              - name: name
                value: value
              - name: name
                value: value
          stdin: true
          terminationMessagePolicy: terminationMessagePolicy
          terminationMessagePath: terminationMessagePath
          workingDir: workingDir
          resources:
            requests: "{}"
            limits: "{}"
          securityContext:
            privileged: true
            runAsUser: 7
            capabilities:
              add:
              - "{}"
              - "{}"
              drop:
              - "{}"
              - "{}"
            seLinuxOptions:
              role: role
              level: level
              type: type
              user: user
            allowPrivilegeEscalation: true
            runAsGroup: 4
            runAsNonRoot: true
            readOnlyRootFilesystem: true
          env:
          - name: name
            value: value
            valueFrom:
              secretKeyRef:
                name: name
                optional: true
                key: key
              resourceFieldRef:
                divisor: divisor
                resource: resource
                containerName: containerName
              configMapKeyRef:
                name: name
                optional: true
                key: key
              fieldRef:
                apiVersion: apiVersion
                fieldPath: fieldPath
          - name: name
            value: value
            valueFrom:
              secretKeyRef:
                name: name
                optional: true
                key: key
              resourceFieldRef:
                divisor: divisor
                resource: resource
                containerName: containerName
              configMapKeyRef:
                name: name
                optional: true
                key: key
              fieldRef:
                apiVersion: apiVersion
                fieldPath: fieldPath
          ports:
          - protocol: protocol
            hostIP: hostIP
            name: name
            containerPort: 3
            hostPort: 2
          - protocol: protocol
            hostIP: hostIP
            name: name
            containerPort: 3
            hostPort: 2
          command:
          - command
          - command
          volumeMounts:
          - mountPath: mountPath
            mountPropagation: "{}"
            name: name
            readOnly: true
            subPath: subPath
          - mountPath: mountPath
            mountPropagation: "{}"
            name: name
            readOnly: true
            subPath: subPath
          args:
          - args
          - args
          lifecycle:
            postStart:
              tcpSocket:
                port: port
                host: host
              exec:
                command:
                - command
                - command
              httpGet:
                path: path
                scheme: scheme
                port: port
                host: host
                httpHeaders:
                - name: name
                  value: value
                - name: name
                  value: value
            preStop:
              tcpSocket:
                port: port
                host: host
              exec:
                command:
                - command
                - command
              httpGet:
                path: path
                scheme: scheme
                port: port
                host: host
                httpHeaders:
                - name: name
                  value: value
                - name: name
                  value: value
          name: name
          tty: true
          readinessProbe:
            failureThreshold: 5
            periodSeconds: 2
            tcpSocket:
              port: port
              host: host
            timeoutSeconds: 9
            successThreshold: 7
            initialDelaySeconds: 5
            exec:
              command:
              - command
              - command
            httpGet:
              path: path
              scheme: scheme
              port: port
              host: host
              httpHeaders:
              - name: name
                value: value
              - name: name
                value: value
          stdinOnce: true
          envFrom:
          - configMapRef:
              name: name
              optional: true
            prefix: prefix
            secretRef:
              name: name
              optional: true
          - configMapRef:
              name: name
              optional: true
            prefix: prefix
            secretRef:
              name: name
              optional: true
        - volumeDevices:
          - devicePath: devicePath
            name: name
          - devicePath: devicePath
            name: name
          image: image
          imagePullPolicy: imagePullPolicy
          livenessProbe:
            failureThreshold: 5
            periodSeconds: 2
            tcpSocket:
              port: port
              host: host
            timeoutSeconds: 9
            successThreshold: 7
            initialDelaySeconds: 5
            exec:
              command:
              - command
              - command
            httpGet:
              path: path
              scheme: scheme
              port: port
              host: host
              httpHeaders:
              - name: name
                value: value
              - name: name
                value: value
          stdin: true
          terminationMessagePolicy: terminationMessagePolicy
          terminationMessagePath: terminationMessagePath
          workingDir: workingDir
          resources:
            requests: "{}"
            limits: "{}"
          securityContext:
            privileged: true
            runAsUser: 7
            capabilities:
              add:
              - "{}"
              - "{}"
              drop:
              - "{}"
              - "{}"
            seLinuxOptions:
              role: role
              level: level
              type: type
              user: user
            allowPrivilegeEscalation: true
            runAsGroup: 4
            runAsNonRoot: true
            readOnlyRootFilesystem: true
          env:
          - name: name
            value: value
            valueFrom:
              secretKeyRef:
                name: name
                optional: true
                key: key
              resourceFieldRef:
                divisor: divisor
                resource: resource
                containerName: containerName
              configMapKeyRef:
                name: name
                optional: true
                key: key
              fieldRef:
                apiVersion: apiVersion
                fieldPath: fieldPath
          - name: name
            value: value
            valueFrom:
              secretKeyRef:
                name: name
                optional: true
                key: key
              resourceFieldRef:
                divisor: divisor
                resource: resource
                containerName: containerName
              configMapKeyRef:
                name: name
                optional: true
                key: key
              fieldRef:
                apiVersion: apiVersion
                fieldPath: fieldPath
          ports:
          - protocol: protocol
            hostIP: hostIP
            name: name
            containerPort: 3
            hostPort: 2
          - protocol: protocol
            hostIP: hostIP
            name: name
            containerPort: 3
            hostPort: 2
          command:
          - command
          - command
          volumeMounts:
          - mountPath: mountPath
            mountPropagation: "{}"
            name: name
            readOnly: true
            subPath: subPath
          - mountPath: mountPath
            mountPropagation: "{}"
            name: name
            readOnly: true
            subPath: subPath
          args:
          - args
          - args
          lifecycle:
            postStart:
              tcpSocket:
                port: port
                host: host
              exec:
                command:
                - command
                - command
              httpGet:
                path: path
                scheme: scheme
                port: port
                host: host
                httpHeaders:
                - name: name
                  value: value
                - name: name
                  value: value
            preStop:
              tcpSocket:
                port: port
                host: host
              exec:
                command:
                - command
                - command
              httpGet:
                path: path
                scheme: scheme
                port: port
                host: host
                httpHeaders:
                - name: name
                  value: value
                - name: name
                  value: value
          name: name
          tty: true
          readinessProbe:
            failureThreshold: 5
            periodSeconds: 2
            tcpSocket:
              port: port
              host: host
            timeoutSeconds: 9
            successThreshold: 7
            initialDelaySeconds: 5
            exec:
              command:
              - command
              - command
            httpGet:
              path: path
              scheme: scheme
              port: port
              host: host
              httpHeaders:
              - name: name
                value: value
              - name: name
                value: value
          stdinOnce: true
          envFrom:
          - configMapRef:
              name: name
              optional: true
            prefix: prefix
            secretRef:
              name: name
              optional: true
          - configMapRef:
              name: name
              optional: true
            prefix: prefix
            secretRef:
              name: name
              optional: true
        affinity:
          nodeAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
              nodeSelectorTerms:
              - matchExpressions:
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                matchFields:
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
              - matchExpressions:
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                matchFields:
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
            preferredDuringSchedulingIgnoredDuringExecution:
            - preference:
                matchExpressions:
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                matchFields:
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
              weight: 6
            - preference:
                matchExpressions:
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                matchFields:
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
              weight: 6
          podAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                matchLabels: "{}"
              topologyKey: topologyKey
              namespaces:
              - namespaces
              - namespaces
            - labelSelector:
                matchExpressions:
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                matchLabels: "{}"
              topologyKey: topologyKey
              namespaces:
              - namespaces
              - namespaces
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  matchLabels: "{}"
                topologyKey: topologyKey
                namespaces:
                - namespaces
                - namespaces
              weight: 1
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  matchLabels: "{}"
                topologyKey: topologyKey
                namespaces:
                - namespaces
                - namespaces
              weight: 1
          podAntiAffinity:
            requiredDuringSchedulingIgnoredDuringExecution:
            - labelSelector:
                matchExpressions:
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                matchLabels: "{}"
              topologyKey: topologyKey
              namespaces:
              - namespaces
              - namespaces
            - labelSelector:
                matchExpressions:
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                matchLabels: "{}"
              topologyKey: topologyKey
              namespaces:
              - namespaces
              - namespaces
            preferredDuringSchedulingIgnoredDuringExecution:
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  matchLabels: "{}"
                topologyKey: topologyKey
                namespaces:
                - namespaces
                - namespaces
              weight: 1
            - podAffinityTerm:
                labelSelector:
                  matchExpressions:
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  matchLabels: "{}"
                topologyKey: topologyKey
                namespaces:
                - namespaces
                - namespaces
              weight: 1
        hostPID: true
      properties:
        activeDeadlineSeconds:
          description: Optional duration in seconds the pod may be active on the node
            relative to StartTime before the system will actively try to mark it failed
            and kill associated containers. Value must be a positive integer.
          format: int64
          type: integer
        affinity:
          $ref: '#/components/schemas/v1.Affinity'
        automountServiceAccountToken:
          description: AutomountServiceAccountToken indicates whether a service account
            token should be automatically mounted.
          type: boolean
        containers:
          description: List of containers belonging to the pod. Containers cannot
            currently be added or removed. There must be at least one container in
            a Pod. Cannot be updated.
          items:
            $ref: '#/components/schemas/v1.Container'
          type: array
        dnsConfig:
          $ref: '#/components/schemas/v1.PodDNSConfig'
        dnsPolicy:
          description: "Set DNS policy for the pod. Defaults to \"ClusterFirst\".\
            \ Valid values are 'ClusterFirstWithHostNet', 'ClusterFirst', 'Default'\
            \ or 'None'. DNS parameters given in DNSConfig will be merged with the\
            \ policy selected with DNSPolicy. To have DNS options set along with hostNetwork,\
            \ you have to specify DNS policy explicitly to 'ClusterFirstWithHostNet'."
          type: string
        hostAliases:
          description: HostAliases is an optional list of hosts and IPs that will
            be injected into the pod's hosts file if specified. This is only valid
            for non-hostNetwork pods.
          items:
            $ref: '#/components/schemas/v1.HostAlias'
          type: array
        hostIPC:
          description: "Use the host's ipc namespace. Optional: Default to false."
          type: boolean
        hostNetwork:
          description: "Host networking requested for this pod. Use the host's network\
            \ namespace. If this option is set, the ports that will be used must be\
            \ specified. Default to false."
          type: boolean
        hostPID:
          description: "Use the host's pid namespace. Optional: Default to false."
          type: boolean
        hostname:
          description: "Specifies the hostname of the Pod If not specified, the pod's\
            \ hostname will be set to a system-defined value."
          type: string
        imagePullSecrets:
          description: "ImagePullSecrets is an optional list of references to secrets\
            \ in the same namespace to use for pulling any of the images used by this\
            \ PodSpec. If specified, these secrets will be passed to individual puller\
            \ implementations for them to use. For example, in the case of docker,\
            \ only DockerConfig type secrets are honored. More info: https://kubernetes.io/docs/concepts/containers/images#specifying-imagepullsecrets-on-a-pod"
          items:
            $ref: '#/components/schemas/v1.LocalObjectReference'
          type: array
        initContainers:
          description: "List of initialization containers belonging to the pod. Init\
            \ containers are executed in order prior to containers being started.\
            \ If any init container fails, the pod is considered to have failed and\
            \ is handled according to its restartPolicy. The name for an init container\
            \ or normal container must be unique among all containers. Init containers\
            \ may not have Lifecycle actions, Readiness probes, or Liveness probes.\
            \ The resourceRequirements of an init container are taken into account\
            \ during scheduling by finding the highest request/limit for each resource\
            \ type, and then using the max of of that value or the sum of the normal\
            \ containers. Limits are applied to init containers in a similar fashion.\
            \ Init containers cannot currently be added or removed. Cannot be updated.\
            \ More info: https://kubernetes.io/docs/concepts/workloads/pods/init-containers/"
          items:
            $ref: '#/components/schemas/v1.Container'
          type: array
        nodeName:
          description: "NodeName is a request to schedule this pod onto a specific\
            \ node. If it is non-empty, the scheduler simply schedules this pod onto\
            \ that node, assuming that it fits resource requirements."
          type: string
        nodeSelector:
          description: "NodeSelector is a selector which must be true for the pod\
            \ to fit on a node. Selector which must match a node's labels for the\
            \ pod to be scheduled on that node. More info: https://kubernetes.io/docs/concepts/configuration/assign-pod-node/"
          properties: {}
          type: object
        priority:
          description: "The priority value. Various system components use this field\
            \ to find the priority of the pod. When Priority Admission Controller\
            \ is enabled, it prevents users from setting this field. The admission\
            \ controller populates this field from PriorityClassName. The higher the\
            \ value, the higher the priority."
          format: int32
          type: integer
        priorityClassName:
          description: "If specified, indicates the pod's priority. \"system-node-critical\"\
            \ and \"system-cluster-critical\" are two special keywords which indicate\
            \ the highest priorities with the former being the highest priority. Any\
            \ other name must be defined by creating a PriorityClass object with that\
            \ name. If not specified, the pod priority will be default or zero if\
            \ there is no default."
          type: string
        readinessGates:
          description: "If specified, all readiness gates will be evaluated for pod\
            \ readiness. A pod is ready when all its containers are ready AND all\
            \ conditions specified in the readiness gates have status equal to \"\
            True\" More info: https://github.com/kubernetes/community/blob/master/keps/sig-network/0007-pod-ready%2B%2B.md"
          items:
            $ref: '#/components/schemas/v1.PodReadinessGate'
          type: array
        restartPolicy:
          description: "Restart policy for all containers within the pod. One of Always,\
            \ OnFailure, Never. Default to Always. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle/#restart-policy"
          type: string
        schedulerName:
          description: "If specified, the pod will be dispatched by specified scheduler.\
            \ If not specified, the pod will be dispatched by default scheduler."
          type: string
        securityContext:
          $ref: '#/components/schemas/v1.PodSecurityContext'
        serviceAccount:
          description: "DeprecatedServiceAccount is a depreciated alias for ServiceAccountName.\
            \ Deprecated: Use serviceAccountName instead."
          type: string
        serviceAccountName:
          description: "ServiceAccountName is the name of the ServiceAccount to use\
            \ to run this pod. More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/"
          type: string
        shareProcessNamespace:
          description: "Share a single process namespace between all of the containers\
            \ in a pod. When this is set containers will be able to view and signal\
            \ processes from other containers in the same pod, and the first process\
            \ in each container will not be assigned PID 1. HostPID and ShareProcessNamespace\
            \ cannot both be set. Optional: Default to false. This field is alpha-level\
            \ and is honored only by servers that enable the PodShareProcessNamespace\
            \ feature."
          type: boolean
        subdomain:
          description: "If specified, the fully qualified Pod hostname will be \"\
            <hostname>.<subdomain>.<pod namespace>.svc.<cluster domain>\". If not\
            \ specified, the pod will not have a domainname at all."
          type: string
        terminationGracePeriodSeconds:
          description: "Optional duration in seconds the pod needs to terminate gracefully.\
            \ May be decreased in delete request. Value must be non-negative integer.\
            \ The value zero indicates delete immediately. If this value is nil, the\
            \ default grace period will be used instead. The grace period is the duration\
            \ in seconds after the processes running in the pod are sent a termination\
            \ signal and the time when the processes are forcibly halted with a kill\
            \ signal. Set this value longer than the expected cleanup time for your\
            \ process. Defaults to 30 seconds."
          format: int64
          type: integer
        tolerations:
          description: "If specified, the pod's tolerations."
          items:
            $ref: '#/components/schemas/v1.Toleration'
          type: array
        volumes:
          description: "List of volumes that can be mounted by containers belonging\
            \ to the pod. More info: https://kubernetes.io/docs/concepts/storage/volumes"
          items:
            $ref: '#/components/schemas/v1.Volume'
          type: array
      required:
      - containers
      type: object
    v1.PodStatus:
      description: "PodStatus represents information about the status of a pod. Status\
        \ may trail the actual state of a system, especially if the node that hosts\
        \ the pod cannot contact the control plane."
      example:
        phase: phase
        reason: reason
        podIP: podIP
        containerStatuses:
        - image: image
          imageID: imageID
          restartCount: 5
          ready: true
          name: name
          state:
            running:
              startedAt: startedAt
            waiting:
              reason: reason
              message: message
            terminated:
              reason: reason
              exitCode: 6
              startedAt: startedAt
              containerID: containerID
              message: message
              signal: 6
              finishedAt: finishedAt
          containerID: containerID
          lastState:
            running:
              startedAt: startedAt
            waiting:
              reason: reason
              message: message
            terminated:
              reason: reason
              exitCode: 6
              startedAt: startedAt
              containerID: containerID
              message: message
              signal: 6
              finishedAt: finishedAt
        - image: image
          imageID: imageID
          restartCount: 5
          ready: true
          name: name
          state:
            running:
              startedAt: startedAt
            waiting:
              reason: reason
              message: message
            terminated:
              reason: reason
              exitCode: 6
              startedAt: startedAt
              containerID: containerID
              message: message
              signal: 6
              finishedAt: finishedAt
          containerID: containerID
          lastState:
            running:
              startedAt: startedAt
            waiting:
              reason: reason
              message: message
            terminated:
              reason: reason
              exitCode: 6
              startedAt: startedAt
              containerID: containerID
              message: message
              signal: 6
              finishedAt: finishedAt
        hostIP: hostIP
        startTime: startTime
        nominatedNodeName: nominatedNodeName
        qosClass: qosClass
        conditions:
        - reason: reason
          lastTransitionTime: lastTransitionTime
          message: message
          type: type
          lastProbeTime: lastProbeTime
          status: status
        - reason: reason
          lastTransitionTime: lastTransitionTime
          message: message
          type: type
          lastProbeTime: lastProbeTime
          status: status
        message: message
        initContainerStatuses:
        - image: image
          imageID: imageID
          restartCount: 5
          ready: true
          name: name
          state:
            running:
              startedAt: startedAt
            waiting:
              reason: reason
              message: message
            terminated:
              reason: reason
              exitCode: 6
              startedAt: startedAt
              containerID: containerID
              message: message
              signal: 6
              finishedAt: finishedAt
          containerID: containerID
          lastState:
            running:
              startedAt: startedAt
            waiting:
              reason: reason
              message: message
            terminated:
              reason: reason
              exitCode: 6
              startedAt: startedAt
              containerID: containerID
              message: message
              signal: 6
              finishedAt: finishedAt
        - image: image
          imageID: imageID
          restartCount: 5
          ready: true
          name: name
          state:
            running:
              startedAt: startedAt
            waiting:
              reason: reason
              message: message
            terminated:
              reason: reason
              exitCode: 6
              startedAt: startedAt
              containerID: containerID
              message: message
              signal: 6
              finishedAt: finishedAt
          containerID: containerID
          lastState:
            running:
              startedAt: startedAt
            waiting:
              reason: reason
              message: message
            terminated:
              reason: reason
              exitCode: 6
              startedAt: startedAt
              containerID: containerID
              message: message
              signal: 6
              finishedAt: finishedAt
      properties:
        conditions:
          description: "Current service state of pod. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-conditions"
          items:
            $ref: '#/components/schemas/v1.PodCondition'
          type: array
        containerStatuses:
          description: "The list has one entry per container in the manifest. Each\
            \ entry is currently the output of `docker inspect`. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-and-container-status"
          items:
            $ref: '#/components/schemas/v1.ContainerStatus'
          type: array
        hostIP:
          description: IP address of the host to which the pod is assigned. Empty
            if not yet scheduled.
          type: string
        initContainerStatuses:
          description: "The list has one entry per init container in the manifest.\
            \ The most recent successful init container will have ready = true, the\
            \ most recently started container will have startTime set. More info:\
            \ https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-and-container-status"
          items:
            $ref: '#/components/schemas/v1.ContainerStatus'
          type: array
        message:
          description: A human readable message indicating details about why the pod
            is in this condition.
          type: string
        nominatedNodeName:
          description: "nominatedNodeName is set only when this pod preempts other\
            \ pods on the node, but it cannot be scheduled right away as preemption\
            \ victims receive their graceful termination periods. This field does\
            \ not guarantee that the pod will be scheduled on this node. Scheduler\
            \ may decide to place the pod elsewhere if other nodes become available\
            \ sooner. Scheduler may also decide to give the resources on this node\
            \ to a higher priority pod that is created after preemption. As a result,\
            \ this field may be different than PodSpec.nodeName when the pod is scheduled."
          type: string
        phase:
          description: |-
            The phase of a Pod is a simple, high-level summary of where the Pod is in its lifecycle. The conditions array, the reason and message fields, and the individual container status arrays contain more detail about the pod's status. There are five possible phase values:

            Pending: The pod has been accepted by the Kubernetes system, but one or more of the container images has not been created. This includes time before being scheduled as well as time spent downloading images over the network, which could take a while. Running: The pod has been bound to a node, and all of the containers have been created. At least one container is still running, or is in the process of starting or restarting. Succeeded: All containers in the pod have terminated in success, and will not be restarted. Failed: All containers in the pod have terminated, and at least one container has terminated in failure. The container either exited with non-zero status or was terminated by the system. Unknown: For some reason the state of the pod could not be obtained, typically due to an error in communicating with the host of the pod.

            More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#pod-phase
          type: string
        podIP:
          description: IP address allocated to the pod. Routable at least within the
            cluster. Empty if not yet allocated.
          type: string
        qosClass:
          description: "The Quality of Service (QOS) classification assigned to the\
            \ pod based on resource requirements See PodQOSClass type for available\
            \ QOS classes More info: https://git.k8s.io/community/contributors/design-proposals/node/resource-qos.md"
          type: string
        reason:
          description: A brief CamelCase message indicating details about why the
            pod is in this state. e.g. 'Evicted'
          type: string
        startTime:
          description: RFC 3339 date and time at which the object was acknowledged
            by the Kubelet. This is before the Kubelet pulled the container image(s)
            for the pod.
          type: string
      type: object
    v1.PodTemplate:
      description: PodTemplate describes a template for creating copies of a predefined
        pod.
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
          type: string
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: '#/components/schemas/v1.ObjectMeta'
        template:
          $ref: '#/components/schemas/v1.PodTemplateSpec'
      type: object
    v1.PodTemplateList:
      description: PodTemplateList is a list of PodTemplates.
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
          type: string
        items:
          description: List of pod templates
          items:
            $ref: '#/components/schemas/v1.PodTemplate'
          type: array
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: '#/components/schemas/v1.ListMeta'
      required:
      - items
      type: object
    v1.PodTemplateSpec:
      description: PodTemplateSpec describes the data a pod should have when created
        from a template
      example:
        metadata:
          generation: 6
          finalizers:
          - finalizers
          - finalizers
          resourceVersion: resourceVersion
          annotations: "{}"
          generateName: generateName
          deletionTimestamp: deletionTimestamp
          labels: "{}"
          ownerReferences:
          - uid: uid
            controller: true
            apiVersion: apiVersion
            kind: kind
            name: name
            blockOwnerDeletion: true
          - uid: uid
            controller: true
            apiVersion: apiVersion
            kind: kind
            name: name
            blockOwnerDeletion: true
          selfLink: selfLink
          deletionGracePeriodSeconds: 0
          uid: uid
          initializers:
            result:
              reason: reason
              metadata:
                continue: continue
                resourceVersion: resourceVersion
                selfLink: selfLink
              apiVersion: apiVersion
              code: 1
              kind: kind
              details:
                uid: uid
                kind: kind
                causes:
                - reason: reason
                  field: field
                  message: message
                - reason: reason
                  field: field
                  message: message
                retryAfterSeconds: 5
                name: name
                group: group
              message: message
              status: status
            pending:
            - name: name
            - name: name
          clusterName: clusterName
          creationTimestamp: creationTimestamp
          name: name
          namespace: namespace
        spec:
          dnsPolicy: dnsPolicy
          nodeName: nodeName
          terminationGracePeriodSeconds: 1
          dnsConfig:
            searches:
            - searches
            - searches
            nameservers:
            - nameservers
            - nameservers
            options:
            - name: name
              value: value
            - name: name
              value: value
          hostNetwork: true
          readinessGates:
          - conditionType: conditionType
          - conditionType: conditionType
          serviceAccountName: serviceAccountName
          imagePullSecrets:
          - name: name
          - name: name
          priorityClassName: priorityClassName
          hostAliases:
          - ip: ip
            hostnames:
            - hostnames
            - hostnames
          - ip: ip
            hostnames:
            - hostnames
            - hostnames
          securityContext:
            runAsUser: 6
            seLinuxOptions:
              role: role
              level: level
              type: type
              user: user
            fsGroup: 1
            supplementalGroups:
            - 7
            - 7
            runAsGroup: 1
            runAsNonRoot: true
            sysctls:
            - name: name
              value: value
            - name: name
              value: value
          nodeSelector: "{}"
          hostname: hostname
          tolerations:
          - effect: effect
            tolerationSeconds: 4
            value: value
            key: key
            operator: operator
          - effect: effect
            tolerationSeconds: 4
            value: value
            key: key
            operator: operator
          automountServiceAccountToken: true
          schedulerName: schedulerName
          activeDeadlineSeconds: 0
          hostIPC: true
          volumes:
          - quobyte:
              volume: volume
              registry: registry
              readOnly: true
              user: user
              group: group
            azureFile:
              secretName: secretName
              readOnly: true
              shareName: shareName
            flexVolume:
              driver: driver
              options: "{}"
              secretRef:
                name: name
              readOnly: true
              fsType: fsType
            secret:
              secretName: secretName
              defaultMode: 2
              optional: true
              items:
              - mode: 9
                path: path
                key: key
              - mode: 9
                path: path
                key: key
            projected:
              sources:
              - downwardAPI:
                  items:
                  - mode: 8
                    path: path
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                  - mode: 8
                    path: path
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                configMap:
                  name: name
                  optional: true
                  items:
                  - mode: 9
                    path: path
                    key: key
                  - mode: 9
                    path: path
                    key: key
                secret:
                  name: name
                  optional: true
                  items:
                  - mode: 9
                    path: path
                    key: key
                  - mode: 9
                    path: path
                    key: key
                serviceAccountToken:
                  path: path
                  audience: audience
                  expirationSeconds: 1
              - downwardAPI:
                  items:
                  - mode: 8
                    path: path
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                  - mode: 8
                    path: path
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                configMap:
                  name: name
                  optional: true
                  items:
                  - mode: 9
                    path: path
                    key: key
                  - mode: 9
                    path: path
                    key: key
                secret:
                  name: name
                  optional: true
                  items:
                  - mode: 9
                    path: path
                    key: key
                  - mode: 9
                    path: path
                    key: key
                serviceAccountToken:
                  path: path
                  audience: audience
                  expirationSeconds: 1
              defaultMode: 6
            cephfs:
              path: path
              secretRef:
                name: name
              secretFile: secretFile
              readOnly: true
              user: user
              monitors:
              - monitors
              - monitors
            scaleIO:
              system: system
              protectionDomain: protectionDomain
              sslEnabled: true
              storageMode: storageMode
              volumeName: volumeName
              secretRef:
                name: name
              readOnly: true
              fsType: fsType
              storagePool: storagePool
              gateway: gateway
            emptyDir:
              sizeLimit: sizeLimit
              medium: medium
            glusterfs:
              path: path
              endpoints: endpoints
              readOnly: true
            gcePersistentDisk:
              partition: 6
              readOnly: true
              pdName: pdName
              fsType: fsType
            photonPersistentDisk:
              pdID: pdID
              fsType: fsType
            azureDisk:
              diskName: diskName
              kind: "{}"
              readOnly: true
              cachingMode: "{}"
              diskURI: diskURI
              fsType: fsType
            cinder:
              secretRef:
                name: name
              volumeID: volumeID
              readOnly: true
              fsType: fsType
            downwardAPI:
              defaultMode: 6
              items:
              - mode: 8
                path: path
                resourceFieldRef:
                  divisor: divisor
                  resource: resource
                  containerName: containerName
                fieldRef:
                  apiVersion: apiVersion
                  fieldPath: fieldPath
              - mode: 8
                path: path
                resourceFieldRef:
                  divisor: divisor
                  resource: resource
                  containerName: containerName
                fieldRef:
                  apiVersion: apiVersion
                  fieldPath: fieldPath
            awsElasticBlockStore:
              partition: 5
              volumeID: volumeID
              readOnly: true
              fsType: fsType
            flocker:
              datasetName: datasetName
              datasetUUID: datasetUUID
            iscsi:
              chapAuthSession: true
              iscsiInterface: iscsiInterface
              lun: 3
              chapAuthDiscovery: true
              iqn: iqn
              portals:
              - portals
              - portals
              secretRef:
                name: name
              initiatorName: initiatorName
              readOnly: true
              fsType: fsType
              targetPortal: targetPortal
            rbd:
              image: image
              pool: pool
              secretRef:
                name: name
              readOnly: true
              fsType: fsType
              keyring: keyring
              user: user
              monitors:
              - monitors
              - monitors
            configMap:
              defaultMode: 9
              name: name
              optional: true
              items:
              - mode: 9
                path: path
                key: key
              - mode: 9
                path: path
                key: key
            storageos:
              volumeNamespace: volumeNamespace
              volumeName: volumeName
              secretRef:
                name: name
              readOnly: true
              fsType: fsType
            name: name
            nfs:
              path: path
              server: server
              readOnly: true
            persistentVolumeClaim:
              claimName: claimName
              readOnly: true
            gitRepo:
              repository: repository
              directory: directory
              revision: revision
            portworxVolume:
              volumeID: volumeID
              readOnly: true
              fsType: fsType
            vsphereVolume:
              storagePolicyName: storagePolicyName
              storagePolicyID: storagePolicyID
              volumePath: volumePath
              fsType: fsType
            fc:
              lun: 9
              targetWWNs:
              - targetWWNs
              - targetWWNs
              readOnly: true
              wwids:
              - wwids
              - wwids
              fsType: fsType
            hostPath:
              path: path
              type: "{}"
          - quobyte:
              volume: volume
              registry: registry
              readOnly: true
              user: user
              group: group
            azureFile:
              secretName: secretName
              readOnly: true
              shareName: shareName
            flexVolume:
              driver: driver
              options: "{}"
              secretRef:
                name: name
              readOnly: true
              fsType: fsType
            secret:
              secretName: secretName
              defaultMode: 2
              optional: true
              items:
              - mode: 9
                path: path
                key: key
              - mode: 9
                path: path
                key: key
            projected:
              sources:
              - downwardAPI:
                  items:
                  - mode: 8
                    path: path
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                  - mode: 8
                    path: path
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                configMap:
                  name: name
                  optional: true
                  items:
                  - mode: 9
                    path: path
                    key: key
                  - mode: 9
                    path: path
                    key: key
                secret:
                  name: name
                  optional: true
                  items:
                  - mode: 9
                    path: path
                    key: key
                  - mode: 9
                    path: path
                    key: key
                serviceAccountToken:
                  path: path
                  audience: audience
                  expirationSeconds: 1
              - downwardAPI:
                  items:
                  - mode: 8
                    path: path
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                  - mode: 8
                    path: path
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                configMap:
                  name: name
                  optional: true
                  items:
                  - mode: 9
                    path: path
                    key: key
                  - mode: 9
                    path: path
                    key: key
                secret:
                  name: name
                  optional: true
                  items:
                  - mode: 9
                    path: path
                    key: key
                  - mode: 9
                    path: path
                    key: key
                serviceAccountToken:
                  path: path
                  audience: audience
                  expirationSeconds: 1
              defaultMode: 6
            cephfs:
              path: path
              secretRef:
                name: name
              secretFile: secretFile
              readOnly: true
              user: user
              monitors:
              - monitors
              - monitors
            scaleIO:
              system: system
              protectionDomain: protectionDomain
              sslEnabled: true
              storageMode: storageMode
              volumeName: volumeName
              secretRef:
                name: name
              readOnly: true
              fsType: fsType
              storagePool: storagePool
              gateway: gateway
            emptyDir:
              sizeLimit: sizeLimit
              medium: medium
            glusterfs:
              path: path
              endpoints: endpoints
              readOnly: true
            gcePersistentDisk:
              partition: 6
              readOnly: true
              pdName: pdName
              fsType: fsType
            photonPersistentDisk:
              pdID: pdID
              fsType: fsType
            azureDisk:
              diskName: diskName
              kind: "{}"
              readOnly: true
              cachingMode: "{}"
              diskURI: diskURI
              fsType: fsType
            cinder:
              secretRef:
                name: name
              volumeID: volumeID
              readOnly: true
              fsType: fsType
            downwardAPI:
              defaultMode: 6
              items:
              - mode: 8
                path: path
                resourceFieldRef:
                  divisor: divisor
                  resource: resource
                  containerName: containerName
                fieldRef:
                  apiVersion: apiVersion
                  fieldPath: fieldPath
              - mode: 8
                path: path
                resourceFieldRef:
                  divisor: divisor
                  resource: resource
                  containerName: containerName
                fieldRef:
                  apiVersion: apiVersion
                  fieldPath: fieldPath
            awsElasticBlockStore:
              partition: 5
              volumeID: volumeID
              readOnly: true
              fsType: fsType
            flocker:
              datasetName: datasetName
              datasetUUID: datasetUUID
            iscsi:
              chapAuthSession: true
              iscsiInterface: iscsiInterface
              lun: 3
              chapAuthDiscovery: true
              iqn: iqn
              portals:
              - portals
              - portals
              secretRef:
                name: name
              initiatorName: initiatorName
              readOnly: true
              fsType: fsType
              targetPortal: targetPortal
            rbd:
              image: image
              pool: pool
              secretRef:
                name: name
              readOnly: true
              fsType: fsType
              keyring: keyring
              user: user
              monitors:
              - monitors
              - monitors
            configMap:
              defaultMode: 9
              name: name
              optional: true
              items:
              - mode: 9
                path: path
                key: key
              - mode: 9
                path: path
                key: key
            storageos:
              volumeNamespace: volumeNamespace
              volumeName: volumeName
              secretRef:
                name: name
              readOnly: true
              fsType: fsType
            name: name
            nfs:
              path: path
              server: server
              readOnly: true
            persistentVolumeClaim:
              claimName: claimName
              readOnly: true
            gitRepo:
              repository: repository
              directory: directory
              revision: revision
            portworxVolume:
              volumeID: volumeID
              readOnly: true
              fsType: fsType
            vsphereVolume:
              storagePolicyName: storagePolicyName
              storagePolicyID: storagePolicyID
              volumePath: volumePath
              fsType: fsType
            fc:
              lun: 9
              targetWWNs:
              - targetWWNs
              - targetWWNs
              readOnly: true
              wwids:
              - wwids
              - wwids
              fsType: fsType
            hostPath:
              path: path
              type: "{}"
          serviceAccount: serviceAccount
          priority: 1
          restartPolicy: restartPolicy
          shareProcessNamespace: true
          subdomain: subdomain
          containers:
          - volumeDevices:
            - devicePath: devicePath
              name: name
            - devicePath: devicePath
              name: name
            image: image
            imagePullPolicy: imagePullPolicy
            livenessProbe:
              failureThreshold: 5
              periodSeconds: 2
              tcpSocket:
                port: port
                host: host
              timeoutSeconds: 9
              successThreshold: 7
              initialDelaySeconds: 5
              exec:
                command:
                - command
                - command
              httpGet:
                path: path
                scheme: scheme
                port: port
                host: host
                httpHeaders:
                - name: name
                  value: value
                - name: name
                  value: value
            stdin: true
            terminationMessagePolicy: terminationMessagePolicy
            terminationMessagePath: terminationMessagePath
            workingDir: workingDir
            resources:
              requests: "{}"
              limits: "{}"
            securityContext:
              privileged: true
              runAsUser: 7
              capabilities:
                add:
                - "{}"
                - "{}"
                drop:
                - "{}"
                - "{}"
              seLinuxOptions:
                role: role
                level: level
                type: type
                user: user
              allowPrivilegeEscalation: true
              runAsGroup: 4
              runAsNonRoot: true
              readOnlyRootFilesystem: true
            env:
            - name: name
              value: value
              valueFrom:
                secretKeyRef:
                  name: name
                  optional: true
                  key: key
                resourceFieldRef:
                  divisor: divisor
                  resource: resource
                  containerName: containerName
                configMapKeyRef:
                  name: name
                  optional: true
                  key: key
                fieldRef:
                  apiVersion: apiVersion
                  fieldPath: fieldPath
            - name: name
              value: value
              valueFrom:
                secretKeyRef:
                  name: name
                  optional: true
                  key: key
                resourceFieldRef:
                  divisor: divisor
                  resource: resource
                  containerName: containerName
                configMapKeyRef:
                  name: name
                  optional: true
                  key: key
                fieldRef:
                  apiVersion: apiVersion
                  fieldPath: fieldPath
            ports:
            - protocol: protocol
              hostIP: hostIP
              name: name
              containerPort: 3
              hostPort: 2
            - protocol: protocol
              hostIP: hostIP
              name: name
              containerPort: 3
              hostPort: 2
            command:
            - command
            - command
            volumeMounts:
            - mountPath: mountPath
              mountPropagation: "{}"
              name: name
              readOnly: true
              subPath: subPath
            - mountPath: mountPath
              mountPropagation: "{}"
              name: name
              readOnly: true
              subPath: subPath
            args:
            - args
            - args
            lifecycle:
              postStart:
                tcpSocket:
                  port: port
                  host: host
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: port
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              preStop:
                tcpSocket:
                  port: port
                  host: host
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: port
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
            name: name
            tty: true
            readinessProbe:
              failureThreshold: 5
              periodSeconds: 2
              tcpSocket:
                port: port
                host: host
              timeoutSeconds: 9
              successThreshold: 7
              initialDelaySeconds: 5
              exec:
                command:
                - command
                - command
              httpGet:
                path: path
                scheme: scheme
                port: port
                host: host
                httpHeaders:
                - name: name
                  value: value
                - name: name
                  value: value
            stdinOnce: true
            envFrom:
            - configMapRef:
                name: name
                optional: true
              prefix: prefix
              secretRef:
                name: name
                optional: true
            - configMapRef:
                name: name
                optional: true
              prefix: prefix
              secretRef:
                name: name
                optional: true
          - volumeDevices:
            - devicePath: devicePath
              name: name
            - devicePath: devicePath
              name: name
            image: image
            imagePullPolicy: imagePullPolicy
            livenessProbe:
              failureThreshold: 5
              periodSeconds: 2
              tcpSocket:
                port: port
                host: host
              timeoutSeconds: 9
              successThreshold: 7
              initialDelaySeconds: 5
              exec:
                command:
                - command
                - command
              httpGet:
                path: path
                scheme: scheme
                port: port
                host: host
                httpHeaders:
                - name: name
                  value: value
                - name: name
                  value: value
            stdin: true
            terminationMessagePolicy: terminationMessagePolicy
            terminationMessagePath: terminationMessagePath
            workingDir: workingDir
            resources:
              requests: "{}"
              limits: "{}"
            securityContext:
              privileged: true
              runAsUser: 7
              capabilities:
                add:
                - "{}"
                - "{}"
                drop:
                - "{}"
                - "{}"
              seLinuxOptions:
                role: role
                level: level
                type: type
                user: user
              allowPrivilegeEscalation: true
              runAsGroup: 4
              runAsNonRoot: true
              readOnlyRootFilesystem: true
            env:
            - name: name
              value: value
              valueFrom:
                secretKeyRef:
                  name: name
                  optional: true
                  key: key
                resourceFieldRef:
                  divisor: divisor
                  resource: resource
                  containerName: containerName
                configMapKeyRef:
                  name: name
                  optional: true
                  key: key
                fieldRef:
                  apiVersion: apiVersion
                  fieldPath: fieldPath
            - name: name
              value: value
              valueFrom:
                secretKeyRef:
                  name: name
                  optional: true
                  key: key
                resourceFieldRef:
                  divisor: divisor
                  resource: resource
                  containerName: containerName
                configMapKeyRef:
                  name: name
                  optional: true
                  key: key
                fieldRef:
                  apiVersion: apiVersion
                  fieldPath: fieldPath
            ports:
            - protocol: protocol
              hostIP: hostIP
              name: name
              containerPort: 3
              hostPort: 2
            - protocol: protocol
              hostIP: hostIP
              name: name
              containerPort: 3
              hostPort: 2
            command:
            - command
            - command
            volumeMounts:
            - mountPath: mountPath
              mountPropagation: "{}"
              name: name
              readOnly: true
              subPath: subPath
            - mountPath: mountPath
              mountPropagation: "{}"
              name: name
              readOnly: true
              subPath: subPath
            args:
            - args
            - args
            lifecycle:
              postStart:
                tcpSocket:
                  port: port
                  host: host
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: port
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              preStop:
                tcpSocket:
                  port: port
                  host: host
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: port
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
            name: name
            tty: true
            readinessProbe:
              failureThreshold: 5
              periodSeconds: 2
              tcpSocket:
                port: port
                host: host
              timeoutSeconds: 9
              successThreshold: 7
              initialDelaySeconds: 5
              exec:
                command:
                - command
                - command
              httpGet:
                path: path
                scheme: scheme
                port: port
                host: host
                httpHeaders:
                - name: name
                  value: value
                - name: name
                  value: value
            stdinOnce: true
            envFrom:
            - configMapRef:
                name: name
                optional: true
              prefix: prefix
              secretRef:
                name: name
                optional: true
            - configMapRef:
                name: name
                optional: true
              prefix: prefix
              secretRef:
                name: name
                optional: true
          initContainers:
          - volumeDevices:
            - devicePath: devicePath
              name: name
            - devicePath: devicePath
              name: name
            image: image
            imagePullPolicy: imagePullPolicy
            livenessProbe:
              failureThreshold: 5
              periodSeconds: 2
              tcpSocket:
                port: port
                host: host
              timeoutSeconds: 9
              successThreshold: 7
              initialDelaySeconds: 5
              exec:
                command:
                - command
                - command
              httpGet:
                path: path
                scheme: scheme
                port: port
                host: host
                httpHeaders:
                - name: name
                  value: value
                - name: name
                  value: value
            stdin: true
            terminationMessagePolicy: terminationMessagePolicy
            terminationMessagePath: terminationMessagePath
            workingDir: workingDir
            resources:
              requests: "{}"
              limits: "{}"
            securityContext:
              privileged: true
              runAsUser: 7
              capabilities:
                add:
                - "{}"
                - "{}"
                drop:
                - "{}"
                - "{}"
              seLinuxOptions:
                role: role
                level: level
                type: type
                user: user
              allowPrivilegeEscalation: true
              runAsGroup: 4
              runAsNonRoot: true
              readOnlyRootFilesystem: true
            env:
            - name: name
              value: value
              valueFrom:
                secretKeyRef:
                  name: name
                  optional: true
                  key: key
                resourceFieldRef:
                  divisor: divisor
                  resource: resource
                  containerName: containerName
                configMapKeyRef:
                  name: name
                  optional: true
                  key: key
                fieldRef:
                  apiVersion: apiVersion
                  fieldPath: fieldPath
            - name: name
              value: value
              valueFrom:
                secretKeyRef:
                  name: name
                  optional: true
                  key: key
                resourceFieldRef:
                  divisor: divisor
                  resource: resource
                  containerName: containerName
                configMapKeyRef:
                  name: name
                  optional: true
                  key: key
                fieldRef:
                  apiVersion: apiVersion
                  fieldPath: fieldPath
            ports:
            - protocol: protocol
              hostIP: hostIP
              name: name
              containerPort: 3
              hostPort: 2
            - protocol: protocol
              hostIP: hostIP
              name: name
              containerPort: 3
              hostPort: 2
            command:
            - command
            - command
            volumeMounts:
            - mountPath: mountPath
              mountPropagation: "{}"
              name: name
              readOnly: true
              subPath: subPath
            - mountPath: mountPath
              mountPropagation: "{}"
              name: name
              readOnly: true
              subPath: subPath
            args:
            - args
            - args
            lifecycle:
              postStart:
                tcpSocket:
                  port: port
                  host: host
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: port
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              preStop:
                tcpSocket:
                  port: port
                  host: host
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: port
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
            name: name
            tty: true
            readinessProbe:
              failureThreshold: 5
              periodSeconds: 2
              tcpSocket:
                port: port
                host: host
              timeoutSeconds: 9
              successThreshold: 7
              initialDelaySeconds: 5
              exec:
                command:
                - command
                - command
              httpGet:
                path: path
                scheme: scheme
                port: port
                host: host
                httpHeaders:
                - name: name
                  value: value
                - name: name
                  value: value
            stdinOnce: true
            envFrom:
            - configMapRef:
                name: name
                optional: true
              prefix: prefix
              secretRef:
                name: name
                optional: true
            - configMapRef:
                name: name
                optional: true
              prefix: prefix
              secretRef:
                name: name
                optional: true
          - volumeDevices:
            - devicePath: devicePath
              name: name
            - devicePath: devicePath
              name: name
            image: image
            imagePullPolicy: imagePullPolicy
            livenessProbe:
              failureThreshold: 5
              periodSeconds: 2
              tcpSocket:
                port: port
                host: host
              timeoutSeconds: 9
              successThreshold: 7
              initialDelaySeconds: 5
              exec:
                command:
                - command
                - command
              httpGet:
                path: path
                scheme: scheme
                port: port
                host: host
                httpHeaders:
                - name: name
                  value: value
                - name: name
                  value: value
            stdin: true
            terminationMessagePolicy: terminationMessagePolicy
            terminationMessagePath: terminationMessagePath
            workingDir: workingDir
            resources:
              requests: "{}"
              limits: "{}"
            securityContext:
              privileged: true
              runAsUser: 7
              capabilities:
                add:
                - "{}"
                - "{}"
                drop:
                - "{}"
                - "{}"
              seLinuxOptions:
                role: role
                level: level
                type: type
                user: user
              allowPrivilegeEscalation: true
              runAsGroup: 4
              runAsNonRoot: true
              readOnlyRootFilesystem: true
            env:
            - name: name
              value: value
              valueFrom:
                secretKeyRef:
                  name: name
                  optional: true
                  key: key
                resourceFieldRef:
                  divisor: divisor
                  resource: resource
                  containerName: containerName
                configMapKeyRef:
                  name: name
                  optional: true
                  key: key
                fieldRef:
                  apiVersion: apiVersion
                  fieldPath: fieldPath
            - name: name
              value: value
              valueFrom:
                secretKeyRef:
                  name: name
                  optional: true
                  key: key
                resourceFieldRef:
                  divisor: divisor
                  resource: resource
                  containerName: containerName
                configMapKeyRef:
                  name: name
                  optional: true
                  key: key
                fieldRef:
                  apiVersion: apiVersion
                  fieldPath: fieldPath
            ports:
            - protocol: protocol
              hostIP: hostIP
              name: name
              containerPort: 3
              hostPort: 2
            - protocol: protocol
              hostIP: hostIP
              name: name
              containerPort: 3
              hostPort: 2
            command:
            - command
            - command
            volumeMounts:
            - mountPath: mountPath
              mountPropagation: "{}"
              name: name
              readOnly: true
              subPath: subPath
            - mountPath: mountPath
              mountPropagation: "{}"
              name: name
              readOnly: true
              subPath: subPath
            args:
            - args
            - args
            lifecycle:
              postStart:
                tcpSocket:
                  port: port
                  host: host
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: port
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              preStop:
                tcpSocket:
                  port: port
                  host: host
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: port
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
            name: name
            tty: true
            readinessProbe:
              failureThreshold: 5
              periodSeconds: 2
              tcpSocket:
                port: port
                host: host
              timeoutSeconds: 9
              successThreshold: 7
              initialDelaySeconds: 5
              exec:
                command:
                - command
                - command
              httpGet:
                path: path
                scheme: scheme
                port: port
                host: host
                httpHeaders:
                - name: name
                  value: value
                - name: name
                  value: value
            stdinOnce: true
            envFrom:
            - configMapRef:
                name: name
                optional: true
              prefix: prefix
              secretRef:
                name: name
                optional: true
            - configMapRef:
                name: name
                optional: true
              prefix: prefix
              secretRef:
                name: name
                optional: true
          affinity:
            nodeAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
                nodeSelectorTerms:
                - matchExpressions:
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  matchFields:
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                - matchExpressions:
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  matchFields:
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
              preferredDuringSchedulingIgnoredDuringExecution:
              - preference:
                  matchExpressions:
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  matchFields:
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                weight: 6
              - preference:
                  matchExpressions:
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  matchFields:
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                weight: 6
            podAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
              - labelSelector:
                  matchExpressions:
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  matchLabels: "{}"
                topologyKey: topologyKey
                namespaces:
                - namespaces
                - namespaces
              - labelSelector:
                  matchExpressions:
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  matchLabels: "{}"
                topologyKey: topologyKey
                namespaces:
                - namespaces
                - namespaces
              preferredDuringSchedulingIgnoredDuringExecution:
              - podAffinityTerm:
                  labelSelector:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchLabels: "{}"
                  topologyKey: topologyKey
                  namespaces:
                  - namespaces
                  - namespaces
                weight: 1
              - podAffinityTerm:
                  labelSelector:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchLabels: "{}"
                  topologyKey: topologyKey
                  namespaces:
                  - namespaces
                  - namespaces
                weight: 1
            podAntiAffinity:
              requiredDuringSchedulingIgnoredDuringExecution:
              - labelSelector:
                  matchExpressions:
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  matchLabels: "{}"
                topologyKey: topologyKey
                namespaces:
                - namespaces
                - namespaces
              - labelSelector:
                  matchExpressions:
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  matchLabels: "{}"
                topologyKey: topologyKey
                namespaces:
                - namespaces
                - namespaces
              preferredDuringSchedulingIgnoredDuringExecution:
              - podAffinityTerm:
                  labelSelector:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchLabels: "{}"
                  topologyKey: topologyKey
                  namespaces:
                  - namespaces
                  - namespaces
                weight: 1
              - podAffinityTerm:
                  labelSelector:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchLabels: "{}"
                  topologyKey: topologyKey
                  namespaces:
                  - namespaces
                  - namespaces
                weight: 1
          hostPID: true
      properties:
        metadata:
          $ref: '#/components/schemas/v1.ObjectMeta'
        spec:
          $ref: '#/components/schemas/v1.PodSpec'
      type: object
    v1.PortworxVolumeSource:
      description: PortworxVolumeSource represents a Portworx volume resource.
      example:
        volumeID: volumeID
        readOnly: true
        fsType: fsType
      properties:
        fsType:
          description: "FSType represents the filesystem type to mount Must be a filesystem\
            \ type supported by the host operating system. Ex. \"ext4\", \"xfs\".\
            \ Implicitly inferred to be \"ext4\" if unspecified."
          type: string
        readOnly:
          description: Defaults to false (read/write). ReadOnly here will force the
            ReadOnly setting in VolumeMounts.
          type: boolean
        volumeID:
          description: VolumeID uniquely identifies a Portworx volume
          type: string
      required:
      - volumeID
      type: object
    v1.Preconditions:
      description: "Preconditions must be fulfilled before an operation (update, delete,\
        \ etc.) is carried out."
      properties:
        uid:
          $ref: '#/components/schemas/types.UID'
      type: object
    v1.PreferredSchedulingTerm:
      description: An empty preferred scheduling term matches all objects with implicit
        weight 0 (i.e. it's a no-op). A null preferred scheduling term matches no
        objects (i.e. is also a no-op).
      example:
        preference:
          matchExpressions:
          - values:
            - values
            - values
            key: key
            operator: operator
          - values:
            - values
            - values
            key: key
            operator: operator
          matchFields:
          - values:
            - values
            - values
            key: key
            operator: operator
          - values:
            - values
            - values
            key: key
            operator: operator
        weight: 6
      properties:
        preference:
          $ref: '#/components/schemas/v1.NodeSelectorTerm'
        weight:
          description: "Weight associated with matching the corresponding nodeSelectorTerm,\
            \ in the range 1-100."
          format: int32
          type: integer
      required:
      - preference
      - weight
      type: object
    v1.Probe:
      description: Probe describes a health check to be performed against a container
        to determine whether it is alive or ready to receive traffic.
      example:
        failureThreshold: 5
        periodSeconds: 2
        tcpSocket:
          port: port
          host: host
        timeoutSeconds: 9
        successThreshold: 7
        initialDelaySeconds: 5
        exec:
          command:
          - command
          - command
        httpGet:
          path: path
          scheme: scheme
          port: port
          host: host
          httpHeaders:
          - name: name
            value: value
          - name: name
            value: value
      properties:
        exec:
          $ref: '#/components/schemas/v1.ExecAction'
        failureThreshold:
          description: Minimum consecutive failures for the probe to be considered
            failed after having succeeded. Defaults to 3. Minimum value is 1.
          format: int32
          type: integer
        httpGet:
          $ref: '#/components/schemas/v1.HTTPGetAction'
        initialDelaySeconds:
          description: "Number of seconds after the container has started before liveness\
            \ probes are initiated. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
          format: int32
          type: integer
        periodSeconds:
          description: How often (in seconds) to perform the probe. Default to 10
            seconds. Minimum value is 1.
          format: int32
          type: integer
        successThreshold:
          description: Minimum consecutive successes for the probe to be considered
            successful after having failed. Defaults to 1. Must be 1 for liveness.
            Minimum value is 1.
          format: int32
          type: integer
        tcpSocket:
          $ref: '#/components/schemas/v1.TCPSocketAction'
        timeoutSeconds:
          description: "Number of seconds after which the probe times out. Defaults\
            \ to 1 second. Minimum value is 1. More info: https://kubernetes.io/docs/concepts/workloads/pods/pod-lifecycle#container-probes"
          format: int32
          type: integer
      type: object
    v1.ProjectedVolumeSource:
      description: Represents a projected volume source
      example:
        sources:
        - downwardAPI:
            items:
            - mode: 8
              path: path
              resourceFieldRef:
                divisor: divisor
                resource: resource
                containerName: containerName
              fieldRef:
                apiVersion: apiVersion
                fieldPath: fieldPath
            - mode: 8
              path: path
              resourceFieldRef:
                divisor: divisor
                resource: resource
                containerName: containerName
              fieldRef:
                apiVersion: apiVersion
                fieldPath: fieldPath
          configMap:
            name: name
            optional: true
            items:
            - mode: 9
              path: path
              key: key
            - mode: 9
              path: path
              key: key
          secret:
            name: name
            optional: true
            items:
            - mode: 9
              path: path
              key: key
            - mode: 9
              path: path
              key: key
          serviceAccountToken:
            path: path
            audience: audience
            expirationSeconds: 1
        - downwardAPI:
            items:
            - mode: 8
              path: path
              resourceFieldRef:
                divisor: divisor
                resource: resource
                containerName: containerName
              fieldRef:
                apiVersion: apiVersion
                fieldPath: fieldPath
            - mode: 8
              path: path
              resourceFieldRef:
                divisor: divisor
                resource: resource
                containerName: containerName
              fieldRef:
                apiVersion: apiVersion
                fieldPath: fieldPath
          configMap:
            name: name
            optional: true
            items:
            - mode: 9
              path: path
              key: key
            - mode: 9
              path: path
              key: key
          secret:
            name: name
            optional: true
            items:
            - mode: 9
              path: path
              key: key
            - mode: 9
              path: path
              key: key
          serviceAccountToken:
            path: path
            audience: audience
            expirationSeconds: 1
        defaultMode: 6
      properties:
        defaultMode:
          description: "Mode bits to use on created files by default. Must be a value\
            \ between 0 and 0777. Directories within the path are not affected by\
            \ this setting. This might be in conflict with other options that affect\
            \ the file mode, like fsGroup, and the result can be other mode bits set."
          format: int32
          type: integer
        sources:
          description: list of volume projections
          items:
            $ref: '#/components/schemas/v1.VolumeProjection'
          type: array
      required:
      - sources
      type: object
    v1.QuobyteVolumeSource:
      description: Represents a Quobyte mount that lasts the lifetime of a pod. Quobyte
        volumes do not support ownership management or SELinux relabeling.
      example:
        volume: volume
        registry: registry
        readOnly: true
        user: user
        group: group
      properties:
        group:
          description: Group to map volume access to Default is no group
          type: string
        readOnly:
          description: ReadOnly here will force the Quobyte volume to be mounted with
            read-only permissions. Defaults to false.
          type: boolean
        registry:
          description: Registry represents a single or multiple Quobyte Registry services
            specified as a string as host:port pair (multiple entries are separated
            with commas) which acts as the central registry for volumes
          type: string
        user:
          description: User to map volume access to Defaults to serivceaccount user
          type: string
        volume:
          description: Volume is a string that references an already created Quobyte
            volume by name.
          type: string
      required:
      - registry
      - volume
      type: object
    v1.RBDPersistentVolumeSource:
      description: Represents a Rados Block Device mount that lasts the lifetime of
        a pod. RBD volumes support ownership management and SELinux relabeling.
      properties:
        fsType:
          description: "Filesystem type of the volume that you want to mount. Tip:\
            \ Ensure that the filesystem type is supported by the host operating system.\
            \ Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"\
            ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd"
          type: string
        image:
          description: "The rados image name. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it"
          type: string
        keyring:
          description: "Keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring.\
            \ More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it"
          type: string
        monitors:
          description: "A collection of Ceph monitors. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it"
          items:
            type: string
          type: array
        pool:
          description: "The rados pool name. Default is rbd. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it"
          type: string
        readOnly:
          description: "ReadOnly here will force the ReadOnly setting in VolumeMounts.\
            \ Defaults to false. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it"
          type: boolean
        secretRef:
          $ref: '#/components/schemas/v1.SecretReference'
        user:
          description: "The rados user name. Default is admin. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it"
          type: string
      required:
      - image
      - monitors
      type: object
    v1.RBDVolumeSource:
      description: Represents a Rados Block Device mount that lasts the lifetime of
        a pod. RBD volumes support ownership management and SELinux relabeling.
      example:
        image: image
        pool: pool
        secretRef:
          name: name
        readOnly: true
        fsType: fsType
        keyring: keyring
        user: user
        monitors:
        - monitors
        - monitors
      properties:
        fsType:
          description: "Filesystem type of the volume that you want to mount. Tip:\
            \ Ensure that the filesystem type is supported by the host operating system.\
            \ Examples: \"ext4\", \"xfs\", \"ntfs\". Implicitly inferred to be \"\
            ext4\" if unspecified. More info: https://kubernetes.io/docs/concepts/storage/volumes#rbd"
          type: string
        image:
          description: "The rados image name. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it"
          type: string
        keyring:
          description: "Keyring is the path to key ring for RBDUser. Default is /etc/ceph/keyring.\
            \ More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it"
          type: string
        monitors:
          description: "A collection of Ceph monitors. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it"
          items:
            type: string
          type: array
        pool:
          description: "The rados pool name. Default is rbd. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it"
          type: string
        readOnly:
          description: "ReadOnly here will force the ReadOnly setting in VolumeMounts.\
            \ Defaults to false. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it"
          type: boolean
        secretRef:
          $ref: '#/components/schemas/v1.LocalObjectReference'
        user:
          description: "The rados user name. Default is admin. More info: https://releases.k8s.io/HEAD/examples/volumes/rbd/README.md#how-to-use-it"
          type: string
      required:
      - image
      - monitors
      type: object
    v1.ReplicationController:
      description: ReplicationController represents the configuration of a replication
        controller.
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
          type: string
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: '#/components/schemas/v1.ObjectMeta'
        spec:
          $ref: '#/components/schemas/v1.ReplicationControllerSpec'
        status:
          $ref: '#/components/schemas/v1.ReplicationControllerStatus'
      type: object
    v1.ReplicationControllerCondition:
      description: ReplicationControllerCondition describes the state of a replication
        controller at a certain point.
      properties:
        lastTransitionTime:
          description: The last time the condition transitioned from one status to
            another.
          type: string
        message:
          description: A human readable message indicating details about the transition.
          type: string
        reason:
          description: The reason for the condition's last transition.
          type: string
        status:
          description: "Status of the condition, one of True, False, Unknown."
          type: string
        type:
          description: Type of replication controller condition.
          type: string
      required:
      - status
      - type
      type: object
    v1.ReplicationControllerList:
      description: ReplicationControllerList is a collection of replication controllers.
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
          type: string
        items:
          description: "List of replication controllers. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller"
          items:
            $ref: '#/components/schemas/v1.ReplicationController'
          type: array
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: '#/components/schemas/v1.ListMeta'
      required:
      - items
      type: object
    v1.ReplicationControllerSpec:
      description: ReplicationControllerSpec is the specification of a replication
        controller.
      properties:
        minReadySeconds:
          description: "Minimum number of seconds for which a newly created pod should\
            \ be ready without any of its container crashing, for it to be considered\
            \ available. Defaults to 0 (pod will be considered available as soon as\
            \ it is ready)"
          format: int32
          type: integer
        replicas:
          description: "Replicas is the number of desired replicas. This is a pointer\
            \ to distinguish between explicit zero and unspecified. Defaults to 1.\
            \ More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller#what-is-a-replicationcontroller"
          format: int32
          type: integer
        selector:
          description: "Selector is a label query over pods that should match the\
            \ Replicas count. If Selector is empty, it is defaulted to the labels\
            \ present on the Pod template. Label keys and values that must match in\
            \ order to be controlled by this replication controller, if empty defaulted\
            \ to labels on Pod template. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors"
          properties: {}
          type: object
        template:
          $ref: '#/components/schemas/v1.PodTemplateSpec'
      type: object
    v1.ReplicationControllerStatus:
      description: ReplicationControllerStatus represents the current status of a
        replication controller.
      properties:
        availableReplicas:
          description: The number of available replicas (ready for at least minReadySeconds)
            for this replication controller.
          format: int32
          type: integer
        conditions:
          description: Represents the latest available observations of a replication
            controller's current state.
          items:
            $ref: '#/components/schemas/v1.ReplicationControllerCondition'
          type: array
        fullyLabeledReplicas:
          description: The number of pods that have labels matching the labels of
            the pod template of the replication controller.
          format: int32
          type: integer
        observedGeneration:
          description: ObservedGeneration reflects the generation of the most recently
            observed replication controller.
          format: int64
          type: integer
        readyReplicas:
          description: The number of ready replicas for this replication controller.
          format: int32
          type: integer
        replicas:
          description: "Replicas is the most recently oberved number of replicas.\
            \ More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller#what-is-a-replicationcontroller"
          format: int32
          type: integer
      required:
      - replicas
      type: object
    v1.ResourceFieldSelector:
      description: "ResourceFieldSelector represents container resources (cpu, memory)\
        \ and their output format"
      example:
        divisor: divisor
        resource: resource
        containerName: containerName
      properties:
        containerName:
          description: "Container name: required for volumes, optional for env vars"
          type: string
        divisor:
          description: "Specifies the output format of the exposed resources, defaults\
            \ to \"1\""
          type: string
        resource:
          description: "Required: resource to select"
          type: string
      required:
      - resource
      type: object
    v1.ResourceQuota:
      description: ResourceQuota sets aggregate quota restrictions enforced per namespace
      example:
        metadata:
          generation: 6
          finalizers:
          - finalizers
          - finalizers
          resourceVersion: resourceVersion
          annotations: "{}"
          generateName: generateName
          deletionTimestamp: deletionTimestamp
          labels: "{}"
          ownerReferences:
          - uid: uid
            controller: true
            apiVersion: apiVersion
            kind: kind
            name: name
            blockOwnerDeletion: true
          - uid: uid
            controller: true
            apiVersion: apiVersion
            kind: kind
            name: name
            blockOwnerDeletion: true
          selfLink: selfLink
          deletionGracePeriodSeconds: 0
          uid: uid
          initializers:
            result:
              reason: reason
              metadata:
                continue: continue
                resourceVersion: resourceVersion
                selfLink: selfLink
              apiVersion: apiVersion
              code: 1
              kind: kind
              details:
                uid: uid
                kind: kind
                causes:
                - reason: reason
                  field: field
                  message: message
                - reason: reason
                  field: field
                  message: message
                retryAfterSeconds: 5
                name: name
                group: group
              message: message
              status: status
            pending:
            - name: name
            - name: name
          clusterName: clusterName
          creationTimestamp: creationTimestamp
          name: name
          namespace: namespace
        apiVersion: apiVersion
        kind: kind
        spec:
          scopeSelector:
            matchExpressions:
            - scopeName: scopeName
              values:
              - values
              - values
              operator: operator
            - scopeName: scopeName
              values:
              - values
              - values
              operator: operator
          hard: "{}"
          scopes:
          - "{}"
          - "{}"
        status:
          hard: "{}"
          used: "{}"
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
          type: string
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: '#/components/schemas/v1.ObjectMeta'
        spec:
          $ref: '#/components/schemas/v1.ResourceQuotaSpec'
        status:
          $ref: '#/components/schemas/v1.ResourceQuotaStatus'
      type: object
    v1.ResourceQuotaList:
      description: ResourceQuotaList is a list of ResourceQuota items.
      example:
        metadata:
          continue: continue
          resourceVersion: resourceVersion
          selfLink: selfLink
        apiVersion: apiVersion
        kind: kind
        items:
        - metadata:
            generation: 6
            finalizers:
            - finalizers
            - finalizers
            resourceVersion: resourceVersion
            annotations: "{}"
            generateName: generateName
            deletionTimestamp: deletionTimestamp
            labels: "{}"
            ownerReferences:
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            selfLink: selfLink
            deletionGracePeriodSeconds: 0
            uid: uid
            initializers:
              result:
                reason: reason
                metadata:
                  continue: continue
                  resourceVersion: resourceVersion
                  selfLink: selfLink
                apiVersion: apiVersion
                code: 1
                kind: kind
                details:
                  uid: uid
                  kind: kind
                  causes:
                  - reason: reason
                    field: field
                    message: message
                  - reason: reason
                    field: field
                    message: message
                  retryAfterSeconds: 5
                  name: name
                  group: group
                message: message
                status: status
              pending:
              - name: name
              - name: name
            clusterName: clusterName
            creationTimestamp: creationTimestamp
            name: name
            namespace: namespace
          apiVersion: apiVersion
          kind: kind
          spec:
            scopeSelector:
              matchExpressions:
              - scopeName: scopeName
                values:
                - values
                - values
                operator: operator
              - scopeName: scopeName
                values:
                - values
                - values
                operator: operator
            hard: "{}"
            scopes:
            - "{}"
            - "{}"
          status:
            hard: "{}"
            used: "{}"
        - metadata:
            generation: 6
            finalizers:
            - finalizers
            - finalizers
            resourceVersion: resourceVersion
            annotations: "{}"
            generateName: generateName
            deletionTimestamp: deletionTimestamp
            labels: "{}"
            ownerReferences:
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            selfLink: selfLink
            deletionGracePeriodSeconds: 0
            uid: uid
            initializers:
              result:
                reason: reason
                metadata:
                  continue: continue
                  resourceVersion: resourceVersion
                  selfLink: selfLink
                apiVersion: apiVersion
                code: 1
                kind: kind
                details:
                  uid: uid
                  kind: kind
                  causes:
                  - reason: reason
                    field: field
                    message: message
                  - reason: reason
                    field: field
                    message: message
                  retryAfterSeconds: 5
                  name: name
                  group: group
                message: message
                status: status
              pending:
              - name: name
              - name: name
            clusterName: clusterName
            creationTimestamp: creationTimestamp
            name: name
            namespace: namespace
          apiVersion: apiVersion
          kind: kind
          spec:
            scopeSelector:
              matchExpressions:
              - scopeName: scopeName
                values:
                - values
                - values
                operator: operator
              - scopeName: scopeName
                values:
                - values
                - values
                operator: operator
            hard: "{}"
            scopes:
            - "{}"
            - "{}"
          status:
            hard: "{}"
            used: "{}"
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
          type: string
        items:
          description: "Items is a list of ResourceQuota objects. More info: https://kubernetes.io/docs/concepts/policy/resource-quotas/"
          items:
            $ref: '#/components/schemas/v1.ResourceQuota'
          type: array
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: '#/components/schemas/v1.ListMeta'
      required:
      - items
      type: object
    v1.ResourceQuotaSpec:
      description: ResourceQuotaSpec defines the desired hard limits to enforce for
        Quota.
      example:
        scopeSelector:
          matchExpressions:
          - scopeName: scopeName
            values:
            - values
            - values
            operator: operator
          - scopeName: scopeName
            values:
            - values
            - values
            operator: operator
        hard: "{}"
        scopes:
        - "{}"
        - "{}"
      properties:
        hard:
          description: "hard is the set of desired hard limits for each named resource.\
            \ More info: https://kubernetes.io/docs/concepts/policy/resource-quotas/"
          properties: {}
          type: object
        scopeSelector:
          $ref: '#/components/schemas/v1.ScopeSelector'
        scopes:
          description: "A collection of filters that must match each object tracked\
            \ by a quota. If not specified, the quota matches all objects."
          items:
            $ref: '#/components/schemas/v1.ResourceQuotaScope'
          type: array
      type: object
    v1.ResourceQuotaStatus:
      description: ResourceQuotaStatus defines the enforced hard limits and observed
        use.
      example:
        hard: "{}"
        used: "{}"
      properties:
        hard:
          description: "Hard is the set of enforced hard limits for each named resource.\
            \ More info: https://kubernetes.io/docs/concepts/policy/resource-quotas/"
          properties: {}
          type: object
        used:
          description: Used is the current observed total usage of the resource in
            the namespace.
          properties: {}
          type: object
      type: object
    v1.ResourceRequirements:
      description: ResourceRequirements describes the compute resource requirements.
      example:
        requests: "{}"
        limits: "{}"
      properties:
        limits:
          description: "Limits describes the maximum amount of compute resources allowed.\
            \ More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/"
          properties: {}
          type: object
        requests:
          description: "Requests describes the minimum amount of compute resources\
            \ required. If Requests is omitted for a container, it defaults to Limits\
            \ if that is explicitly specified, otherwise to an implementation-defined\
            \ value. More info: https://kubernetes.io/docs/concepts/configuration/manage-compute-resources-container/"
          properties: {}
          type: object
      type: object
    v1.RunAsUserStrategyOptions:
      description: RunAsUserStrategyOptions defines the strategy type and any options
        used to create the strategy.
      properties:
        type:
          description: Type is the strategy that will dictate what RunAsUser is used
            in the SecurityContext.
          type: string
        uid:
          description: UID is the user id that containers must run as.  Required for
            the MustRunAs strategy if not using namespace/service account allocated
            uids.
          format: int64
          type: integer
        uidRangeMax:
          description: UIDRangeMax defines the max value for a strategy that allocates
            by range.
          format: int64
          type: integer
        uidRangeMin:
          description: UIDRangeMin defines the min value for a strategy that allocates
            by range.
          format: int64
          type: integer
      type: object
    v1.SELinuxContextStrategyOptions:
      description: SELinuxContextStrategyOptions defines the strategy type and any
        options used to create the strategy.
      properties:
        seLinuxOptions:
          $ref: '#/components/schemas/v1.SELinuxOptions'
        type:
          description: Type is the strategy that will dictate what SELinux context
            is used in the SecurityContext.
          type: string
      type: object
    v1.SELinuxOptions:
      description: SELinuxOptions are the labels to be applied to the container
      example:
        role: role
        level: level
        type: type
        user: user
      properties:
        level:
          description: Level is SELinux level label that applies to the container.
          type: string
        role:
          description: Role is a SELinux role label that applies to the container.
          type: string
        type:
          description: Type is a SELinux type label that applies to the container.
          type: string
        user:
          description: User is a SELinux user label that applies to the container.
          type: string
      type: object
    v1.Scale:
      description: Scale represents a scaling request for a resource.
      example:
        metadata:
          generation: 6
          finalizers:
          - finalizers
          - finalizers
          resourceVersion: resourceVersion
          annotations: "{}"
          generateName: generateName
          deletionTimestamp: deletionTimestamp
          labels: "{}"
          ownerReferences:
          - uid: uid
            controller: true
            apiVersion: apiVersion
            kind: kind
            name: name
            blockOwnerDeletion: true
          - uid: uid
            controller: true
            apiVersion: apiVersion
            kind: kind
            name: name
            blockOwnerDeletion: true
          selfLink: selfLink
          deletionGracePeriodSeconds: 0
          uid: uid
          initializers:
            result:
              reason: reason
              metadata:
                continue: continue
                resourceVersion: resourceVersion
                selfLink: selfLink
              apiVersion: apiVersion
              code: 1
              kind: kind
              details:
                uid: uid
                kind: kind
                causes:
                - reason: reason
                  field: field
                  message: message
                - reason: reason
                  field: field
                  message: message
                retryAfterSeconds: 5
                name: name
                group: group
              message: message
              status: status
            pending:
            - name: name
            - name: name
          clusterName: clusterName
          creationTimestamp: creationTimestamp
          name: name
          namespace: namespace
        apiVersion: apiVersion
        kind: kind
        spec:
          replicas: 0
        status:
          replicas: 6
          selector: selector
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
          type: string
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: '#/components/schemas/v1.ObjectMeta'
        spec:
          $ref: '#/components/schemas/v1.ScaleSpec'
        status:
          $ref: '#/components/schemas/v1.ScaleStatus'
      type: object
    v1.ScaleIOPersistentVolumeSource:
      description: ScaleIOPersistentVolumeSource represents a persistent ScaleIO volume
      properties:
        fsType:
          description: "Filesystem type to mount. Must be a filesystem type supported\
            \ by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly\
            \ inferred to be \"ext4\" if unspecified."
          type: string
        gateway:
          description: The host address of the ScaleIO API Gateway.
          type: string
        protectionDomain:
          description: The name of the ScaleIO Protection Domain for the configured
            storage.
          type: string
        readOnly:
          description: Defaults to false (read/write). ReadOnly here will force the
            ReadOnly setting in VolumeMounts.
          type: boolean
        secretRef:
          $ref: '#/components/schemas/v1.SecretReference'
        sslEnabled:
          description: "Flag to enable/disable SSL communication with Gateway, default\
            \ false"
          type: boolean
        storageMode:
          description: Indicates whether the storage for a volume should be ThickProvisioned
            or ThinProvisioned.
          type: string
        storagePool:
          description: The ScaleIO Storage Pool associated with the protection domain.
          type: string
        system:
          description: The name of the storage system as configured in ScaleIO.
          type: string
        volumeName:
          description: The name of a volume already created in the ScaleIO system
            that is associated with this volume source.
          type: string
      required:
      - gateway
      - secretRef
      - system
      type: object
    v1.ScaleIOVolumeSource:
      description: ScaleIOVolumeSource represents a persistent ScaleIO volume
      example:
        system: system
        protectionDomain: protectionDomain
        sslEnabled: true
        storageMode: storageMode
        volumeName: volumeName
        secretRef:
          name: name
        readOnly: true
        fsType: fsType
        storagePool: storagePool
        gateway: gateway
      properties:
        fsType:
          description: "Filesystem type to mount. Must be a filesystem type supported\
            \ by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly\
            \ inferred to be \"ext4\" if unspecified."
          type: string
        gateway:
          description: The host address of the ScaleIO API Gateway.
          type: string
        protectionDomain:
          description: The name of the ScaleIO Protection Domain for the configured
            storage.
          type: string
        readOnly:
          description: Defaults to false (read/write). ReadOnly here will force the
            ReadOnly setting in VolumeMounts.
          type: boolean
        secretRef:
          $ref: '#/components/schemas/v1.LocalObjectReference'
        sslEnabled:
          description: "Flag to enable/disable SSL communication with Gateway, default\
            \ false"
          type: boolean
        storageMode:
          description: Indicates whether the storage for a volume should be ThickProvisioned
            or ThinProvisioned.
          type: string
        storagePool:
          description: The ScaleIO Storage Pool associated with the protection domain.
          type: string
        system:
          description: The name of the storage system as configured in ScaleIO.
          type: string
        volumeName:
          description: The name of a volume already created in the ScaleIO system
            that is associated with this volume source.
          type: string
      required:
      - gateway
      - secretRef
      - system
      type: object
    v1.ScaleSpec:
      description: ScaleSpec describes the attributes of a scale subresource.
      example:
        replicas: 0
      properties:
        replicas:
          description: desired number of instances for the scaled object.
          format: int32
          type: integer
      type: object
    v1.ScaleStatus:
      description: ScaleStatus represents the current status of a scale subresource.
      example:
        replicas: 6
        selector: selector
      properties:
        replicas:
          description: actual number of observed instances of the scaled object.
          format: int32
          type: integer
        selector:
          description: "label query over pods that should match the replicas count.\
            \ This is same as the label selector but in the string format to avoid\
            \ introspection by clients. The string will be in the same format as the\
            \ query-param syntax. More info about label selectors: http://kubernetes.io/docs/user-guide/labels#label-selectors"
          type: string
      required:
      - replicas
      type: object
    v1.ScopeSelector:
      description: A scope selector represents the AND of the selectors represented
        by the scoped-resource selector requirements.
      example:
        matchExpressions:
        - scopeName: scopeName
          values:
          - values
          - values
          operator: operator
        - scopeName: scopeName
          values:
          - values
          - values
          operator: operator
      properties:
        matchExpressions:
          description: A list of scope selector requirements by scope of the resources.
          items:
            $ref: '#/components/schemas/v1.ScopedResourceSelectorRequirement'
          type: array
      type: object
    v1.ScopedResourceSelectorRequirement:
      description: "A scoped-resource selector requirement is a selector that contains\
        \ values, a scope name, and an operator that relates the scope name and values."
      example:
        scopeName: scopeName
        values:
        - values
        - values
        operator: operator
      properties:
        operator:
          description: "Represents a scope's relationship to a set of values. Valid\
            \ operators are In, NotIn, Exists, DoesNotExist."
          type: string
        scopeName:
          description: The name of the scope that the selector applies to.
          type: string
        values:
          description: "An array of string values. If the operator is In or NotIn,\
            \ the values array must be non-empty. If the operator is Exists or DoesNotExist,\
            \ the values array must be empty. This array is replaced during a strategic\
            \ merge patch."
          items:
            type: string
          type: array
      required:
      - operator
      - scopeName
      type: object
    v1.Secret:
      description: Secret holds secret data of a certain type. The total bytes of
        the values in the Data field must be less than MaxSecretSize bytes.
      example:
        metadata:
          generation: 6
          finalizers:
          - finalizers
          - finalizers
          resourceVersion: resourceVersion
          annotations: "{}"
          generateName: generateName
          deletionTimestamp: deletionTimestamp
          labels: "{}"
          ownerReferences:
          - uid: uid
            controller: true
            apiVersion: apiVersion
            kind: kind
            name: name
            blockOwnerDeletion: true
          - uid: uid
            controller: true
            apiVersion: apiVersion
            kind: kind
            name: name
            blockOwnerDeletion: true
          selfLink: selfLink
          deletionGracePeriodSeconds: 0
          uid: uid
          initializers:
            result:
              reason: reason
              metadata:
                continue: continue
                resourceVersion: resourceVersion
                selfLink: selfLink
              apiVersion: apiVersion
              code: 1
              kind: kind
              details:
                uid: uid
                kind: kind
                causes:
                - reason: reason
                  field: field
                  message: message
                - reason: reason
                  field: field
                  message: message
                retryAfterSeconds: 5
                name: name
                group: group
              message: message
              status: status
            pending:
            - name: name
            - name: name
          clusterName: clusterName
          creationTimestamp: creationTimestamp
          name: name
          namespace: namespace
        apiVersion: apiVersion
        data: "{}"
        kind: kind
        type: type
        stringData: "{}"
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
          type: string
        data:
          description: "Data contains the secret data. Each key must consist of alphanumeric\
            \ characters, '-', '_' or '.'. The serialized form of the secret data\
            \ is a base64 encoded string, representing the arbitrary (possibly non-string)\
            \ data value here. Described in https://tools.ietf.org/html/rfc4648#section-4"
          properties: {}
          type: object
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: '#/components/schemas/v1.ObjectMeta'
        stringData:
          description: "stringData allows specifying non-binary secret data in string\
            \ form. It is provided as a write-only convenience method. All keys and\
            \ values are merged into the data field on write, overwriting any existing\
            \ values. It is never output when reading from the API."
          properties: {}
          type: object
        type:
          description: Used to facilitate programmatic handling of secret data.
          type: string
      type: object
    v1.SecretEnvSource:
      description: |-
        SecretEnvSource selects a Secret to populate the environment variables with.

        The contents of the target Secret's Data field will represent the key-value pairs as environment variables.
      example:
        name: name
        optional: true
      properties:
        name:
          description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
          type: string
        optional:
          description: Specify whether the Secret must be defined
          type: boolean
      type: object
    v1.SecretKeySelector:
      description: SecretKeySelector selects a key of a Secret.
      example:
        name: name
        optional: true
        key: key
      properties:
        key:
          description: The key of the secret to select from.  Must be a valid secret
            key.
          type: string
        name:
          description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
          type: string
        optional:
          description: Specify whether the Secret or it's key must be defined
          type: boolean
      required:
      - key
      type: object
    v1.SecretList:
      description: SecretList is a list of Secret.
      example:
        metadata:
          continue: continue
          resourceVersion: resourceVersion
          selfLink: selfLink
        apiVersion: apiVersion
        kind: kind
        items:
        - metadata:
            generation: 6
            finalizers:
            - finalizers
            - finalizers
            resourceVersion: resourceVersion
            annotations: "{}"
            generateName: generateName
            deletionTimestamp: deletionTimestamp
            labels: "{}"
            ownerReferences:
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            selfLink: selfLink
            deletionGracePeriodSeconds: 0
            uid: uid
            initializers:
              result:
                reason: reason
                metadata:
                  continue: continue
                  resourceVersion: resourceVersion
                  selfLink: selfLink
                apiVersion: apiVersion
                code: 1
                kind: kind
                details:
                  uid: uid
                  kind: kind
                  causes:
                  - reason: reason
                    field: field
                    message: message
                  - reason: reason
                    field: field
                    message: message
                  retryAfterSeconds: 5
                  name: name
                  group: group
                message: message
                status: status
              pending:
              - name: name
              - name: name
            clusterName: clusterName
            creationTimestamp: creationTimestamp
            name: name
            namespace: namespace
          apiVersion: apiVersion
          data: "{}"
          kind: kind
          type: type
          stringData: "{}"
        - metadata:
            generation: 6
            finalizers:
            - finalizers
            - finalizers
            resourceVersion: resourceVersion
            annotations: "{}"
            generateName: generateName
            deletionTimestamp: deletionTimestamp
            labels: "{}"
            ownerReferences:
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            selfLink: selfLink
            deletionGracePeriodSeconds: 0
            uid: uid
            initializers:
              result:
                reason: reason
                metadata:
                  continue: continue
                  resourceVersion: resourceVersion
                  selfLink: selfLink
                apiVersion: apiVersion
                code: 1
                kind: kind
                details:
                  uid: uid
                  kind: kind
                  causes:
                  - reason: reason
                    field: field
                    message: message
                  - reason: reason
                    field: field
                    message: message
                  retryAfterSeconds: 5
                  name: name
                  group: group
                message: message
                status: status
              pending:
              - name: name
              - name: name
            clusterName: clusterName
            creationTimestamp: creationTimestamp
            name: name
            namespace: namespace
          apiVersion: apiVersion
          data: "{}"
          kind: kind
          type: type
          stringData: "{}"
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
          type: string
        items:
          description: "Items is a list of secret objects. More info: https://kubernetes.io/docs/concepts/configuration/secret"
          items:
            $ref: '#/components/schemas/v1.Secret'
          type: array
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: '#/components/schemas/v1.ListMeta'
      required:
      - items
      type: object
    v1.SecretProjection:
      description: |-
        Adapts a secret into a projected volume.

        The contents of the target Secret's Data field will be presented in a projected volume as files using the keys in the Data field as the file names. Note that this is identical to a secret volume source without the default mode.
      example:
        name: name
        optional: true
        items:
        - mode: 9
          path: path
          key: key
        - mode: 9
          path: path
          key: key
      properties:
        items:
          description: "If unspecified, each key-value pair in the Data field of the\
            \ referenced Secret will be projected into the volume as a file whose\
            \ name is the key and content is the value. If specified, the listed keys\
            \ will be projected into the specified paths, and unlisted keys will not\
            \ be present. If a key is specified which is not present in the Secret,\
            \ the volume setup will error unless it is marked optional. Paths must\
            \ be relative and may not contain the '..' path or start with '..'."
          items:
            $ref: '#/components/schemas/v1.KeyToPath'
          type: array
        name:
          description: "Name of the referent. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
          type: string
        optional:
          description: Specify whether the Secret or its key must be defined
          type: boolean
      type: object
    v1.SecretReference:
      description: SecretReference represents a Secret Reference. It has enough information
        to retrieve secret in any namespace
      properties:
        name:
          description: Name is unique within a namespace to reference a secret resource.
          type: string
        namespace:
          description: Namespace defines the space within which the secret name must
            be unique.
          type: string
      type: object
    v1.SecretVolumeSource:
      description: |-
        Adapts a Secret into a volume.

        The contents of the target Secret's Data field will be presented in a volume as files using the keys in the Data field as the file names. Secret volumes support ownership management and SELinux relabeling.
      example:
        secretName: secretName
        defaultMode: 2
        optional: true
        items:
        - mode: 9
          path: path
          key: key
        - mode: 9
          path: path
          key: key
      properties:
        defaultMode:
          description: "Optional: mode bits to use on created files by default. Must\
            \ be a value between 0 and 0777. Defaults to 0644. Directories within\
            \ the path are not affected by this setting. This might be in conflict\
            \ with other options that affect the file mode, like fsGroup, and the\
            \ result can be other mode bits set."
          format: int32
          type: integer
        items:
          description: "If unspecified, each key-value pair in the Data field of the\
            \ referenced Secret will be projected into the volume as a file whose\
            \ name is the key and content is the value. If specified, the listed keys\
            \ will be projected into the specified paths, and unlisted keys will not\
            \ be present. If a key is specified which is not present in the Secret,\
            \ the volume setup will error unless it is marked optional. Paths must\
            \ be relative and may not contain the '..' path or start with '..'."
          items:
            $ref: '#/components/schemas/v1.KeyToPath'
          type: array
        optional:
          description: Specify whether the Secret or it's keys must be defined
          type: boolean
        secretName:
          description: "Name of the secret in the pod's namespace to use. More info:\
            \ https://kubernetes.io/docs/concepts/storage/volumes#secret"
          type: string
      type: object
    v1.SecurityContext:
      description: "SecurityContext holds security configuration that will be applied\
        \ to a container. Some fields are present in both SecurityContext and PodSecurityContext.\
        \  When both are set, the values in SecurityContext take precedence."
      example:
        privileged: true
        runAsUser: 7
        capabilities:
          add:
          - "{}"
          - "{}"
          drop:
          - "{}"
          - "{}"
        seLinuxOptions:
          role: role
          level: level
          type: type
          user: user
        allowPrivilegeEscalation: true
        runAsGroup: 4
        runAsNonRoot: true
        readOnlyRootFilesystem: true
      properties:
        allowPrivilegeEscalation:
          description: "AllowPrivilegeEscalation controls whether a process can gain\
            \ more privileges than its parent process. This bool directly controls\
            \ if the no_new_privs flag will be set on the container process. AllowPrivilegeEscalation\
            \ is true always when the container is: 1) run as Privileged 2) has CAP_SYS_ADMIN"
          type: boolean
        capabilities:
          $ref: '#/components/schemas/v1.Capabilities'
        privileged:
          description: Run container in privileged mode. Processes in privileged containers
            are essentially equivalent to root on the host. Defaults to false.
          type: boolean
        readOnlyRootFilesystem:
          description: Whether this container has a read-only root filesystem. Default
            is false.
          type: boolean
        runAsGroup:
          description: "The GID to run the entrypoint of the container process. Uses\
            \ runtime default if unset. May also be set in PodSecurityContext.  If\
            \ set in both SecurityContext and PodSecurityContext, the value specified\
            \ in SecurityContext takes precedence."
          format: int64
          type: integer
        runAsNonRoot:
          description: "Indicates that the container must run as a non-root user.\
            \ If true, the Kubelet will validate the image at runtime to ensure that\
            \ it does not run as UID 0 (root) and fail to start the container if it\
            \ does. If unset or false, no such validation will be performed. May also\
            \ be set in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext,\
            \ the value specified in SecurityContext takes precedence."
          type: boolean
        runAsUser:
          description: "The UID to run the entrypoint of the container process. Defaults\
            \ to user specified in image metadata if unspecified. May also be set\
            \ in PodSecurityContext.  If set in both SecurityContext and PodSecurityContext,\
            \ the value specified in SecurityContext takes precedence."
          format: int64
          type: integer
        seLinuxOptions:
          $ref: '#/components/schemas/v1.SELinuxOptions'
      type: object
    v1.SecurityContextConstraints:
      description: SecurityContextConstraints governs the ability to make requests
        that affect the SecurityContext that will be applied to a container. For historical
        reasons SCC was exposed under the core Kubernetes API group. That exposure
        is deprecated and will be removed in a future release - users should instead
        use the security.openshift.io group to manage SecurityContextConstraints.
      properties:
        allowHostDirVolumePlugin:
          description: AllowHostDirVolumePlugin determines if the policy allow containers
            to use the HostDir volume plugin
          type: boolean
        allowHostIPC:
          description: AllowHostIPC determines if the policy allows host ipc in the
            containers.
          type: boolean
        allowHostNetwork:
          description: AllowHostNetwork determines if the policy allows the use of
            HostNetwork in the pod spec.
          type: boolean
        allowHostPID:
          description: AllowHostPID determines if the policy allows host pid in the
            containers.
          type: boolean
        allowHostPorts:
          description: AllowHostPorts determines if the policy allows host ports in
            the containers.
          type: boolean
        allowPrivilegeEscalation:
          description: "AllowPrivilegeEscalation determines if a pod can request to\
            \ allow privilege escalation. If unspecified, defaults to true."
          type: boolean
        allowPrivilegedContainer:
          description: AllowPrivilegedContainer determines if a container can request
            to be run as privileged.
          type: boolean
        allowedCapabilities:
          description: AllowedCapabilities is a list of capabilities that can be requested
            to add to the container. Capabilities in this field maybe added at the
            pod author's discretion. You must not list a capability in both AllowedCapabilities
            and RequiredDropCapabilities. To allow all capabilities you may use '*'.
          items:
            $ref: '#/components/schemas/v1.Capability'
          type: array
        allowedFlexVolumes:
          description: AllowedFlexVolumes is a whitelist of allowed Flexvolumes.  Empty
            or nil indicates that all Flexvolumes may be used.  This parameter is
            effective only when the usage of the Flexvolumes is allowed in the "Volumes"
            field.
          items:
            $ref: '#/components/schemas/v1.AllowedFlexVolume'
          type: array
        allowedUnsafeSysctls:
          description: |-
            AllowedUnsafeSysctls is a list of explicitly allowed unsafe sysctls, defaults to none. Each entry is either a plain sysctl name or ends in "*" in which case it is considered as a prefix of allowed sysctls. Single * means all unsafe sysctls are allowed. Kubelet has to whitelist all allowed unsafe sysctls explicitly to avoid rejection.

            Examples: e.g. "foo/*" allows "foo/bar", "foo/baz", etc. e.g. "foo.*" allows "foo.bar", "foo.baz", etc.
          items:
            type: string
          type: array
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
          type: string
        defaultAddCapabilities:
          description: DefaultAddCapabilities is the default set of capabilities that
            will be added to the container unless the pod spec specifically drops
            the capability.  You may not list a capabiility in both DefaultAddCapabilities
            and RequiredDropCapabilities.
          items:
            $ref: '#/components/schemas/v1.Capability'
          type: array
        defaultAllowPrivilegeEscalation:
          description: DefaultAllowPrivilegeEscalation controls the default setting
            for whether a process can gain more privileges than its parent process.
          type: boolean
        forbiddenSysctls:
          description: |-
            ForbiddenSysctls is a list of explicitly forbidden sysctls, defaults to none. Each entry is either a plain sysctl name or ends in "*" in which case it is considered as a prefix of forbidden sysctls. Single * means all sysctls are forbidden.

            Examples: e.g. "foo/*" forbids "foo/bar", "foo/baz", etc. e.g. "foo.*" forbids "foo.bar", "foo.baz", etc.
          items:
            type: string
          type: array
        fsGroup:
          $ref: '#/components/schemas/v1.FSGroupStrategyOptions'
        groups:
          description: The groups that have permission to use this security context
            constraints
          items:
            type: string
          type: array
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: '#/components/schemas/v1.ObjectMeta'
        priority:
          description: "Priority influences the sort order of SCCs when evaluating\
            \ which SCCs to try first for a given pod request based on access in the\
            \ Users and Groups fields.  The higher the int, the higher priority. An\
            \ unset value is considered a 0 priority. If scores for multiple SCCs\
            \ are equal they will be sorted from most restrictive to least restrictive.\
            \ If both priorities and restrictions are equal the SCCs will be sorted\
            \ by name."
          format: int32
          type: integer
        readOnlyRootFilesystem:
          description: ReadOnlyRootFilesystem when set to true will force containers
            to run with a read only root file system.  If the container specifically
            requests to run with a non-read only root file system the SCC should deny
            the pod. If set to false the container may run with a read only root file
            system if it wishes but it will not be forced to.
          type: boolean
        requiredDropCapabilities:
          description: RequiredDropCapabilities are the capabilities that will be
            dropped from the container.  These are required to be dropped and cannot
            be added.
          items:
            $ref: '#/components/schemas/v1.Capability'
          type: array
        runAsUser:
          $ref: '#/components/schemas/v1.RunAsUserStrategyOptions'
        seLinuxContext:
          $ref: '#/components/schemas/v1.SELinuxContextStrategyOptions'
        seccompProfiles:
          description: "SeccompProfiles lists the allowed profiles that may be set\
            \ for the pod or container's seccomp annotations.  An unset (nil) or empty\
            \ value means that no profiles may be specifid by the pod or container.\t\
            The wildcard '*' may be used to allow all profiles.  When used to generate\
            \ a value for a pod the first non-wildcard profile will be used as the\
            \ default."
          items:
            type: string
          type: array
        supplementalGroups:
          $ref: '#/components/schemas/v1.SupplementalGroupsStrategyOptions'
        users:
          description: The users who have permissions to use this security context
            constraints
          items:
            type: string
          type: array
        volumes:
          description: "Volumes is a white list of allowed volume plugins.  FSType\
            \ corresponds directly with the field names of a VolumeSource (azureFile,\
            \ configMap, emptyDir).  To allow all volumes you may use \"*\". To allow\
            \ no volumes, set to [\"none\"]."
          items:
            $ref: '#/components/schemas/v1.FSType'
          type: array
      required:
      - allowHostDirVolumePlugin
      - allowHostIPC
      - allowHostNetwork
      - allowHostPID
      - allowHostPorts
      - allowPrivilegedContainer
      - allowedCapabilities
      - defaultAddCapabilities
      - groups
      - priority
      - readOnlyRootFilesystem
      - requiredDropCapabilities
      - users
      - volumes
      type: object
    v1.SecurityContextConstraintsList:
      description: SecurityContextConstraintsList is a list of SecurityContextConstraints
        objects
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
          type: string
        items:
          description: List of security context constraints.
          items:
            $ref: '#/components/schemas/v1.SecurityContextConstraints'
          type: array
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: '#/components/schemas/v1.ListMeta'
      required:
      - items
      type: object
    v1.Service:
      description: "Service is a named abstraction of software service (for example,\
        \ mysql) consisting of local port (for example 3306) that the proxy listens\
        \ on, and the selector that determines which pods will answer requests sent\
        \ through the proxy."
      example:
        metadata:
          generation: 6
          finalizers:
          - finalizers
          - finalizers
          resourceVersion: resourceVersion
          annotations: "{}"
          generateName: generateName
          deletionTimestamp: deletionTimestamp
          labels: "{}"
          ownerReferences:
          - uid: uid
            controller: true
            apiVersion: apiVersion
            kind: kind
            name: name
            blockOwnerDeletion: true
          - uid: uid
            controller: true
            apiVersion: apiVersion
            kind: kind
            name: name
            blockOwnerDeletion: true
          selfLink: selfLink
          deletionGracePeriodSeconds: 0
          uid: uid
          initializers:
            result:
              reason: reason
              metadata:
                continue: continue
                resourceVersion: resourceVersion
                selfLink: selfLink
              apiVersion: apiVersion
              code: 1
              kind: kind
              details:
                uid: uid
                kind: kind
                causes:
                - reason: reason
                  field: field
                  message: message
                - reason: reason
                  field: field
                  message: message
                retryAfterSeconds: 5
                name: name
                group: group
              message: message
              status: status
            pending:
            - name: name
            - name: name
          clusterName: clusterName
          creationTimestamp: creationTimestamp
          name: name
          namespace: namespace
        apiVersion: apiVersion
        kind: kind
        spec:
          healthCheckNodePort: 0
          externalIPs:
          - externalIPs
          - externalIPs
          sessionAffinity: sessionAffinity
          ports:
          - protocol: protocol
            port: 1
            name: name
            nodePort: 6
            targetPort: targetPort
          - protocol: protocol
            port: 1
            name: name
            nodePort: 6
            targetPort: targetPort
          type: type
          sessionAffinityConfig:
            clientIP:
              timeoutSeconds: 5
          loadBalancerIP: loadBalancerIP
          externalName: externalName
          loadBalancerSourceRanges:
          - loadBalancerSourceRanges
          - loadBalancerSourceRanges
          externalTrafficPolicy: externalTrafficPolicy
          selector: "{}"
          publishNotReadyAddresses: true
          clusterIP: clusterIP
        status:
          loadBalancer:
            ingress:
            - hostname: hostname
              ip: ip
            - hostname: hostname
              ip: ip
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
          type: string
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: '#/components/schemas/v1.ObjectMeta'
        spec:
          $ref: '#/components/schemas/v1.ServiceSpec'
        status:
          $ref: '#/components/schemas/v1.ServiceStatus'
      type: object
    v1.ServiceAccount:
      description: "ServiceAccount binds together: * a name, understood by users,\
        \ and perhaps by peripheral systems, for an identity * a principal that can\
        \ be authenticated and authorized * a set of secrets"
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
          type: string
        automountServiceAccountToken:
          description: AutomountServiceAccountToken indicates whether pods running
            as this service account should have an API token automatically mounted.
            Can be overridden at the pod level.
          type: boolean
        imagePullSecrets:
          description: "ImagePullSecrets is a list of references to secrets in the\
            \ same namespace to use for pulling any images in pods that reference\
            \ this ServiceAccount. ImagePullSecrets are distinct from Secrets because\
            \ Secrets can be mounted in the pod, but ImagePullSecrets are only accessed\
            \ by the kubelet. More info: https://kubernetes.io/docs/concepts/containers/images/#specifying-imagepullsecrets-on-a-pod"
          items:
            $ref: '#/components/schemas/v1.LocalObjectReference'
          type: array
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: '#/components/schemas/v1.ObjectMeta'
        secrets:
          description: "Secrets is the list of secrets allowed to be used by pods\
            \ running using this ServiceAccount. More info: https://kubernetes.io/docs/concepts/configuration/secret"
          items:
            $ref: '#/components/schemas/v1.ObjectReference'
          type: array
      type: object
    v1.ServiceAccountList:
      description: ServiceAccountList is a list of ServiceAccount objects
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
          type: string
        items:
          description: "List of ServiceAccounts. More info: https://kubernetes.io/docs/tasks/configure-pod-container/configure-service-account/"
          items:
            $ref: '#/components/schemas/v1.ServiceAccount'
          type: array
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: '#/components/schemas/v1.ListMeta'
      required:
      - items
      type: object
    v1.ServiceAccountTokenProjection:
      description: ServiceAccountTokenProjection represents a projected service account
        token volume. This projection can be used to insert a service account token
        into the pods runtime filesystem for use against APIs (Kubernetes API Server
        or otherwise).
      example:
        path: path
        audience: audience
        expirationSeconds: 1
      properties:
        audience:
          description: "Audience is the intended audience of the token. A recipient\
            \ of a token must identify itself with an identifier specified in the\
            \ audience of the token, and otherwise should reject the token. The audience\
            \ defaults to the identifier of the apiserver."
          type: string
        expirationSeconds:
          description: "ExpirationSeconds is the requested duration of validity of\
            \ the service account token. As the token approaches expiration, the kubelet\
            \ volume plugin will proactively rotate the service account token. The\
            \ kubelet will start trying to rotate the token if the token is older\
            \ than 80 percent of its time to live or if the token is older than 24\
            \ hours.Defaults to 1 hour and must be at least 10 minutes."
          format: int64
          type: integer
        path:
          description: Path is the path relative to the mount point of the file to
            project the token into.
          type: string
      required:
      - path
      type: object
    v1.ServiceList:
      description: ServiceList holds a list of services.
      example:
        metadata:
          continue: continue
          resourceVersion: resourceVersion
          selfLink: selfLink
        apiVersion: apiVersion
        kind: kind
        items:
        - metadata:
            generation: 6
            finalizers:
            - finalizers
            - finalizers
            resourceVersion: resourceVersion
            annotations: "{}"
            generateName: generateName
            deletionTimestamp: deletionTimestamp
            labels: "{}"
            ownerReferences:
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            selfLink: selfLink
            deletionGracePeriodSeconds: 0
            uid: uid
            initializers:
              result:
                reason: reason
                metadata:
                  continue: continue
                  resourceVersion: resourceVersion
                  selfLink: selfLink
                apiVersion: apiVersion
                code: 1
                kind: kind
                details:
                  uid: uid
                  kind: kind
                  causes:
                  - reason: reason
                    field: field
                    message: message
                  - reason: reason
                    field: field
                    message: message
                  retryAfterSeconds: 5
                  name: name
                  group: group
                message: message
                status: status
              pending:
              - name: name
              - name: name
            clusterName: clusterName
            creationTimestamp: creationTimestamp
            name: name
            namespace: namespace
          apiVersion: apiVersion
          kind: kind
          spec:
            healthCheckNodePort: 0
            externalIPs:
            - externalIPs
            - externalIPs
            sessionAffinity: sessionAffinity
            ports:
            - protocol: protocol
              port: 1
              name: name
              nodePort: 6
              targetPort: targetPort
            - protocol: protocol
              port: 1
              name: name
              nodePort: 6
              targetPort: targetPort
            type: type
            sessionAffinityConfig:
              clientIP:
                timeoutSeconds: 5
            loadBalancerIP: loadBalancerIP
            externalName: externalName
            loadBalancerSourceRanges:
            - loadBalancerSourceRanges
            - loadBalancerSourceRanges
            externalTrafficPolicy: externalTrafficPolicy
            selector: "{}"
            publishNotReadyAddresses: true
            clusterIP: clusterIP
          status:
            loadBalancer:
              ingress:
              - hostname: hostname
                ip: ip
              - hostname: hostname
                ip: ip
        - metadata:
            generation: 6
            finalizers:
            - finalizers
            - finalizers
            resourceVersion: resourceVersion
            annotations: "{}"
            generateName: generateName
            deletionTimestamp: deletionTimestamp
            labels: "{}"
            ownerReferences:
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            selfLink: selfLink
            deletionGracePeriodSeconds: 0
            uid: uid
            initializers:
              result:
                reason: reason
                metadata:
                  continue: continue
                  resourceVersion: resourceVersion
                  selfLink: selfLink
                apiVersion: apiVersion
                code: 1
                kind: kind
                details:
                  uid: uid
                  kind: kind
                  causes:
                  - reason: reason
                    field: field
                    message: message
                  - reason: reason
                    field: field
                    message: message
                  retryAfterSeconds: 5
                  name: name
                  group: group
                message: message
                status: status
              pending:
              - name: name
              - name: name
            clusterName: clusterName
            creationTimestamp: creationTimestamp
            name: name
            namespace: namespace
          apiVersion: apiVersion
          kind: kind
          spec:
            healthCheckNodePort: 0
            externalIPs:
            - externalIPs
            - externalIPs
            sessionAffinity: sessionAffinity
            ports:
            - protocol: protocol
              port: 1
              name: name
              nodePort: 6
              targetPort: targetPort
            - protocol: protocol
              port: 1
              name: name
              nodePort: 6
              targetPort: targetPort
            type: type
            sessionAffinityConfig:
              clientIP:
                timeoutSeconds: 5
            loadBalancerIP: loadBalancerIP
            externalName: externalName
            loadBalancerSourceRanges:
            - loadBalancerSourceRanges
            - loadBalancerSourceRanges
            externalTrafficPolicy: externalTrafficPolicy
            selector: "{}"
            publishNotReadyAddresses: true
            clusterIP: clusterIP
          status:
            loadBalancer:
              ingress:
              - hostname: hostname
                ip: ip
              - hostname: hostname
                ip: ip
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
          type: string
        items:
          description: List of services
          items:
            $ref: '#/components/schemas/v1.Service'
          type: array
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: '#/components/schemas/v1.ListMeta'
      required:
      - items
      type: object
    v1.ServicePort:
      description: ServicePort contains information on service's port.
      example:
        protocol: protocol
        port: 1
        name: name
        nodePort: 6
        targetPort: targetPort
      properties:
        name:
          description: The name of this port within the service. This must be a DNS_LABEL.
            All ports within a ServiceSpec must have unique names. This maps to the
            'Name' field in EndpointPort objects. Optional if only one ServicePort
            is defined on this service.
          type: string
        nodePort:
          description: "The port on each node on which this service is exposed when\
            \ type=NodePort or LoadBalancer. Usually assigned by the system. If specified,\
            \ it will be allocated to the service if unused or else creation of the\
            \ service will fail. Default is to auto-allocate a port if the ServiceType\
            \ of this Service requires one. More info: https://kubernetes.io/docs/concepts/services-networking/service/#type-nodeport"
          format: int32
          type: integer
        port:
          description: The port that will be exposed by this service.
          format: int32
          type: integer
        protocol:
          description: The IP protocol for this port. Supports "TCP" and "UDP". Default
            is TCP.
          type: string
        targetPort:
          description: "Number or name of the port to access on the pods targeted\
            \ by the service. Number must be in the range 1 to 65535. Name must be\
            \ an IANA_SVC_NAME. If this is a string, it will be looked up as a named\
            \ port in the target Pod's container ports. If this is not specified,\
            \ the value of the 'port' field is used (an identity map). This field\
            \ is ignored for services with clusterIP=None, and should be omitted or\
            \ set equal to the 'port' field. More info: https://kubernetes.io/docs/concepts/services-networking/service/#defining-a-service"
          type: string
      required:
      - port
      type: object
    v1.ServiceSpec:
      description: ServiceSpec describes the attributes that a user creates on a service.
      example:
        healthCheckNodePort: 0
        externalIPs:
        - externalIPs
        - externalIPs
        sessionAffinity: sessionAffinity
        ports:
        - protocol: protocol
          port: 1
          name: name
          nodePort: 6
          targetPort: targetPort
        - protocol: protocol
          port: 1
          name: name
          nodePort: 6
          targetPort: targetPort
        type: type
        sessionAffinityConfig:
          clientIP:
            timeoutSeconds: 5
        loadBalancerIP: loadBalancerIP
        externalName: externalName
        loadBalancerSourceRanges:
        - loadBalancerSourceRanges
        - loadBalancerSourceRanges
        externalTrafficPolicy: externalTrafficPolicy
        selector: "{}"
        publishNotReadyAddresses: true
        clusterIP: clusterIP
      properties:
        clusterIP:
          description: "clusterIP is the IP address of the service and is usually\
            \ assigned randomly by the master. If an address is specified manually\
            \ and is not in use by others, it will be allocated to the service; otherwise,\
            \ creation of the service will fail. This field can not be changed through\
            \ updates. Valid values are \"None\", empty string (\"\"), or a valid\
            \ IP address. \"None\" can be specified for headless services when proxying\
            \ is not required. Only applies to types ClusterIP, NodePort, and LoadBalancer.\
            \ Ignored if type is ExternalName. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies"
          type: string
        externalIPs:
          description: externalIPs is a list of IP addresses for which nodes in the
            cluster will also accept traffic for this service.  These IPs are not
            managed by Kubernetes.  The user is responsible for ensuring that traffic
            arrives at a node with this IP.  A common example is external load-balancers
            that are not part of the Kubernetes system.
          items:
            type: string
          type: array
        externalName:
          description: externalName is the external reference that kubedns or equivalent
            will return as a CNAME record for this service. No proxying will be involved.
            Must be a valid RFC-1123 hostname (https://tools.ietf.org/html/rfc1123)
            and requires Type to be ExternalName.
          type: string
        externalTrafficPolicy:
          description: "externalTrafficPolicy denotes if this Service desires to route\
            \ external traffic to node-local or cluster-wide endpoints. \"Local\"\
            \ preserves the client source IP and avoids a second hop for LoadBalancer\
            \ and Nodeport type services, but risks potentially imbalanced traffic\
            \ spreading. \"Cluster\" obscures the client source IP and may cause a\
            \ second hop to another node, but should have good overall load-spreading."
          type: string
        healthCheckNodePort:
          description: "healthCheckNodePort specifies the healthcheck nodePort for\
            \ the service. If not specified, HealthCheckNodePort is created by the\
            \ service api backend with the allocated nodePort. Will use user-specified\
            \ nodePort value if specified by the client. Only effects when Type is\
            \ set to LoadBalancer and ExternalTrafficPolicy is set to Local."
          format: int32
          type: integer
        loadBalancerIP:
          description: "Only applies to Service Type: LoadBalancer LoadBalancer will\
            \ get created with the IP specified in this field. This feature depends\
            \ on whether the underlying cloud-provider supports specifying the loadBalancerIP\
            \ when a load balancer is created. This field will be ignored if the cloud-provider\
            \ does not support the feature."
          type: string
        loadBalancerSourceRanges:
          description: "If specified and supported by the platform, this will restrict\
            \ traffic through the cloud-provider load-balancer will be restricted\
            \ to the specified client IPs. This field will be ignored if the cloud-provider\
            \ does not support the feature.\" More info: https://kubernetes.io/docs/tasks/access-application-cluster/configure-cloud-provider-firewall/"
          items:
            type: string
          type: array
        ports:
          description: "The list of ports that are exposed by this service. More info:\
            \ https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies"
          items:
            $ref: '#/components/schemas/v1.ServicePort'
          type: array
        publishNotReadyAddresses:
          description: "publishNotReadyAddresses, when set to true, indicates that\
            \ DNS implementations must publish the notReadyAddresses of subsets for\
            \ the Endpoints associated with the Service. The default value is false.\
            \ The primary use case for setting this field is to use a StatefulSet's\
            \ Headless Service to propagate SRV records for its Pods without respect\
            \ to their readiness for purpose of peer discovery."
          type: boolean
        selector:
          description: "Route service traffic to pods with label keys and values matching\
            \ this selector. If empty or not present, the service is assumed to have\
            \ an external process managing its endpoints, which Kubernetes will not\
            \ modify. Only applies to types ClusterIP, NodePort, and LoadBalancer.\
            \ Ignored if type is ExternalName. More info: https://kubernetes.io/docs/concepts/services-networking/service/"
          properties: {}
          type: object
        sessionAffinity:
          description: "Supports \"ClientIP\" and \"None\". Used to maintain session\
            \ affinity. Enable client IP based session affinity. Must be ClientIP\
            \ or None. Defaults to None. More info: https://kubernetes.io/docs/concepts/services-networking/service/#virtual-ips-and-service-proxies"
          type: string
        sessionAffinityConfig:
          $ref: '#/components/schemas/v1.SessionAffinityConfig'
        type:
          description: "type determines how the Service is exposed. Defaults to ClusterIP.\
            \ Valid options are ExternalName, ClusterIP, NodePort, and LoadBalancer.\
            \ \"ExternalName\" maps to the specified externalName. \"ClusterIP\" allocates\
            \ a cluster-internal IP address for load-balancing to endpoints. Endpoints\
            \ are determined by the selector or if that is not specified, by manual\
            \ construction of an Endpoints object. If clusterIP is \"None\", no virtual\
            \ IP is allocated and the endpoints are published as a set of endpoints\
            \ rather than a stable IP. \"NodePort\" builds on ClusterIP and allocates\
            \ a port on every node which routes to the clusterIP. \"LoadBalancer\"\
            \ builds on NodePort and creates an external load-balancer (if supported\
            \ in the current cloud) which routes to the clusterIP. More info: https://kubernetes.io/docs/concepts/services-networking/service/#publishing-services "
          type: string
      type: object
    v1.ServiceStatus:
      description: ServiceStatus represents the current status of a service.
      example:
        loadBalancer:
          ingress:
          - hostname: hostname
            ip: ip
          - hostname: hostname
            ip: ip
      properties:
        loadBalancer:
          $ref: '#/components/schemas/v1.LoadBalancerStatus'
      type: object
    v1.SessionAffinityConfig:
      description: SessionAffinityConfig represents the configurations of session
        affinity.
      example:
        clientIP:
          timeoutSeconds: 5
      properties:
        clientIP:
          $ref: '#/components/schemas/v1.ClientIPConfig'
      type: object
    v1.Status:
      description: Status is a return value for calls that don't return other objects.
      example:
        reason: reason
        metadata:
          continue: continue
          resourceVersion: resourceVersion
          selfLink: selfLink
        apiVersion: apiVersion
        code: 1
        kind: kind
        details:
          uid: uid
          kind: kind
          causes:
          - reason: reason
            field: field
            message: message
          - reason: reason
            field: field
            message: message
          retryAfterSeconds: 5
          name: name
          group: group
        message: message
        status: status
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
          type: string
        code:
          description: "Suggested HTTP return code for this status, 0 if not set."
          format: int32
          type: integer
        details:
          $ref: '#/components/schemas/v1.StatusDetails'
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
          type: string
        message:
          description: A human-readable description of the status of this operation.
          type: string
        metadata:
          $ref: '#/components/schemas/v1.ListMeta'
        reason:
          description: A machine-readable description of why this operation is in
            the "Failure" status. If this value is empty there is no information available.
            A Reason clarifies an HTTP status code but does not override it.
          type: string
        status:
          description: "Status of the operation. One of: \"Success\" or \"Failure\"\
            . More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#spec-and-status"
          type: string
      type: object
    v1.StatusCause:
      description: "StatusCause provides more information about an api.Status failure,\
        \ including cases when multiple errors are encountered."
      example:
        reason: reason
        field: field
        message: message
      properties:
        field:
          description: |-
            The field of the resource that has caused this error, as named by its JSON serialization. May include dot and postfix notation for nested attributes. Arrays are zero-indexed.  Fields may appear more than once in an array of causes due to fields having multiple errors. Optional.

            Examples:
              "name" - the field "name" on the current resource
              "items[0].name" - the field "name" on the first array entry in "items"
          type: string
        message:
          description: A human-readable description of the cause of the error.  This
            field may be presented as-is to a reader.
          type: string
        reason:
          description: A machine-readable description of the cause of the error. If
            this value is empty there is no information available.
          type: string
      type: object
    v1.StatusDetails:
      description: "StatusDetails is a set of additional properties that MAY be set\
        \ by the server to provide additional information about a response. The Reason\
        \ field of a Status object defines what attributes will be set. Clients must\
        \ ignore fields that do not match the defined type of each attribute, and\
        \ should assume that any attribute may be empty, invalid, or under defined."
      example:
        uid: uid
        kind: kind
        causes:
        - reason: reason
          field: field
          message: message
        - reason: reason
          field: field
          message: message
        retryAfterSeconds: 5
        name: name
        group: group
      properties:
        causes:
          description: The Causes array includes more details associated with the
            StatusReason failure. Not all StatusReasons may provide detailed causes.
          items:
            $ref: '#/components/schemas/v1.StatusCause'
          type: array
        group:
          description: The group attribute of the resource associated with the status
            StatusReason.
          type: string
        kind:
          description: "The kind attribute of the resource associated with the status\
            \ StatusReason. On some operations may differ from the requested resource\
            \ Kind. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
          type: string
        name:
          description: The name attribute of the resource associated with the status
            StatusReason (when there is a single name which can be described).
          type: string
        retryAfterSeconds:
          description: "If specified, the time in seconds before the operation should\
            \ be retried. Some errors may indicate the client must take an alternate\
            \ action - for those errors this field may indicate how long to wait before\
            \ taking the alternate action."
          format: int32
          type: integer
        uid:
          description: "UID of the resource. (when there is a single resource which\
            \ can be described). More info: http://kubernetes.io/docs/user-guide/identifiers#uids"
          type: string
      type: object
    v1.StorageOSPersistentVolumeSource:
      description: Represents a StorageOS persistent volume resource.
      properties:
        fsType:
          description: "Filesystem type to mount. Must be a filesystem type supported\
            \ by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly\
            \ inferred to be \"ext4\" if unspecified."
          type: string
        readOnly:
          description: Defaults to false (read/write). ReadOnly here will force the
            ReadOnly setting in VolumeMounts.
          type: boolean
        secretRef:
          $ref: '#/components/schemas/v1.ObjectReference'
        volumeName:
          description: VolumeName is the human-readable name of the StorageOS volume.  Volume
            names are only unique within a namespace.
          type: string
        volumeNamespace:
          description: VolumeNamespace specifies the scope of the volume within StorageOS.  If
            no namespace is specified then the Pod's namespace will be used.  This
            allows the Kubernetes name scoping to be mirrored within StorageOS for
            tighter integration. Set VolumeName to any name to override the default
            behaviour. Set to "default" if you are not using namespaces within StorageOS.
            Namespaces that do not pre-exist within StorageOS will be created.
          type: string
      type: object
    v1.StorageOSVolumeSource:
      description: Represents a StorageOS persistent volume resource.
      example:
        volumeNamespace: volumeNamespace
        volumeName: volumeName
        secretRef:
          name: name
        readOnly: true
        fsType: fsType
      properties:
        fsType:
          description: "Filesystem type to mount. Must be a filesystem type supported\
            \ by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly\
            \ inferred to be \"ext4\" if unspecified."
          type: string
        readOnly:
          description: Defaults to false (read/write). ReadOnly here will force the
            ReadOnly setting in VolumeMounts.
          type: boolean
        secretRef:
          $ref: '#/components/schemas/v1.LocalObjectReference'
        volumeName:
          description: VolumeName is the human-readable name of the StorageOS volume.  Volume
            names are only unique within a namespace.
          type: string
        volumeNamespace:
          description: VolumeNamespace specifies the scope of the volume within StorageOS.  If
            no namespace is specified then the Pod's namespace will be used.  This
            allows the Kubernetes name scoping to be mirrored within StorageOS for
            tighter integration. Set VolumeName to any name to override the default
            behaviour. Set to "default" if you are not using namespaces within StorageOS.
            Namespaces that do not pre-exist within StorageOS will be created.
          type: string
      type: object
    v1.SupplementalGroupsStrategyOptions:
      description: SupplementalGroupsStrategyOptions defines the strategy type and
        options used to create the strategy.
      properties:
        ranges:
          description: Ranges are the allowed ranges of supplemental groups.  If you
            would like to force a single supplemental group then supply a single range
            with the same start and end.
          items:
            $ref: '#/components/schemas/v1.IDRange'
          type: array
        type:
          description: Type is the strategy that will dictate what supplemental groups
            is used in the SecurityContext.
          type: string
      type: object
    v1.Sysctl:
      description: Sysctl defines a kernel parameter to be set
      example:
        name: name
        value: value
      properties:
        name:
          description: Name of a property to set
          type: string
        value:
          description: Value of a property to set
          type: string
      required:
      - name
      - value
      type: object
    v1.TCPSocketAction:
      description: TCPSocketAction describes an action based on opening a socket
      example:
        port: port
        host: host
      properties:
        host:
          description: "Optional: Host name to connect to, defaults to the pod IP."
          type: string
        port:
          description: Number or name of the port to access on the container. Number
            must be in the range 1 to 65535. Name must be an IANA_SVC_NAME.
          type: string
      required:
      - port
      type: object
    v1.Taint:
      description: The node this Taint is attached to has the "effect" on any pod
        that does not tolerate the Taint.
      properties:
        effect:
          description: "Required. The effect of the taint on pods that do not tolerate\
            \ the taint. Valid effects are NoSchedule, PreferNoSchedule and NoExecute."
          type: string
        key:
          description: Required. The taint key to be applied to a node.
          type: string
        timeAdded:
          description: TimeAdded represents the time at which the taint was added.
            It is only written for NoExecute taints.
          type: string
        value:
          description: Required. The taint value corresponding to the taint key.
          type: string
      required:
      - effect
      - key
      type: object
    v1.Toleration:
      description: "The pod this Toleration is attached to tolerates any taint that\
        \ matches the triple <key,value,effect> using the matching operator <operator>."
      example:
        effect: effect
        tolerationSeconds: 4
        value: value
        key: key
        operator: operator
      properties:
        effect:
          description: "Effect indicates the taint effect to match. Empty means match\
            \ all taint effects. When specified, allowed values are NoSchedule, PreferNoSchedule\
            \ and NoExecute."
          type: string
        key:
          description: "Key is the taint key that the toleration applies to. Empty\
            \ means match all taint keys. If the key is empty, operator must be Exists;\
            \ this combination means to match all values and all keys."
          type: string
        operator:
          description: "Operator represents a key's relationship to the value. Valid\
            \ operators are Exists and Equal. Defaults to Equal. Exists is equivalent\
            \ to wildcard for value, so that a pod can tolerate all taints of a particular\
            \ category."
          type: string
        tolerationSeconds:
          description: "TolerationSeconds represents the period of time the toleration\
            \ (which must be of effect NoExecute, otherwise this field is ignored)\
            \ tolerates the taint. By default, it is not set, which means tolerate\
            \ the taint forever (do not evict). Zero and negative values will be treated\
            \ as 0 (evict immediately) by the system."
          format: int64
          type: integer
        value:
          description: "Value is the taint value the toleration matches to. If the\
            \ operator is Exists, the value should be empty, otherwise just a regular\
            \ string."
          type: string
      type: object
    v1.Volume:
      description: Volume represents a named volume in a pod that may be accessed
        by any container in the pod.
      example:
        quobyte:
          volume: volume
          registry: registry
          readOnly: true
          user: user
          group: group
        azureFile:
          secretName: secretName
          readOnly: true
          shareName: shareName
        flexVolume:
          driver: driver
          options: "{}"
          secretRef:
            name: name
          readOnly: true
          fsType: fsType
        secret:
          secretName: secretName
          defaultMode: 2
          optional: true
          items:
          - mode: 9
            path: path
            key: key
          - mode: 9
            path: path
            key: key
        projected:
          sources:
          - downwardAPI:
              items:
              - mode: 8
                path: path
                resourceFieldRef:
                  divisor: divisor
                  resource: resource
                  containerName: containerName
                fieldRef:
                  apiVersion: apiVersion
                  fieldPath: fieldPath
              - mode: 8
                path: path
                resourceFieldRef:
                  divisor: divisor
                  resource: resource
                  containerName: containerName
                fieldRef:
                  apiVersion: apiVersion
                  fieldPath: fieldPath
            configMap:
              name: name
              optional: true
              items:
              - mode: 9
                path: path
                key: key
              - mode: 9
                path: path
                key: key
            secret:
              name: name
              optional: true
              items:
              - mode: 9
                path: path
                key: key
              - mode: 9
                path: path
                key: key
            serviceAccountToken:
              path: path
              audience: audience
              expirationSeconds: 1
          - downwardAPI:
              items:
              - mode: 8
                path: path
                resourceFieldRef:
                  divisor: divisor
                  resource: resource
                  containerName: containerName
                fieldRef:
                  apiVersion: apiVersion
                  fieldPath: fieldPath
              - mode: 8
                path: path
                resourceFieldRef:
                  divisor: divisor
                  resource: resource
                  containerName: containerName
                fieldRef:
                  apiVersion: apiVersion
                  fieldPath: fieldPath
            configMap:
              name: name
              optional: true
              items:
              - mode: 9
                path: path
                key: key
              - mode: 9
                path: path
                key: key
            secret:
              name: name
              optional: true
              items:
              - mode: 9
                path: path
                key: key
              - mode: 9
                path: path
                key: key
            serviceAccountToken:
              path: path
              audience: audience
              expirationSeconds: 1
          defaultMode: 6
        cephfs:
          path: path
          secretRef:
            name: name
          secretFile: secretFile
          readOnly: true
          user: user
          monitors:
          - monitors
          - monitors
        scaleIO:
          system: system
          protectionDomain: protectionDomain
          sslEnabled: true
          storageMode: storageMode
          volumeName: volumeName
          secretRef:
            name: name
          readOnly: true
          fsType: fsType
          storagePool: storagePool
          gateway: gateway
        emptyDir:
          sizeLimit: sizeLimit
          medium: medium
        glusterfs:
          path: path
          endpoints: endpoints
          readOnly: true
        gcePersistentDisk:
          partition: 6
          readOnly: true
          pdName: pdName
          fsType: fsType
        photonPersistentDisk:
          pdID: pdID
          fsType: fsType
        azureDisk:
          diskName: diskName
          kind: "{}"
          readOnly: true
          cachingMode: "{}"
          diskURI: diskURI
          fsType: fsType
        cinder:
          secretRef:
            name: name
          volumeID: volumeID
          readOnly: true
          fsType: fsType
        downwardAPI:
          defaultMode: 6
          items:
          - mode: 8
            path: path
            resourceFieldRef:
              divisor: divisor
              resource: resource
              containerName: containerName
            fieldRef:
              apiVersion: apiVersion
              fieldPath: fieldPath
          - mode: 8
            path: path
            resourceFieldRef:
              divisor: divisor
              resource: resource
              containerName: containerName
            fieldRef:
              apiVersion: apiVersion
              fieldPath: fieldPath
        awsElasticBlockStore:
          partition: 5
          volumeID: volumeID
          readOnly: true
          fsType: fsType
        flocker:
          datasetName: datasetName
          datasetUUID: datasetUUID
        iscsi:
          chapAuthSession: true
          iscsiInterface: iscsiInterface
          lun: 3
          chapAuthDiscovery: true
          iqn: iqn
          portals:
          - portals
          - portals
          secretRef:
            name: name
          initiatorName: initiatorName
          readOnly: true
          fsType: fsType
          targetPortal: targetPortal
        rbd:
          image: image
          pool: pool
          secretRef:
            name: name
          readOnly: true
          fsType: fsType
          keyring: keyring
          user: user
          monitors:
          - monitors
          - monitors
        configMap:
          defaultMode: 9
          name: name
          optional: true
          items:
          - mode: 9
            path: path
            key: key
          - mode: 9
            path: path
            key: key
        storageos:
          volumeNamespace: volumeNamespace
          volumeName: volumeName
          secretRef:
            name: name
          readOnly: true
          fsType: fsType
        name: name
        nfs:
          path: path
          server: server
          readOnly: true
        persistentVolumeClaim:
          claimName: claimName
          readOnly: true
        gitRepo:
          repository: repository
          directory: directory
          revision: revision
        portworxVolume:
          volumeID: volumeID
          readOnly: true
          fsType: fsType
        vsphereVolume:
          storagePolicyName: storagePolicyName
          storagePolicyID: storagePolicyID
          volumePath: volumePath
          fsType: fsType
        fc:
          lun: 9
          targetWWNs:
          - targetWWNs
          - targetWWNs
          readOnly: true
          wwids:
          - wwids
          - wwids
          fsType: fsType
        hostPath:
          path: path
          type: "{}"
      properties:
        awsElasticBlockStore:
          $ref: '#/components/schemas/v1.AWSElasticBlockStoreVolumeSource'
        azureDisk:
          $ref: '#/components/schemas/v1.AzureDiskVolumeSource'
        azureFile:
          $ref: '#/components/schemas/v1.AzureFileVolumeSource'
        cephfs:
          $ref: '#/components/schemas/v1.CephFSVolumeSource'
        cinder:
          $ref: '#/components/schemas/v1.CinderVolumeSource'
        configMap:
          $ref: '#/components/schemas/v1.ConfigMapVolumeSource'
        downwardAPI:
          $ref: '#/components/schemas/v1.DownwardAPIVolumeSource'
        emptyDir:
          $ref: '#/components/schemas/v1.EmptyDirVolumeSource'
        fc:
          $ref: '#/components/schemas/v1.FCVolumeSource'
        flexVolume:
          $ref: '#/components/schemas/v1.FlexVolumeSource'
        flocker:
          $ref: '#/components/schemas/v1.FlockerVolumeSource'
        gcePersistentDisk:
          $ref: '#/components/schemas/v1.GCEPersistentDiskVolumeSource'
        gitRepo:
          $ref: '#/components/schemas/v1.GitRepoVolumeSource'
        glusterfs:
          $ref: '#/components/schemas/v1.GlusterfsVolumeSource'
        hostPath:
          $ref: '#/components/schemas/v1.HostPathVolumeSource'
        iscsi:
          $ref: '#/components/schemas/v1.ISCSIVolumeSource'
        name:
          description: "Volume's name. Must be a DNS_LABEL and unique within the pod.\
            \ More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/names/#names"
          type: string
        nfs:
          $ref: '#/components/schemas/v1.NFSVolumeSource'
        persistentVolumeClaim:
          $ref: '#/components/schemas/v1.PersistentVolumeClaimVolumeSource'
        photonPersistentDisk:
          $ref: '#/components/schemas/v1.PhotonPersistentDiskVolumeSource'
        portworxVolume:
          $ref: '#/components/schemas/v1.PortworxVolumeSource'
        projected:
          $ref: '#/components/schemas/v1.ProjectedVolumeSource'
        quobyte:
          $ref: '#/components/schemas/v1.QuobyteVolumeSource'
        rbd:
          $ref: '#/components/schemas/v1.RBDVolumeSource'
        scaleIO:
          $ref: '#/components/schemas/v1.ScaleIOVolumeSource'
        secret:
          $ref: '#/components/schemas/v1.SecretVolumeSource'
        storageos:
          $ref: '#/components/schemas/v1.StorageOSVolumeSource'
        vsphereVolume:
          $ref: '#/components/schemas/v1.VsphereVirtualDiskVolumeSource'
      required:
      - name
      type: object
    v1.VolumeDevice:
      description: volumeDevice describes a mapping of a raw block device within a
        container.
      example:
        devicePath: devicePath
        name: name
      properties:
        devicePath:
          description: devicePath is the path inside of the container that the device
            will be mapped to.
          type: string
        name:
          description: name must match the name of a persistentVolumeClaim in the
            pod
          type: string
      required:
      - devicePath
      - name
      type: object
    v1.VolumeMount:
      description: VolumeMount describes a mounting of a Volume within a container.
      example:
        mountPath: mountPath
        mountPropagation: "{}"
        name: name
        readOnly: true
        subPath: subPath
      properties:
        mountPath:
          description: Path within the container at which the volume should be mounted.  Must
            not contain ':'.
          type: string
        mountPropagation:
          $ref: '#/components/schemas/v1.MountPropagationMode'
        name:
          description: This must match the Name of a Volume.
          type: string
        readOnly:
          description: "Mounted read-only if true, read-write otherwise (false or\
            \ unspecified). Defaults to false."
          type: boolean
        subPath:
          description: Path within the volume from which the container's volume should
            be mounted. Defaults to "" (volume's root).
          type: string
      required:
      - mountPath
      - name
      type: object
    v1.VolumeNodeAffinity:
      description: VolumeNodeAffinity defines constraints that limit what nodes this
        volume can be accessed from.
      properties:
        required:
          $ref: '#/components/schemas/v1.NodeSelector'
      type: object
    v1.VolumeProjection:
      description: Projection that may be projected along with other supported volume
        types
      example:
        downwardAPI:
          items:
          - mode: 8
            path: path
            resourceFieldRef:
              divisor: divisor
              resource: resource
              containerName: containerName
            fieldRef:
              apiVersion: apiVersion
              fieldPath: fieldPath
          - mode: 8
            path: path
            resourceFieldRef:
              divisor: divisor
              resource: resource
              containerName: containerName
            fieldRef:
              apiVersion: apiVersion
              fieldPath: fieldPath
        configMap:
          name: name
          optional: true
          items:
          - mode: 9
            path: path
            key: key
          - mode: 9
            path: path
            key: key
        secret:
          name: name
          optional: true
          items:
          - mode: 9
            path: path
            key: key
          - mode: 9
            path: path
            key: key
        serviceAccountToken:
          path: path
          audience: audience
          expirationSeconds: 1
      properties:
        configMap:
          $ref: '#/components/schemas/v1.ConfigMapProjection'
        downwardAPI:
          $ref: '#/components/schemas/v1.DownwardAPIProjection'
        secret:
          $ref: '#/components/schemas/v1.SecretProjection'
        serviceAccountToken:
          $ref: '#/components/schemas/v1.ServiceAccountTokenProjection'
      type: object
    v1.VsphereVirtualDiskVolumeSource:
      description: Represents a vSphere volume resource.
      example:
        storagePolicyName: storagePolicyName
        storagePolicyID: storagePolicyID
        volumePath: volumePath
        fsType: fsType
      properties:
        fsType:
          description: "Filesystem type to mount. Must be a filesystem type supported\
            \ by the host operating system. Ex. \"ext4\", \"xfs\", \"ntfs\". Implicitly\
            \ inferred to be \"ext4\" if unspecified."
          type: string
        storagePolicyID:
          description: Storage Policy Based Management (SPBM) profile ID associated
            with the StoragePolicyName.
          type: string
        storagePolicyName:
          description: Storage Policy Based Management (SPBM) profile name.
          type: string
        volumePath:
          description: Path that identifies vSphere volume vmdk
          type: string
      required:
      - volumePath
      type: object
    v1.WeightedPodAffinityTerm:
      description: The weights of all of the matched WeightedPodAffinityTerm fields
        are added per-node to find the most preferred node(s)
      example:
        podAffinityTerm:
          labelSelector:
            matchExpressions:
            - values:
              - values
              - values
              key: key
              operator: operator
            - values:
              - values
              - values
              key: key
              operator: operator
            matchLabels: "{}"
          topologyKey: topologyKey
          namespaces:
          - namespaces
          - namespaces
        weight: 1
      properties:
        podAffinityTerm:
          $ref: '#/components/schemas/v1.PodAffinityTerm'
        weight:
          description: "weight associated with matching the corresponding podAffinityTerm,\
            \ in the range 1-100."
          format: int32
          type: integer
      required:
      - podAffinityTerm
      - weight
      type: object
    v1beta1.Eviction:
      description: Eviction evicts a pod from its node subject to certain policies
        and safety constraints. This is a subresource of Pod.  A request to cause
        such an eviction is created by POSTing to .../pods/<pod name>/evictions.
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
          type: string
        deleteOptions:
          $ref: '#/components/schemas/v1.DeleteOptions'
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: '#/components/schemas/v1.ObjectMeta'
      type: object
    runtime.RawExtension:
      example:
        Raw: Raw
      properties:
        Raw:
          type: string
      required:
      - Raw
      type: object
    v1.BrokerTemplateInstance:
      description: BrokerTemplateInstance holds the service broker-related state associated
        with a TemplateInstance.  BrokerTemplateInstance is part of an experimental
        API.
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
          type: string
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: '#/components/schemas/v1.ObjectMeta'
        spec:
          $ref: '#/components/schemas/v1.BrokerTemplateInstanceSpec'
      required:
      - spec
      type: object
    v1.BrokerTemplateInstanceList:
      description: BrokerTemplateInstanceList is a list of BrokerTemplateInstance
        objects.
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
          type: string
        items:
          description: items is a list of BrokerTemplateInstances
          items:
            $ref: '#/components/schemas/v1.BrokerTemplateInstance'
          type: array
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: '#/components/schemas/v1.ListMeta'
      required:
      - items
      type: object
    v1.BrokerTemplateInstanceSpec:
      description: BrokerTemplateInstanceSpec describes the state of a BrokerTemplateInstance.
      properties:
        bindingIDs:
          description: bindingids is a list of 'binding_id's provided during successive
            bind calls to the template service broker.
          items:
            type: string
          type: array
        secret:
          $ref: '#/components/schemas/v1.ObjectReference'
        templateInstance:
          $ref: '#/components/schemas/v1.ObjectReference'
      required:
      - secret
      - templateInstance
      type: object
    v1.Parameter:
      description: Parameter defines a name/value variable that is to be processed
        during the Template to Config transformation.
      example:
        displayName: displayName
        name: name
        description: description
        from: from
        generate: generate
        value: value
        required: true
      properties:
        description:
          description: Description of a parameter. Optional.
          type: string
        displayName:
          description: "Optional: The name that will show in UI instead of parameter\
            \ 'Name'"
          type: string
        from:
          description: From is an input value for the generator. Optional.
          type: string
        generate:
          description: |-
            generate specifies the generator to be used to generate random string from an input value specified by From field. The result string is stored into Value field. If empty, no generator is being used, leaving the result Value untouched. Optional.

            The only supported generator is "expression", which accepts a "from" value in the form of a simple regular expression containing the range expression "[a-zA-Z0-9]", and the length expression "a{length}".

            Examples:

            from             | value
          type: string
        name:
          description: "Name must be set and it can be referenced in Template Items\
            \ using ${PARAMETER_NAME}. Required."
          type: string
        required:
          description: "Optional: Indicates the parameter must have a value.  Defaults\
            \ to false."
          type: boolean
        value:
          description: "Value holds the Parameter data. If specified, the generator\
            \ will be ignored. The value replaces all occurrences of the Parameter\
            \ ${Name} expression during the Template to Config transformation. Optional."
          type: string
      required:
      - name
      type: object
    v1.Template:
      description: Template contains the inputs needed to produce a Config.
      example:
        metadata:
          generation: 6
          finalizers:
          - finalizers
          - finalizers
          resourceVersion: resourceVersion
          annotations: "{}"
          generateName: generateName
          deletionTimestamp: deletionTimestamp
          labels: "{}"
          ownerReferences:
          - uid: uid
            controller: true
            apiVersion: apiVersion
            kind: kind
            name: name
            blockOwnerDeletion: true
          - uid: uid
            controller: true
            apiVersion: apiVersion
            kind: kind
            name: name
            blockOwnerDeletion: true
          selfLink: selfLink
          deletionGracePeriodSeconds: 0
          uid: uid
          initializers:
            result:
              reason: reason
              metadata:
                continue: continue
                resourceVersion: resourceVersion
                selfLink: selfLink
              apiVersion: apiVersion
              code: 1
              kind: kind
              details:
                uid: uid
                kind: kind
                causes:
                - reason: reason
                  field: field
                  message: message
                - reason: reason
                  field: field
                  message: message
                retryAfterSeconds: 5
                name: name
                group: group
              message: message
              status: status
            pending:
            - name: name
            - name: name
          clusterName: clusterName
          creationTimestamp: creationTimestamp
          name: name
          namespace: namespace
        apiVersion: apiVersion
        kind: kind
        objects:
        - Raw: Raw
        - Raw: Raw
        message: message
        parameters:
        - displayName: displayName
          name: name
          description: description
          from: from
          generate: generate
          value: value
          required: true
        - displayName: displayName
          name: name
          description: description
          from: from
          generate: generate
          value: value
          required: true
        labels: "{}"
      properties:
        parameters:
          description: parameters is an optional array of Parameters used during the
            Template to Config transformation.
          items:
            $ref: '#/components/schemas/v1.Parameter'
          type: array
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
          type: string
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
          type: string
        labels:
          description: labels is a optional set of labels that are applied to every
            object during the Template to Config transformation.
          properties: {}
          type: object
        message:
          description: message is an optional instructional message that will be displayed
            when this template is instantiated. This field should inform the user
            how to utilize the newly created resources. Parameter substitution will
            be performed on the message before being displayed so that generated credentials
            and other parameters can be included in the output.
          type: string
        metadata:
          $ref: '#/components/schemas/v1.ObjectMeta'
        objects:
          description: "objects is an array of resources to include in this template.\
            \ If a namespace value is hardcoded in the object, it will be removed\
            \ during template instantiation, however if the namespace value is, or\
            \ contains, a ${PARAMETER_REFERENCE}, the resolved value after parameter\
            \ substitution will be respected and the object will be created in that\
            \ namespace."
          items:
            $ref: '#/components/schemas/runtime.RawExtension'
          type: array
      required:
      - objects
      type: object
    v1.TemplateInstance:
      description: TemplateInstance requests and records the instantiation of a Template.
        TemplateInstance is part of an experimental API.
      example:
        metadata:
          generation: 6
          finalizers:
          - finalizers
          - finalizers
          resourceVersion: resourceVersion
          annotations: "{}"
          generateName: generateName
          deletionTimestamp: deletionTimestamp
          labels: "{}"
          ownerReferences:
          - uid: uid
            controller: true
            apiVersion: apiVersion
            kind: kind
            name: name
            blockOwnerDeletion: true
          - uid: uid
            controller: true
            apiVersion: apiVersion
            kind: kind
            name: name
            blockOwnerDeletion: true
          selfLink: selfLink
          deletionGracePeriodSeconds: 0
          uid: uid
          initializers:
            result:
              reason: reason
              metadata:
                continue: continue
                resourceVersion: resourceVersion
                selfLink: selfLink
              apiVersion: apiVersion
              code: 1
              kind: kind
              details:
                uid: uid
                kind: kind
                causes:
                - reason: reason
                  field: field
                  message: message
                - reason: reason
                  field: field
                  message: message
                retryAfterSeconds: 5
                name: name
                group: group
              message: message
              status: status
            pending:
            - name: name
            - name: name
          clusterName: clusterName
          creationTimestamp: creationTimestamp
          name: name
          namespace: namespace
        apiVersion: apiVersion
        kind: kind
        spec:
          requester:
            uid: uid
            extra: "{}"
            groups:
            - groups
            - groups
            username: username
          template:
            metadata:
              generation: 6
              finalizers:
              - finalizers
              - finalizers
              resourceVersion: resourceVersion
              annotations: "{}"
              generateName: generateName
              deletionTimestamp: deletionTimestamp
              labels: "{}"
              ownerReferences:
              - uid: uid
                controller: true
                apiVersion: apiVersion
                kind: kind
                name: name
                blockOwnerDeletion: true
              - uid: uid
                controller: true
                apiVersion: apiVersion
                kind: kind
                name: name
                blockOwnerDeletion: true
              selfLink: selfLink
              deletionGracePeriodSeconds: 0
              uid: uid
              initializers:
                result:
                  reason: reason
                  metadata:
                    continue: continue
                    resourceVersion: resourceVersion
                    selfLink: selfLink
                  apiVersion: apiVersion
                  code: 1
                  kind: kind
                  details:
                    uid: uid
                    kind: kind
                    causes:
                    - reason: reason
                      field: field
                      message: message
                    - reason: reason
                      field: field
                      message: message
                    retryAfterSeconds: 5
                    name: name
                    group: group
                  message: message
                  status: status
                pending:
                - name: name
                - name: name
              clusterName: clusterName
              creationTimestamp: creationTimestamp
              name: name
              namespace: namespace
            apiVersion: apiVersion
            kind: kind
            objects:
            - Raw: Raw
            - Raw: Raw
            message: message
            parameters:
            - displayName: displayName
              name: name
              description: description
              from: from
              generate: generate
              value: value
              required: true
            - displayName: displayName
              name: name
              description: description
              from: from
              generate: generate
              value: value
              required: true
            labels: "{}"
          secret:
            name: name
        status:
          objects:
          - ref:
              uid: uid
              apiVersion: apiVersion
              kind: kind
              resourceVersion: resourceVersion
              fieldPath: fieldPath
              name: name
              namespace: namespace
          - ref:
              uid: uid
              apiVersion: apiVersion
              kind: kind
              resourceVersion: resourceVersion
              fieldPath: fieldPath
              name: name
              namespace: namespace
          conditions:
          - reason: reason
            lastTransitionTime: lastTransitionTime
            message: message
            type: type
            status: status
          - reason: reason
            lastTransitionTime: lastTransitionTime
            message: message
            type: type
            status: status
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
          type: string
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: '#/components/schemas/v1.ObjectMeta'
        spec:
          $ref: '#/components/schemas/v1.TemplateInstanceSpec'
        status:
          $ref: '#/components/schemas/v1.TemplateInstanceStatus'
      required:
      - spec
      - status
      type: object
    v1.TemplateInstanceCondition:
      description: TemplateInstanceCondition contains condition information for a
        TemplateInstance.
      example:
        reason: reason
        lastTransitionTime: lastTransitionTime
        message: message
        type: type
        status: status
      properties:
        lastTransitionTime:
          description: LastTransitionTime is the last time a condition status transitioned
            from one state to another.
          type: string
        message:
          description: "Message is a human readable description of the details of\
            \ the last transition, complementing reason."
          type: string
        reason:
          description: Reason is a brief machine readable explanation for the condition's
            last transition.
          type: string
        status:
          description: "Status of the condition, one of True, False or Unknown."
          type: string
        type:
          description: "Type of the condition, currently Ready or InstantiateFailure."
          type: string
      required:
      - lastTransitionTime
      - message
      - reason
      - status
      - type
      type: object
    v1.TemplateInstanceList:
      description: TemplateInstanceList is a list of TemplateInstance objects.
      example:
        metadata:
          continue: continue
          resourceVersion: resourceVersion
          selfLink: selfLink
        apiVersion: apiVersion
        kind: kind
        items:
        - metadata:
            generation: 6
            finalizers:
            - finalizers
            - finalizers
            resourceVersion: resourceVersion
            annotations: "{}"
            generateName: generateName
            deletionTimestamp: deletionTimestamp
            labels: "{}"
            ownerReferences:
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            selfLink: selfLink
            deletionGracePeriodSeconds: 0
            uid: uid
            initializers:
              result:
                reason: reason
                metadata:
                  continue: continue
                  resourceVersion: resourceVersion
                  selfLink: selfLink
                apiVersion: apiVersion
                code: 1
                kind: kind
                details:
                  uid: uid
                  kind: kind
                  causes:
                  - reason: reason
                    field: field
                    message: message
                  - reason: reason
                    field: field
                    message: message
                  retryAfterSeconds: 5
                  name: name
                  group: group
                message: message
                status: status
              pending:
              - name: name
              - name: name
            clusterName: clusterName
            creationTimestamp: creationTimestamp
            name: name
            namespace: namespace
          apiVersion: apiVersion
          kind: kind
          spec:
            requester:
              uid: uid
              extra: "{}"
              groups:
              - groups
              - groups
              username: username
            template:
              metadata:
                generation: 6
                finalizers:
                - finalizers
                - finalizers
                resourceVersion: resourceVersion
                annotations: "{}"
                generateName: generateName
                deletionTimestamp: deletionTimestamp
                labels: "{}"
                ownerReferences:
                - uid: uid
                  controller: true
                  apiVersion: apiVersion
                  kind: kind
                  name: name
                  blockOwnerDeletion: true
                - uid: uid
                  controller: true
                  apiVersion: apiVersion
                  kind: kind
                  name: name
                  blockOwnerDeletion: true
                selfLink: selfLink
                deletionGracePeriodSeconds: 0
                uid: uid
                initializers:
                  result:
                    reason: reason
                    metadata:
                      continue: continue
                      resourceVersion: resourceVersion
                      selfLink: selfLink
                    apiVersion: apiVersion
                    code: 1
                    kind: kind
                    details:
                      uid: uid
                      kind: kind
                      causes:
                      - reason: reason
                        field: field
                        message: message
                      - reason: reason
                        field: field
                        message: message
                      retryAfterSeconds: 5
                      name: name
                      group: group
                    message: message
                    status: status
                  pending:
                  - name: name
                  - name: name
                clusterName: clusterName
                creationTimestamp: creationTimestamp
                name: name
                namespace: namespace
              apiVersion: apiVersion
              kind: kind
              objects:
              - Raw: Raw
              - Raw: Raw
              message: message
              parameters:
              - displayName: displayName
                name: name
                description: description
                from: from
                generate: generate
                value: value
                required: true
              - displayName: displayName
                name: name
                description: description
                from: from
                generate: generate
                value: value
                required: true
              labels: "{}"
            secret:
              name: name
          status:
            objects:
            - ref:
                uid: uid
                apiVersion: apiVersion
                kind: kind
                resourceVersion: resourceVersion
                fieldPath: fieldPath
                name: name
                namespace: namespace
            - ref:
                uid: uid
                apiVersion: apiVersion
                kind: kind
                resourceVersion: resourceVersion
                fieldPath: fieldPath
                name: name
                namespace: namespace
            conditions:
            - reason: reason
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
              status: status
            - reason: reason
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
              status: status
        - metadata:
            generation: 6
            finalizers:
            - finalizers
            - finalizers
            resourceVersion: resourceVersion
            annotations: "{}"
            generateName: generateName
            deletionTimestamp: deletionTimestamp
            labels: "{}"
            ownerReferences:
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            selfLink: selfLink
            deletionGracePeriodSeconds: 0
            uid: uid
            initializers:
              result:
                reason: reason
                metadata:
                  continue: continue
                  resourceVersion: resourceVersion
                  selfLink: selfLink
                apiVersion: apiVersion
                code: 1
                kind: kind
                details:
                  uid: uid
                  kind: kind
                  causes:
                  - reason: reason
                    field: field
                    message: message
                  - reason: reason
                    field: field
                    message: message
                  retryAfterSeconds: 5
                  name: name
                  group: group
                message: message
                status: status
              pending:
              - name: name
              - name: name
            clusterName: clusterName
            creationTimestamp: creationTimestamp
            name: name
            namespace: namespace
          apiVersion: apiVersion
          kind: kind
          spec:
            requester:
              uid: uid
              extra: "{}"
              groups:
              - groups
              - groups
              username: username
            template:
              metadata:
                generation: 6
                finalizers:
                - finalizers
                - finalizers
                resourceVersion: resourceVersion
                annotations: "{}"
                generateName: generateName
                deletionTimestamp: deletionTimestamp
                labels: "{}"
                ownerReferences:
                - uid: uid
                  controller: true
                  apiVersion: apiVersion
                  kind: kind
                  name: name
                  blockOwnerDeletion: true
                - uid: uid
                  controller: true
                  apiVersion: apiVersion
                  kind: kind
                  name: name
                  blockOwnerDeletion: true
                selfLink: selfLink
                deletionGracePeriodSeconds: 0
                uid: uid
                initializers:
                  result:
                    reason: reason
                    metadata:
                      continue: continue
                      resourceVersion: resourceVersion
                      selfLink: selfLink
                    apiVersion: apiVersion
                    code: 1
                    kind: kind
                    details:
                      uid: uid
                      kind: kind
                      causes:
                      - reason: reason
                        field: field
                        message: message
                      - reason: reason
                        field: field
                        message: message
                      retryAfterSeconds: 5
                      name: name
                      group: group
                    message: message
                    status: status
                  pending:
                  - name: name
                  - name: name
                clusterName: clusterName
                creationTimestamp: creationTimestamp
                name: name
                namespace: namespace
              apiVersion: apiVersion
              kind: kind
              objects:
              - Raw: Raw
              - Raw: Raw
              message: message
              parameters:
              - displayName: displayName
                name: name
                description: description
                from: from
                generate: generate
                value: value
                required: true
              - displayName: displayName
                name: name
                description: description
                from: from
                generate: generate
                value: value
                required: true
              labels: "{}"
            secret:
              name: name
          status:
            objects:
            - ref:
                uid: uid
                apiVersion: apiVersion
                kind: kind
                resourceVersion: resourceVersion
                fieldPath: fieldPath
                name: name
                namespace: namespace
            - ref:
                uid: uid
                apiVersion: apiVersion
                kind: kind
                resourceVersion: resourceVersion
                fieldPath: fieldPath
                name: name
                namespace: namespace
            conditions:
            - reason: reason
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
              status: status
            - reason: reason
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
              status: status
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
          type: string
        items:
          description: items is a list of Templateinstances
          items:
            $ref: '#/components/schemas/v1.TemplateInstance'
          type: array
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: '#/components/schemas/v1.ListMeta'
      required:
      - items
      type: object
    v1.TemplateInstanceObject:
      description: TemplateInstanceObject references an object created by a TemplateInstance.
      example:
        ref:
          uid: uid
          apiVersion: apiVersion
          kind: kind
          resourceVersion: resourceVersion
          fieldPath: fieldPath
          name: name
          namespace: namespace
      properties:
        ref:
          $ref: '#/components/schemas/v1.ObjectReference'
      type: object
    v1.TemplateInstanceRequester:
      description: TemplateInstanceRequester holds the identity of an agent requesting
        a template instantiation.
      example:
        uid: uid
        extra: "{}"
        groups:
        - groups
        - groups
        username: username
      properties:
        extra:
          description: extra holds additional information provided by the authenticator.
          properties: {}
          type: object
        groups:
          description: groups represent the groups this user is a part of.
          items:
            type: string
          type: array
        uid:
          description: "uid is a unique value that identifies this user across time;\
            \ if this user is deleted and another user by the same name is added,\
            \ they will have different UIDs."
          type: string
        username:
          description: username uniquely identifies this user among all active users.
          type: string
      type: object
    v1.TemplateInstanceSpec:
      description: TemplateInstanceSpec describes the desired state of a TemplateInstance.
      example:
        requester:
          uid: uid
          extra: "{}"
          groups:
          - groups
          - groups
          username: username
        template:
          metadata:
            generation: 6
            finalizers:
            - finalizers
            - finalizers
            resourceVersion: resourceVersion
            annotations: "{}"
            generateName: generateName
            deletionTimestamp: deletionTimestamp
            labels: "{}"
            ownerReferences:
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            selfLink: selfLink
            deletionGracePeriodSeconds: 0
            uid: uid
            initializers:
              result:
                reason: reason
                metadata:
                  continue: continue
                  resourceVersion: resourceVersion
                  selfLink: selfLink
                apiVersion: apiVersion
                code: 1
                kind: kind
                details:
                  uid: uid
                  kind: kind
                  causes:
                  - reason: reason
                    field: field
                    message: message
                  - reason: reason
                    field: field
                    message: message
                  retryAfterSeconds: 5
                  name: name
                  group: group
                message: message
                status: status
              pending:
              - name: name
              - name: name
            clusterName: clusterName
            creationTimestamp: creationTimestamp
            name: name
            namespace: namespace
          apiVersion: apiVersion
          kind: kind
          objects:
          - Raw: Raw
          - Raw: Raw
          message: message
          parameters:
          - displayName: displayName
            name: name
            description: description
            from: from
            generate: generate
            value: value
            required: true
          - displayName: displayName
            name: name
            description: description
            from: from
            generate: generate
            value: value
            required: true
          labels: "{}"
        secret:
          name: name
      properties:
        requester:
          $ref: '#/components/schemas/v1.TemplateInstanceRequester'
        secret:
          $ref: '#/components/schemas/v1.LocalObjectReference'
        template:
          $ref: '#/components/schemas/v1.Template'
      required:
      - requester
      - template
      type: object
    v1.TemplateInstanceStatus:
      description: TemplateInstanceStatus describes the current state of a TemplateInstance.
      example:
        objects:
        - ref:
            uid: uid
            apiVersion: apiVersion
            kind: kind
            resourceVersion: resourceVersion
            fieldPath: fieldPath
            name: name
            namespace: namespace
        - ref:
            uid: uid
            apiVersion: apiVersion
            kind: kind
            resourceVersion: resourceVersion
            fieldPath: fieldPath
            name: name
            namespace: namespace
        conditions:
        - reason: reason
          lastTransitionTime: lastTransitionTime
          message: message
          type: type
          status: status
        - reason: reason
          lastTransitionTime: lastTransitionTime
          message: message
          type: type
          status: status
      properties:
        conditions:
          description: conditions represent the latest available observations of a
            TemplateInstance's current state.
          items:
            $ref: '#/components/schemas/v1.TemplateInstanceCondition'
          type: array
        objects:
          description: Objects references the objects created by the TemplateInstance.
          items:
            $ref: '#/components/schemas/v1.TemplateInstanceObject'
          type: array
      type: object
    v1.TemplateList:
      description: TemplateList is a list of Template objects.
      example:
        metadata:
          continue: continue
          resourceVersion: resourceVersion
          selfLink: selfLink
        apiVersion: apiVersion
        kind: kind
        items:
        - metadata:
            generation: 6
            finalizers:
            - finalizers
            - finalizers
            resourceVersion: resourceVersion
            annotations: "{}"
            generateName: generateName
            deletionTimestamp: deletionTimestamp
            labels: "{}"
            ownerReferences:
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            selfLink: selfLink
            deletionGracePeriodSeconds: 0
            uid: uid
            initializers:
              result:
                reason: reason
                metadata:
                  continue: continue
                  resourceVersion: resourceVersion
                  selfLink: selfLink
                apiVersion: apiVersion
                code: 1
                kind: kind
                details:
                  uid: uid
                  kind: kind
                  causes:
                  - reason: reason
                    field: field
                    message: message
                  - reason: reason
                    field: field
                    message: message
                  retryAfterSeconds: 5
                  name: name
                  group: group
                message: message
                status: status
              pending:
              - name: name
              - name: name
            clusterName: clusterName
            creationTimestamp: creationTimestamp
            name: name
            namespace: namespace
          apiVersion: apiVersion
          kind: kind
          objects:
          - Raw: Raw
          - Raw: Raw
          message: message
          parameters:
          - displayName: displayName
            name: name
            description: description
            from: from
            generate: generate
            value: value
            required: true
          - displayName: displayName
            name: name
            description: description
            from: from
            generate: generate
            value: value
            required: true
          labels: "{}"
        - metadata:
            generation: 6
            finalizers:
            - finalizers
            - finalizers
            resourceVersion: resourceVersion
            annotations: "{}"
            generateName: generateName
            deletionTimestamp: deletionTimestamp
            labels: "{}"
            ownerReferences:
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            selfLink: selfLink
            deletionGracePeriodSeconds: 0
            uid: uid
            initializers:
              result:
                reason: reason
                metadata:
                  continue: continue
                  resourceVersion: resourceVersion
                  selfLink: selfLink
                apiVersion: apiVersion
                code: 1
                kind: kind
                details:
                  uid: uid
                  kind: kind
                  causes:
                  - reason: reason
                    field: field
                    message: message
                  - reason: reason
                    field: field
                    message: message
                  retryAfterSeconds: 5
                  name: name
                  group: group
                message: message
                status: status
              pending:
              - name: name
              - name: name
            clusterName: clusterName
            creationTimestamp: creationTimestamp
            name: name
            namespace: namespace
          apiVersion: apiVersion
          kind: kind
          objects:
          - Raw: Raw
          - Raw: Raw
          message: message
          parameters:
          - displayName: displayName
            name: name
            description: description
            from: from
            generate: generate
            value: value
            required: true
          - displayName: displayName
            name: name
            description: description
            from: from
            generate: generate
            value: value
            required: true
          labels: "{}"
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
          type: string
        items:
          description: Items is a list of templates
          items:
            $ref: '#/components/schemas/v1.Template'
          type: array
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: '#/components/schemas/v1.ListMeta'
      required:
      - items
      type: object
    v1.Route:
      description: |-
        A route allows developers to expose services through an HTTP(S) aware load balancing and proxy layer via a public DNS entry. The route may further specify TLS options and a certificate, or specify a public CNAME that the router should also accept for HTTP and HTTPS traffic. An administrator typically configures their router to be visible outside the cluster firewall, and may also add additional security, caching, or traffic controls on the service content. Routers usually talk directly to the service endpoints.

        Once a route is created, the `host` field may not be changed. Generally, routers use the oldest route with a given host when resolving conflicts.

        Routers are subject to additional customization and may support additional controls via the annotations field.

        Because administrators may configure multiple routers, the route status field is used to return information to clients about the names and states of the route under each router. If a client chooses a duplicate name, for instance, the route status conditions are used to indicate the route cannot be chosen.
      example:
        metadata:
          generation: 6
          finalizers:
          - finalizers
          - finalizers
          resourceVersion: resourceVersion
          annotations: "{}"
          generateName: generateName
          deletionTimestamp: deletionTimestamp
          labels: "{}"
          ownerReferences:
          - uid: uid
            controller: true
            apiVersion: apiVersion
            kind: kind
            name: name
            blockOwnerDeletion: true
          - uid: uid
            controller: true
            apiVersion: apiVersion
            kind: kind
            name: name
            blockOwnerDeletion: true
          selfLink: selfLink
          deletionGracePeriodSeconds: 0
          uid: uid
          initializers:
            result:
              reason: reason
              metadata:
                continue: continue
                resourceVersion: resourceVersion
                selfLink: selfLink
              apiVersion: apiVersion
              code: 1
              kind: kind
              details:
                uid: uid
                kind: kind
                causes:
                - reason: reason
                  field: field
                  message: message
                - reason: reason
                  field: field
                  message: message
                retryAfterSeconds: 5
                name: name
                group: group
              message: message
              status: status
            pending:
            - name: name
            - name: name
          clusterName: clusterName
          creationTimestamp: creationTimestamp
          name: name
          namespace: namespace
        apiVersion: apiVersion
        kind: kind
        spec:
          path: path
          alternateBackends:
          - kind: kind
            name: name
            weight: 0
          - kind: kind
            name: name
            weight: 0
          port:
            targetPort: targetPort
          wildcardPolicy: wildcardPolicy
          host: host
          tls:
            termination: termination
            insecureEdgeTerminationPolicy: insecureEdgeTerminationPolicy
            certificate: certificate
            destinationCACertificate: destinationCACertificate
            caCertificate: caCertificate
            key: key
          to:
            kind: kind
            name: name
            weight: 0
        status:
          ingress:
          - routerName: routerName
            wildcardPolicy: wildcardPolicy
            host: host
            routerCanonicalHostname: routerCanonicalHostname
            conditions:
            - reason: reason
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
              status: status
            - reason: reason
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
              status: status
          - routerName: routerName
            wildcardPolicy: wildcardPolicy
            host: host
            routerCanonicalHostname: routerCanonicalHostname
            conditions:
            - reason: reason
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
              status: status
            - reason: reason
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
              status: status
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
          type: string
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: '#/components/schemas/v1.ObjectMeta'
        spec:
          $ref: '#/components/schemas/v1.RouteSpec'
        status:
          $ref: '#/components/schemas/v1.RouteStatus'
      required:
      - spec
      - status
      type: object
    v1.RouteIngress:
      description: RouteIngress holds information about the places where a route is
        exposed.
      example:
        routerName: routerName
        wildcardPolicy: wildcardPolicy
        host: host
        routerCanonicalHostname: routerCanonicalHostname
        conditions:
        - reason: reason
          lastTransitionTime: lastTransitionTime
          message: message
          type: type
          status: status
        - reason: reason
          lastTransitionTime: lastTransitionTime
          message: message
          type: type
          status: status
      properties:
        host:
          description: Host is the host string under which the route is exposed; this
            value is required
          type: string
        conditions:
          description: "Conditions is the state of the route, may be empty."
          items:
            $ref: '#/components/schemas/v1.RouteIngressCondition'
          type: array
        routerCanonicalHostname:
          description: CanonicalHostname is the external host name for the router
            that can be used as a CNAME for the host requested for this route. This
            value is optional and may not be set in all cases.
          type: string
        routerName:
          description: Name is a name chosen by the router to identify itself; this
            value is required
          type: string
        wildcardPolicy:
          description: Wildcard policy is the wildcard policy that was allowed where
            this route is exposed.
          type: string
      type: object
    v1.RouteIngressCondition:
      description: RouteIngressCondition contains details for the current condition
        of this route on a particular router.
      example:
        reason: reason
        lastTransitionTime: lastTransitionTime
        message: message
        type: type
        status: status
      properties:
        lastTransitionTime:
          description: RFC 3339 date and time when this condition last transitioned
          type: string
        message:
          description: Human readable message indicating details about last transition.
          type: string
        reason:
          description: "(brief) reason for the condition's last transition, and is\
            \ usually a machine and human readable constant"
          type: string
        status:
          description: "Status is the status of the condition. Can be True, False,\
            \ Unknown."
          type: string
        type:
          description: Type is the type of the condition. Currently only Ready.
          type: string
      required:
      - status
      - type
      type: object
    v1.RouteList:
      description: RouteList is a collection of Routes.
      example:
        metadata:
          continue: continue
          resourceVersion: resourceVersion
          selfLink: selfLink
        apiVersion: apiVersion
        kind: kind
        items:
        - metadata:
            generation: 6
            finalizers:
            - finalizers
            - finalizers
            resourceVersion: resourceVersion
            annotations: "{}"
            generateName: generateName
            deletionTimestamp: deletionTimestamp
            labels: "{}"
            ownerReferences:
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            selfLink: selfLink
            deletionGracePeriodSeconds: 0
            uid: uid
            initializers:
              result:
                reason: reason
                metadata:
                  continue: continue
                  resourceVersion: resourceVersion
                  selfLink: selfLink
                apiVersion: apiVersion
                code: 1
                kind: kind
                details:
                  uid: uid
                  kind: kind
                  causes:
                  - reason: reason
                    field: field
                    message: message
                  - reason: reason
                    field: field
                    message: message
                  retryAfterSeconds: 5
                  name: name
                  group: group
                message: message
                status: status
              pending:
              - name: name
              - name: name
            clusterName: clusterName
            creationTimestamp: creationTimestamp
            name: name
            namespace: namespace
          apiVersion: apiVersion
          kind: kind
          spec:
            path: path
            alternateBackends:
            - kind: kind
              name: name
              weight: 0
            - kind: kind
              name: name
              weight: 0
            port:
              targetPort: targetPort
            wildcardPolicy: wildcardPolicy
            host: host
            tls:
              termination: termination
              insecureEdgeTerminationPolicy: insecureEdgeTerminationPolicy
              certificate: certificate
              destinationCACertificate: destinationCACertificate
              caCertificate: caCertificate
              key: key
            to:
              kind: kind
              name: name
              weight: 0
          status:
            ingress:
            - routerName: routerName
              wildcardPolicy: wildcardPolicy
              host: host
              routerCanonicalHostname: routerCanonicalHostname
              conditions:
              - reason: reason
                lastTransitionTime: lastTransitionTime
                message: message
                type: type
                status: status
              - reason: reason
                lastTransitionTime: lastTransitionTime
                message: message
                type: type
                status: status
            - routerName: routerName
              wildcardPolicy: wildcardPolicy
              host: host
              routerCanonicalHostname: routerCanonicalHostname
              conditions:
              - reason: reason
                lastTransitionTime: lastTransitionTime
                message: message
                type: type
                status: status
              - reason: reason
                lastTransitionTime: lastTransitionTime
                message: message
                type: type
                status: status
        - metadata:
            generation: 6
            finalizers:
            - finalizers
            - finalizers
            resourceVersion: resourceVersion
            annotations: "{}"
            generateName: generateName
            deletionTimestamp: deletionTimestamp
            labels: "{}"
            ownerReferences:
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            selfLink: selfLink
            deletionGracePeriodSeconds: 0
            uid: uid
            initializers:
              result:
                reason: reason
                metadata:
                  continue: continue
                  resourceVersion: resourceVersion
                  selfLink: selfLink
                apiVersion: apiVersion
                code: 1
                kind: kind
                details:
                  uid: uid
                  kind: kind
                  causes:
                  - reason: reason
                    field: field
                    message: message
                  - reason: reason
                    field: field
                    message: message
                  retryAfterSeconds: 5
                  name: name
                  group: group
                message: message
                status: status
              pending:
              - name: name
              - name: name
            clusterName: clusterName
            creationTimestamp: creationTimestamp
            name: name
            namespace: namespace
          apiVersion: apiVersion
          kind: kind
          spec:
            path: path
            alternateBackends:
            - kind: kind
              name: name
              weight: 0
            - kind: kind
              name: name
              weight: 0
            port:
              targetPort: targetPort
            wildcardPolicy: wildcardPolicy
            host: host
            tls:
              termination: termination
              insecureEdgeTerminationPolicy: insecureEdgeTerminationPolicy
              certificate: certificate
              destinationCACertificate: destinationCACertificate
              caCertificate: caCertificate
              key: key
            to:
              kind: kind
              name: name
              weight: 0
          status:
            ingress:
            - routerName: routerName
              wildcardPolicy: wildcardPolicy
              host: host
              routerCanonicalHostname: routerCanonicalHostname
              conditions:
              - reason: reason
                lastTransitionTime: lastTransitionTime
                message: message
                type: type
                status: status
              - reason: reason
                lastTransitionTime: lastTransitionTime
                message: message
                type: type
                status: status
            - routerName: routerName
              wildcardPolicy: wildcardPolicy
              host: host
              routerCanonicalHostname: routerCanonicalHostname
              conditions:
              - reason: reason
                lastTransitionTime: lastTransitionTime
                message: message
                type: type
                status: status
              - reason: reason
                lastTransitionTime: lastTransitionTime
                message: message
                type: type
                status: status
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
          type: string
        items:
          description: items is a list of routes
          items:
            $ref: '#/components/schemas/v1.Route'
          type: array
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: '#/components/schemas/v1.ListMeta'
      required:
      - items
      type: object
    v1.RoutePort:
      description: RoutePort defines a port mapping from a router to an endpoint in
        the service endpoints.
      example:
        targetPort: targetPort
      properties:
        targetPort:
          description: "The target port on pods selected by the service this route\
            \ points to. If this is a string, it will be looked up as a named port\
            \ in the target endpoints port list. Required"
          type: string
      required:
      - targetPort
      type: object
    v1.RouteSpec:
      description: |-
        RouteSpec describes the hostname or path the route exposes, any security information, and one to four backends (services) the route points to. Requests are distributed among the backends depending on the weights assigned to each backend. When using roundrobin scheduling the portion of requests that go to each backend is the backend weight divided by the sum of all of the backend weights. When the backend has more than one endpoint the requests that end up on the backend are roundrobin distributed among the endpoints. Weights are between 0 and 256 with default 1. Weight 0 causes no requests to the backend. If all weights are zero the route will be considered to have no backends and return a standard 503 response.

        The `tls` field is optional and allows specific certificates or behavior for the route. Routers typically configure a default certificate on a wildcard domain to terminate routes without explicit certificates, but custom hostnames usually must choose passthrough (send traffic directly to the backend via the TLS Server-Name- Indication field) or provide a certificate.
      example:
        path: path
        alternateBackends:
        - kind: kind
          name: name
          weight: 0
        - kind: kind
          name: name
          weight: 0
        port:
          targetPort: targetPort
        wildcardPolicy: wildcardPolicy
        host: host
        tls:
          termination: termination
          insecureEdgeTerminationPolicy: insecureEdgeTerminationPolicy
          certificate: certificate
          destinationCACertificate: destinationCACertificate
          caCertificate: caCertificate
          key: key
        to:
          kind: kind
          name: name
          weight: 0
      properties:
        host:
          description: host is an alias/DNS that points to the service. Optional.
            If not specified a route name will typically be automatically chosen.
            Must follow DNS952 subdomain conventions.
          type: string
        alternateBackends:
          description: "alternateBackends allows up to 3 additional backends to be\
            \ assigned to the route. Only the Service kind is allowed, and it will\
            \ be defaulted to Service. Use the weight field in RouteTargetReference\
            \ object to specify relative preference."
          items:
            $ref: '#/components/schemas/v1.RouteTargetReference'
          type: array
        path:
          description: "Path that the router watches for, to route traffic for to\
            \ the service. Optional"
          type: string
        port:
          $ref: '#/components/schemas/v1.RoutePort'
        tls:
          $ref: '#/components/schemas/v1.TLSConfig'
        to:
          $ref: '#/components/schemas/v1.RouteTargetReference'
        wildcardPolicy:
          description: Wildcard policy if any for the route. Currently only 'Subdomain'
            or 'None' is allowed.
          type: string
      required:
      - host
      - to
      type: object
    v1.RouteStatus:
      description: "RouteStatus provides relevant info about the status of a route,\
        \ including which routers acknowledge it."
      example:
        ingress:
        - routerName: routerName
          wildcardPolicy: wildcardPolicy
          host: host
          routerCanonicalHostname: routerCanonicalHostname
          conditions:
          - reason: reason
            lastTransitionTime: lastTransitionTime
            message: message
            type: type
            status: status
          - reason: reason
            lastTransitionTime: lastTransitionTime
            message: message
            type: type
            status: status
        - routerName: routerName
          wildcardPolicy: wildcardPolicy
          host: host
          routerCanonicalHostname: routerCanonicalHostname
          conditions:
          - reason: reason
            lastTransitionTime: lastTransitionTime
            message: message
            type: type
            status: status
          - reason: reason
            lastTransitionTime: lastTransitionTime
            message: message
            type: type
            status: status
      properties:
        ingress:
          description: ingress describes the places where the route may be exposed.
            The list of ingress points may contain duplicate Host or RouterName values.
            Routes are considered live once they are `Ready`
          items:
            $ref: '#/components/schemas/v1.RouteIngress'
          type: array
      required:
      - ingress
      type: object
    v1.RouteTargetReference:
      description: RouteTargetReference specifies the target that resolve into endpoints.
        Only the 'Service' kind is allowed. Use 'weight' field to emphasize one over
        others.
      example:
        kind: kind
        name: name
        weight: 0
      properties:
        kind:
          description: "The kind of target that the route is referring to. Currently,\
            \ only 'Service' is allowed"
          type: string
        name:
          description: name of the service/target that is being referred to. e.g.
            name of the service
          type: string
        weight:
          description: "weight as an integer between 0 and 256, default 1, that specifies\
            \ the target's relative weight against other target reference objects.\
            \ 0 suppresses requests to this backend."
          format: int32
          type: integer
      required:
      - kind
      - name
      - weight
      type: object
    v1.TLSConfig:
      description: TLSConfig defines config used to secure a route and provide termination
      example:
        termination: termination
        insecureEdgeTerminationPolicy: insecureEdgeTerminationPolicy
        certificate: certificate
        destinationCACertificate: destinationCACertificate
        caCertificate: caCertificate
        key: key
      properties:
        caCertificate:
          description: caCertificate provides the cert authority certificate contents
          type: string
        certificate:
          description: certificate provides certificate contents
          type: string
        destinationCACertificate:
          description: "destinationCACertificate provides the contents of the ca certificate\
            \ of the final destination.  When using reencrypt termination this file\
            \ should be provided in order to have routers use it for health checks\
            \ on the secure connection. If this field is not specified, the router\
            \ may provide its own destination CA and perform hostname validation using\
            \ the short service name (service.namespace.svc), which allows infrastructure\
            \ generated certificates to automatically verify."
          type: string
        insecureEdgeTerminationPolicy:
          description: |-
            insecureEdgeTerminationPolicy indicates the desired behavior for insecure connections to a route. While each router may make its own decisions on which ports to expose, this is normally port 80.

            * Allow - traffic is sent to the server on the insecure port (default) * Disable - no traffic is allowed on the insecure port. * Redirect - clients are redirected to the secure port.
          type: string
        key:
          description: key provides key file contents
          type: string
        termination:
          description: termination indicates termination type.
          type: string
      required:
      - termination
      type: object
    v1.Image:
      description: Image is an immutable representation of a Docker image and metadata
        at a point in time.
      example:
        dockerImageLayers:
        - size: 6
          name: name
          mediaType: mediaType
        - size: 6
          name: name
          mediaType: mediaType
        dockerImageMetadata: dockerImageMetadata
        metadata:
          generation: 6
          finalizers:
          - finalizers
          - finalizers
          resourceVersion: resourceVersion
          annotations: "{}"
          generateName: generateName
          deletionTimestamp: deletionTimestamp
          labels: "{}"
          ownerReferences:
          - uid: uid
            controller: true
            apiVersion: apiVersion
            kind: kind
            name: name
            blockOwnerDeletion: true
          - uid: uid
            controller: true
            apiVersion: apiVersion
            kind: kind
            name: name
            blockOwnerDeletion: true
          selfLink: selfLink
          deletionGracePeriodSeconds: 0
          uid: uid
          initializers:
            result:
              reason: reason
              metadata:
                continue: continue
                resourceVersion: resourceVersion
                selfLink: selfLink
              apiVersion: apiVersion
              code: 1
              kind: kind
              details:
                uid: uid
                kind: kind
                causes:
                - reason: reason
                  field: field
                  message: message
                - reason: reason
                  field: field
                  message: message
                retryAfterSeconds: 5
                name: name
                group: group
              message: message
              status: status
            pending:
            - name: name
            - name: name
          clusterName: clusterName
          creationTimestamp: creationTimestamp
          name: name
          namespace: namespace
        apiVersion: apiVersion
        kind: kind
        dockerImageReference: dockerImageReference
        dockerImageManifestMediaType: dockerImageManifestMediaType
        dockerImageConfig: dockerImageConfig
        dockerImageMetadataVersion: dockerImageMetadataVersion
        dockerImageManifest: dockerImageManifest
        signatures:
        - metadata:
            generation: 6
            finalizers:
            - finalizers
            - finalizers
            resourceVersion: resourceVersion
            annotations: "{}"
            generateName: generateName
            deletionTimestamp: deletionTimestamp
            labels: "{}"
            ownerReferences:
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            selfLink: selfLink
            deletionGracePeriodSeconds: 0
            uid: uid
            initializers:
              result:
                reason: reason
                metadata:
                  continue: continue
                  resourceVersion: resourceVersion
                  selfLink: selfLink
                apiVersion: apiVersion
                code: 1
                kind: kind
                details:
                  uid: uid
                  kind: kind
                  causes:
                  - reason: reason
                    field: field
                    message: message
                  - reason: reason
                    field: field
                    message: message
                  retryAfterSeconds: 5
                  name: name
                  group: group
                message: message
                status: status
              pending:
              - name: name
              - name: name
            clusterName: clusterName
            creationTimestamp: creationTimestamp
            name: name
            namespace: namespace
          apiVersion: apiVersion
          issuedTo:
            commonName: commonName
            organization: organization
            publicKeyID: publicKeyID
          created: created
          kind: kind
          issuedBy:
            commonName: commonName
            organization: organization
          signedClaims: "{}"
          conditions:
          - reason: reason
            lastTransitionTime: lastTransitionTime
            message: message
            type: type
            lastProbeTime: lastProbeTime
            status: status
          - reason: reason
            lastTransitionTime: lastTransitionTime
            message: message
            type: type
            lastProbeTime: lastProbeTime
            status: status
          type: type
          content: content
          imageIdentity: imageIdentity
        - metadata:
            generation: 6
            finalizers:
            - finalizers
            - finalizers
            resourceVersion: resourceVersion
            annotations: "{}"
            generateName: generateName
            deletionTimestamp: deletionTimestamp
            labels: "{}"
            ownerReferences:
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            selfLink: selfLink
            deletionGracePeriodSeconds: 0
            uid: uid
            initializers:
              result:
                reason: reason
                metadata:
                  continue: continue
                  resourceVersion: resourceVersion
                  selfLink: selfLink
                apiVersion: apiVersion
                code: 1
                kind: kind
                details:
                  uid: uid
                  kind: kind
                  causes:
                  - reason: reason
                    field: field
                    message: message
                  - reason: reason
                    field: field
                    message: message
                  retryAfterSeconds: 5
                  name: name
                  group: group
                message: message
                status: status
              pending:
              - name: name
              - name: name
            clusterName: clusterName
            creationTimestamp: creationTimestamp
            name: name
            namespace: namespace
          apiVersion: apiVersion
          issuedTo:
            commonName: commonName
            organization: organization
            publicKeyID: publicKeyID
          created: created
          kind: kind
          issuedBy:
            commonName: commonName
            organization: organization
          signedClaims: "{}"
          conditions:
          - reason: reason
            lastTransitionTime: lastTransitionTime
            message: message
            type: type
            lastProbeTime: lastProbeTime
            status: status
          - reason: reason
            lastTransitionTime: lastTransitionTime
            message: message
            type: type
            lastProbeTime: lastProbeTime
            status: status
          type: type
          content: content
          imageIdentity: imageIdentity
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
          type: string
        dockerImageConfig:
          description: DockerImageConfig is a JSON blob that the runtime uses to set
            up the container. This is a part of manifest schema v2.
          type: string
        dockerImageLayers:
          description: DockerImageLayers represents the layers in the image. May not
            be set if the image does not define that data.
          items:
            $ref: '#/components/schemas/v1.ImageLayer'
          type: array
        dockerImageManifest:
          description: DockerImageManifest is the raw JSON of the manifest
          type: string
        dockerImageManifestMediaType:
          description: DockerImageManifestMediaType specifies the mediaType of manifest.
            This is a part of manifest schema v2.
          type: string
        dockerImageMetadata:
          description: DockerImageMetadata contains metadata about this image
          type: string
        dockerImageMetadataVersion:
          description: "DockerImageMetadataVersion conveys the version of the object,\
            \ which if empty defaults to \"1.0\""
          type: string
        dockerImageReference:
          description: DockerImageReference is the string that can be used to pull
            this image.
          type: string
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: '#/components/schemas/v1.ObjectMeta'
        signatures:
          description: Signatures holds all signatures of the image.
          items:
            $ref: '#/components/schemas/v1.ImageSignature'
          type: array
      required:
      - dockerImageLayers
      type: object
    v1.ImageImportSpec:
      description: ImageImportSpec describes a request to import a specific image.
      properties:
        from:
          $ref: '#/components/schemas/v1.ObjectReference'
        importPolicy:
          $ref: '#/components/schemas/v1.TagImportPolicy'
        includeManifest:
          description: IncludeManifest determines if the manifest for each image is
            returned in the response
          type: boolean
        referencePolicy:
          $ref: '#/components/schemas/v1.TagReferencePolicy'
        to:
          $ref: '#/components/schemas/v1.LocalObjectReference'
      required:
      - from
      type: object
    v1.ImageImportStatus:
      description: ImageImportStatus describes the result of an image import.
      properties:
        image:
          $ref: '#/components/schemas/v1.Image'
        status:
          $ref: '#/components/schemas/v1.Status'
        tag:
          description: "Tag is the tag this image was located under, if any"
          type: string
      required:
      - status
      type: object
    v1.ImageLayer:
      description: ImageLayer represents a single layer of the image. Some images
        may have multiple layers. Some may have none.
      example:
        size: 6
        name: name
        mediaType: mediaType
      properties:
        mediaType:
          description: MediaType of the referenced object.
          type: string
        name:
          description: Name of the layer as defined by the underlying store.
          type: string
        size:
          description: Size of the layer in bytes as defined by the underlying store.
          format: int64
          type: integer
      required:
      - mediaType
      - name
      - size
      type: object
    v1.ImageList:
      description: ImageList is a list of Image objects.
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
          type: string
        items:
          description: Items is a list of images
          items:
            $ref: '#/components/schemas/v1.Image'
          type: array
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: '#/components/schemas/v1.ListMeta'
      required:
      - items
      type: object
    v1.ImageLookupPolicy:
      description: "ImageLookupPolicy describes how an image stream can be used to\
        \ override the image references used by pods, builds, and other resources\
        \ in a namespace."
      example:
        local: true
      properties:
        local:
          description: "local will change the docker short image references (like\
            \ \"mysql\" or \"php:latest\") on objects in this namespace to the image\
            \ ID whenever they match this image stream, instead of reaching out to\
            \ a remote registry. The name will be fully qualified to an image ID if\
            \ found. The tag's referencePolicy is taken into account on the replaced\
            \ value. Only works within the current namespace."
          type: boolean
      required:
      - local
      type: object
    v1.ImageSignature:
      description: ImageSignature holds a signature of an image. It allows to verify
        image identity and possibly other claims as long as the signature is trusted.
        Based on this information it is possible to restrict runnable images to those
        matching cluster-wide policy. Mandatory fields should be parsed by clients
        doing image verification. The others are parsed from signature's content by
        the server. They serve just an informative purpose.
      example:
        metadata:
          generation: 6
          finalizers:
          - finalizers
          - finalizers
          resourceVersion: resourceVersion
          annotations: "{}"
          generateName: generateName
          deletionTimestamp: deletionTimestamp
          labels: "{}"
          ownerReferences:
          - uid: uid
            controller: true
            apiVersion: apiVersion
            kind: kind
            name: name
            blockOwnerDeletion: true
          - uid: uid
            controller: true
            apiVersion: apiVersion
            kind: kind
            name: name
            blockOwnerDeletion: true
          selfLink: selfLink
          deletionGracePeriodSeconds: 0
          uid: uid
          initializers:
            result:
              reason: reason
              metadata:
                continue: continue
                resourceVersion: resourceVersion
                selfLink: selfLink
              apiVersion: apiVersion
              code: 1
              kind: kind
              details:
                uid: uid
                kind: kind
                causes:
                - reason: reason
                  field: field
                  message: message
                - reason: reason
                  field: field
                  message: message
                retryAfterSeconds: 5
                name: name
                group: group
              message: message
              status: status
            pending:
            - name: name
            - name: name
          clusterName: clusterName
          creationTimestamp: creationTimestamp
          name: name
          namespace: namespace
        apiVersion: apiVersion
        issuedTo:
          commonName: commonName
          organization: organization
          publicKeyID: publicKeyID
        created: created
        kind: kind
        issuedBy:
          commonName: commonName
          organization: organization
        signedClaims: "{}"
        conditions:
        - reason: reason
          lastTransitionTime: lastTransitionTime
          message: message
          type: type
          lastProbeTime: lastProbeTime
          status: status
        - reason: reason
          lastTransitionTime: lastTransitionTime
          message: message
          type: type
          lastProbeTime: lastProbeTime
          status: status
        type: type
        content: content
        imageIdentity: imageIdentity
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
          type: string
        conditions:
          description: Conditions represent the latest available observations of a
            signature's current state.
          items:
            $ref: '#/components/schemas/v1.SignatureCondition'
          type: array
        content:
          description: "Required: An opaque binary string which is an image's signature."
          type: string
        created:
          description: "If specified, it is the time of signature's creation."
          type: string
        imageIdentity:
          description: "A human readable string representing image's identity. It\
            \ could be a product name and version, or an image pull spec (e.g. \"\
            registry.access.redhat.com/rhel7/rhel:7.2\")."
          type: string
        issuedBy:
          $ref: '#/components/schemas/v1.SignatureIssuer'
        issuedTo:
          $ref: '#/components/schemas/v1.SignatureSubject'
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: '#/components/schemas/v1.ObjectMeta'
        signedClaims:
          description: Contains claims from the signature.
          properties: {}
          type: object
        type:
          description: "Required: Describes a type of stored blob."
          type: string
      required:
      - content
      - type
      type: object
    v1.ImageStream:
      description: "ImageStream stores a mapping of tags to images, metadata overrides\
        \ that are applied when images are tagged in a stream, and an optional reference\
        \ to a Docker image repository on a registry."
      example:
        metadata:
          generation: 6
          finalizers:
          - finalizers
          - finalizers
          resourceVersion: resourceVersion
          annotations: "{}"
          generateName: generateName
          deletionTimestamp: deletionTimestamp
          labels: "{}"
          ownerReferences:
          - uid: uid
            controller: true
            apiVersion: apiVersion
            kind: kind
            name: name
            blockOwnerDeletion: true
          - uid: uid
            controller: true
            apiVersion: apiVersion
            kind: kind
            name: name
            blockOwnerDeletion: true
          selfLink: selfLink
          deletionGracePeriodSeconds: 0
          uid: uid
          initializers:
            result:
              reason: reason
              metadata:
                continue: continue
                resourceVersion: resourceVersion
                selfLink: selfLink
              apiVersion: apiVersion
              code: 1
              kind: kind
              details:
                uid: uid
                kind: kind
                causes:
                - reason: reason
                  field: field
                  message: message
                - reason: reason
                  field: field
                  message: message
                retryAfterSeconds: 5
                name: name
                group: group
              message: message
              status: status
            pending:
            - name: name
            - name: name
          clusterName: clusterName
          creationTimestamp: creationTimestamp
          name: name
          namespace: namespace
        apiVersion: apiVersion
        kind: kind
        spec:
          dockerImageRepository: dockerImageRepository
          tags:
          - generation: 0
            reference: true
            importPolicy:
              scheduled: true
              insecure: true
            name: name
            referencePolicy:
              type: type
            annotations: "{}"
            from:
              uid: uid
              apiVersion: apiVersion
              kind: kind
              resourceVersion: resourceVersion
              fieldPath: fieldPath
              name: name
              namespace: namespace
          - generation: 0
            reference: true
            importPolicy:
              scheduled: true
              insecure: true
            name: name
            referencePolicy:
              type: type
            annotations: "{}"
            from:
              uid: uid
              apiVersion: apiVersion
              kind: kind
              resourceVersion: resourceVersion
              fieldPath: fieldPath
              name: name
              namespace: namespace
          lookupPolicy:
            local: true
        status:
          dockerImageRepository: dockerImageRepository
          publicDockerImageRepository: publicDockerImageRepository
          tags:
          - tag: tag
            conditions:
            - generation: 6
              reason: reason
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
              status: status
            - generation: 6
              reason: reason
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
              status: status
            items:
            - generation: 1
              image: image
              created: created
              dockerImageReference: dockerImageReference
            - generation: 1
              image: image
              created: created
              dockerImageReference: dockerImageReference
          - tag: tag
            conditions:
            - generation: 6
              reason: reason
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
              status: status
            - generation: 6
              reason: reason
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
              status: status
            items:
            - generation: 1
              image: image
              created: created
              dockerImageReference: dockerImageReference
            - generation: 1
              image: image
              created: created
              dockerImageReference: dockerImageReference
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
          type: string
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: '#/components/schemas/v1.ObjectMeta'
        spec:
          $ref: '#/components/schemas/v1.ImageStreamSpec'
        status:
          $ref: '#/components/schemas/v1.ImageStreamStatus'
      required:
      - spec
      type: object
    v1.ImageStreamImage:
      description: ImageStreamImage represents an Image that is retrieved by image
        name from an ImageStream.
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
          type: string
        image:
          $ref: '#/components/schemas/v1.Image'
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: '#/components/schemas/v1.ObjectMeta'
      required:
      - image
      type: object
    v1.ImageStreamImport:
      description: |-
        The image stream import resource provides an easy way for a user to find and import Docker images from other Docker registries into the server. Individual images or an entire image repository may be imported, and users may choose to see the results of the import prior to tagging the resulting images into the specified image stream.

        This API is intended for end-user tools that need to see the metadata of the image prior to import (for instance, to generate an application from it). Clients that know the desired image can continue to create spec.tags directly into their image streams.
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
          type: string
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: '#/components/schemas/v1.ObjectMeta'
        spec:
          $ref: '#/components/schemas/v1.ImageStreamImportSpec'
        status:
          $ref: '#/components/schemas/v1.ImageStreamImportStatus'
      required:
      - spec
      - status
      type: object
    v1.ImageStreamImportSpec:
      description: ImageStreamImportSpec defines what images should be imported.
      properties:
        images:
          description: Images are a list of individual images to import.
          items:
            $ref: '#/components/schemas/v1.ImageImportSpec'
          type: array
        import:
          description: "Import indicates whether to perform an import - if so, the\
            \ specified tags are set on the spec and status of the image stream defined\
            \ by the type meta."
          type: boolean
        repository:
          $ref: '#/components/schemas/v1.RepositoryImportSpec'
      required:
      - import
      type: object
    v1.ImageStreamImportStatus:
      description: ImageStreamImportStatus contains information about the status of
        an image stream import.
      properties:
        images:
          description: Images is set with the result of importing spec.images
          items:
            $ref: '#/components/schemas/v1.ImageImportStatus'
          type: array
        import:
          $ref: '#/components/schemas/v1.ImageStream'
        repository:
          $ref: '#/components/schemas/v1.RepositoryImportStatus'
      type: object
    v1.ImageStreamLayers:
      description: ImageStreamLayers describes information about the layers referenced
        by images in this image stream.
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
          type: string
        blobs:
          description: blobs is a map of blob name to metadata about the blob.
          properties: {}
          type: object
        images:
          description: images is a map between an image name and the names of the
            blobs and config that comprise the image.
          properties: {}
          type: object
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: '#/components/schemas/v1.ObjectMeta'
      required:
      - blobs
      - images
      type: object
    v1.ImageStreamList:
      description: ImageStreamList is a list of ImageStream objects.
      example:
        metadata:
          continue: continue
          resourceVersion: resourceVersion
          selfLink: selfLink
        apiVersion: apiVersion
        kind: kind
        items:
        - metadata:
            generation: 6
            finalizers:
            - finalizers
            - finalizers
            resourceVersion: resourceVersion
            annotations: "{}"
            generateName: generateName
            deletionTimestamp: deletionTimestamp
            labels: "{}"
            ownerReferences:
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            selfLink: selfLink
            deletionGracePeriodSeconds: 0
            uid: uid
            initializers:
              result:
                reason: reason
                metadata:
                  continue: continue
                  resourceVersion: resourceVersion
                  selfLink: selfLink
                apiVersion: apiVersion
                code: 1
                kind: kind
                details:
                  uid: uid
                  kind: kind
                  causes:
                  - reason: reason
                    field: field
                    message: message
                  - reason: reason
                    field: field
                    message: message
                  retryAfterSeconds: 5
                  name: name
                  group: group
                message: message
                status: status
              pending:
              - name: name
              - name: name
            clusterName: clusterName
            creationTimestamp: creationTimestamp
            name: name
            namespace: namespace
          apiVersion: apiVersion
          kind: kind
          spec:
            dockerImageRepository: dockerImageRepository
            tags:
            - generation: 0
              reference: true
              importPolicy:
                scheduled: true
                insecure: true
              name: name
              referencePolicy:
                type: type
              annotations: "{}"
              from:
                uid: uid
                apiVersion: apiVersion
                kind: kind
                resourceVersion: resourceVersion
                fieldPath: fieldPath
                name: name
                namespace: namespace
            - generation: 0
              reference: true
              importPolicy:
                scheduled: true
                insecure: true
              name: name
              referencePolicy:
                type: type
              annotations: "{}"
              from:
                uid: uid
                apiVersion: apiVersion
                kind: kind
                resourceVersion: resourceVersion
                fieldPath: fieldPath
                name: name
                namespace: namespace
            lookupPolicy:
              local: true
          status:
            dockerImageRepository: dockerImageRepository
            publicDockerImageRepository: publicDockerImageRepository
            tags:
            - tag: tag
              conditions:
              - generation: 6
                reason: reason
                lastTransitionTime: lastTransitionTime
                message: message
                type: type
                status: status
              - generation: 6
                reason: reason
                lastTransitionTime: lastTransitionTime
                message: message
                type: type
                status: status
              items:
              - generation: 1
                image: image
                created: created
                dockerImageReference: dockerImageReference
              - generation: 1
                image: image
                created: created
                dockerImageReference: dockerImageReference
            - tag: tag
              conditions:
              - generation: 6
                reason: reason
                lastTransitionTime: lastTransitionTime
                message: message
                type: type
                status: status
              - generation: 6
                reason: reason
                lastTransitionTime: lastTransitionTime
                message: message
                type: type
                status: status
              items:
              - generation: 1
                image: image
                created: created
                dockerImageReference: dockerImageReference
              - generation: 1
                image: image
                created: created
                dockerImageReference: dockerImageReference
        - metadata:
            generation: 6
            finalizers:
            - finalizers
            - finalizers
            resourceVersion: resourceVersion
            annotations: "{}"
            generateName: generateName
            deletionTimestamp: deletionTimestamp
            labels: "{}"
            ownerReferences:
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            selfLink: selfLink
            deletionGracePeriodSeconds: 0
            uid: uid
            initializers:
              result:
                reason: reason
                metadata:
                  continue: continue
                  resourceVersion: resourceVersion
                  selfLink: selfLink
                apiVersion: apiVersion
                code: 1
                kind: kind
                details:
                  uid: uid
                  kind: kind
                  causes:
                  - reason: reason
                    field: field
                    message: message
                  - reason: reason
                    field: field
                    message: message
                  retryAfterSeconds: 5
                  name: name
                  group: group
                message: message
                status: status
              pending:
              - name: name
              - name: name
            clusterName: clusterName
            creationTimestamp: creationTimestamp
            name: name
            namespace: namespace
          apiVersion: apiVersion
          kind: kind
          spec:
            dockerImageRepository: dockerImageRepository
            tags:
            - generation: 0
              reference: true
              importPolicy:
                scheduled: true
                insecure: true
              name: name
              referencePolicy:
                type: type
              annotations: "{}"
              from:
                uid: uid
                apiVersion: apiVersion
                kind: kind
                resourceVersion: resourceVersion
                fieldPath: fieldPath
                name: name
                namespace: namespace
            - generation: 0
              reference: true
              importPolicy:
                scheduled: true
                insecure: true
              name: name
              referencePolicy:
                type: type
              annotations: "{}"
              from:
                uid: uid
                apiVersion: apiVersion
                kind: kind
                resourceVersion: resourceVersion
                fieldPath: fieldPath
                name: name
                namespace: namespace
            lookupPolicy:
              local: true
          status:
            dockerImageRepository: dockerImageRepository
            publicDockerImageRepository: publicDockerImageRepository
            tags:
            - tag: tag
              conditions:
              - generation: 6
                reason: reason
                lastTransitionTime: lastTransitionTime
                message: message
                type: type
                status: status
              - generation: 6
                reason: reason
                lastTransitionTime: lastTransitionTime
                message: message
                type: type
                status: status
              items:
              - generation: 1
                image: image
                created: created
                dockerImageReference: dockerImageReference
              - generation: 1
                image: image
                created: created
                dockerImageReference: dockerImageReference
            - tag: tag
              conditions:
              - generation: 6
                reason: reason
                lastTransitionTime: lastTransitionTime
                message: message
                type: type
                status: status
              - generation: 6
                reason: reason
                lastTransitionTime: lastTransitionTime
                message: message
                type: type
                status: status
              items:
              - generation: 1
                image: image
                created: created
                dockerImageReference: dockerImageReference
              - generation: 1
                image: image
                created: created
                dockerImageReference: dockerImageReference
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
          type: string
        items:
          description: Items is a list of imageStreams
          items:
            $ref: '#/components/schemas/v1.ImageStream'
          type: array
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: '#/components/schemas/v1.ListMeta'
      required:
      - items
      type: object
    v1.ImageStreamMapping:
      description: ImageStreamMapping represents a mapping from a single tag to a
        Docker image as well as the reference to the Docker image stream the image
        came from.
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
          type: string
        image:
          $ref: '#/components/schemas/v1.Image'
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: '#/components/schemas/v1.ObjectMeta'
        tag:
          description: Tag is a string value this image can be located with inside
            the stream.
          type: string
      required:
      - image
      - tag
      type: object
    v1.ImageStreamSpec:
      description: ImageStreamSpec represents options for ImageStreams.
      example:
        dockerImageRepository: dockerImageRepository
        tags:
        - generation: 0
          reference: true
          importPolicy:
            scheduled: true
            insecure: true
          name: name
          referencePolicy:
            type: type
          annotations: "{}"
          from:
            uid: uid
            apiVersion: apiVersion
            kind: kind
            resourceVersion: resourceVersion
            fieldPath: fieldPath
            name: name
            namespace: namespace
        - generation: 0
          reference: true
          importPolicy:
            scheduled: true
            insecure: true
          name: name
          referencePolicy:
            type: type
          annotations: "{}"
          from:
            uid: uid
            apiVersion: apiVersion
            kind: kind
            resourceVersion: resourceVersion
            fieldPath: fieldPath
            name: name
            namespace: namespace
        lookupPolicy:
          local: true
      properties:
        tags:
          description: tags map arbitrary string values to specific image locators
          items:
            $ref: '#/components/schemas/v1.TagReference'
          type: array
        dockerImageRepository:
          description: "dockerImageRepository is optional, if specified this stream\
            \ is backed by a Docker repository on this server Deprecated: This field\
            \ is deprecated as of v3.7 and will be removed in a future release. Specify\
            \ the source for the tags to be imported in each tag via the spec.tags.from\
            \ reference instead."
          type: string
        lookupPolicy:
          $ref: '#/components/schemas/v1.ImageLookupPolicy'
      type: object
    v1.ImageStreamStatus:
      description: ImageStreamStatus contains information about the state of this
        image stream.
      example:
        dockerImageRepository: dockerImageRepository
        publicDockerImageRepository: publicDockerImageRepository
        tags:
        - tag: tag
          conditions:
          - generation: 6
            reason: reason
            lastTransitionTime: lastTransitionTime
            message: message
            type: type
            status: status
          - generation: 6
            reason: reason
            lastTransitionTime: lastTransitionTime
            message: message
            type: type
            status: status
          items:
          - generation: 1
            image: image
            created: created
            dockerImageReference: dockerImageReference
          - generation: 1
            image: image
            created: created
            dockerImageReference: dockerImageReference
        - tag: tag
          conditions:
          - generation: 6
            reason: reason
            lastTransitionTime: lastTransitionTime
            message: message
            type: type
            status: status
          - generation: 6
            reason: reason
            lastTransitionTime: lastTransitionTime
            message: message
            type: type
            status: status
          items:
          - generation: 1
            image: image
            created: created
            dockerImageReference: dockerImageReference
          - generation: 1
            image: image
            created: created
            dockerImageReference: dockerImageReference
      properties:
        tags:
          description: Tags are a historical record of images associated with each
            tag. The first entry in the TagEvent array is the currently tagged image.
          items:
            $ref: '#/components/schemas/v1.NamedTagEventList'
          type: array
        dockerImageRepository:
          description: DockerImageRepository represents the effective location this
            stream may be accessed at. May be empty until the server determines where
            the repository is located
          type: string
        publicDockerImageRepository:
          description: PublicDockerImageRepository represents the public location
            from where the image can be pulled outside the cluster. This field may
            be empty if the administrator has not exposed the integrated registry
            externally.
          type: string
      required:
      - dockerImageRepository
      type: object
    v1.ImageStreamTag:
      description: ImageStreamTag represents an Image that is retrieved by tag name
        from an ImageStream.
      example:
        generation: 0
        image:
          dockerImageLayers:
          - size: 6
            name: name
            mediaType: mediaType
          - size: 6
            name: name
            mediaType: mediaType
          dockerImageMetadata: dockerImageMetadata
          metadata:
            generation: 6
            finalizers:
            - finalizers
            - finalizers
            resourceVersion: resourceVersion
            annotations: "{}"
            generateName: generateName
            deletionTimestamp: deletionTimestamp
            labels: "{}"
            ownerReferences:
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            selfLink: selfLink
            deletionGracePeriodSeconds: 0
            uid: uid
            initializers:
              result:
                reason: reason
                metadata:
                  continue: continue
                  resourceVersion: resourceVersion
                  selfLink: selfLink
                apiVersion: apiVersion
                code: 1
                kind: kind
                details:
                  uid: uid
                  kind: kind
                  causes:
                  - reason: reason
                    field: field
                    message: message
                  - reason: reason
                    field: field
                    message: message
                  retryAfterSeconds: 5
                  name: name
                  group: group
                message: message
                status: status
              pending:
              - name: name
              - name: name
            clusterName: clusterName
            creationTimestamp: creationTimestamp
            name: name
            namespace: namespace
          apiVersion: apiVersion
          kind: kind
          dockerImageReference: dockerImageReference
          dockerImageManifestMediaType: dockerImageManifestMediaType
          dockerImageConfig: dockerImageConfig
          dockerImageMetadataVersion: dockerImageMetadataVersion
          dockerImageManifest: dockerImageManifest
          signatures:
          - metadata:
              generation: 6
              finalizers:
              - finalizers
              - finalizers
              resourceVersion: resourceVersion
              annotations: "{}"
              generateName: generateName
              deletionTimestamp: deletionTimestamp
              labels: "{}"
              ownerReferences:
              - uid: uid
                controller: true
                apiVersion: apiVersion
                kind: kind
                name: name
                blockOwnerDeletion: true
              - uid: uid
                controller: true
                apiVersion: apiVersion
                kind: kind
                name: name
                blockOwnerDeletion: true
              selfLink: selfLink
              deletionGracePeriodSeconds: 0
              uid: uid
              initializers:
                result:
                  reason: reason
                  metadata:
                    continue: continue
                    resourceVersion: resourceVersion
                    selfLink: selfLink
                  apiVersion: apiVersion
                  code: 1
                  kind: kind
                  details:
                    uid: uid
                    kind: kind
                    causes:
                    - reason: reason
                      field: field
                      message: message
                    - reason: reason
                      field: field
                      message: message
                    retryAfterSeconds: 5
                    name: name
                    group: group
                  message: message
                  status: status
                pending:
                - name: name
                - name: name
              clusterName: clusterName
              creationTimestamp: creationTimestamp
              name: name
              namespace: namespace
            apiVersion: apiVersion
            issuedTo:
              commonName: commonName
              organization: organization
              publicKeyID: publicKeyID
            created: created
            kind: kind
            issuedBy:
              commonName: commonName
              organization: organization
            signedClaims: "{}"
            conditions:
            - reason: reason
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
              lastProbeTime: lastProbeTime
              status: status
            - reason: reason
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
              lastProbeTime: lastProbeTime
              status: status
            type: type
            content: content
            imageIdentity: imageIdentity
          - metadata:
              generation: 6
              finalizers:
              - finalizers
              - finalizers
              resourceVersion: resourceVersion
              annotations: "{}"
              generateName: generateName
              deletionTimestamp: deletionTimestamp
              labels: "{}"
              ownerReferences:
              - uid: uid
                controller: true
                apiVersion: apiVersion
                kind: kind
                name: name
                blockOwnerDeletion: true
              - uid: uid
                controller: true
                apiVersion: apiVersion
                kind: kind
                name: name
                blockOwnerDeletion: true
              selfLink: selfLink
              deletionGracePeriodSeconds: 0
              uid: uid
              initializers:
                result:
                  reason: reason
                  metadata:
                    continue: continue
                    resourceVersion: resourceVersion
                    selfLink: selfLink
                  apiVersion: apiVersion
                  code: 1
                  kind: kind
                  details:
                    uid: uid
                    kind: kind
                    causes:
                    - reason: reason
                      field: field
                      message: message
                    - reason: reason
                      field: field
                      message: message
                    retryAfterSeconds: 5
                    name: name
                    group: group
                  message: message
                  status: status
                pending:
                - name: name
                - name: name
              clusterName: clusterName
              creationTimestamp: creationTimestamp
              name: name
              namespace: namespace
            apiVersion: apiVersion
            issuedTo:
              commonName: commonName
              organization: organization
              publicKeyID: publicKeyID
            created: created
            kind: kind
            issuedBy:
              commonName: commonName
              organization: organization
            signedClaims: "{}"
            conditions:
            - reason: reason
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
              lastProbeTime: lastProbeTime
              status: status
            - reason: reason
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
              lastProbeTime: lastProbeTime
              status: status
            type: type
            content: content
            imageIdentity: imageIdentity
        metadata:
          generation: 6
          finalizers:
          - finalizers
          - finalizers
          resourceVersion: resourceVersion
          annotations: "{}"
          generateName: generateName
          deletionTimestamp: deletionTimestamp
          labels: "{}"
          ownerReferences:
          - uid: uid
            controller: true
            apiVersion: apiVersion
            kind: kind
            name: name
            blockOwnerDeletion: true
          - uid: uid
            controller: true
            apiVersion: apiVersion
            kind: kind
            name: name
            blockOwnerDeletion: true
          selfLink: selfLink
          deletionGracePeriodSeconds: 0
          uid: uid
          initializers:
            result:
              reason: reason
              metadata:
                continue: continue
                resourceVersion: resourceVersion
                selfLink: selfLink
              apiVersion: apiVersion
              code: 1
              kind: kind
              details:
                uid: uid
                kind: kind
                causes:
                - reason: reason
                  field: field
                  message: message
                - reason: reason
                  field: field
                  message: message
                retryAfterSeconds: 5
                name: name
                group: group
              message: message
              status: status
            pending:
            - name: name
            - name: name
          clusterName: clusterName
          creationTimestamp: creationTimestamp
          name: name
          namespace: namespace
        apiVersion: apiVersion
        kind: kind
        tag:
          generation: 0
          reference: true
          importPolicy:
            scheduled: true
            insecure: true
          name: name
          referencePolicy:
            type: type
          annotations: "{}"
          from:
            uid: uid
            apiVersion: apiVersion
            kind: kind
            resourceVersion: resourceVersion
            fieldPath: fieldPath
            name: name
            namespace: namespace
        conditions:
        - generation: 6
          reason: reason
          lastTransitionTime: lastTransitionTime
          message: message
          type: type
          status: status
        - generation: 6
          reason: reason
          lastTransitionTime: lastTransitionTime
          message: message
          type: type
          status: status
        lookupPolicy:
          local: true
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
          type: string
        conditions:
          description: conditions is an array of conditions that apply to the image
            stream tag.
          items:
            $ref: '#/components/schemas/v1.TagEventCondition'
          type: array
        generation:
          description: "generation is the current generation of the tagged image -\
            \ if tag is provided and this value is not equal to the tag generation,\
            \ a user has requested an import that has not completed, or conditions\
            \ will be filled out indicating any error."
          format: int64
          type: integer
        image:
          $ref: '#/components/schemas/v1.Image'
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
          type: string
        lookupPolicy:
          $ref: '#/components/schemas/v1.ImageLookupPolicy'
        metadata:
          $ref: '#/components/schemas/v1.ObjectMeta'
        tag:
          $ref: '#/components/schemas/v1.TagReference'
      required:
      - generation
      - image
      - lookupPolicy
      - tag
      type: object
    v1.ImageStreamTagList:
      description: ImageStreamTagList is a list of ImageStreamTag objects.
      example:
        metadata:
          continue: continue
          resourceVersion: resourceVersion
          selfLink: selfLink
        apiVersion: apiVersion
        kind: kind
        items:
        - generation: 0
          image:
            dockerImageLayers:
            - size: 6
              name: name
              mediaType: mediaType
            - size: 6
              name: name
              mediaType: mediaType
            dockerImageMetadata: dockerImageMetadata
            metadata:
              generation: 6
              finalizers:
              - finalizers
              - finalizers
              resourceVersion: resourceVersion
              annotations: "{}"
              generateName: generateName
              deletionTimestamp: deletionTimestamp
              labels: "{}"
              ownerReferences:
              - uid: uid
                controller: true
                apiVersion: apiVersion
                kind: kind
                name: name
                blockOwnerDeletion: true
              - uid: uid
                controller: true
                apiVersion: apiVersion
                kind: kind
                name: name
                blockOwnerDeletion: true
              selfLink: selfLink
              deletionGracePeriodSeconds: 0
              uid: uid
              initializers:
                result:
                  reason: reason
                  metadata:
                    continue: continue
                    resourceVersion: resourceVersion
                    selfLink: selfLink
                  apiVersion: apiVersion
                  code: 1
                  kind: kind
                  details:
                    uid: uid
                    kind: kind
                    causes:
                    - reason: reason
                      field: field
                      message: message
                    - reason: reason
                      field: field
                      message: message
                    retryAfterSeconds: 5
                    name: name
                    group: group
                  message: message
                  status: status
                pending:
                - name: name
                - name: name
              clusterName: clusterName
              creationTimestamp: creationTimestamp
              name: name
              namespace: namespace
            apiVersion: apiVersion
            kind: kind
            dockerImageReference: dockerImageReference
            dockerImageManifestMediaType: dockerImageManifestMediaType
            dockerImageConfig: dockerImageConfig
            dockerImageMetadataVersion: dockerImageMetadataVersion
            dockerImageManifest: dockerImageManifest
            signatures:
            - metadata:
                generation: 6
                finalizers:
                - finalizers
                - finalizers
                resourceVersion: resourceVersion
                annotations: "{}"
                generateName: generateName
                deletionTimestamp: deletionTimestamp
                labels: "{}"
                ownerReferences:
                - uid: uid
                  controller: true
                  apiVersion: apiVersion
                  kind: kind
                  name: name
                  blockOwnerDeletion: true
                - uid: uid
                  controller: true
                  apiVersion: apiVersion
                  kind: kind
                  name: name
                  blockOwnerDeletion: true
                selfLink: selfLink
                deletionGracePeriodSeconds: 0
                uid: uid
                initializers:
                  result:
                    reason: reason
                    metadata:
                      continue: continue
                      resourceVersion: resourceVersion
                      selfLink: selfLink
                    apiVersion: apiVersion
                    code: 1
                    kind: kind
                    details:
                      uid: uid
                      kind: kind
                      causes:
                      - reason: reason
                        field: field
                        message: message
                      - reason: reason
                        field: field
                        message: message
                      retryAfterSeconds: 5
                      name: name
                      group: group
                    message: message
                    status: status
                  pending:
                  - name: name
                  - name: name
                clusterName: clusterName
                creationTimestamp: creationTimestamp
                name: name
                namespace: namespace
              apiVersion: apiVersion
              issuedTo:
                commonName: commonName
                organization: organization
                publicKeyID: publicKeyID
              created: created
              kind: kind
              issuedBy:
                commonName: commonName
                organization: organization
              signedClaims: "{}"
              conditions:
              - reason: reason
                lastTransitionTime: lastTransitionTime
                message: message
                type: type
                lastProbeTime: lastProbeTime
                status: status
              - reason: reason
                lastTransitionTime: lastTransitionTime
                message: message
                type: type
                lastProbeTime: lastProbeTime
                status: status
              type: type
              content: content
              imageIdentity: imageIdentity
            - metadata:
                generation: 6
                finalizers:
                - finalizers
                - finalizers
                resourceVersion: resourceVersion
                annotations: "{}"
                generateName: generateName
                deletionTimestamp: deletionTimestamp
                labels: "{}"
                ownerReferences:
                - uid: uid
                  controller: true
                  apiVersion: apiVersion
                  kind: kind
                  name: name
                  blockOwnerDeletion: true
                - uid: uid
                  controller: true
                  apiVersion: apiVersion
                  kind: kind
                  name: name
                  blockOwnerDeletion: true
                selfLink: selfLink
                deletionGracePeriodSeconds: 0
                uid: uid
                initializers:
                  result:
                    reason: reason
                    metadata:
                      continue: continue
                      resourceVersion: resourceVersion
                      selfLink: selfLink
                    apiVersion: apiVersion
                    code: 1
                    kind: kind
                    details:
                      uid: uid
                      kind: kind
                      causes:
                      - reason: reason
                        field: field
                        message: message
                      - reason: reason
                        field: field
                        message: message
                      retryAfterSeconds: 5
                      name: name
                      group: group
                    message: message
                    status: status
                  pending:
                  - name: name
                  - name: name
                clusterName: clusterName
                creationTimestamp: creationTimestamp
                name: name
                namespace: namespace
              apiVersion: apiVersion
              issuedTo:
                commonName: commonName
                organization: organization
                publicKeyID: publicKeyID
              created: created
              kind: kind
              issuedBy:
                commonName: commonName
                organization: organization
              signedClaims: "{}"
              conditions:
              - reason: reason
                lastTransitionTime: lastTransitionTime
                message: message
                type: type
                lastProbeTime: lastProbeTime
                status: status
              - reason: reason
                lastTransitionTime: lastTransitionTime
                message: message
                type: type
                lastProbeTime: lastProbeTime
                status: status
              type: type
              content: content
              imageIdentity: imageIdentity
          metadata:
            generation: 6
            finalizers:
            - finalizers
            - finalizers
            resourceVersion: resourceVersion
            annotations: "{}"
            generateName: generateName
            deletionTimestamp: deletionTimestamp
            labels: "{}"
            ownerReferences:
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            selfLink: selfLink
            deletionGracePeriodSeconds: 0
            uid: uid
            initializers:
              result:
                reason: reason
                metadata:
                  continue: continue
                  resourceVersion: resourceVersion
                  selfLink: selfLink
                apiVersion: apiVersion
                code: 1
                kind: kind
                details:
                  uid: uid
                  kind: kind
                  causes:
                  - reason: reason
                    field: field
                    message: message
                  - reason: reason
                    field: field
                    message: message
                  retryAfterSeconds: 5
                  name: name
                  group: group
                message: message
                status: status
              pending:
              - name: name
              - name: name
            clusterName: clusterName
            creationTimestamp: creationTimestamp
            name: name
            namespace: namespace
          apiVersion: apiVersion
          kind: kind
          tag:
            generation: 0
            reference: true
            importPolicy:
              scheduled: true
              insecure: true
            name: name
            referencePolicy:
              type: type
            annotations: "{}"
            from:
              uid: uid
              apiVersion: apiVersion
              kind: kind
              resourceVersion: resourceVersion
              fieldPath: fieldPath
              name: name
              namespace: namespace
          conditions:
          - generation: 6
            reason: reason
            lastTransitionTime: lastTransitionTime
            message: message
            type: type
            status: status
          - generation: 6
            reason: reason
            lastTransitionTime: lastTransitionTime
            message: message
            type: type
            status: status
          lookupPolicy:
            local: true
        - generation: 0
          image:
            dockerImageLayers:
            - size: 6
              name: name
              mediaType: mediaType
            - size: 6
              name: name
              mediaType: mediaType
            dockerImageMetadata: dockerImageMetadata
            metadata:
              generation: 6
              finalizers:
              - finalizers
              - finalizers
              resourceVersion: resourceVersion
              annotations: "{}"
              generateName: generateName
              deletionTimestamp: deletionTimestamp
              labels: "{}"
              ownerReferences:
              - uid: uid
                controller: true
                apiVersion: apiVersion
                kind: kind
                name: name
                blockOwnerDeletion: true
              - uid: uid
                controller: true
                apiVersion: apiVersion
                kind: kind
                name: name
                blockOwnerDeletion: true
              selfLink: selfLink
              deletionGracePeriodSeconds: 0
              uid: uid
              initializers:
                result:
                  reason: reason
                  metadata:
                    continue: continue
                    resourceVersion: resourceVersion
                    selfLink: selfLink
                  apiVersion: apiVersion
                  code: 1
                  kind: kind
                  details:
                    uid: uid
                    kind: kind
                    causes:
                    - reason: reason
                      field: field
                      message: message
                    - reason: reason
                      field: field
                      message: message
                    retryAfterSeconds: 5
                    name: name
                    group: group
                  message: message
                  status: status
                pending:
                - name: name
                - name: name
              clusterName: clusterName
              creationTimestamp: creationTimestamp
              name: name
              namespace: namespace
            apiVersion: apiVersion
            kind: kind
            dockerImageReference: dockerImageReference
            dockerImageManifestMediaType: dockerImageManifestMediaType
            dockerImageConfig: dockerImageConfig
            dockerImageMetadataVersion: dockerImageMetadataVersion
            dockerImageManifest: dockerImageManifest
            signatures:
            - metadata:
                generation: 6
                finalizers:
                - finalizers
                - finalizers
                resourceVersion: resourceVersion
                annotations: "{}"
                generateName: generateName
                deletionTimestamp: deletionTimestamp
                labels: "{}"
                ownerReferences:
                - uid: uid
                  controller: true
                  apiVersion: apiVersion
                  kind: kind
                  name: name
                  blockOwnerDeletion: true
                - uid: uid
                  controller: true
                  apiVersion: apiVersion
                  kind: kind
                  name: name
                  blockOwnerDeletion: true
                selfLink: selfLink
                deletionGracePeriodSeconds: 0
                uid: uid
                initializers:
                  result:
                    reason: reason
                    metadata:
                      continue: continue
                      resourceVersion: resourceVersion
                      selfLink: selfLink
                    apiVersion: apiVersion
                    code: 1
                    kind: kind
                    details:
                      uid: uid
                      kind: kind
                      causes:
                      - reason: reason
                        field: field
                        message: message
                      - reason: reason
                        field: field
                        message: message
                      retryAfterSeconds: 5
                      name: name
                      group: group
                    message: message
                    status: status
                  pending:
                  - name: name
                  - name: name
                clusterName: clusterName
                creationTimestamp: creationTimestamp
                name: name
                namespace: namespace
              apiVersion: apiVersion
              issuedTo:
                commonName: commonName
                organization: organization
                publicKeyID: publicKeyID
              created: created
              kind: kind
              issuedBy:
                commonName: commonName
                organization: organization
              signedClaims: "{}"
              conditions:
              - reason: reason
                lastTransitionTime: lastTransitionTime
                message: message
                type: type
                lastProbeTime: lastProbeTime
                status: status
              - reason: reason
                lastTransitionTime: lastTransitionTime
                message: message
                type: type
                lastProbeTime: lastProbeTime
                status: status
              type: type
              content: content
              imageIdentity: imageIdentity
            - metadata:
                generation: 6
                finalizers:
                - finalizers
                - finalizers
                resourceVersion: resourceVersion
                annotations: "{}"
                generateName: generateName
                deletionTimestamp: deletionTimestamp
                labels: "{}"
                ownerReferences:
                - uid: uid
                  controller: true
                  apiVersion: apiVersion
                  kind: kind
                  name: name
                  blockOwnerDeletion: true
                - uid: uid
                  controller: true
                  apiVersion: apiVersion
                  kind: kind
                  name: name
                  blockOwnerDeletion: true
                selfLink: selfLink
                deletionGracePeriodSeconds: 0
                uid: uid
                initializers:
                  result:
                    reason: reason
                    metadata:
                      continue: continue
                      resourceVersion: resourceVersion
                      selfLink: selfLink
                    apiVersion: apiVersion
                    code: 1
                    kind: kind
                    details:
                      uid: uid
                      kind: kind
                      causes:
                      - reason: reason
                        field: field
                        message: message
                      - reason: reason
                        field: field
                        message: message
                      retryAfterSeconds: 5
                      name: name
                      group: group
                    message: message
                    status: status
                  pending:
                  - name: name
                  - name: name
                clusterName: clusterName
                creationTimestamp: creationTimestamp
                name: name
                namespace: namespace
              apiVersion: apiVersion
              issuedTo:
                commonName: commonName
                organization: organization
                publicKeyID: publicKeyID
              created: created
              kind: kind
              issuedBy:
                commonName: commonName
                organization: organization
              signedClaims: "{}"
              conditions:
              - reason: reason
                lastTransitionTime: lastTransitionTime
                message: message
                type: type
                lastProbeTime: lastProbeTime
                status: status
              - reason: reason
                lastTransitionTime: lastTransitionTime
                message: message
                type: type
                lastProbeTime: lastProbeTime
                status: status
              type: type
              content: content
              imageIdentity: imageIdentity
          metadata:
            generation: 6
            finalizers:
            - finalizers
            - finalizers
            resourceVersion: resourceVersion
            annotations: "{}"
            generateName: generateName
            deletionTimestamp: deletionTimestamp
            labels: "{}"
            ownerReferences:
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            selfLink: selfLink
            deletionGracePeriodSeconds: 0
            uid: uid
            initializers:
              result:
                reason: reason
                metadata:
                  continue: continue
                  resourceVersion: resourceVersion
                  selfLink: selfLink
                apiVersion: apiVersion
                code: 1
                kind: kind
                details:
                  uid: uid
                  kind: kind
                  causes:
                  - reason: reason
                    field: field
                    message: message
                  - reason: reason
                    field: field
                    message: message
                  retryAfterSeconds: 5
                  name: name
                  group: group
                message: message
                status: status
              pending:
              - name: name
              - name: name
            clusterName: clusterName
            creationTimestamp: creationTimestamp
            name: name
            namespace: namespace
          apiVersion: apiVersion
          kind: kind
          tag:
            generation: 0
            reference: true
            importPolicy:
              scheduled: true
              insecure: true
            name: name
            referencePolicy:
              type: type
            annotations: "{}"
            from:
              uid: uid
              apiVersion: apiVersion
              kind: kind
              resourceVersion: resourceVersion
              fieldPath: fieldPath
              name: name
              namespace: namespace
          conditions:
          - generation: 6
            reason: reason
            lastTransitionTime: lastTransitionTime
            message: message
            type: type
            status: status
          - generation: 6
            reason: reason
            lastTransitionTime: lastTransitionTime
            message: message
            type: type
            status: status
          lookupPolicy:
            local: true
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
          type: string
        items:
          description: Items is the list of image stream tags
          items:
            $ref: '#/components/schemas/v1.ImageStreamTag'
          type: array
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: '#/components/schemas/v1.ListMeta'
      required:
      - items
      type: object
    v1.NamedTagEventList:
      description: NamedTagEventList relates a tag to its image history.
      example:
        tag: tag
        conditions:
        - generation: 6
          reason: reason
          lastTransitionTime: lastTransitionTime
          message: message
          type: type
          status: status
        - generation: 6
          reason: reason
          lastTransitionTime: lastTransitionTime
          message: message
          type: type
          status: status
        items:
        - generation: 1
          image: image
          created: created
          dockerImageReference: dockerImageReference
        - generation: 1
          image: image
          created: created
          dockerImageReference: dockerImageReference
      properties:
        conditions:
          description: Conditions is an array of conditions that apply to the tag
            event list.
          items:
            $ref: '#/components/schemas/v1.TagEventCondition'
          type: array
        items:
          description: Standard object's metadata.
          items:
            $ref: '#/components/schemas/v1.TagEvent'
          type: array
        tag:
          description: Tag is the tag for which the history is recorded
          type: string
      required:
      - items
      - tag
      type: object
    v1.RepositoryImportSpec:
      description: RepositoryImportSpec describes a request to import images from
        a Docker image repository.
      properties:
        from:
          $ref: '#/components/schemas/v1.ObjectReference'
        importPolicy:
          $ref: '#/components/schemas/v1.TagImportPolicy'
        includeManifest:
          description: IncludeManifest determines if the manifest for each image is
            returned in the response
          type: boolean
        referencePolicy:
          $ref: '#/components/schemas/v1.TagReferencePolicy'
      required:
      - from
      type: object
    v1.RepositoryImportStatus:
      description: RepositoryImportStatus describes the result of an image repository
        import
      properties:
        additionalTags:
          description: AdditionalTags are tags that exist in the repository but were
            not imported because a maximum limit of automatic imports was applied.
          items:
            type: string
          type: array
        images:
          description: Images is a list of images successfully retrieved by the import
            of the repository.
          items:
            $ref: '#/components/schemas/v1.ImageImportStatus'
          type: array
        status:
          $ref: '#/components/schemas/v1.Status'
      type: object
    v1.SignatureCondition:
      description: SignatureCondition describes an image signature condition of particular
        kind at particular probe time.
      example:
        reason: reason
        lastTransitionTime: lastTransitionTime
        message: message
        type: type
        lastProbeTime: lastProbeTime
        status: status
      properties:
        lastProbeTime:
          description: Last time the condition was checked.
          type: string
        lastTransitionTime:
          description: Last time the condition transit from one status to another.
          type: string
        message:
          description: Human readable message indicating details about last transition.
          type: string
        reason:
          description: (brief) reason for the condition's last transition.
          type: string
        status:
          description: "Status of the condition, one of True, False, Unknown."
          type: string
        type:
          description: "Type of signature condition, Complete or Failed."
          type: string
      required:
      - status
      - type
      type: object
    v1.SignatureIssuer:
      description: SignatureIssuer holds information about an issuer of signing certificate
        or key.
      example:
        commonName: commonName
        organization: organization
      properties:
        commonName:
          description: Common name (e.g. openshift-signing-service).
          type: string
        organization:
          description: Organization name.
          type: string
      type: object
    v1.SignatureSubject:
      description: SignatureSubject holds information about a person or entity who
        created the signature.
      example:
        commonName: commonName
        organization: organization
        publicKeyID: publicKeyID
      properties:
        commonName:
          description: Common name (e.g. openshift-signing-service).
          type: string
        organization:
          description: Organization name.
          type: string
        publicKeyID:
          description: "If present, it is a human readable key id of public key belonging\
            \ to the subject used to verify image signature. It should contain at\
            \ least 64 lowest bits of public key's fingerprint (e.g. 0x685ebe62bf278440)."
          type: string
      required:
      - publicKeyID
      type: object
    v1.TagEvent:
      description: TagEvent is used by ImageStreamStatus to keep a historical record
        of images associated with a tag.
      example:
        generation: 1
        image: image
        created: created
        dockerImageReference: dockerImageReference
      properties:
        created:
          description: Created holds the time the TagEvent was created
          type: string
        dockerImageReference:
          description: DockerImageReference is the string that can be used to pull
            this image
          type: string
        generation:
          description: Generation is the spec tag generation that resulted in this
            tag being updated
          format: int64
          type: integer
        image:
          description: Image is the image
          type: string
      required:
      - created
      - dockerImageReference
      - generation
      - image
      type: object
    v1.TagEventCondition:
      description: TagEventCondition contains condition information for a tag event.
      example:
        generation: 6
        reason: reason
        lastTransitionTime: lastTransitionTime
        message: message
        type: type
        status: status
      properties:
        generation:
          description: Generation is the spec tag generation that this status corresponds
            to
          format: int64
          type: integer
        lastTransitionTime:
          description: LastTransitionTIme is the time the condition transitioned from
            one status to another.
          type: string
        message:
          description: "Message is a human readable description of the details about\
            \ last transition, complementing reason."
          type: string
        reason:
          description: Reason is a brief machine readable explanation for the condition's
            last transition.
          type: string
        status:
          description: "Status of the condition, one of True, False, Unknown."
          type: string
        type:
          description: "Type of tag event condition, currently only ImportSuccess"
          type: string
      required:
      - generation
      - status
      - type
      type: object
    v1.TagImportPolicy:
      description: TagImportPolicy controls how images related to this tag will be
        imported.
      example:
        scheduled: true
        insecure: true
      properties:
        insecure:
          description: Insecure is true if the server may bypass certificate verification
            or connect directly over HTTP during image import.
          type: boolean
        scheduled:
          description: "Scheduled indicates to the server that this tag should be\
            \ periodically checked to ensure it is up to date, and imported"
          type: boolean
      type: object
    v1.TagReference:
      description: "TagReference specifies optional annotations for images using this\
        \ tag and an optional reference to an ImageStreamTag, ImageStreamImage, or\
        \ DockerImage this tag should track."
      example:
        generation: 0
        reference: true
        importPolicy:
          scheduled: true
          insecure: true
        name: name
        referencePolicy:
          type: type
        annotations: "{}"
        from:
          uid: uid
          apiVersion: apiVersion
          kind: kind
          resourceVersion: resourceVersion
          fieldPath: fieldPath
          name: name
          namespace: namespace
      properties:
        annotations:
          description: "Optional; if specified, annotations that are applied to images\
            \ retrieved via ImageStreamTags."
          properties: {}
          type: object
        from:
          $ref: '#/components/schemas/v1.ObjectReference'
        generation:
          description: "Generation is a counter that tracks mutations to the spec\
            \ tag (user intent). When a tag reference is changed the generation is\
            \ set to match the current stream generation (which is incremented every\
            \ time spec is changed). Other processes in the system like the image\
            \ importer observe that the generation of spec tag is newer than the generation\
            \ recorded in the status and use that as a trigger to import the newest\
            \ remote tag. To trigger a new import, clients may set this value to zero\
            \ which will reset the generation to the latest stream generation. Legacy\
            \ clients will send this value as nil which will be merged with the current\
            \ tag generation."
          format: int64
          type: integer
        importPolicy:
          $ref: '#/components/schemas/v1.TagImportPolicy'
        name:
          description: Name of the tag
          type: string
        reference:
          description: "Reference states if the tag will be imported. Default value\
            \ is false, which means the tag will be imported."
          type: boolean
        referencePolicy:
          $ref: '#/components/schemas/v1.TagReferencePolicy'
      required:
      - annotations
      - generation
      - name
      type: object
    v1.TagReferencePolicy:
      description: TagReferencePolicy describes how pull-specs for images in this
        image stream tag are generated when image change triggers in deployment configs
        or builds are resolved. This allows the image stream author to control how
        images are accessed.
      example:
        type: type
      properties:
        type:
          description: "Type determines how the image pull spec should be transformed\
            \ when the image stream tag is used in deployment config triggers or new\
            \ builds. The default value is `Source`, indicating the original location\
            \ of the image should be used (if imported). The user may also specify\
            \ `Local`, indicating that the pull spec should point to the integrated\
            \ Docker registry and leverage the registry's ability to proxy the pull\
            \ to an upstream registry. `Local` allows the credentials used to pull\
            \ this image to be managed from the image stream's namespace, so others\
            \ on the platform can access a remote image but have no access to the\
            \ remote secret. It also allows the image layers to be mirrored into the\
            \ local registry which the images can still be pulled even if the upstream\
            \ registry is unavailable."
          type: string
      required:
      - type
      type: object
    v1.BinaryBuildSource:
      description: "BinaryBuildSource describes a binary file to be used for the Docker\
        \ and Source build strategies, where the file will be extracted and used as\
        \ the build source."
      example:
        asFile: asFile
      properties:
        asFile:
          description: "asFile indicates that the provided binary input should be\
            \ considered a single file within the build input. For example, specifying\
            \ \"webapp.war\" would place the provided binary as `/webapp.war` for\
            \ the builder. If left empty, the Docker and Source build strategies assume\
            \ this file is a zip, tar, or tar.gz file and extract it as the source.\
            \ The custom strategy receives this binary as standard input. This filename\
            \ may not contain slashes or be '..' or '.'."
          type: string
      type: object
    v1.BitbucketWebHookCause:
      description: BitbucketWebHookCause has information about a Bitbucket webhook
        that triggered a build.
      example:
        secret: secret
        revision:
          git:
            committer:
              name: name
              email: email
            author:
              name: name
              email: email
            commit: commit
            message: message
          type: type
      properties:
        revision:
          $ref: '#/components/schemas/v1.SourceRevision'
        secret:
          description: Secret is the obfuscated webhook secret that triggered a build.
          type: string
      type: object
    v1.Build:
      description: "Build encapsulates the inputs needed to produce a new deployable\
        \ image, as well as the status of the execution and a reference to the Pod\
        \ which executed the build."
      example:
        metadata:
          generation: 6
          finalizers:
          - finalizers
          - finalizers
          resourceVersion: resourceVersion
          annotations: "{}"
          generateName: generateName
          deletionTimestamp: deletionTimestamp
          labels: "{}"
          ownerReferences:
          - uid: uid
            controller: true
            apiVersion: apiVersion
            kind: kind
            name: name
            blockOwnerDeletion: true
          - uid: uid
            controller: true
            apiVersion: apiVersion
            kind: kind
            name: name
            blockOwnerDeletion: true
          selfLink: selfLink
          deletionGracePeriodSeconds: 0
          uid: uid
          initializers:
            result:
              reason: reason
              metadata:
                continue: continue
                resourceVersion: resourceVersion
                selfLink: selfLink
              apiVersion: apiVersion
              code: 1
              kind: kind
              details:
                uid: uid
                kind: kind
                causes:
                - reason: reason
                  field: field
                  message: message
                - reason: reason
                  field: field
                  message: message
                retryAfterSeconds: 5
                name: name
                group: group
              message: message
              status: status
            pending:
            - name: name
            - name: name
          clusterName: clusterName
          creationTimestamp: creationTimestamp
          name: name
          namespace: namespace
        apiVersion: apiVersion
        kind: kind
        spec:
          output:
            to:
              uid: uid
              apiVersion: apiVersion
              kind: kind
              resourceVersion: resourceVersion
              fieldPath: fieldPath
              name: name
              namespace: namespace
            pushSecret:
              name: name
            imageLabels:
            - name: name
              value: value
            - name: name
              value: value
          completionDeadlineSeconds: 0
          resources:
            requests: "{}"
            limits: "{}"
          serviceAccount: serviceAccount
          source:
            sourceSecret:
              name: name
            images:
            - as:
              - as
              - as
              paths:
              - destinationDir: destinationDir
                sourcePath: sourcePath
              - destinationDir: destinationDir
                sourcePath: sourcePath
              from:
                uid: uid
                apiVersion: apiVersion
                kind: kind
                resourceVersion: resourceVersion
                fieldPath: fieldPath
                name: name
                namespace: namespace
              pullSecret:
                name: name
            - as:
              - as
              - as
              paths:
              - destinationDir: destinationDir
                sourcePath: sourcePath
              - destinationDir: destinationDir
                sourcePath: sourcePath
              from:
                uid: uid
                apiVersion: apiVersion
                kind: kind
                resourceVersion: resourceVersion
                fieldPath: fieldPath
                name: name
                namespace: namespace
              pullSecret:
                name: name
            git:
              ref: ref
              httpProxy: httpProxy
              httpsProxy: httpsProxy
              noProxy: noProxy
              uri: uri
            configMaps:
            - destinationDir: destinationDir
              configMap:
                name: name
            - destinationDir: destinationDir
              configMap:
                name: name
            binary:
              asFile: asFile
            dockerfile: dockerfile
            type: type
            secrets:
            - destinationDir: destinationDir
              secret:
                name: name
            - destinationDir: destinationDir
              secret:
                name: name
            contextDir: contextDir
          postCommit:
            args:
            - args
            - args
            command:
            - command
            - command
            script: script
          strategy:
            jenkinsPipelineStrategy:
              jenkinsfilePath: jenkinsfilePath
              jenkinsfile: jenkinsfile
              env:
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    name: name
                    optional: true
                    key: key
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  configMapKeyRef:
                    name: name
                    optional: true
                    key: key
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    name: name
                    optional: true
                    key: key
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  configMapKeyRef:
                    name: name
                    optional: true
                    key: key
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
            sourceStrategy:
              forcePull: true
              from:
                uid: uid
                apiVersion: apiVersion
                kind: kind
                resourceVersion: resourceVersion
                fieldPath: fieldPath
                name: name
                namespace: namespace
              incremental: true
              env:
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    name: name
                    optional: true
                    key: key
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  configMapKeyRef:
                    name: name
                    optional: true
                    key: key
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    name: name
                    optional: true
                    key: key
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  configMapKeyRef:
                    name: name
                    optional: true
                    key: key
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              scripts: scripts
              pullSecret:
                name: name
            dockerStrategy:
              forcePull: true
              imageOptimizationPolicy: "{}"
              dockerfilePath: dockerfilePath
              noCache: true
              from:
                uid: uid
                apiVersion: apiVersion
                kind: kind
                resourceVersion: resourceVersion
                fieldPath: fieldPath
                name: name
                namespace: namespace
              env:
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    name: name
                    optional: true
                    key: key
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  configMapKeyRef:
                    name: name
                    optional: true
                    key: key
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    name: name
                    optional: true
                    key: key
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  configMapKeyRef:
                    name: name
                    optional: true
                    key: key
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              buildArgs:
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    name: name
                    optional: true
                    key: key
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  configMapKeyRef:
                    name: name
                    optional: true
                    key: key
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    name: name
                    optional: true
                    key: key
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  configMapKeyRef:
                    name: name
                    optional: true
                    key: key
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              pullSecret:
                name: name
            type: type
            customStrategy:
              buildAPIVersion: buildAPIVersion
              forcePull: true
              from:
                uid: uid
                apiVersion: apiVersion
                kind: kind
                resourceVersion: resourceVersion
                fieldPath: fieldPath
                name: name
                namespace: namespace
              env:
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    name: name
                    optional: true
                    key: key
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  configMapKeyRef:
                    name: name
                    optional: true
                    key: key
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    name: name
                    optional: true
                    key: key
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  configMapKeyRef:
                    name: name
                    optional: true
                    key: key
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              exposeDockerSocket: true
              pullSecret:
                name: name
              secrets:
              - mountPath: mountPath
                secretSource:
                  name: name
              - mountPath: mountPath
                secretSource:
                  name: name
          nodeSelector: "{}"
          revision:
            git:
              committer:
                name: name
                email: email
              author:
                name: name
                email: email
              commit: commit
              message: message
            type: type
          triggeredBy:
          - githubWebHook:
              secret: secret
              revision:
                git:
                  committer:
                    name: name
                    email: email
                  author:
                    name: name
                    email: email
                  commit: commit
                  message: message
                type: type
            genericWebHook:
              secret: secret
              revision:
                git:
                  committer:
                    name: name
                    email: email
                  author:
                    name: name
                    email: email
                  commit: commit
                  message: message
                type: type
            bitbucketWebHook:
              secret: secret
              revision:
                git:
                  committer:
                    name: name
                    email: email
                  author:
                    name: name
                    email: email
                  commit: commit
                  message: message
                type: type
            imageChangeBuild:
              imageID: imageID
              fromRef:
                uid: uid
                apiVersion: apiVersion
                kind: kind
                resourceVersion: resourceVersion
                fieldPath: fieldPath
                name: name
                namespace: namespace
            message: message
            gitlabWebHook:
              secret: secret
              revision:
                git:
                  committer:
                    name: name
                    email: email
                  author:
                    name: name
                    email: email
                  commit: commit
                  message: message
                type: type
          - githubWebHook:
              secret: secret
              revision:
                git:
                  committer:
                    name: name
                    email: email
                  author:
                    name: name
                    email: email
                  commit: commit
                  message: message
                type: type
            genericWebHook:
              secret: secret
              revision:
                git:
                  committer:
                    name: name
                    email: email
                  author:
                    name: name
                    email: email
                  commit: commit
                  message: message
                type: type
            bitbucketWebHook:
              secret: secret
              revision:
                git:
                  committer:
                    name: name
                    email: email
                  author:
                    name: name
                    email: email
                  commit: commit
                  message: message
                type: type
            imageChangeBuild:
              imageID: imageID
              fromRef:
                uid: uid
                apiVersion: apiVersion
                kind: kind
                resourceVersion: resourceVersion
                fieldPath: fieldPath
                name: name
                namespace: namespace
            message: message
            gitlabWebHook:
              secret: secret
              revision:
                git:
                  committer:
                    name: name
                    email: email
                  author:
                    name: name
                    email: email
                  commit: commit
                  message: message
                type: type
        status:
          output:
            to:
              imageDigest: imageDigest
          phase: phase
          reason: reason
          completionTimestamp: completionTimestamp
          stages:
          - durationMilliseconds: 6
            name: name
            startTime: startTime
            steps:
            - durationMilliseconds: 1
              name: name
              startTime: startTime
            - durationMilliseconds: 1
              name: name
              startTime: startTime
          - durationMilliseconds: 6
            name: name
            startTime: startTime
            steps:
            - durationMilliseconds: 1
              name: name
              startTime: startTime
            - durationMilliseconds: 1
              name: name
              startTime: startTime
          cancelled: true
          message: message
          config:
            uid: uid
            apiVersion: apiVersion
            kind: kind
            resourceVersion: resourceVersion
            fieldPath: fieldPath
            name: name
            namespace: namespace
          logSnippet: logSnippet
          outputDockerImageReference: outputDockerImageReference
          startTimestamp: startTimestamp
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
          type: string
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: '#/components/schemas/v1.ObjectMeta'
        spec:
          $ref: '#/components/schemas/v1.BuildSpec'
        status:
          $ref: '#/components/schemas/v1.BuildStatus'
      type: object
    v1.BuildConfig:
      description: |-
        Build configurations define a build process for new Docker images. There are three types of builds possible - a Docker build using a Dockerfile, a Source-to-Image build that uses a specially prepared base image that accepts source code that it can make runnable, and a custom build that can run // arbitrary Docker images as a base and accept the build parameters. Builds run on the cluster and on completion are pushed to the Docker registry specified in the "output" section. A build can be triggered via a webhook, when the base image changes, or when a user manually requests a new build be // created.

        Each build created by a build configuration is numbered and refers back to its parent configuration. Multiple builds can be triggered at once. Builds that do not have "output" set can be used to test code or run a verification build.
      example:
        metadata:
          generation: 6
          finalizers:
          - finalizers
          - finalizers
          resourceVersion: resourceVersion
          annotations: "{}"
          generateName: generateName
          deletionTimestamp: deletionTimestamp
          labels: "{}"
          ownerReferences:
          - uid: uid
            controller: true
            apiVersion: apiVersion
            kind: kind
            name: name
            blockOwnerDeletion: true
          - uid: uid
            controller: true
            apiVersion: apiVersion
            kind: kind
            name: name
            blockOwnerDeletion: true
          selfLink: selfLink
          deletionGracePeriodSeconds: 0
          uid: uid
          initializers:
            result:
              reason: reason
              metadata:
                continue: continue
                resourceVersion: resourceVersion
                selfLink: selfLink
              apiVersion: apiVersion
              code: 1
              kind: kind
              details:
                uid: uid
                kind: kind
                causes:
                - reason: reason
                  field: field
                  message: message
                - reason: reason
                  field: field
                  message: message
                retryAfterSeconds: 5
                name: name
                group: group
              message: message
              status: status
            pending:
            - name: name
            - name: name
          clusterName: clusterName
          creationTimestamp: creationTimestamp
          name: name
          namespace: namespace
        apiVersion: apiVersion
        kind: kind
        spec:
          completionDeadlineSeconds: 0
          resources:
            requests: "{}"
            limits: "{}"
          serviceAccount: serviceAccount
          source:
            sourceSecret:
              name: name
            images:
            - as:
              - as
              - as
              paths:
              - destinationDir: destinationDir
                sourcePath: sourcePath
              - destinationDir: destinationDir
                sourcePath: sourcePath
              from:
                uid: uid
                apiVersion: apiVersion
                kind: kind
                resourceVersion: resourceVersion
                fieldPath: fieldPath
                name: name
                namespace: namespace
              pullSecret:
                name: name
            - as:
              - as
              - as
              paths:
              - destinationDir: destinationDir
                sourcePath: sourcePath
              - destinationDir: destinationDir
                sourcePath: sourcePath
              from:
                uid: uid
                apiVersion: apiVersion
                kind: kind
                resourceVersion: resourceVersion
                fieldPath: fieldPath
                name: name
                namespace: namespace
              pullSecret:
                name: name
            git:
              ref: ref
              httpProxy: httpProxy
              httpsProxy: httpsProxy
              noProxy: noProxy
              uri: uri
            configMaps:
            - destinationDir: destinationDir
              configMap:
                name: name
            - destinationDir: destinationDir
              configMap:
                name: name
            binary:
              asFile: asFile
            dockerfile: dockerfile
            type: type
            secrets:
            - destinationDir: destinationDir
              secret:
                name: name
            - destinationDir: destinationDir
              secret:
                name: name
            contextDir: contextDir
          triggers:
          - imageChange:
              lastTriggeredImageID: lastTriggeredImageID
              paused: true
              from:
                uid: uid
                apiVersion: apiVersion
                kind: kind
                resourceVersion: resourceVersion
                fieldPath: fieldPath
                name: name
                namespace: namespace
            github:
              allowEnv: true
              secret: secret
              secretReference:
                name: name
            gitlab:
              allowEnv: true
              secret: secret
              secretReference:
                name: name
            bitbucket:
              allowEnv: true
              secret: secret
              secretReference:
                name: name
            type: type
            generic:
              allowEnv: true
              secret: secret
              secretReference:
                name: name
          - imageChange:
              lastTriggeredImageID: lastTriggeredImageID
              paused: true
              from:
                uid: uid
                apiVersion: apiVersion
                kind: kind
                resourceVersion: resourceVersion
                fieldPath: fieldPath
                name: name
                namespace: namespace
            github:
              allowEnv: true
              secret: secret
              secretReference:
                name: name
            gitlab:
              allowEnv: true
              secret: secret
              secretReference:
                name: name
            bitbucket:
              allowEnv: true
              secret: secret
              secretReference:
                name: name
            type: type
            generic:
              allowEnv: true
              secret: secret
              secretReference:
                name: name
          nodeSelector: "{}"
          revision:
            git:
              committer:
                name: name
                email: email
              author:
                name: name
                email: email
              commit: commit
              message: message
            type: type
          output:
            to:
              uid: uid
              apiVersion: apiVersion
              kind: kind
              resourceVersion: resourceVersion
              fieldPath: fieldPath
              name: name
              namespace: namespace
            pushSecret:
              name: name
            imageLabels:
            - name: name
              value: value
            - name: name
              value: value
          successfulBuildsHistoryLimit: 1
          failedBuildsHistoryLimit: 6
          postCommit:
            args:
            - args
            - args
            command:
            - command
            - command
            script: script
          strategy:
            jenkinsPipelineStrategy:
              jenkinsfilePath: jenkinsfilePath
              jenkinsfile: jenkinsfile
              env:
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    name: name
                    optional: true
                    key: key
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  configMapKeyRef:
                    name: name
                    optional: true
                    key: key
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    name: name
                    optional: true
                    key: key
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  configMapKeyRef:
                    name: name
                    optional: true
                    key: key
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
            sourceStrategy:
              forcePull: true
              from:
                uid: uid
                apiVersion: apiVersion
                kind: kind
                resourceVersion: resourceVersion
                fieldPath: fieldPath
                name: name
                namespace: namespace
              incremental: true
              env:
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    name: name
                    optional: true
                    key: key
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  configMapKeyRef:
                    name: name
                    optional: true
                    key: key
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    name: name
                    optional: true
                    key: key
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  configMapKeyRef:
                    name: name
                    optional: true
                    key: key
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              scripts: scripts
              pullSecret:
                name: name
            dockerStrategy:
              forcePull: true
              imageOptimizationPolicy: "{}"
              dockerfilePath: dockerfilePath
              noCache: true
              from:
                uid: uid
                apiVersion: apiVersion
                kind: kind
                resourceVersion: resourceVersion
                fieldPath: fieldPath
                name: name
                namespace: namespace
              env:
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    name: name
                    optional: true
                    key: key
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  configMapKeyRef:
                    name: name
                    optional: true
                    key: key
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    name: name
                    optional: true
                    key: key
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  configMapKeyRef:
                    name: name
                    optional: true
                    key: key
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              buildArgs:
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    name: name
                    optional: true
                    key: key
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  configMapKeyRef:
                    name: name
                    optional: true
                    key: key
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    name: name
                    optional: true
                    key: key
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  configMapKeyRef:
                    name: name
                    optional: true
                    key: key
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              pullSecret:
                name: name
            type: type
            customStrategy:
              buildAPIVersion: buildAPIVersion
              forcePull: true
              from:
                uid: uid
                apiVersion: apiVersion
                kind: kind
                resourceVersion: resourceVersion
                fieldPath: fieldPath
                name: name
                namespace: namespace
              env:
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    name: name
                    optional: true
                    key: key
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  configMapKeyRef:
                    name: name
                    optional: true
                    key: key
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    name: name
                    optional: true
                    key: key
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  configMapKeyRef:
                    name: name
                    optional: true
                    key: key
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              exposeDockerSocket: true
              pullSecret:
                name: name
              secrets:
              - mountPath: mountPath
                secretSource:
                  name: name
              - mountPath: mountPath
                secretSource:
                  name: name
          runPolicy: runPolicy
        status:
          lastVersion: 5
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
          type: string
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: '#/components/schemas/v1.ObjectMeta'
        spec:
          $ref: '#/components/schemas/v1.BuildConfigSpec'
        status:
          $ref: '#/components/schemas/v1.BuildConfigStatus'
      required:
      - spec
      - status
      type: object
    v1.BuildConfigList:
      description: BuildConfigList is a collection of BuildConfigs.
      example:
        metadata:
          continue: continue
          resourceVersion: resourceVersion
          selfLink: selfLink
        apiVersion: apiVersion
        kind: kind
        items:
        - metadata:
            generation: 6
            finalizers:
            - finalizers
            - finalizers
            resourceVersion: resourceVersion
            annotations: "{}"
            generateName: generateName
            deletionTimestamp: deletionTimestamp
            labels: "{}"
            ownerReferences:
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            selfLink: selfLink
            deletionGracePeriodSeconds: 0
            uid: uid
            initializers:
              result:
                reason: reason
                metadata:
                  continue: continue
                  resourceVersion: resourceVersion
                  selfLink: selfLink
                apiVersion: apiVersion
                code: 1
                kind: kind
                details:
                  uid: uid
                  kind: kind
                  causes:
                  - reason: reason
                    field: field
                    message: message
                  - reason: reason
                    field: field
                    message: message
                  retryAfterSeconds: 5
                  name: name
                  group: group
                message: message
                status: status
              pending:
              - name: name
              - name: name
            clusterName: clusterName
            creationTimestamp: creationTimestamp
            name: name
            namespace: namespace
          apiVersion: apiVersion
          kind: kind
          spec:
            completionDeadlineSeconds: 0
            resources:
              requests: "{}"
              limits: "{}"
            serviceAccount: serviceAccount
            source:
              sourceSecret:
                name: name
              images:
              - as:
                - as
                - as
                paths:
                - destinationDir: destinationDir
                  sourcePath: sourcePath
                - destinationDir: destinationDir
                  sourcePath: sourcePath
                from:
                  uid: uid
                  apiVersion: apiVersion
                  kind: kind
                  resourceVersion: resourceVersion
                  fieldPath: fieldPath
                  name: name
                  namespace: namespace
                pullSecret:
                  name: name
              - as:
                - as
                - as
                paths:
                - destinationDir: destinationDir
                  sourcePath: sourcePath
                - destinationDir: destinationDir
                  sourcePath: sourcePath
                from:
                  uid: uid
                  apiVersion: apiVersion
                  kind: kind
                  resourceVersion: resourceVersion
                  fieldPath: fieldPath
                  name: name
                  namespace: namespace
                pullSecret:
                  name: name
              git:
                ref: ref
                httpProxy: httpProxy
                httpsProxy: httpsProxy
                noProxy: noProxy
                uri: uri
              configMaps:
              - destinationDir: destinationDir
                configMap:
                  name: name
              - destinationDir: destinationDir
                configMap:
                  name: name
              binary:
                asFile: asFile
              dockerfile: dockerfile
              type: type
              secrets:
              - destinationDir: destinationDir
                secret:
                  name: name
              - destinationDir: destinationDir
                secret:
                  name: name
              contextDir: contextDir
            triggers:
            - imageChange:
                lastTriggeredImageID: lastTriggeredImageID
                paused: true
                from:
                  uid: uid
                  apiVersion: apiVersion
                  kind: kind
                  resourceVersion: resourceVersion
                  fieldPath: fieldPath
                  name: name
                  namespace: namespace
              github:
                allowEnv: true
                secret: secret
                secretReference:
                  name: name
              gitlab:
                allowEnv: true
                secret: secret
                secretReference:
                  name: name
              bitbucket:
                allowEnv: true
                secret: secret
                secretReference:
                  name: name
              type: type
              generic:
                allowEnv: true
                secret: secret
                secretReference:
                  name: name
            - imageChange:
                lastTriggeredImageID: lastTriggeredImageID
                paused: true
                from:
                  uid: uid
                  apiVersion: apiVersion
                  kind: kind
                  resourceVersion: resourceVersion
                  fieldPath: fieldPath
                  name: name
                  namespace: namespace
              github:
                allowEnv: true
                secret: secret
                secretReference:
                  name: name
              gitlab:
                allowEnv: true
                secret: secret
                secretReference:
                  name: name
              bitbucket:
                allowEnv: true
                secret: secret
                secretReference:
                  name: name
              type: type
              generic:
                allowEnv: true
                secret: secret
                secretReference:
                  name: name
            nodeSelector: "{}"
            revision:
              git:
                committer:
                  name: name
                  email: email
                author:
                  name: name
                  email: email
                commit: commit
                message: message
              type: type
            output:
              to:
                uid: uid
                apiVersion: apiVersion
                kind: kind
                resourceVersion: resourceVersion
                fieldPath: fieldPath
                name: name
                namespace: namespace
              pushSecret:
                name: name
              imageLabels:
              - name: name
                value: value
              - name: name
                value: value
            successfulBuildsHistoryLimit: 1
            failedBuildsHistoryLimit: 6
            postCommit:
              args:
              - args
              - args
              command:
              - command
              - command
              script: script
            strategy:
              jenkinsPipelineStrategy:
                jenkinsfilePath: jenkinsfilePath
                jenkinsfile: jenkinsfile
                env:
                - name: name
                  value: value
                  valueFrom:
                    secretKeyRef:
                      name: name
                      optional: true
                      key: key
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    configMapKeyRef:
                      name: name
                      optional: true
                      key: key
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                - name: name
                  value: value
                  valueFrom:
                    secretKeyRef:
                      name: name
                      optional: true
                      key: key
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    configMapKeyRef:
                      name: name
                      optional: true
                      key: key
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
              sourceStrategy:
                forcePull: true
                from:
                  uid: uid
                  apiVersion: apiVersion
                  kind: kind
                  resourceVersion: resourceVersion
                  fieldPath: fieldPath
                  name: name
                  namespace: namespace
                incremental: true
                env:
                - name: name
                  value: value
                  valueFrom:
                    secretKeyRef:
                      name: name
                      optional: true
                      key: key
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    configMapKeyRef:
                      name: name
                      optional: true
                      key: key
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                - name: name
                  value: value
                  valueFrom:
                    secretKeyRef:
                      name: name
                      optional: true
                      key: key
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    configMapKeyRef:
                      name: name
                      optional: true
                      key: key
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                scripts: scripts
                pullSecret:
                  name: name
              dockerStrategy:
                forcePull: true
                imageOptimizationPolicy: "{}"
                dockerfilePath: dockerfilePath
                noCache: true
                from:
                  uid: uid
                  apiVersion: apiVersion
                  kind: kind
                  resourceVersion: resourceVersion
                  fieldPath: fieldPath
                  name: name
                  namespace: namespace
                env:
                - name: name
                  value: value
                  valueFrom:
                    secretKeyRef:
                      name: name
                      optional: true
                      key: key
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    configMapKeyRef:
                      name: name
                      optional: true
                      key: key
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                - name: name
                  value: value
                  valueFrom:
                    secretKeyRef:
                      name: name
                      optional: true
                      key: key
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    configMapKeyRef:
                      name: name
                      optional: true
                      key: key
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                buildArgs:
                - name: name
                  value: value
                  valueFrom:
                    secretKeyRef:
                      name: name
                      optional: true
                      key: key
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    configMapKeyRef:
                      name: name
                      optional: true
                      key: key
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                - name: name
                  value: value
                  valueFrom:
                    secretKeyRef:
                      name: name
                      optional: true
                      key: key
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    configMapKeyRef:
                      name: name
                      optional: true
                      key: key
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                pullSecret:
                  name: name
              type: type
              customStrategy:
                buildAPIVersion: buildAPIVersion
                forcePull: true
                from:
                  uid: uid
                  apiVersion: apiVersion
                  kind: kind
                  resourceVersion: resourceVersion
                  fieldPath: fieldPath
                  name: name
                  namespace: namespace
                env:
                - name: name
                  value: value
                  valueFrom:
                    secretKeyRef:
                      name: name
                      optional: true
                      key: key
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    configMapKeyRef:
                      name: name
                      optional: true
                      key: key
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                - name: name
                  value: value
                  valueFrom:
                    secretKeyRef:
                      name: name
                      optional: true
                      key: key
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    configMapKeyRef:
                      name: name
                      optional: true
                      key: key
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                exposeDockerSocket: true
                pullSecret:
                  name: name
                secrets:
                - mountPath: mountPath
                  secretSource:
                    name: name
                - mountPath: mountPath
                  secretSource:
                    name: name
            runPolicy: runPolicy
          status:
            lastVersion: 5
        - metadata:
            generation: 6
            finalizers:
            - finalizers
            - finalizers
            resourceVersion: resourceVersion
            annotations: "{}"
            generateName: generateName
            deletionTimestamp: deletionTimestamp
            labels: "{}"
            ownerReferences:
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            selfLink: selfLink
            deletionGracePeriodSeconds: 0
            uid: uid
            initializers:
              result:
                reason: reason
                metadata:
                  continue: continue
                  resourceVersion: resourceVersion
                  selfLink: selfLink
                apiVersion: apiVersion
                code: 1
                kind: kind
                details:
                  uid: uid
                  kind: kind
                  causes:
                  - reason: reason
                    field: field
                    message: message
                  - reason: reason
                    field: field
                    message: message
                  retryAfterSeconds: 5
                  name: name
                  group: group
                message: message
                status: status
              pending:
              - name: name
              - name: name
            clusterName: clusterName
            creationTimestamp: creationTimestamp
            name: name
            namespace: namespace
          apiVersion: apiVersion
          kind: kind
          spec:
            completionDeadlineSeconds: 0
            resources:
              requests: "{}"
              limits: "{}"
            serviceAccount: serviceAccount
            source:
              sourceSecret:
                name: name
              images:
              - as:
                - as
                - as
                paths:
                - destinationDir: destinationDir
                  sourcePath: sourcePath
                - destinationDir: destinationDir
                  sourcePath: sourcePath
                from:
                  uid: uid
                  apiVersion: apiVersion
                  kind: kind
                  resourceVersion: resourceVersion
                  fieldPath: fieldPath
                  name: name
                  namespace: namespace
                pullSecret:
                  name: name
              - as:
                - as
                - as
                paths:
                - destinationDir: destinationDir
                  sourcePath: sourcePath
                - destinationDir: destinationDir
                  sourcePath: sourcePath
                from:
                  uid: uid
                  apiVersion: apiVersion
                  kind: kind
                  resourceVersion: resourceVersion
                  fieldPath: fieldPath
                  name: name
                  namespace: namespace
                pullSecret:
                  name: name
              git:
                ref: ref
                httpProxy: httpProxy
                httpsProxy: httpsProxy
                noProxy: noProxy
                uri: uri
              configMaps:
              - destinationDir: destinationDir
                configMap:
                  name: name
              - destinationDir: destinationDir
                configMap:
                  name: name
              binary:
                asFile: asFile
              dockerfile: dockerfile
              type: type
              secrets:
              - destinationDir: destinationDir
                secret:
                  name: name
              - destinationDir: destinationDir
                secret:
                  name: name
              contextDir: contextDir
            triggers:
            - imageChange:
                lastTriggeredImageID: lastTriggeredImageID
                paused: true
                from:
                  uid: uid
                  apiVersion: apiVersion
                  kind: kind
                  resourceVersion: resourceVersion
                  fieldPath: fieldPath
                  name: name
                  namespace: namespace
              github:
                allowEnv: true
                secret: secret
                secretReference:
                  name: name
              gitlab:
                allowEnv: true
                secret: secret
                secretReference:
                  name: name
              bitbucket:
                allowEnv: true
                secret: secret
                secretReference:
                  name: name
              type: type
              generic:
                allowEnv: true
                secret: secret
                secretReference:
                  name: name
            - imageChange:
                lastTriggeredImageID: lastTriggeredImageID
                paused: true
                from:
                  uid: uid
                  apiVersion: apiVersion
                  kind: kind
                  resourceVersion: resourceVersion
                  fieldPath: fieldPath
                  name: name
                  namespace: namespace
              github:
                allowEnv: true
                secret: secret
                secretReference:
                  name: name
              gitlab:
                allowEnv: true
                secret: secret
                secretReference:
                  name: name
              bitbucket:
                allowEnv: true
                secret: secret
                secretReference:
                  name: name
              type: type
              generic:
                allowEnv: true
                secret: secret
                secretReference:
                  name: name
            nodeSelector: "{}"
            revision:
              git:
                committer:
                  name: name
                  email: email
                author:
                  name: name
                  email: email
                commit: commit
                message: message
              type: type
            output:
              to:
                uid: uid
                apiVersion: apiVersion
                kind: kind
                resourceVersion: resourceVersion
                fieldPath: fieldPath
                name: name
                namespace: namespace
              pushSecret:
                name: name
              imageLabels:
              - name: name
                value: value
              - name: name
                value: value
            successfulBuildsHistoryLimit: 1
            failedBuildsHistoryLimit: 6
            postCommit:
              args:
              - args
              - args
              command:
              - command
              - command
              script: script
            strategy:
              jenkinsPipelineStrategy:
                jenkinsfilePath: jenkinsfilePath
                jenkinsfile: jenkinsfile
                env:
                - name: name
                  value: value
                  valueFrom:
                    secretKeyRef:
                      name: name
                      optional: true
                      key: key
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    configMapKeyRef:
                      name: name
                      optional: true
                      key: key
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                - name: name
                  value: value
                  valueFrom:
                    secretKeyRef:
                      name: name
                      optional: true
                      key: key
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    configMapKeyRef:
                      name: name
                      optional: true
                      key: key
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
              sourceStrategy:
                forcePull: true
                from:
                  uid: uid
                  apiVersion: apiVersion
                  kind: kind
                  resourceVersion: resourceVersion
                  fieldPath: fieldPath
                  name: name
                  namespace: namespace
                incremental: true
                env:
                - name: name
                  value: value
                  valueFrom:
                    secretKeyRef:
                      name: name
                      optional: true
                      key: key
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    configMapKeyRef:
                      name: name
                      optional: true
                      key: key
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                - name: name
                  value: value
                  valueFrom:
                    secretKeyRef:
                      name: name
                      optional: true
                      key: key
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    configMapKeyRef:
                      name: name
                      optional: true
                      key: key
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                scripts: scripts
                pullSecret:
                  name: name
              dockerStrategy:
                forcePull: true
                imageOptimizationPolicy: "{}"
                dockerfilePath: dockerfilePath
                noCache: true
                from:
                  uid: uid
                  apiVersion: apiVersion
                  kind: kind
                  resourceVersion: resourceVersion
                  fieldPath: fieldPath
                  name: name
                  namespace: namespace
                env:
                - name: name
                  value: value
                  valueFrom:
                    secretKeyRef:
                      name: name
                      optional: true
                      key: key
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    configMapKeyRef:
                      name: name
                      optional: true
                      key: key
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                - name: name
                  value: value
                  valueFrom:
                    secretKeyRef:
                      name: name
                      optional: true
                      key: key
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    configMapKeyRef:
                      name: name
                      optional: true
                      key: key
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                buildArgs:
                - name: name
                  value: value
                  valueFrom:
                    secretKeyRef:
                      name: name
                      optional: true
                      key: key
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    configMapKeyRef:
                      name: name
                      optional: true
                      key: key
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                - name: name
                  value: value
                  valueFrom:
                    secretKeyRef:
                      name: name
                      optional: true
                      key: key
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    configMapKeyRef:
                      name: name
                      optional: true
                      key: key
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                pullSecret:
                  name: name
              type: type
              customStrategy:
                buildAPIVersion: buildAPIVersion
                forcePull: true
                from:
                  uid: uid
                  apiVersion: apiVersion
                  kind: kind
                  resourceVersion: resourceVersion
                  fieldPath: fieldPath
                  name: name
                  namespace: namespace
                env:
                - name: name
                  value: value
                  valueFrom:
                    secretKeyRef:
                      name: name
                      optional: true
                      key: key
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    configMapKeyRef:
                      name: name
                      optional: true
                      key: key
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                - name: name
                  value: value
                  valueFrom:
                    secretKeyRef:
                      name: name
                      optional: true
                      key: key
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    configMapKeyRef:
                      name: name
                      optional: true
                      key: key
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                exposeDockerSocket: true
                pullSecret:
                  name: name
                secrets:
                - mountPath: mountPath
                  secretSource:
                    name: name
                - mountPath: mountPath
                  secretSource:
                    name: name
            runPolicy: runPolicy
          status:
            lastVersion: 5
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
          type: string
        items:
          description: items is a list of build configs
          items:
            $ref: '#/components/schemas/v1.BuildConfig'
          type: array
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: '#/components/schemas/v1.ListMeta'
      required:
      - items
      type: object
    v1.BuildConfigSpec:
      description: BuildConfigSpec describes when and how builds are created
      example:
        completionDeadlineSeconds: 0
        resources:
          requests: "{}"
          limits: "{}"
        serviceAccount: serviceAccount
        source:
          sourceSecret:
            name: name
          images:
          - as:
            - as
            - as
            paths:
            - destinationDir: destinationDir
              sourcePath: sourcePath
            - destinationDir: destinationDir
              sourcePath: sourcePath
            from:
              uid: uid
              apiVersion: apiVersion
              kind: kind
              resourceVersion: resourceVersion
              fieldPath: fieldPath
              name: name
              namespace: namespace
            pullSecret:
              name: name
          - as:
            - as
            - as
            paths:
            - destinationDir: destinationDir
              sourcePath: sourcePath
            - destinationDir: destinationDir
              sourcePath: sourcePath
            from:
              uid: uid
              apiVersion: apiVersion
              kind: kind
              resourceVersion: resourceVersion
              fieldPath: fieldPath
              name: name
              namespace: namespace
            pullSecret:
              name: name
          git:
            ref: ref
            httpProxy: httpProxy
            httpsProxy: httpsProxy
            noProxy: noProxy
            uri: uri
          configMaps:
          - destinationDir: destinationDir
            configMap:
              name: name
          - destinationDir: destinationDir
            configMap:
              name: name
          binary:
            asFile: asFile
          dockerfile: dockerfile
          type: type
          secrets:
          - destinationDir: destinationDir
            secret:
              name: name
          - destinationDir: destinationDir
            secret:
              name: name
          contextDir: contextDir
        triggers:
        - imageChange:
            lastTriggeredImageID: lastTriggeredImageID
            paused: true
            from:
              uid: uid
              apiVersion: apiVersion
              kind: kind
              resourceVersion: resourceVersion
              fieldPath: fieldPath
              name: name
              namespace: namespace
          github:
            allowEnv: true
            secret: secret
            secretReference:
              name: name
          gitlab:
            allowEnv: true
            secret: secret
            secretReference:
              name: name
          bitbucket:
            allowEnv: true
            secret: secret
            secretReference:
              name: name
          type: type
          generic:
            allowEnv: true
            secret: secret
            secretReference:
              name: name
        - imageChange:
            lastTriggeredImageID: lastTriggeredImageID
            paused: true
            from:
              uid: uid
              apiVersion: apiVersion
              kind: kind
              resourceVersion: resourceVersion
              fieldPath: fieldPath
              name: name
              namespace: namespace
          github:
            allowEnv: true
            secret: secret
            secretReference:
              name: name
          gitlab:
            allowEnv: true
            secret: secret
            secretReference:
              name: name
          bitbucket:
            allowEnv: true
            secret: secret
            secretReference:
              name: name
          type: type
          generic:
            allowEnv: true
            secret: secret
            secretReference:
              name: name
        nodeSelector: "{}"
        revision:
          git:
            committer:
              name: name
              email: email
            author:
              name: name
              email: email
            commit: commit
            message: message
          type: type
        output:
          to:
            uid: uid
            apiVersion: apiVersion
            kind: kind
            resourceVersion: resourceVersion
            fieldPath: fieldPath
            name: name
            namespace: namespace
          pushSecret:
            name: name
          imageLabels:
          - name: name
            value: value
          - name: name
            value: value
        successfulBuildsHistoryLimit: 1
        failedBuildsHistoryLimit: 6
        postCommit:
          args:
          - args
          - args
          command:
          - command
          - command
          script: script
        strategy:
          jenkinsPipelineStrategy:
            jenkinsfilePath: jenkinsfilePath
            jenkinsfile: jenkinsfile
            env:
            - name: name
              value: value
              valueFrom:
                secretKeyRef:
                  name: name
                  optional: true
                  key: key
                resourceFieldRef:
                  divisor: divisor
                  resource: resource
                  containerName: containerName
                configMapKeyRef:
                  name: name
                  optional: true
                  key: key
                fieldRef:
                  apiVersion: apiVersion
                  fieldPath: fieldPath
            - name: name
              value: value
              valueFrom:
                secretKeyRef:
                  name: name
                  optional: true
                  key: key
                resourceFieldRef:
                  divisor: divisor
                  resource: resource
                  containerName: containerName
                configMapKeyRef:
                  name: name
                  optional: true
                  key: key
                fieldRef:
                  apiVersion: apiVersion
                  fieldPath: fieldPath
          sourceStrategy:
            forcePull: true
            from:
              uid: uid
              apiVersion: apiVersion
              kind: kind
              resourceVersion: resourceVersion
              fieldPath: fieldPath
              name: name
              namespace: namespace
            incremental: true
            env:
            - name: name
              value: value
              valueFrom:
                secretKeyRef:
                  name: name
                  optional: true
                  key: key
                resourceFieldRef:
                  divisor: divisor
                  resource: resource
                  containerName: containerName
                configMapKeyRef:
                  name: name
                  optional: true
                  key: key
                fieldRef:
                  apiVersion: apiVersion
                  fieldPath: fieldPath
            - name: name
              value: value
              valueFrom:
                secretKeyRef:
                  name: name
                  optional: true
                  key: key
                resourceFieldRef:
                  divisor: divisor
                  resource: resource
                  containerName: containerName
                configMapKeyRef:
                  name: name
                  optional: true
                  key: key
                fieldRef:
                  apiVersion: apiVersion
                  fieldPath: fieldPath
            scripts: scripts
            pullSecret:
              name: name
          dockerStrategy:
            forcePull: true
            imageOptimizationPolicy: "{}"
            dockerfilePath: dockerfilePath
            noCache: true
            from:
              uid: uid
              apiVersion: apiVersion
              kind: kind
              resourceVersion: resourceVersion
              fieldPath: fieldPath
              name: name
              namespace: namespace
            env:
            - name: name
              value: value
              valueFrom:
                secretKeyRef:
                  name: name
                  optional: true
                  key: key
                resourceFieldRef:
                  divisor: divisor
                  resource: resource
                  containerName: containerName
                configMapKeyRef:
                  name: name
                  optional: true
                  key: key
                fieldRef:
                  apiVersion: apiVersion
                  fieldPath: fieldPath
            - name: name
              value: value
              valueFrom:
                secretKeyRef:
                  name: name
                  optional: true
                  key: key
                resourceFieldRef:
                  divisor: divisor
                  resource: resource
                  containerName: containerName
                configMapKeyRef:
                  name: name
                  optional: true
                  key: key
                fieldRef:
                  apiVersion: apiVersion
                  fieldPath: fieldPath
            buildArgs:
            - name: name
              value: value
              valueFrom:
                secretKeyRef:
                  name: name
                  optional: true
                  key: key
                resourceFieldRef:
                  divisor: divisor
                  resource: resource
                  containerName: containerName
                configMapKeyRef:
                  name: name
                  optional: true
                  key: key
                fieldRef:
                  apiVersion: apiVersion
                  fieldPath: fieldPath
            - name: name
              value: value
              valueFrom:
                secretKeyRef:
                  name: name
                  optional: true
                  key: key
                resourceFieldRef:
                  divisor: divisor
                  resource: resource
                  containerName: containerName
                configMapKeyRef:
                  name: name
                  optional: true
                  key: key
                fieldRef:
                  apiVersion: apiVersion
                  fieldPath: fieldPath
            pullSecret:
              name: name
          type: type
          customStrategy:
            buildAPIVersion: buildAPIVersion
            forcePull: true
            from:
              uid: uid
              apiVersion: apiVersion
              kind: kind
              resourceVersion: resourceVersion
              fieldPath: fieldPath
              name: name
              namespace: namespace
            env:
            - name: name
              value: value
              valueFrom:
                secretKeyRef:
                  name: name
                  optional: true
                  key: key
                resourceFieldRef:
                  divisor: divisor
                  resource: resource
                  containerName: containerName
                configMapKeyRef:
                  name: name
                  optional: true
                  key: key
                fieldRef:
                  apiVersion: apiVersion
                  fieldPath: fieldPath
            - name: name
              value: value
              valueFrom:
                secretKeyRef:
                  name: name
                  optional: true
                  key: key
                resourceFieldRef:
                  divisor: divisor
                  resource: resource
                  containerName: containerName
                configMapKeyRef:
                  name: name
                  optional: true
                  key: key
                fieldRef:
                  apiVersion: apiVersion
                  fieldPath: fieldPath
            exposeDockerSocket: true
            pullSecret:
              name: name
            secrets:
            - mountPath: mountPath
              secretSource:
                name: name
            - mountPath: mountPath
              secretSource:
                name: name
        runPolicy: runPolicy
      properties:
        completionDeadlineSeconds:
          description: "completionDeadlineSeconds is an optional duration in seconds,\
            \ counted from the time when a build pod gets scheduled in the system,\
            \ that the build may be active on a node before the system actively tries\
            \ to terminate the build; value must be positive integer"
          format: int64
          type: integer
        failedBuildsHistoryLimit:
          description: "failedBuildsHistoryLimit is the number of old failed builds\
            \ to retain. If not specified, all failed builds are retained."
          format: int32
          type: integer
        nodeSelector:
          description: "nodeSelector is a selector which must be true for the build\
            \ pod to fit on a node If nil, it can be overridden by default build nodeselector\
            \ values for the cluster. If set to an empty map or a map with any values,\
            \ default build nodeselector values are ignored."
          properties: {}
          type: object
        output:
          $ref: '#/components/schemas/v1.BuildOutput'
        postCommit:
          $ref: '#/components/schemas/v1.BuildPostCommitSpec'
        resources:
          $ref: '#/components/schemas/v1.ResourceRequirements'
        revision:
          $ref: '#/components/schemas/v1.SourceRevision'
        runPolicy:
          description: "RunPolicy describes how the new build created from this build\
            \ configuration will be scheduled for execution. This is optional, if\
            \ not specified we default to \"Serial\"."
          type: string
        serviceAccount:
          description: serviceAccount is the name of the ServiceAccount to use to
            run the pod created by this build. The pod will be allowed to use secrets
            referenced by the ServiceAccount
          type: string
        source:
          $ref: '#/components/schemas/v1.BuildSource'
        strategy:
          $ref: '#/components/schemas/v1.BuildStrategy'
        successfulBuildsHistoryLimit:
          description: "successfulBuildsHistoryLimit is the number of old successful\
            \ builds to retain. If not specified, all successful builds are retained."
          format: int32
          type: integer
        triggers:
          description: "triggers determine how new Builds can be launched from a BuildConfig.\
            \ If no triggers are defined, a new build can only occur as a result of\
            \ an explicit client build creation."
          items:
            $ref: '#/components/schemas/v1.BuildTriggerPolicy'
          type: array
      required:
      - nodeSelector
      - strategy
      - triggers
      type: object
    v1.BuildConfigStatus:
      description: BuildConfigStatus contains current state of the build config object.
      example:
        lastVersion: 5
      properties:
        lastVersion:
          description: lastVersion is used to inform about number of last triggered
            build.
          format: int64
          type: integer
      required:
      - lastVersion
      type: object
    v1.BuildList:
      description: BuildList is a collection of Builds.
      example:
        metadata:
          continue: continue
          resourceVersion: resourceVersion
          selfLink: selfLink
        apiVersion: apiVersion
        kind: kind
        items:
        - metadata:
            generation: 6
            finalizers:
            - finalizers
            - finalizers
            resourceVersion: resourceVersion
            annotations: "{}"
            generateName: generateName
            deletionTimestamp: deletionTimestamp
            labels: "{}"
            ownerReferences:
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            selfLink: selfLink
            deletionGracePeriodSeconds: 0
            uid: uid
            initializers:
              result:
                reason: reason
                metadata:
                  continue: continue
                  resourceVersion: resourceVersion
                  selfLink: selfLink
                apiVersion: apiVersion
                code: 1
                kind: kind
                details:
                  uid: uid
                  kind: kind
                  causes:
                  - reason: reason
                    field: field
                    message: message
                  - reason: reason
                    field: field
                    message: message
                  retryAfterSeconds: 5
                  name: name
                  group: group
                message: message
                status: status
              pending:
              - name: name
              - name: name
            clusterName: clusterName
            creationTimestamp: creationTimestamp
            name: name
            namespace: namespace
          apiVersion: apiVersion
          kind: kind
          spec:
            output:
              to:
                uid: uid
                apiVersion: apiVersion
                kind: kind
                resourceVersion: resourceVersion
                fieldPath: fieldPath
                name: name
                namespace: namespace
              pushSecret:
                name: name
              imageLabels:
              - name: name
                value: value
              - name: name
                value: value
            completionDeadlineSeconds: 0
            resources:
              requests: "{}"
              limits: "{}"
            serviceAccount: serviceAccount
            source:
              sourceSecret:
                name: name
              images:
              - as:
                - as
                - as
                paths:
                - destinationDir: destinationDir
                  sourcePath: sourcePath
                - destinationDir: destinationDir
                  sourcePath: sourcePath
                from:
                  uid: uid
                  apiVersion: apiVersion
                  kind: kind
                  resourceVersion: resourceVersion
                  fieldPath: fieldPath
                  name: name
                  namespace: namespace
                pullSecret:
                  name: name
              - as:
                - as
                - as
                paths:
                - destinationDir: destinationDir
                  sourcePath: sourcePath
                - destinationDir: destinationDir
                  sourcePath: sourcePath
                from:
                  uid: uid
                  apiVersion: apiVersion
                  kind: kind
                  resourceVersion: resourceVersion
                  fieldPath: fieldPath
                  name: name
                  namespace: namespace
                pullSecret:
                  name: name
              git:
                ref: ref
                httpProxy: httpProxy
                httpsProxy: httpsProxy
                noProxy: noProxy
                uri: uri
              configMaps:
              - destinationDir: destinationDir
                configMap:
                  name: name
              - destinationDir: destinationDir
                configMap:
                  name: name
              binary:
                asFile: asFile
              dockerfile: dockerfile
              type: type
              secrets:
              - destinationDir: destinationDir
                secret:
                  name: name
              - destinationDir: destinationDir
                secret:
                  name: name
              contextDir: contextDir
            postCommit:
              args:
              - args
              - args
              command:
              - command
              - command
              script: script
            strategy:
              jenkinsPipelineStrategy:
                jenkinsfilePath: jenkinsfilePath
                jenkinsfile: jenkinsfile
                env:
                - name: name
                  value: value
                  valueFrom:
                    secretKeyRef:
                      name: name
                      optional: true
                      key: key
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    configMapKeyRef:
                      name: name
                      optional: true
                      key: key
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                - name: name
                  value: value
                  valueFrom:
                    secretKeyRef:
                      name: name
                      optional: true
                      key: key
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    configMapKeyRef:
                      name: name
                      optional: true
                      key: key
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
              sourceStrategy:
                forcePull: true
                from:
                  uid: uid
                  apiVersion: apiVersion
                  kind: kind
                  resourceVersion: resourceVersion
                  fieldPath: fieldPath
                  name: name
                  namespace: namespace
                incremental: true
                env:
                - name: name
                  value: value
                  valueFrom:
                    secretKeyRef:
                      name: name
                      optional: true
                      key: key
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    configMapKeyRef:
                      name: name
                      optional: true
                      key: key
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                - name: name
                  value: value
                  valueFrom:
                    secretKeyRef:
                      name: name
                      optional: true
                      key: key
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    configMapKeyRef:
                      name: name
                      optional: true
                      key: key
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                scripts: scripts
                pullSecret:
                  name: name
              dockerStrategy:
                forcePull: true
                imageOptimizationPolicy: "{}"
                dockerfilePath: dockerfilePath
                noCache: true
                from:
                  uid: uid
                  apiVersion: apiVersion
                  kind: kind
                  resourceVersion: resourceVersion
                  fieldPath: fieldPath
                  name: name
                  namespace: namespace
                env:
                - name: name
                  value: value
                  valueFrom:
                    secretKeyRef:
                      name: name
                      optional: true
                      key: key
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    configMapKeyRef:
                      name: name
                      optional: true
                      key: key
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                - name: name
                  value: value
                  valueFrom:
                    secretKeyRef:
                      name: name
                      optional: true
                      key: key
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    configMapKeyRef:
                      name: name
                      optional: true
                      key: key
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                buildArgs:
                - name: name
                  value: value
                  valueFrom:
                    secretKeyRef:
                      name: name
                      optional: true
                      key: key
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    configMapKeyRef:
                      name: name
                      optional: true
                      key: key
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                - name: name
                  value: value
                  valueFrom:
                    secretKeyRef:
                      name: name
                      optional: true
                      key: key
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    configMapKeyRef:
                      name: name
                      optional: true
                      key: key
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                pullSecret:
                  name: name
              type: type
              customStrategy:
                buildAPIVersion: buildAPIVersion
                forcePull: true
                from:
                  uid: uid
                  apiVersion: apiVersion
                  kind: kind
                  resourceVersion: resourceVersion
                  fieldPath: fieldPath
                  name: name
                  namespace: namespace
                env:
                - name: name
                  value: value
                  valueFrom:
                    secretKeyRef:
                      name: name
                      optional: true
                      key: key
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    configMapKeyRef:
                      name: name
                      optional: true
                      key: key
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                - name: name
                  value: value
                  valueFrom:
                    secretKeyRef:
                      name: name
                      optional: true
                      key: key
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    configMapKeyRef:
                      name: name
                      optional: true
                      key: key
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                exposeDockerSocket: true
                pullSecret:
                  name: name
                secrets:
                - mountPath: mountPath
                  secretSource:
                    name: name
                - mountPath: mountPath
                  secretSource:
                    name: name
            nodeSelector: "{}"
            revision:
              git:
                committer:
                  name: name
                  email: email
                author:
                  name: name
                  email: email
                commit: commit
                message: message
              type: type
            triggeredBy:
            - githubWebHook:
                secret: secret
                revision:
                  git:
                    committer:
                      name: name
                      email: email
                    author:
                      name: name
                      email: email
                    commit: commit
                    message: message
                  type: type
              genericWebHook:
                secret: secret
                revision:
                  git:
                    committer:
                      name: name
                      email: email
                    author:
                      name: name
                      email: email
                    commit: commit
                    message: message
                  type: type
              bitbucketWebHook:
                secret: secret
                revision:
                  git:
                    committer:
                      name: name
                      email: email
                    author:
                      name: name
                      email: email
                    commit: commit
                    message: message
                  type: type
              imageChangeBuild:
                imageID: imageID
                fromRef:
                  uid: uid
                  apiVersion: apiVersion
                  kind: kind
                  resourceVersion: resourceVersion
                  fieldPath: fieldPath
                  name: name
                  namespace: namespace
              message: message
              gitlabWebHook:
                secret: secret
                revision:
                  git:
                    committer:
                      name: name
                      email: email
                    author:
                      name: name
                      email: email
                    commit: commit
                    message: message
                  type: type
            - githubWebHook:
                secret: secret
                revision:
                  git:
                    committer:
                      name: name
                      email: email
                    author:
                      name: name
                      email: email
                    commit: commit
                    message: message
                  type: type
              genericWebHook:
                secret: secret
                revision:
                  git:
                    committer:
                      name: name
                      email: email
                    author:
                      name: name
                      email: email
                    commit: commit
                    message: message
                  type: type
              bitbucketWebHook:
                secret: secret
                revision:
                  git:
                    committer:
                      name: name
                      email: email
                    author:
                      name: name
                      email: email
                    commit: commit
                    message: message
                  type: type
              imageChangeBuild:
                imageID: imageID
                fromRef:
                  uid: uid
                  apiVersion: apiVersion
                  kind: kind
                  resourceVersion: resourceVersion
                  fieldPath: fieldPath
                  name: name
                  namespace: namespace
              message: message
              gitlabWebHook:
                secret: secret
                revision:
                  git:
                    committer:
                      name: name
                      email: email
                    author:
                      name: name
                      email: email
                    commit: commit
                    message: message
                  type: type
          status:
            output:
              to:
                imageDigest: imageDigest
            phase: phase
            reason: reason
            completionTimestamp: completionTimestamp
            stages:
            - durationMilliseconds: 6
              name: name
              startTime: startTime
              steps:
              - durationMilliseconds: 1
                name: name
                startTime: startTime
              - durationMilliseconds: 1
                name: name
                startTime: startTime
            - durationMilliseconds: 6
              name: name
              startTime: startTime
              steps:
              - durationMilliseconds: 1
                name: name
                startTime: startTime
              - durationMilliseconds: 1
                name: name
                startTime: startTime
            cancelled: true
            message: message
            config:
              uid: uid
              apiVersion: apiVersion
              kind: kind
              resourceVersion: resourceVersion
              fieldPath: fieldPath
              name: name
              namespace: namespace
            logSnippet: logSnippet
            outputDockerImageReference: outputDockerImageReference
            startTimestamp: startTimestamp
        - metadata:
            generation: 6
            finalizers:
            - finalizers
            - finalizers
            resourceVersion: resourceVersion
            annotations: "{}"
            generateName: generateName
            deletionTimestamp: deletionTimestamp
            labels: "{}"
            ownerReferences:
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            selfLink: selfLink
            deletionGracePeriodSeconds: 0
            uid: uid
            initializers:
              result:
                reason: reason
                metadata:
                  continue: continue
                  resourceVersion: resourceVersion
                  selfLink: selfLink
                apiVersion: apiVersion
                code: 1
                kind: kind
                details:
                  uid: uid
                  kind: kind
                  causes:
                  - reason: reason
                    field: field
                    message: message
                  - reason: reason
                    field: field
                    message: message
                  retryAfterSeconds: 5
                  name: name
                  group: group
                message: message
                status: status
              pending:
              - name: name
              - name: name
            clusterName: clusterName
            creationTimestamp: creationTimestamp
            name: name
            namespace: namespace
          apiVersion: apiVersion
          kind: kind
          spec:
            output:
              to:
                uid: uid
                apiVersion: apiVersion
                kind: kind
                resourceVersion: resourceVersion
                fieldPath: fieldPath
                name: name
                namespace: namespace
              pushSecret:
                name: name
              imageLabels:
              - name: name
                value: value
              - name: name
                value: value
            completionDeadlineSeconds: 0
            resources:
              requests: "{}"
              limits: "{}"
            serviceAccount: serviceAccount
            source:
              sourceSecret:
                name: name
              images:
              - as:
                - as
                - as
                paths:
                - destinationDir: destinationDir
                  sourcePath: sourcePath
                - destinationDir: destinationDir
                  sourcePath: sourcePath
                from:
                  uid: uid
                  apiVersion: apiVersion
                  kind: kind
                  resourceVersion: resourceVersion
                  fieldPath: fieldPath
                  name: name
                  namespace: namespace
                pullSecret:
                  name: name
              - as:
                - as
                - as
                paths:
                - destinationDir: destinationDir
                  sourcePath: sourcePath
                - destinationDir: destinationDir
                  sourcePath: sourcePath
                from:
                  uid: uid
                  apiVersion: apiVersion
                  kind: kind
                  resourceVersion: resourceVersion
                  fieldPath: fieldPath
                  name: name
                  namespace: namespace
                pullSecret:
                  name: name
              git:
                ref: ref
                httpProxy: httpProxy
                httpsProxy: httpsProxy
                noProxy: noProxy
                uri: uri
              configMaps:
              - destinationDir: destinationDir
                configMap:
                  name: name
              - destinationDir: destinationDir
                configMap:
                  name: name
              binary:
                asFile: asFile
              dockerfile: dockerfile
              type: type
              secrets:
              - destinationDir: destinationDir
                secret:
                  name: name
              - destinationDir: destinationDir
                secret:
                  name: name
              contextDir: contextDir
            postCommit:
              args:
              - args
              - args
              command:
              - command
              - command
              script: script
            strategy:
              jenkinsPipelineStrategy:
                jenkinsfilePath: jenkinsfilePath
                jenkinsfile: jenkinsfile
                env:
                - name: name
                  value: value
                  valueFrom:
                    secretKeyRef:
                      name: name
                      optional: true
                      key: key
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    configMapKeyRef:
                      name: name
                      optional: true
                      key: key
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                - name: name
                  value: value
                  valueFrom:
                    secretKeyRef:
                      name: name
                      optional: true
                      key: key
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    configMapKeyRef:
                      name: name
                      optional: true
                      key: key
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
              sourceStrategy:
                forcePull: true
                from:
                  uid: uid
                  apiVersion: apiVersion
                  kind: kind
                  resourceVersion: resourceVersion
                  fieldPath: fieldPath
                  name: name
                  namespace: namespace
                incremental: true
                env:
                - name: name
                  value: value
                  valueFrom:
                    secretKeyRef:
                      name: name
                      optional: true
                      key: key
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    configMapKeyRef:
                      name: name
                      optional: true
                      key: key
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                - name: name
                  value: value
                  valueFrom:
                    secretKeyRef:
                      name: name
                      optional: true
                      key: key
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    configMapKeyRef:
                      name: name
                      optional: true
                      key: key
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                scripts: scripts
                pullSecret:
                  name: name
              dockerStrategy:
                forcePull: true
                imageOptimizationPolicy: "{}"
                dockerfilePath: dockerfilePath
                noCache: true
                from:
                  uid: uid
                  apiVersion: apiVersion
                  kind: kind
                  resourceVersion: resourceVersion
                  fieldPath: fieldPath
                  name: name
                  namespace: namespace
                env:
                - name: name
                  value: value
                  valueFrom:
                    secretKeyRef:
                      name: name
                      optional: true
                      key: key
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    configMapKeyRef:
                      name: name
                      optional: true
                      key: key
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                - name: name
                  value: value
                  valueFrom:
                    secretKeyRef:
                      name: name
                      optional: true
                      key: key
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    configMapKeyRef:
                      name: name
                      optional: true
                      key: key
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                buildArgs:
                - name: name
                  value: value
                  valueFrom:
                    secretKeyRef:
                      name: name
                      optional: true
                      key: key
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    configMapKeyRef:
                      name: name
                      optional: true
                      key: key
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                - name: name
                  value: value
                  valueFrom:
                    secretKeyRef:
                      name: name
                      optional: true
                      key: key
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    configMapKeyRef:
                      name: name
                      optional: true
                      key: key
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                pullSecret:
                  name: name
              type: type
              customStrategy:
                buildAPIVersion: buildAPIVersion
                forcePull: true
                from:
                  uid: uid
                  apiVersion: apiVersion
                  kind: kind
                  resourceVersion: resourceVersion
                  fieldPath: fieldPath
                  name: name
                  namespace: namespace
                env:
                - name: name
                  value: value
                  valueFrom:
                    secretKeyRef:
                      name: name
                      optional: true
                      key: key
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    configMapKeyRef:
                      name: name
                      optional: true
                      key: key
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                - name: name
                  value: value
                  valueFrom:
                    secretKeyRef:
                      name: name
                      optional: true
                      key: key
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    configMapKeyRef:
                      name: name
                      optional: true
                      key: key
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                exposeDockerSocket: true
                pullSecret:
                  name: name
                secrets:
                - mountPath: mountPath
                  secretSource:
                    name: name
                - mountPath: mountPath
                  secretSource:
                    name: name
            nodeSelector: "{}"
            revision:
              git:
                committer:
                  name: name
                  email: email
                author:
                  name: name
                  email: email
                commit: commit
                message: message
              type: type
            triggeredBy:
            - githubWebHook:
                secret: secret
                revision:
                  git:
                    committer:
                      name: name
                      email: email
                    author:
                      name: name
                      email: email
                    commit: commit
                    message: message
                  type: type
              genericWebHook:
                secret: secret
                revision:
                  git:
                    committer:
                      name: name
                      email: email
                    author:
                      name: name
                      email: email
                    commit: commit
                    message: message
                  type: type
              bitbucketWebHook:
                secret: secret
                revision:
                  git:
                    committer:
                      name: name
                      email: email
                    author:
                      name: name
                      email: email
                    commit: commit
                    message: message
                  type: type
              imageChangeBuild:
                imageID: imageID
                fromRef:
                  uid: uid
                  apiVersion: apiVersion
                  kind: kind
                  resourceVersion: resourceVersion
                  fieldPath: fieldPath
                  name: name
                  namespace: namespace
              message: message
              gitlabWebHook:
                secret: secret
                revision:
                  git:
                    committer:
                      name: name
                      email: email
                    author:
                      name: name
                      email: email
                    commit: commit
                    message: message
                  type: type
            - githubWebHook:
                secret: secret
                revision:
                  git:
                    committer:
                      name: name
                      email: email
                    author:
                      name: name
                      email: email
                    commit: commit
                    message: message
                  type: type
              genericWebHook:
                secret: secret
                revision:
                  git:
                    committer:
                      name: name
                      email: email
                    author:
                      name: name
                      email: email
                    commit: commit
                    message: message
                  type: type
              bitbucketWebHook:
                secret: secret
                revision:
                  git:
                    committer:
                      name: name
                      email: email
                    author:
                      name: name
                      email: email
                    commit: commit
                    message: message
                  type: type
              imageChangeBuild:
                imageID: imageID
                fromRef:
                  uid: uid
                  apiVersion: apiVersion
                  kind: kind
                  resourceVersion: resourceVersion
                  fieldPath: fieldPath
                  name: name
                  namespace: namespace
              message: message
              gitlabWebHook:
                secret: secret
                revision:
                  git:
                    committer:
                      name: name
                      email: email
                    author:
                      name: name
                      email: email
                    commit: commit
                    message: message
                  type: type
          status:
            output:
              to:
                imageDigest: imageDigest
            phase: phase
            reason: reason
            completionTimestamp: completionTimestamp
            stages:
            - durationMilliseconds: 6
              name: name
              startTime: startTime
              steps:
              - durationMilliseconds: 1
                name: name
                startTime: startTime
              - durationMilliseconds: 1
                name: name
                startTime: startTime
            - durationMilliseconds: 6
              name: name
              startTime: startTime
              steps:
              - durationMilliseconds: 1
                name: name
                startTime: startTime
              - durationMilliseconds: 1
                name: name
                startTime: startTime
            cancelled: true
            message: message
            config:
              uid: uid
              apiVersion: apiVersion
              kind: kind
              resourceVersion: resourceVersion
              fieldPath: fieldPath
              name: name
              namespace: namespace
            logSnippet: logSnippet
            outputDockerImageReference: outputDockerImageReference
            startTimestamp: startTimestamp
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
          type: string
        items:
          description: items is a list of builds
          items:
            $ref: '#/components/schemas/v1.Build'
          type: array
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: '#/components/schemas/v1.ListMeta'
      required:
      - items
      type: object
    v1.BuildLog:
      description: BuildLog is the (unused) resource associated with the build log
        redirector
      example:
        apiVersion: apiVersion
        kind: kind
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
          type: string
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
          type: string
      type: object
    v1.BuildOutput:
      description: BuildOutput is input to a build strategy and describes the Docker
        image that the strategy should produce.
      example:
        to:
          uid: uid
          apiVersion: apiVersion
          kind: kind
          resourceVersion: resourceVersion
          fieldPath: fieldPath
          name: name
          namespace: namespace
        pushSecret:
          name: name
        imageLabels:
        - name: name
          value: value
        - name: name
          value: value
      properties:
        imageLabels:
          description: imageLabels define a list of labels that are applied to the
            resulting image. If there are multiple labels with the same name then
            the last one in the list is used.
          items:
            $ref: '#/components/schemas/v1.ImageLabel'
          type: array
        pushSecret:
          $ref: '#/components/schemas/v1.LocalObjectReference'
        to:
          $ref: '#/components/schemas/v1.ObjectReference'
      type: object
    v1.BuildPostCommitSpec:
      description: "A BuildPostCommitSpec holds a build post commit hook specification.\
        \ The hook executes a command in a temporary container running the build output\
        \ image, immediately after the last layer of the image is committed and before\
        \ the image is pushed to a registry. The command is executed with the current\
        \ working directory ($PWD) set to the image's WORKDIR.\n\nThe build will be\
        \ marked as failed if the hook execution fails. It will fail if the script\
        \ or command return a non-zero exit code, or if there is any other error related\
        \ to starting the temporary container.\n\nThere are five different ways to\
        \ configure the hook. As an example, all forms below are equivalent and will\
        \ execute `rake test --verbose`.\n\n1. Shell script:\n\n       \"postCommit\"\
        : {\n         \"script\": \"rake test --verbose\",\n       }\n\n    The above\
        \ is a convenient form which is equivalent to:\n\n       \"postCommit\": {\n\
        \         \"command\": [\"/bin/sh\", \"-ic\"],\n         \"args\":    [\"\
        rake test --verbose\"]\n       }\n\n2. A command as the image entrypoint:\n\
        \n       \"postCommit\": {\n         \"commit\": [\"rake\", \"test\", \"--verbose\"\
        ]\n       }\n\n    Command overrides the image entrypoint in the exec form,\
        \ as documented in\n    Docker: https://docs.docker.com/engine/reference/builder/#entrypoint.\n\
        \n3. Pass arguments to the default entrypoint:\n\n       \"postCommit\": {\n\
        \t\t      \"args\": [\"rake\", \"test\", \"--verbose\"]\n\t      }\n\n   \
        \ This form is only useful if the image entrypoint can handle arguments.\n\
        \n4. Shell script with arguments:\n\n       \"postCommit\": {\n         \"\
        script\": \"rake test $1\",\n         \"args\":   [\"--verbose\"]\n      \
        \ }\n\n    This form is useful if you need to pass arguments that would otherwise\
        \ be\n    hard to quote properly in the shell script. In the script, $0 will\
        \ be\n    \"/bin/sh\" and $1, $2, etc, are the positional arguments from Args.\n\
        \n5. Command with arguments:\n\n       \"postCommit\": {\n         \"command\"\
        : [\"rake\", \"test\"],\n         \"args\":    [\"--verbose\"]\n       }\n\
        \n    This form is equivalent to appending the arguments to the Command slice.\n\
        \nIt is invalid to provide both Script and Command simultaneously. If none\
        \ of the fields are specified, the hook is not executed."
      example:
        args:
        - args
        - args
        command:
        - command
        - command
        script: script
      properties:
        args:
          description: "args is a list of arguments that are provided to either Command,\
            \ Script or the Docker image's default entrypoint. The arguments are placed\
            \ immediately after the command to be run."
          items:
            type: string
          type: array
        command:
          description: "command is the command to run. It may not be specified with\
            \ Script. This might be needed if the image doesn't have `/bin/sh`, or\
            \ if you do not want to use a shell. In all other cases, using Script\
            \ might be more convenient."
          items:
            type: string
          type: array
        script:
          description: "script is a shell script to be run with `/bin/sh -ic`. It\
            \ may not be specified with Command. Use Script when a shell script is\
            \ appropriate to execute the post build hook, for example for running\
            \ unit tests with `rake test`. If you need control over the image entrypoint,\
            \ or if the image does not have `/bin/sh`, use Command and/or Args. The\
            \ `-i` flag is needed to support CentOS and RHEL images that use Software\
            \ Collections (SCL), in order to have the appropriate collections enabled\
            \ in the shell. E.g., in the Ruby image, this is necessary to make `ruby`,\
            \ `bundle` and other binaries available in the PATH."
          type: string
      type: object
    v1.BuildRequest:
      description: BuildRequest is the resource used to pass parameters to build generator
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
          type: string
        binary:
          $ref: '#/components/schemas/v1.BinaryBuildSource'
        dockerStrategyOptions:
          $ref: '#/components/schemas/v1.DockerStrategyOptions'
        env:
          description: env contains additional environment variables you want to pass
            into a builder container.
          items:
            $ref: '#/components/schemas/v1.EnvVar'
          type: array
        from:
          $ref: '#/components/schemas/v1.ObjectReference'
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
          type: string
        lastVersion:
          description: "lastVersion (optional) is the LastVersion of the BuildConfig\
            \ that was used to generate the build. If the BuildConfig in the generator\
            \ doesn't match, a build will not be generated."
          format: int64
          type: integer
        metadata:
          $ref: '#/components/schemas/v1.ObjectMeta'
        revision:
          $ref: '#/components/schemas/v1.SourceRevision'
        sourceStrategyOptions:
          $ref: '#/components/schemas/v1.SourceStrategyOptions'
        triggeredBy:
          description: triggeredBy describes which triggers started the most recent
            update to the build configuration and contains information about those
            triggers.
          items:
            $ref: '#/components/schemas/v1.BuildTriggerCause'
          type: array
        triggeredByImage:
          $ref: '#/components/schemas/v1.ObjectReference'
      required:
      - triggeredBy
      type: object
    v1.BuildSource:
      description: BuildSource is the SCM used for the build.
      example:
        sourceSecret:
          name: name
        images:
        - as:
          - as
          - as
          paths:
          - destinationDir: destinationDir
            sourcePath: sourcePath
          - destinationDir: destinationDir
            sourcePath: sourcePath
          from:
            uid: uid
            apiVersion: apiVersion
            kind: kind
            resourceVersion: resourceVersion
            fieldPath: fieldPath
            name: name
            namespace: namespace
          pullSecret:
            name: name
        - as:
          - as
          - as
          paths:
          - destinationDir: destinationDir
            sourcePath: sourcePath
          - destinationDir: destinationDir
            sourcePath: sourcePath
          from:
            uid: uid
            apiVersion: apiVersion
            kind: kind
            resourceVersion: resourceVersion
            fieldPath: fieldPath
            name: name
            namespace: namespace
          pullSecret:
            name: name
        git:
          ref: ref
          httpProxy: httpProxy
          httpsProxy: httpsProxy
          noProxy: noProxy
          uri: uri
        configMaps:
        - destinationDir: destinationDir
          configMap:
            name: name
        - destinationDir: destinationDir
          configMap:
            name: name
        binary:
          asFile: asFile
        dockerfile: dockerfile
        type: type
        secrets:
        - destinationDir: destinationDir
          secret:
            name: name
        - destinationDir: destinationDir
          secret:
            name: name
        contextDir: contextDir
      properties:
        binary:
          $ref: '#/components/schemas/v1.BinaryBuildSource'
        configMaps:
          description: configMaps represents a list of configMaps and their destinations
            that will be used for the build.
          items:
            $ref: '#/components/schemas/v1.ConfigMapBuildSource'
          type: array
        contextDir:
          description: contextDir specifies the sub-directory where the source code
            for the application exists. This allows to have buildable sources in directory
            other than root of repository.
          type: string
        dockerfile:
          description: "dockerfile is the raw contents of a Dockerfile which should\
            \ be built. When this option is specified, the FROM may be modified based\
            \ on your strategy base image and additional ENV stanzas from your strategy\
            \ environment will be added after the FROM, but before the rest of your\
            \ Dockerfile stanzas. The Dockerfile source type may be used with other\
            \ options like git - in those cases the Git repo will have any innate\
            \ Dockerfile replaced in the context dir."
          type: string
        git:
          $ref: '#/components/schemas/v1.GitBuildSource'
        images:
          description: images describes a set of images to be used to provide source
            for the build
          items:
            $ref: '#/components/schemas/v1.ImageSource'
          type: array
        secrets:
          description: secrets represents a list of secrets and their destinations
            that will be used only for the build.
          items:
            $ref: '#/components/schemas/v1.SecretBuildSource'
          type: array
        sourceSecret:
          $ref: '#/components/schemas/v1.LocalObjectReference'
        type:
          description: type of build input to accept
          type: string
      required:
      - type
      type: object
    v1.BuildSpec:
      description: BuildSpec has the information to represent a build and also additional
        information about a build
      example:
        output:
          to:
            uid: uid
            apiVersion: apiVersion
            kind: kind
            resourceVersion: resourceVersion
            fieldPath: fieldPath
            name: name
            namespace: namespace
          pushSecret:
            name: name
          imageLabels:
          - name: name
            value: value
          - name: name
            value: value
        completionDeadlineSeconds: 0
        resources:
          requests: "{}"
          limits: "{}"
        serviceAccount: serviceAccount
        source:
          sourceSecret:
            name: name
          images:
          - as:
            - as
            - as
            paths:
            - destinationDir: destinationDir
              sourcePath: sourcePath
            - destinationDir: destinationDir
              sourcePath: sourcePath
            from:
              uid: uid
              apiVersion: apiVersion
              kind: kind
              resourceVersion: resourceVersion
              fieldPath: fieldPath
              name: name
              namespace: namespace
            pullSecret:
              name: name
          - as:
            - as
            - as
            paths:
            - destinationDir: destinationDir
              sourcePath: sourcePath
            - destinationDir: destinationDir
              sourcePath: sourcePath
            from:
              uid: uid
              apiVersion: apiVersion
              kind: kind
              resourceVersion: resourceVersion
              fieldPath: fieldPath
              name: name
              namespace: namespace
            pullSecret:
              name: name
          git:
            ref: ref
            httpProxy: httpProxy
            httpsProxy: httpsProxy
            noProxy: noProxy
            uri: uri
          configMaps:
          - destinationDir: destinationDir
            configMap:
              name: name
          - destinationDir: destinationDir
            configMap:
              name: name
          binary:
            asFile: asFile
          dockerfile: dockerfile
          type: type
          secrets:
          - destinationDir: destinationDir
            secret:
              name: name
          - destinationDir: destinationDir
            secret:
              name: name
          contextDir: contextDir
        postCommit:
          args:
          - args
          - args
          command:
          - command
          - command
          script: script
        strategy:
          jenkinsPipelineStrategy:
            jenkinsfilePath: jenkinsfilePath
            jenkinsfile: jenkinsfile
            env:
            - name: name
              value: value
              valueFrom:
                secretKeyRef:
                  name: name
                  optional: true
                  key: key
                resourceFieldRef:
                  divisor: divisor
                  resource: resource
                  containerName: containerName
                configMapKeyRef:
                  name: name
                  optional: true
                  key: key
                fieldRef:
                  apiVersion: apiVersion
                  fieldPath: fieldPath
            - name: name
              value: value
              valueFrom:
                secretKeyRef:
                  name: name
                  optional: true
                  key: key
                resourceFieldRef:
                  divisor: divisor
                  resource: resource
                  containerName: containerName
                configMapKeyRef:
                  name: name
                  optional: true
                  key: key
                fieldRef:
                  apiVersion: apiVersion
                  fieldPath: fieldPath
          sourceStrategy:
            forcePull: true
            from:
              uid: uid
              apiVersion: apiVersion
              kind: kind
              resourceVersion: resourceVersion
              fieldPath: fieldPath
              name: name
              namespace: namespace
            incremental: true
            env:
            - name: name
              value: value
              valueFrom:
                secretKeyRef:
                  name: name
                  optional: true
                  key: key
                resourceFieldRef:
                  divisor: divisor
                  resource: resource
                  containerName: containerName
                configMapKeyRef:
                  name: name
                  optional: true
                  key: key
                fieldRef:
                  apiVersion: apiVersion
                  fieldPath: fieldPath
            - name: name
              value: value
              valueFrom:
                secretKeyRef:
                  name: name
                  optional: true
                  key: key
                resourceFieldRef:
                  divisor: divisor
                  resource: resource
                  containerName: containerName
                configMapKeyRef:
                  name: name
                  optional: true
                  key: key
                fieldRef:
                  apiVersion: apiVersion
                  fieldPath: fieldPath
            scripts: scripts
            pullSecret:
              name: name
          dockerStrategy:
            forcePull: true
            imageOptimizationPolicy: "{}"
            dockerfilePath: dockerfilePath
            noCache: true
            from:
              uid: uid
              apiVersion: apiVersion
              kind: kind
              resourceVersion: resourceVersion
              fieldPath: fieldPath
              name: name
              namespace: namespace
            env:
            - name: name
              value: value
              valueFrom:
                secretKeyRef:
                  name: name
                  optional: true
                  key: key
                resourceFieldRef:
                  divisor: divisor
                  resource: resource
                  containerName: containerName
                configMapKeyRef:
                  name: name
                  optional: true
                  key: key
                fieldRef:
                  apiVersion: apiVersion
                  fieldPath: fieldPath
            - name: name
              value: value
              valueFrom:
                secretKeyRef:
                  name: name
                  optional: true
                  key: key
                resourceFieldRef:
                  divisor: divisor
                  resource: resource
                  containerName: containerName
                configMapKeyRef:
                  name: name
                  optional: true
                  key: key
                fieldRef:
                  apiVersion: apiVersion
                  fieldPath: fieldPath
            buildArgs:
            - name: name
              value: value
              valueFrom:
                secretKeyRef:
                  name: name
                  optional: true
                  key: key
                resourceFieldRef:
                  divisor: divisor
                  resource: resource
                  containerName: containerName
                configMapKeyRef:
                  name: name
                  optional: true
                  key: key
                fieldRef:
                  apiVersion: apiVersion
                  fieldPath: fieldPath
            - name: name
              value: value
              valueFrom:
                secretKeyRef:
                  name: name
                  optional: true
                  key: key
                resourceFieldRef:
                  divisor: divisor
                  resource: resource
                  containerName: containerName
                configMapKeyRef:
                  name: name
                  optional: true
                  key: key
                fieldRef:
                  apiVersion: apiVersion
                  fieldPath: fieldPath
            pullSecret:
              name: name
          type: type
          customStrategy:
            buildAPIVersion: buildAPIVersion
            forcePull: true
            from:
              uid: uid
              apiVersion: apiVersion
              kind: kind
              resourceVersion: resourceVersion
              fieldPath: fieldPath
              name: name
              namespace: namespace
            env:
            - name: name
              value: value
              valueFrom:
                secretKeyRef:
                  name: name
                  optional: true
                  key: key
                resourceFieldRef:
                  divisor: divisor
                  resource: resource
                  containerName: containerName
                configMapKeyRef:
                  name: name
                  optional: true
                  key: key
                fieldRef:
                  apiVersion: apiVersion
                  fieldPath: fieldPath
            - name: name
              value: value
              valueFrom:
                secretKeyRef:
                  name: name
                  optional: true
                  key: key
                resourceFieldRef:
                  divisor: divisor
                  resource: resource
                  containerName: containerName
                configMapKeyRef:
                  name: name
                  optional: true
                  key: key
                fieldRef:
                  apiVersion: apiVersion
                  fieldPath: fieldPath
            exposeDockerSocket: true
            pullSecret:
              name: name
            secrets:
            - mountPath: mountPath
              secretSource:
                name: name
            - mountPath: mountPath
              secretSource:
                name: name
        nodeSelector: "{}"
        revision:
          git:
            committer:
              name: name
              email: email
            author:
              name: name
              email: email
            commit: commit
            message: message
          type: type
        triggeredBy:
        - githubWebHook:
            secret: secret
            revision:
              git:
                committer:
                  name: name
                  email: email
                author:
                  name: name
                  email: email
                commit: commit
                message: message
              type: type
          genericWebHook:
            secret: secret
            revision:
              git:
                committer:
                  name: name
                  email: email
                author:
                  name: name
                  email: email
                commit: commit
                message: message
              type: type
          bitbucketWebHook:
            secret: secret
            revision:
              git:
                committer:
                  name: name
                  email: email
                author:
                  name: name
                  email: email
                commit: commit
                message: message
              type: type
          imageChangeBuild:
            imageID: imageID
            fromRef:
              uid: uid
              apiVersion: apiVersion
              kind: kind
              resourceVersion: resourceVersion
              fieldPath: fieldPath
              name: name
              namespace: namespace
          message: message
          gitlabWebHook:
            secret: secret
            revision:
              git:
                committer:
                  name: name
                  email: email
                author:
                  name: name
                  email: email
                commit: commit
                message: message
              type: type
        - githubWebHook:
            secret: secret
            revision:
              git:
                committer:
                  name: name
                  email: email
                author:
                  name: name
                  email: email
                commit: commit
                message: message
              type: type
          genericWebHook:
            secret: secret
            revision:
              git:
                committer:
                  name: name
                  email: email
                author:
                  name: name
                  email: email
                commit: commit
                message: message
              type: type
          bitbucketWebHook:
            secret: secret
            revision:
              git:
                committer:
                  name: name
                  email: email
                author:
                  name: name
                  email: email
                commit: commit
                message: message
              type: type
          imageChangeBuild:
            imageID: imageID
            fromRef:
              uid: uid
              apiVersion: apiVersion
              kind: kind
              resourceVersion: resourceVersion
              fieldPath: fieldPath
              name: name
              namespace: namespace
          message: message
          gitlabWebHook:
            secret: secret
            revision:
              git:
                committer:
                  name: name
                  email: email
                author:
                  name: name
                  email: email
                commit: commit
                message: message
              type: type
      properties:
        completionDeadlineSeconds:
          description: "completionDeadlineSeconds is an optional duration in seconds,\
            \ counted from the time when a build pod gets scheduled in the system,\
            \ that the build may be active on a node before the system actively tries\
            \ to terminate the build; value must be positive integer"
          format: int64
          type: integer
        nodeSelector:
          description: "nodeSelector is a selector which must be true for the build\
            \ pod to fit on a node If nil, it can be overridden by default build nodeselector\
            \ values for the cluster. If set to an empty map or a map with any values,\
            \ default build nodeselector values are ignored."
          properties: {}
          type: object
        output:
          $ref: '#/components/schemas/v1.BuildOutput'
        postCommit:
          $ref: '#/components/schemas/v1.BuildPostCommitSpec'
        resources:
          $ref: '#/components/schemas/v1.ResourceRequirements'
        revision:
          $ref: '#/components/schemas/v1.SourceRevision'
        serviceAccount:
          description: serviceAccount is the name of the ServiceAccount to use to
            run the pod created by this build. The pod will be allowed to use secrets
            referenced by the ServiceAccount
          type: string
        source:
          $ref: '#/components/schemas/v1.BuildSource'
        strategy:
          $ref: '#/components/schemas/v1.BuildStrategy'
        triggeredBy:
          description: triggeredBy describes which triggers started the most recent
            update to the build configuration and contains information about those
            triggers.
          items:
            $ref: '#/components/schemas/v1.BuildTriggerCause'
          type: array
      required:
      - nodeSelector
      - strategy
      - triggeredBy
      type: object
    v1.BuildStatus:
      description: BuildStatus contains the status of a build
      example:
        output:
          to:
            imageDigest: imageDigest
        phase: phase
        reason: reason
        completionTimestamp: completionTimestamp
        stages:
        - durationMilliseconds: 6
          name: name
          startTime: startTime
          steps:
          - durationMilliseconds: 1
            name: name
            startTime: startTime
          - durationMilliseconds: 1
            name: name
            startTime: startTime
        - durationMilliseconds: 6
          name: name
          startTime: startTime
          steps:
          - durationMilliseconds: 1
            name: name
            startTime: startTime
          - durationMilliseconds: 1
            name: name
            startTime: startTime
        cancelled: true
        message: message
        config:
          uid: uid
          apiVersion: apiVersion
          kind: kind
          resourceVersion: resourceVersion
          fieldPath: fieldPath
          name: name
          namespace: namespace
        logSnippet: logSnippet
        outputDockerImageReference: outputDockerImageReference
        startTimestamp: startTimestamp
      properties:
        cancelled:
          description: cancelled describes if a cancel event was triggered for the
            build.
          type: boolean
        completionTimestamp:
          description: "completionTimestamp is a timestamp representing the server\
            \ time when this Build was finished, whether that build failed or succeeded.\
            \  It reflects the time at which the Pod running the Build terminated.\
            \ It is represented in RFC3339 form and is in UTC."
          type: string
        config:
          $ref: '#/components/schemas/v1.ObjectReference'
        logSnippet:
          description: logSnippet is the last few lines of the build log.  This value
            is only set for builds that failed.
          type: string
        message:
          description: message is a human-readable message indicating details about
            why the build has this status.
          type: string
        output:
          $ref: '#/components/schemas/v1.BuildStatusOutput'
        outputDockerImageReference:
          description: "outputDockerImageReference contains a reference to the Docker\
            \ image that will be built by this build. Its value is computed from Build.Spec.Output.To,\
            \ and should include the registry address, so that it can be used to push\
            \ and pull the image."
          type: string
        phase:
          description: "phase is the point in the build lifecycle. Possible values\
            \ are \"New\", \"Pending\", \"Running\", \"Complete\", \"Failed\", \"\
            Error\", and \"Cancelled\"."
          type: string
        reason:
          description: reason is a brief CamelCase string that describes any failure
            and is meant for machine parsing and tidy display in the CLI.
          type: string
        stages:
          description: "stages contains details about each stage that occurs during\
            \ the build including start time, duration (in milliseconds), and the\
            \ steps that occured within each stage."
          items:
            $ref: '#/components/schemas/v1.StageInfo'
          type: array
        startTimestamp:
          description: startTimestamp is a timestamp representing the server time
            when this Build started running in a Pod. It is represented in RFC3339
            form and is in UTC.
          type: string
      required:
      - phase
      type: object
    v1.BuildStatusOutput:
      description: BuildStatusOutput contains the status of the built image.
      example:
        to:
          imageDigest: imageDigest
      properties:
        to:
          $ref: '#/components/schemas/v1.BuildStatusOutputTo'
      type: object
    v1.BuildStatusOutputTo:
      description: BuildStatusOutputTo describes the status of the built image with
        regards to image registry to which it was supposed to be pushed.
      example:
        imageDigest: imageDigest
      properties:
        imageDigest:
          description: |-
            imageDigest is the digest of the built Docker image. The digest uniquely identifies the image in the registry to which it was pushed.

            Please note that this field may not always be set even if the push completes successfully - e.g. when the registry returns no digest or returns it in a format that the builder doesn't understand.
          type: string
      type: object
    v1.BuildStrategy:
      description: BuildStrategy contains the details of how to perform a build.
      example:
        jenkinsPipelineStrategy:
          jenkinsfilePath: jenkinsfilePath
          jenkinsfile: jenkinsfile
          env:
          - name: name
            value: value
            valueFrom:
              secretKeyRef:
                name: name
                optional: true
                key: key
              resourceFieldRef:
                divisor: divisor
                resource: resource
                containerName: containerName
              configMapKeyRef:
                name: name
                optional: true
                key: key
              fieldRef:
                apiVersion: apiVersion
                fieldPath: fieldPath
          - name: name
            value: value
            valueFrom:
              secretKeyRef:
                name: name
                optional: true
                key: key
              resourceFieldRef:
                divisor: divisor
                resource: resource
                containerName: containerName
              configMapKeyRef:
                name: name
                optional: true
                key: key
              fieldRef:
                apiVersion: apiVersion
                fieldPath: fieldPath
        sourceStrategy:
          forcePull: true
          from:
            uid: uid
            apiVersion: apiVersion
            kind: kind
            resourceVersion: resourceVersion
            fieldPath: fieldPath
            name: name
            namespace: namespace
          incremental: true
          env:
          - name: name
            value: value
            valueFrom:
              secretKeyRef:
                name: name
                optional: true
                key: key
              resourceFieldRef:
                divisor: divisor
                resource: resource
                containerName: containerName
              configMapKeyRef:
                name: name
                optional: true
                key: key
              fieldRef:
                apiVersion: apiVersion
                fieldPath: fieldPath
          - name: name
            value: value
            valueFrom:
              secretKeyRef:
                name: name
                optional: true
                key: key
              resourceFieldRef:
                divisor: divisor
                resource: resource
                containerName: containerName
              configMapKeyRef:
                name: name
                optional: true
                key: key
              fieldRef:
                apiVersion: apiVersion
                fieldPath: fieldPath
          scripts: scripts
          pullSecret:
            name: name
        dockerStrategy:
          forcePull: true
          imageOptimizationPolicy: "{}"
          dockerfilePath: dockerfilePath
          noCache: true
          from:
            uid: uid
            apiVersion: apiVersion
            kind: kind
            resourceVersion: resourceVersion
            fieldPath: fieldPath
            name: name
            namespace: namespace
          env:
          - name: name
            value: value
            valueFrom:
              secretKeyRef:
                name: name
                optional: true
                key: key
              resourceFieldRef:
                divisor: divisor
                resource: resource
                containerName: containerName
              configMapKeyRef:
                name: name
                optional: true
                key: key
              fieldRef:
                apiVersion: apiVersion
                fieldPath: fieldPath
          - name: name
            value: value
            valueFrom:
              secretKeyRef:
                name: name
                optional: true
                key: key
              resourceFieldRef:
                divisor: divisor
                resource: resource
                containerName: containerName
              configMapKeyRef:
                name: name
                optional: true
                key: key
              fieldRef:
                apiVersion: apiVersion
                fieldPath: fieldPath
          buildArgs:
          - name: name
            value: value
            valueFrom:
              secretKeyRef:
                name: name
                optional: true
                key: key
              resourceFieldRef:
                divisor: divisor
                resource: resource
                containerName: containerName
              configMapKeyRef:
                name: name
                optional: true
                key: key
              fieldRef:
                apiVersion: apiVersion
                fieldPath: fieldPath
          - name: name
            value: value
            valueFrom:
              secretKeyRef:
                name: name
                optional: true
                key: key
              resourceFieldRef:
                divisor: divisor
                resource: resource
                containerName: containerName
              configMapKeyRef:
                name: name
                optional: true
                key: key
              fieldRef:
                apiVersion: apiVersion
                fieldPath: fieldPath
          pullSecret:
            name: name
        type: type
        customStrategy:
          buildAPIVersion: buildAPIVersion
          forcePull: true
          from:
            uid: uid
            apiVersion: apiVersion
            kind: kind
            resourceVersion: resourceVersion
            fieldPath: fieldPath
            name: name
            namespace: namespace
          env:
          - name: name
            value: value
            valueFrom:
              secretKeyRef:
                name: name
                optional: true
                key: key
              resourceFieldRef:
                divisor: divisor
                resource: resource
                containerName: containerName
              configMapKeyRef:
                name: name
                optional: true
                key: key
              fieldRef:
                apiVersion: apiVersion
                fieldPath: fieldPath
          - name: name
            value: value
            valueFrom:
              secretKeyRef:
                name: name
                optional: true
                key: key
              resourceFieldRef:
                divisor: divisor
                resource: resource
                containerName: containerName
              configMapKeyRef:
                name: name
                optional: true
                key: key
              fieldRef:
                apiVersion: apiVersion
                fieldPath: fieldPath
          exposeDockerSocket: true
          pullSecret:
            name: name
          secrets:
          - mountPath: mountPath
            secretSource:
              name: name
          - mountPath: mountPath
            secretSource:
              name: name
      properties:
        customStrategy:
          $ref: '#/components/schemas/v1.CustomBuildStrategy'
        dockerStrategy:
          $ref: '#/components/schemas/v1.DockerBuildStrategy'
        jenkinsPipelineStrategy:
          $ref: '#/components/schemas/v1.JenkinsPipelineBuildStrategy'
        sourceStrategy:
          $ref: '#/components/schemas/v1.SourceBuildStrategy'
        type:
          description: type is the kind of build strategy.
          type: string
      required:
      - type
      type: object
    v1.BuildTriggerCause:
      description: BuildTriggerCause holds information about a triggered build. It
        is used for displaying build trigger data for each build and build configuration
        in oc describe. It is also used to describe which triggers led to the most
        recent update in the build configuration.
      example:
        githubWebHook:
          secret: secret
          revision:
            git:
              committer:
                name: name
                email: email
              author:
                name: name
                email: email
              commit: commit
              message: message
            type: type
        genericWebHook:
          secret: secret
          revision:
            git:
              committer:
                name: name
                email: email
              author:
                name: name
                email: email
              commit: commit
              message: message
            type: type
        bitbucketWebHook:
          secret: secret
          revision:
            git:
              committer:
                name: name
                email: email
              author:
                name: name
                email: email
              commit: commit
              message: message
            type: type
        imageChangeBuild:
          imageID: imageID
          fromRef:
            uid: uid
            apiVersion: apiVersion
            kind: kind
            resourceVersion: resourceVersion
            fieldPath: fieldPath
            name: name
            namespace: namespace
        message: message
        gitlabWebHook:
          secret: secret
          revision:
            git:
              committer:
                name: name
                email: email
              author:
                name: name
                email: email
              commit: commit
              message: message
            type: type
      properties:
        bitbucketWebHook:
          $ref: '#/components/schemas/v1.BitbucketWebHookCause'
        genericWebHook:
          $ref: '#/components/schemas/v1.GenericWebHookCause'
        githubWebHook:
          $ref: '#/components/schemas/v1.GitHubWebHookCause'
        gitlabWebHook:
          $ref: '#/components/schemas/v1.GitLabWebHookCause'
        imageChangeBuild:
          $ref: '#/components/schemas/v1.ImageChangeCause'
        message:
          description: "message is used to store a human readable message for why\
            \ the build was triggered. E.g.: \"Manually triggered by user\", \"Configuration\
            \ change\",etc."
          type: string
      type: object
    v1.BuildTriggerPolicy:
      description: BuildTriggerPolicy describes a policy for a single trigger that
        results in a new Build.
      example:
        imageChange:
          lastTriggeredImageID: lastTriggeredImageID
          paused: true
          from:
            uid: uid
            apiVersion: apiVersion
            kind: kind
            resourceVersion: resourceVersion
            fieldPath: fieldPath
            name: name
            namespace: namespace
        github:
          allowEnv: true
          secret: secret
          secretReference:
            name: name
        gitlab:
          allowEnv: true
          secret: secret
          secretReference:
            name: name
        bitbucket:
          allowEnv: true
          secret: secret
          secretReference:
            name: name
        type: type
        generic:
          allowEnv: true
          secret: secret
          secretReference:
            name: name
      properties:
        bitbucket:
          $ref: '#/components/schemas/v1.WebHookTrigger'
        generic:
          $ref: '#/components/schemas/v1.WebHookTrigger'
        github:
          $ref: '#/components/schemas/v1.WebHookTrigger'
        gitlab:
          $ref: '#/components/schemas/v1.WebHookTrigger'
        imageChange:
          $ref: '#/components/schemas/v1.ImageChangeTrigger'
        type:
          description: type is the type of build trigger
          type: string
      required:
      - type
      type: object
    v1.ConfigMapBuildSource:
      description: ConfigMapBuildSource describes a configmap and its destination
        directory that will be used only at the build time. The content of the configmap
        referenced here will be copied into the destination directory instead of mounting.
      example:
        destinationDir: destinationDir
        configMap:
          name: name
      properties:
        configMap:
          $ref: '#/components/schemas/v1.LocalObjectReference'
        destinationDir:
          description: "destinationDir is the directory where the files from the configmap\
            \ should be available for the build time. For the Source build strategy,\
            \ these will be injected into a container where the assemble script runs.\
            \ For the Docker build strategy, these will be copied into the build directory,\
            \ where the Dockerfile is located, so users can ADD or COPY them during\
            \ docker build."
          type: string
      required:
      - configMap
      type: object
    v1.CustomBuildStrategy:
      description: CustomBuildStrategy defines input parameters specific to Custom
        build.
      example:
        buildAPIVersion: buildAPIVersion
        forcePull: true
        from:
          uid: uid
          apiVersion: apiVersion
          kind: kind
          resourceVersion: resourceVersion
          fieldPath: fieldPath
          name: name
          namespace: namespace
        env:
        - name: name
          value: value
          valueFrom:
            secretKeyRef:
              name: name
              optional: true
              key: key
            resourceFieldRef:
              divisor: divisor
              resource: resource
              containerName: containerName
            configMapKeyRef:
              name: name
              optional: true
              key: key
            fieldRef:
              apiVersion: apiVersion
              fieldPath: fieldPath
        - name: name
          value: value
          valueFrom:
            secretKeyRef:
              name: name
              optional: true
              key: key
            resourceFieldRef:
              divisor: divisor
              resource: resource
              containerName: containerName
            configMapKeyRef:
              name: name
              optional: true
              key: key
            fieldRef:
              apiVersion: apiVersion
              fieldPath: fieldPath
        exposeDockerSocket: true
        pullSecret:
          name: name
        secrets:
        - mountPath: mountPath
          secretSource:
            name: name
        - mountPath: mountPath
          secretSource:
            name: name
      properties:
        buildAPIVersion:
          description: buildAPIVersion is the requested API version for the Build
            object serialized and passed to the custom builder
          type: string
        env:
          description: env contains additional environment variables you want to pass
            into a builder container.
          items:
            $ref: '#/components/schemas/v1.EnvVar'
          type: array
        exposeDockerSocket:
          description: exposeDockerSocket will allow running Docker commands (and
            build Docker images) from inside the Docker container.
          type: boolean
        forcePull:
          description: forcePull describes if the controller should configure the
            build pod to always pull the images for the builder or only pull if it
            is not present locally
          type: boolean
        from:
          $ref: '#/components/schemas/v1.ObjectReference'
        pullSecret:
          $ref: '#/components/schemas/v1.LocalObjectReference'
        secrets:
          description: secrets is a list of additional secrets that will be included
            in the build pod
          items:
            $ref: '#/components/schemas/v1.SecretSpec'
          type: array
      required:
      - from
      type: object
    v1.DockerBuildStrategy:
      description: DockerBuildStrategy defines input parameters specific to Docker
        build.
      example:
        forcePull: true
        imageOptimizationPolicy: "{}"
        dockerfilePath: dockerfilePath
        noCache: true
        from:
          uid: uid
          apiVersion: apiVersion
          kind: kind
          resourceVersion: resourceVersion
          fieldPath: fieldPath
          name: name
          namespace: namespace
        env:
        - name: name
          value: value
          valueFrom:
            secretKeyRef:
              name: name
              optional: true
              key: key
            resourceFieldRef:
              divisor: divisor
              resource: resource
              containerName: containerName
            configMapKeyRef:
              name: name
              optional: true
              key: key
            fieldRef:
              apiVersion: apiVersion
              fieldPath: fieldPath
        - name: name
          value: value
          valueFrom:
            secretKeyRef:
              name: name
              optional: true
              key: key
            resourceFieldRef:
              divisor: divisor
              resource: resource
              containerName: containerName
            configMapKeyRef:
              name: name
              optional: true
              key: key
            fieldRef:
              apiVersion: apiVersion
              fieldPath: fieldPath
        buildArgs:
        - name: name
          value: value
          valueFrom:
            secretKeyRef:
              name: name
              optional: true
              key: key
            resourceFieldRef:
              divisor: divisor
              resource: resource
              containerName: containerName
            configMapKeyRef:
              name: name
              optional: true
              key: key
            fieldRef:
              apiVersion: apiVersion
              fieldPath: fieldPath
        - name: name
          value: value
          valueFrom:
            secretKeyRef:
              name: name
              optional: true
              key: key
            resourceFieldRef:
              divisor: divisor
              resource: resource
              containerName: containerName
            configMapKeyRef:
              name: name
              optional: true
              key: key
            fieldRef:
              apiVersion: apiVersion
              fieldPath: fieldPath
        pullSecret:
          name: name
      properties:
        buildArgs:
          description: buildArgs contains build arguments that will be resolved in
            the Dockerfile.  See https://docs.docker.com/engine/reference/builder/#/arg
            for more details.
          items:
            $ref: '#/components/schemas/v1.EnvVar'
          type: array
        dockerfilePath:
          description: "dockerfilePath is the path of the Dockerfile that will be\
            \ used to build the Docker image, relative to the root of the context\
            \ (contextDir)."
          type: string
        env:
          description: env contains additional environment variables you want to pass
            into a builder container.
          items:
            $ref: '#/components/schemas/v1.EnvVar'
          type: array
        forcePull:
          description: forcePull describes if the builder should pull the images from
            registry prior to building.
          type: boolean
        from:
          $ref: '#/components/schemas/v1.ObjectReference'
        imageOptimizationPolicy:
          $ref: '#/components/schemas/v1.ImageOptimizationPolicy'
        noCache:
          description: noCache if set to true indicates that the docker build must
            be executed with the --no-cache=true flag
          type: boolean
        pullSecret:
          $ref: '#/components/schemas/v1.LocalObjectReference'
      type: object
    v1.DockerStrategyOptions:
      description: DockerStrategyOptions contains extra strategy options for Docker
        builds
      properties:
        buildArgs:
          description: Args contains any build arguments that are to be passed to
            Docker.  See https://docs.docker.com/engine/reference/builder/#/arg for
            more details
          items:
            $ref: '#/components/schemas/v1.EnvVar'
          type: array
        noCache:
          description: noCache overrides the docker-strategy noCache option in the
            build config
          type: boolean
      type: object
    v1.GenericWebHookCause:
      description: GenericWebHookCause holds information about a generic WebHook that
        triggered a build.
      example:
        secret: secret
        revision:
          git:
            committer:
              name: name
              email: email
            author:
              name: name
              email: email
            commit: commit
            message: message
          type: type
      properties:
        revision:
          $ref: '#/components/schemas/v1.SourceRevision'
        secret:
          description: secret is the obfuscated webhook secret that triggered a build.
          type: string
      type: object
    v1.GitBuildSource:
      description: GitBuildSource defines the parameters of a Git SCM
      example:
        ref: ref
        httpProxy: httpProxy
        httpsProxy: httpsProxy
        noProxy: noProxy
        uri: uri
      properties:
        httpProxy:
          description: httpProxy is a proxy used to reach the git repository over
            http
          type: string
        httpsProxy:
          description: httpsProxy is a proxy used to reach the git repository over
            https
          type: string
        noProxy:
          description: noProxy is the list of domains for which the proxy should not
            be used
          type: string
        ref:
          description: ref is the branch/tag/ref to build.
          type: string
        uri:
          description: uri points to the source that will be built. The structure
            of the source will depend on the type of build to run
          type: string
      required:
      - uri
      type: object
    v1.GitHubWebHookCause:
      description: GitHubWebHookCause has information about a GitHub webhook that
        triggered a build.
      example:
        secret: secret
        revision:
          git:
            committer:
              name: name
              email: email
            author:
              name: name
              email: email
            commit: commit
            message: message
          type: type
      properties:
        revision:
          $ref: '#/components/schemas/v1.SourceRevision'
        secret:
          description: secret is the obfuscated webhook secret that triggered a build.
          type: string
      type: object
    v1.GitLabWebHookCause:
      description: GitLabWebHookCause has information about a GitLab webhook that
        triggered a build.
      example:
        secret: secret
        revision:
          git:
            committer:
              name: name
              email: email
            author:
              name: name
              email: email
            commit: commit
            message: message
          type: type
      properties:
        revision:
          $ref: '#/components/schemas/v1.SourceRevision'
        secret:
          description: Secret is the obfuscated webhook secret that triggered a build.
          type: string
      type: object
    v1.GitSourceRevision:
      description: GitSourceRevision is the commit information from a git source for
        a build
      example:
        committer:
          name: name
          email: email
        author:
          name: name
          email: email
        commit: commit
        message: message
      properties:
        author:
          $ref: '#/components/schemas/v1.SourceControlUser'
        commit:
          description: commit is the commit hash identifying a specific commit
          type: string
        committer:
          $ref: '#/components/schemas/v1.SourceControlUser'
        message:
          description: message is the description of a specific commit
          type: string
      type: object
    v1.ImageChangeCause:
      description: ImageChangeCause contains information about the image that triggered
        a build
      example:
        imageID: imageID
        fromRef:
          uid: uid
          apiVersion: apiVersion
          kind: kind
          resourceVersion: resourceVersion
          fieldPath: fieldPath
          name: name
          namespace: namespace
      properties:
        fromRef:
          $ref: '#/components/schemas/v1.ObjectReference'
        imageID:
          description: imageID is the ID of the image that triggered a a new build.
          type: string
      type: object
    v1.ImageChangeTrigger:
      description: ImageChangeTrigger allows builds to be triggered when an ImageStream
        changes
      example:
        lastTriggeredImageID: lastTriggeredImageID
        paused: true
        from:
          uid: uid
          apiVersion: apiVersion
          kind: kind
          resourceVersion: resourceVersion
          fieldPath: fieldPath
          name: name
          namespace: namespace
      properties:
        from:
          $ref: '#/components/schemas/v1.ObjectReference'
        lastTriggeredImageID:
          description: lastTriggeredImageID is used internally by the ImageChangeController
            to save last used image ID for build
          type: string
        paused:
          description: paused is true if this trigger is temporarily disabled. Optional.
          type: boolean
      type: object
    v1.ImageLabel:
      description: ImageLabel represents a label applied to the resulting image.
      example:
        name: name
        value: value
      properties:
        name:
          description: name defines the name of the label. It must have non-zero length.
          type: string
        value:
          description: value defines the literal value of the label.
          type: string
      required:
      - name
      type: object
    v1.ImageSource:
      description: "ImageSource is used to describe build source that will be extracted\
        \ from an image or used during a multi stage build. A reference of type ImageStreamTag,\
        \ ImageStreamImage or DockerImage may be used. A pull secret can be specified\
        \ to pull the image from an external registry or override the default service\
        \ account secret if pulling from the internal registry. Image sources can\
        \ either be used to extract content from an image and place it into the build\
        \ context along with the repository source, or used directly during a multi-stage\
        \ Docker build to allow content to be copied without overwriting the contents\
        \ of the repository source (see the 'paths' and 'as' fields)."
      example:
        as:
        - as
        - as
        paths:
        - destinationDir: destinationDir
          sourcePath: sourcePath
        - destinationDir: destinationDir
          sourcePath: sourcePath
        from:
          uid: uid
          apiVersion: apiVersion
          kind: kind
          resourceVersion: resourceVersion
          fieldPath: fieldPath
          name: name
          namespace: namespace
        pullSecret:
          name: name
      properties:
        paths:
          description: "paths is a list of source and destination paths to copy from\
            \ the image. This content will be copied into the build context prior\
            \ to starting the build. If no paths are set, the build context will not\
            \ be altered."
          items:
            $ref: '#/components/schemas/v1.ImageSourcePath'
          type: array
        as:
          description: "A list of image names that this source will be used in place\
            \ of during a multi-stage Docker image build. For instance, a Dockerfile\
            \ that uses \"COPY --from=nginx:latest\" will first check for an image\
            \ source that has \"nginx:latest\" in this field before attempting to\
            \ pull directly. If the Dockerfile does not reference an image source\
            \ it is ignored. This field and paths may both be set, in which case the\
            \ contents will be used twice."
          items:
            type: string
          type: array
        from:
          $ref: '#/components/schemas/v1.ObjectReference'
        pullSecret:
          $ref: '#/components/schemas/v1.LocalObjectReference'
      required:
      - as
      - from
      - paths
      type: object
    v1.ImageSourcePath:
      description: ImageSourcePath describes a path to be copied from a source image
        and its destination within the build directory.
      example:
        destinationDir: destinationDir
        sourcePath: sourcePath
      properties:
        destinationDir:
          description: destinationDir is the relative directory within the build directory
            where files copied from the image are placed.
          type: string
        sourcePath:
          description: "sourcePath is the absolute path of the file or directory inside\
            \ the image to copy to the build directory.  If the source path ends in\
            \ /. then the content of the directory will be copied, but the directory\
            \ itself will not be created at the destination."
          type: string
      required:
      - destinationDir
      - sourcePath
      type: object
    v1.JenkinsPipelineBuildStrategy:
      description: JenkinsPipelineBuildStrategy holds parameters specific to a Jenkins
        Pipeline build.
      example:
        jenkinsfilePath: jenkinsfilePath
        jenkinsfile: jenkinsfile
        env:
        - name: name
          value: value
          valueFrom:
            secretKeyRef:
              name: name
              optional: true
              key: key
            resourceFieldRef:
              divisor: divisor
              resource: resource
              containerName: containerName
            configMapKeyRef:
              name: name
              optional: true
              key: key
            fieldRef:
              apiVersion: apiVersion
              fieldPath: fieldPath
        - name: name
          value: value
          valueFrom:
            secretKeyRef:
              name: name
              optional: true
              key: key
            resourceFieldRef:
              divisor: divisor
              resource: resource
              containerName: containerName
            configMapKeyRef:
              name: name
              optional: true
              key: key
            fieldRef:
              apiVersion: apiVersion
              fieldPath: fieldPath
      properties:
        env:
          description: env contains additional environment variables you want to pass
            into a build pipeline.
          items:
            $ref: '#/components/schemas/v1.EnvVar'
          type: array
        jenkinsfile:
          description: Jenkinsfile defines the optional raw contents of a Jenkinsfile
            which defines a Jenkins pipeline build.
          type: string
        jenkinsfilePath:
          description: "JenkinsfilePath is the optional path of the Jenkinsfile that\
            \ will be used to configure the pipeline relative to the root of the context\
            \ (contextDir). If both JenkinsfilePath & Jenkinsfile are both not specified,\
            \ this defaults to Jenkinsfile in the root of the specified contextDir."
          type: string
      type: object
    v1.SecretBuildSource:
      description: SecretBuildSource describes a secret and its destination directory
        that will be used only at the build time. The content of the secret referenced
        here will be copied into the destination directory instead of mounting.
      example:
        destinationDir: destinationDir
        secret:
          name: name
      properties:
        destinationDir:
          description: "destinationDir is the directory where the files from the secret\
            \ should be available for the build time. For the Source build strategy,\
            \ these will be injected into a container where the assemble script runs.\
            \ Later, when the script finishes, all files injected will be truncated\
            \ to zero length. For the Docker build strategy, these will be copied\
            \ into the build directory, where the Dockerfile is located, so users\
            \ can ADD or COPY them during docker build."
          type: string
        secret:
          $ref: '#/components/schemas/v1.LocalObjectReference'
      required:
      - secret
      type: object
    v1.SecretLocalReference:
      description: SecretLocalReference contains information that points to the local
        secret being used
      example:
        name: name
      properties:
        name:
          description: Name is the name of the resource in the same namespace being
            referenced
          type: string
      required:
      - name
      type: object
    v1.SecretSpec:
      description: SecretSpec specifies a secret to be included in a build pod and
        its corresponding mount point
      example:
        mountPath: mountPath
        secretSource:
          name: name
      properties:
        mountPath:
          description: mountPath is the path at which to mount the secret
          type: string
        secretSource:
          $ref: '#/components/schemas/v1.LocalObjectReference'
      required:
      - mountPath
      - secretSource
      type: object
    v1.SourceBuildStrategy:
      description: SourceBuildStrategy defines input parameters specific to an Source
        build.
      example:
        forcePull: true
        from:
          uid: uid
          apiVersion: apiVersion
          kind: kind
          resourceVersion: resourceVersion
          fieldPath: fieldPath
          name: name
          namespace: namespace
        incremental: true
        env:
        - name: name
          value: value
          valueFrom:
            secretKeyRef:
              name: name
              optional: true
              key: key
            resourceFieldRef:
              divisor: divisor
              resource: resource
              containerName: containerName
            configMapKeyRef:
              name: name
              optional: true
              key: key
            fieldRef:
              apiVersion: apiVersion
              fieldPath: fieldPath
        - name: name
          value: value
          valueFrom:
            secretKeyRef:
              name: name
              optional: true
              key: key
            resourceFieldRef:
              divisor: divisor
              resource: resource
              containerName: containerName
            configMapKeyRef:
              name: name
              optional: true
              key: key
            fieldRef:
              apiVersion: apiVersion
              fieldPath: fieldPath
        scripts: scripts
        pullSecret:
          name: name
      properties:
        env:
          description: env contains additional environment variables you want to pass
            into a builder container.
          items:
            $ref: '#/components/schemas/v1.EnvVar'
          type: array
        forcePull:
          description: forcePull describes if the builder should pull the images from
            registry prior to building.
          type: boolean
        from:
          $ref: '#/components/schemas/v1.ObjectReference'
        incremental:
          description: incremental flag forces the Source build to do incremental
            builds if true.
          type: boolean
        pullSecret:
          $ref: '#/components/schemas/v1.LocalObjectReference'
        scripts:
          description: scripts is the location of Source scripts
          type: string
      required:
      - from
      type: object
    v1.SourceControlUser:
      description: SourceControlUser defines the identity of a user of source control
      example:
        name: name
        email: email
      properties:
        email:
          description: email of the source control user
          type: string
        name:
          description: name of the source control user
          type: string
      type: object
    v1.SourceRevision:
      description: SourceRevision is the revision or commit information from the source
        for the build
      example:
        git:
          committer:
            name: name
            email: email
          author:
            name: name
            email: email
          commit: commit
          message: message
        type: type
      properties:
        git:
          $ref: '#/components/schemas/v1.GitSourceRevision'
        type:
          description: "type of the build source, may be one of 'Source', 'Dockerfile',\
            \ 'Binary', or 'Images'"
          type: string
      required:
      - type
      type: object
    v1.SourceStrategyOptions:
      description: SourceStrategyOptions contains extra strategy options for Source
        builds
      properties:
        incremental:
          description: incremental overrides the source-strategy incremental option
            in the build config
          type: boolean
      type: object
    v1.StageInfo:
      description: StageInfo contains details about a build stage.
      example:
        durationMilliseconds: 6
        name: name
        startTime: startTime
        steps:
        - durationMilliseconds: 1
          name: name
          startTime: startTime
        - durationMilliseconds: 1
          name: name
          startTime: startTime
      properties:
        durationMilliseconds:
          description: "durationMilliseconds identifies how long the stage took to\
            \ complete in milliseconds. Note: the duration of a stage can exceed the\
            \ sum of the duration of the steps within the stage as not all actions\
            \ are accounted for in explicit build steps."
          format: int64
          type: integer
        name:
          description: name is a unique identifier for each build stage that occurs.
          type: string
        startTime:
          description: startTime is a timestamp representing the server time when
            this Stage started. It is represented in RFC3339 form and is in UTC.
          type: string
        steps:
          description: steps contains details about each step that occurs during a
            build stage including start time and duration in milliseconds.
          items:
            $ref: '#/components/schemas/v1.StepInfo'
          type: array
      type: object
    v1.StepInfo:
      description: StepInfo contains details about a build step.
      example:
        durationMilliseconds: 1
        name: name
        startTime: startTime
      properties:
        durationMilliseconds:
          description: durationMilliseconds identifies how long the step took to complete
            in milliseconds.
          format: int64
          type: integer
        name:
          description: name is a unique identifier for each build step.
          type: string
        startTime:
          description: startTime is a timestamp representing the server time when
            this Step started. it is represented in RFC3339 form and is in UTC.
          type: string
      type: object
    v1.WebHookTrigger:
      description: WebHookTrigger is a trigger that gets invoked using a webhook type
        of post
      example:
        allowEnv: true
        secret: secret
        secretReference:
          name: name
      properties:
        allowEnv:
          description: allowEnv determines whether the webhook can set environment
            variables; can only be set to true for GenericWebHook.
          type: boolean
        secret:
          description: "secret used to validate requests. Deprecated: use SecretReference\
            \ instead."
          type: string
        secretReference:
          $ref: '#/components/schemas/v1.SecretLocalReference'
      type: object
    v1.CrossVersionObjectReference:
      description: CrossVersionObjectReference contains enough information to let
        you identify the referred resource.
      example:
        apiVersion: apiVersion
        kind: kind
        name: name
      properties:
        apiVersion:
          description: API version of the referent
          type: string
        kind:
          description: "Kind of the referent; More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds\""
          type: string
        name:
          description: "Name of the referent; More info: http://kubernetes.io/docs/user-guide/identifiers#names"
          type: string
      required:
      - kind
      - name
      type: object
    v1.HorizontalPodAutoscaler:
      description: configuration of a horizontal pod autoscaler.
      example:
        metadata:
          generation: 6
          finalizers:
          - finalizers
          - finalizers
          resourceVersion: resourceVersion
          annotations: "{}"
          generateName: generateName
          deletionTimestamp: deletionTimestamp
          labels: "{}"
          ownerReferences:
          - uid: uid
            controller: true
            apiVersion: apiVersion
            kind: kind
            name: name
            blockOwnerDeletion: true
          - uid: uid
            controller: true
            apiVersion: apiVersion
            kind: kind
            name: name
            blockOwnerDeletion: true
          selfLink: selfLink
          deletionGracePeriodSeconds: 0
          uid: uid
          initializers:
            result:
              reason: reason
              metadata:
                continue: continue
                resourceVersion: resourceVersion
                selfLink: selfLink
              apiVersion: apiVersion
              code: 1
              kind: kind
              details:
                uid: uid
                kind: kind
                causes:
                - reason: reason
                  field: field
                  message: message
                - reason: reason
                  field: field
                  message: message
                retryAfterSeconds: 5
                name: name
                group: group
              message: message
              status: status
            pending:
            - name: name
            - name: name
          clusterName: clusterName
          creationTimestamp: creationTimestamp
          name: name
          namespace: namespace
        apiVersion: apiVersion
        kind: kind
        spec:
          maxReplicas: 0
          minReplicas: 6
          targetCPUUtilizationPercentage: 1
          scaleTargetRef:
            apiVersion: apiVersion
            kind: kind
            name: name
        status:
          currentCPUUtilizationPercentage: 5
          desiredReplicas: 2
          currentReplicas: 5
          lastScaleTime: lastScaleTime
          observedGeneration: 7
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
          type: string
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: '#/components/schemas/v1.ObjectMeta'
        spec:
          $ref: '#/components/schemas/v1.HorizontalPodAutoscalerSpec'
        status:
          $ref: '#/components/schemas/v1.HorizontalPodAutoscalerStatus'
      type: object
    v1.HorizontalPodAutoscalerList:
      description: list of horizontal pod autoscaler objects.
      example:
        metadata:
          continue: continue
          resourceVersion: resourceVersion
          selfLink: selfLink
        apiVersion: apiVersion
        kind: kind
        items:
        - metadata:
            generation: 6
            finalizers:
            - finalizers
            - finalizers
            resourceVersion: resourceVersion
            annotations: "{}"
            generateName: generateName
            deletionTimestamp: deletionTimestamp
            labels: "{}"
            ownerReferences:
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            selfLink: selfLink
            deletionGracePeriodSeconds: 0
            uid: uid
            initializers:
              result:
                reason: reason
                metadata:
                  continue: continue
                  resourceVersion: resourceVersion
                  selfLink: selfLink
                apiVersion: apiVersion
                code: 1
                kind: kind
                details:
                  uid: uid
                  kind: kind
                  causes:
                  - reason: reason
                    field: field
                    message: message
                  - reason: reason
                    field: field
                    message: message
                  retryAfterSeconds: 5
                  name: name
                  group: group
                message: message
                status: status
              pending:
              - name: name
              - name: name
            clusterName: clusterName
            creationTimestamp: creationTimestamp
            name: name
            namespace: namespace
          apiVersion: apiVersion
          kind: kind
          spec:
            maxReplicas: 0
            minReplicas: 6
            targetCPUUtilizationPercentage: 1
            scaleTargetRef:
              apiVersion: apiVersion
              kind: kind
              name: name
          status:
            currentCPUUtilizationPercentage: 5
            desiredReplicas: 2
            currentReplicas: 5
            lastScaleTime: lastScaleTime
            observedGeneration: 7
        - metadata:
            generation: 6
            finalizers:
            - finalizers
            - finalizers
            resourceVersion: resourceVersion
            annotations: "{}"
            generateName: generateName
            deletionTimestamp: deletionTimestamp
            labels: "{}"
            ownerReferences:
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            selfLink: selfLink
            deletionGracePeriodSeconds: 0
            uid: uid
            initializers:
              result:
                reason: reason
                metadata:
                  continue: continue
                  resourceVersion: resourceVersion
                  selfLink: selfLink
                apiVersion: apiVersion
                code: 1
                kind: kind
                details:
                  uid: uid
                  kind: kind
                  causes:
                  - reason: reason
                    field: field
                    message: message
                  - reason: reason
                    field: field
                    message: message
                  retryAfterSeconds: 5
                  name: name
                  group: group
                message: message
                status: status
              pending:
              - name: name
              - name: name
            clusterName: clusterName
            creationTimestamp: creationTimestamp
            name: name
            namespace: namespace
          apiVersion: apiVersion
          kind: kind
          spec:
            maxReplicas: 0
            minReplicas: 6
            targetCPUUtilizationPercentage: 1
            scaleTargetRef:
              apiVersion: apiVersion
              kind: kind
              name: name
          status:
            currentCPUUtilizationPercentage: 5
            desiredReplicas: 2
            currentReplicas: 5
            lastScaleTime: lastScaleTime
            observedGeneration: 7
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
          type: string
        items:
          description: list of horizontal pod autoscaler objects.
          items:
            $ref: '#/components/schemas/v1.HorizontalPodAutoscaler'
          type: array
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: '#/components/schemas/v1.ListMeta'
      required:
      - items
      type: object
    v1.HorizontalPodAutoscalerSpec:
      description: specification of a horizontal pod autoscaler.
      example:
        maxReplicas: 0
        minReplicas: 6
        targetCPUUtilizationPercentage: 1
        scaleTargetRef:
          apiVersion: apiVersion
          kind: kind
          name: name
      properties:
        maxReplicas:
          description: upper limit for the number of pods that can be set by the autoscaler;
            cannot be smaller than MinReplicas.
          format: int32
          type: integer
        minReplicas:
          description: "lower limit for the number of pods that can be set by the\
            \ autoscaler, default 1."
          format: int32
          type: integer
        scaleTargetRef:
          $ref: '#/components/schemas/v1.CrossVersionObjectReference'
        targetCPUUtilizationPercentage:
          description: target average CPU utilization (represented as a percentage
            of requested CPU) over all the pods; if not specified the default autoscaling
            policy will be used.
          format: int32
          type: integer
      required:
      - maxReplicas
      - scaleTargetRef
      type: object
    v1.HorizontalPodAutoscalerStatus:
      description: current status of a horizontal pod autoscaler
      example:
        currentCPUUtilizationPercentage: 5
        desiredReplicas: 2
        currentReplicas: 5
        lastScaleTime: lastScaleTime
        observedGeneration: 7
      properties:
        currentCPUUtilizationPercentage:
          description: "current average CPU utilization over all pods, represented\
            \ as a percentage of requested CPU, e.g. 70 means that an average pod\
            \ is using now 70% of its requested CPU."
          format: int32
          type: integer
        currentReplicas:
          description: current number of replicas of pods managed by this autoscaler.
          format: int32
          type: integer
        desiredReplicas:
          description: desired number of replicas of pods managed by this autoscaler.
          format: int32
          type: integer
        lastScaleTime:
          description: last time the HorizontalPodAutoscaler scaled the number of
            pods; used by the autoscaler to control how often the number of pods is
            changed.
          type: string
        observedGeneration:
          description: most recent generation observed by this autoscaler.
          format: int64
          type: integer
      required:
      - currentReplicas
      - desiredReplicas
      type: object
    v1.ControllerRevision:
      description: "ControllerRevision implements an immutable snapshot of state data.\
        \ Clients are responsible for serializing and deserializing the objects that\
        \ contain their internal state. Once a ControllerRevision has been successfully\
        \ created, it can not be updated. The API Server will fail validation of all\
        \ requests that attempt to mutate the Data field. ControllerRevisions may,\
        \ however, be deleted. Note that, due to its use by both the DaemonSet and\
        \ StatefulSet controllers for update and rollback, this object is beta. However,\
        \ it may be subject to name and representation changes in future releases,\
        \ and clients should not depend on its stability. It is primarily for internal\
        \ use by controllers."
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
          type: string
        data:
          description: Data is the serialized representation of the state.
          type: string
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: '#/components/schemas/v1.ObjectMeta'
        revision:
          description: Revision indicates the revision of the state represented by
            Data.
          format: int64
          type: integer
      required:
      - revision
      type: object
    v1.ControllerRevisionList:
      description: ControllerRevisionList is a resource containing a list of ControllerRevision
        objects.
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
          type: string
        items:
          description: Items is the list of ControllerRevisions
          items:
            $ref: '#/components/schemas/v1.ControllerRevision'
          type: array
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: '#/components/schemas/v1.ListMeta'
      required:
      - items
      type: object
    v1.DaemonSet:
      description: DaemonSet represents the configuration of a daemon set.
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
          type: string
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: '#/components/schemas/v1.ObjectMeta'
        spec:
          $ref: '#/components/schemas/v1.DaemonSetSpec'
        status:
          $ref: '#/components/schemas/v1.DaemonSetStatus'
      type: object
    v1.DaemonSetCondition:
      description: DaemonSetCondition describes the state of a DaemonSet at a certain
        point.
      properties:
        lastTransitionTime:
          description: Last time the condition transitioned from one status to another.
          type: string
        message:
          description: A human readable message indicating details about the transition.
          type: string
        reason:
          description: The reason for the condition's last transition.
          type: string
        status:
          description: "Status of the condition, one of True, False, Unknown."
          type: string
        type:
          description: Type of DaemonSet condition.
          type: string
      required:
      - status
      - type
      type: object
    v1.DaemonSetList:
      description: DaemonSetList is a collection of daemon sets.
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
          type: string
        items:
          description: A list of daemon sets.
          items:
            $ref: '#/components/schemas/v1.DaemonSet'
          type: array
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: '#/components/schemas/v1.ListMeta'
      required:
      - items
      type: object
    v1.DaemonSetSpec:
      description: DaemonSetSpec is the specification of a daemon set.
      properties:
        minReadySeconds:
          description: "The minimum number of seconds for which a newly created DaemonSet\
            \ pod should be ready without any of its container crashing, for it to\
            \ be considered available. Defaults to 0 (pod will be considered available\
            \ as soon as it is ready)."
          format: int32
          type: integer
        revisionHistoryLimit:
          description: The number of old history to retain to allow rollback. This
            is a pointer to distinguish between explicit zero and not specified. Defaults
            to 10.
          format: int32
          type: integer
        selector:
          $ref: '#/components/schemas/v1.LabelSelector'
        template:
          $ref: '#/components/schemas/v1.PodTemplateSpec'
        updateStrategy:
          $ref: '#/components/schemas/v1.DaemonSetUpdateStrategy'
      required:
      - selector
      - template
      type: object
    v1.DaemonSetStatus:
      description: DaemonSetStatus represents the current status of a daemon set.
      properties:
        collisionCount:
          description: Count of hash collisions for the DaemonSet. The DaemonSet controller
            uses this field as a collision avoidance mechanism when it needs to create
            the name for the newest ControllerRevision.
          format: int32
          type: integer
        conditions:
          description: Represents the latest available observations of a DaemonSet's
            current state.
          items:
            $ref: '#/components/schemas/v1.DaemonSetCondition'
          type: array
        currentNumberScheduled:
          description: "The number of nodes that are running at least 1 daemon pod\
            \ and are supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/"
          format: int32
          type: integer
        desiredNumberScheduled:
          description: "The total number of nodes that should be running the daemon\
            \ pod (including nodes correctly running the daemon pod). More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/"
          format: int32
          type: integer
        numberAvailable:
          description: The number of nodes that should be running the daemon pod and
            have one or more of the daemon pod running and available (ready for at
            least spec.minReadySeconds)
          format: int32
          type: integer
        numberMisscheduled:
          description: "The number of nodes that are running the daemon pod, but are\
            \ not supposed to run the daemon pod. More info: https://kubernetes.io/docs/concepts/workloads/controllers/daemonset/"
          format: int32
          type: integer
        numberReady:
          description: The number of nodes that should be running the daemon pod and
            have one or more of the daemon pod running and ready.
          format: int32
          type: integer
        numberUnavailable:
          description: The number of nodes that should be running the daemon pod and
            have none of the daemon pod running and available (ready for at least
            spec.minReadySeconds)
          format: int32
          type: integer
        observedGeneration:
          description: The most recent generation observed by the daemon set controller.
          format: int64
          type: integer
        updatedNumberScheduled:
          description: The total number of nodes that are running updated daemon pod
          format: int32
          type: integer
      required:
      - currentNumberScheduled
      - desiredNumberScheduled
      - numberMisscheduled
      - numberReady
      type: object
    v1.DaemonSetUpdateStrategy:
      description: DaemonSetUpdateStrategy is a struct used to control the update
        strategy for a DaemonSet.
      properties:
        rollingUpdate:
          $ref: '#/components/schemas/v1.RollingUpdateDaemonSet'
        type:
          description: Type of daemon set update. Can be "RollingUpdate" or "OnDelete".
            Default is RollingUpdate.
          type: string
      type: object
    v1.Deployment:
      description: Deployment enables declarative updates for Pods and ReplicaSets.
      example:
        metadata:
          generation: 6
          finalizers:
          - finalizers
          - finalizers
          resourceVersion: resourceVersion
          annotations: "{}"
          generateName: generateName
          deletionTimestamp: deletionTimestamp
          labels: "{}"
          ownerReferences:
          - uid: uid
            controller: true
            apiVersion: apiVersion
            kind: kind
            name: name
            blockOwnerDeletion: true
          - uid: uid
            controller: true
            apiVersion: apiVersion
            kind: kind
            name: name
            blockOwnerDeletion: true
          selfLink: selfLink
          deletionGracePeriodSeconds: 0
          uid: uid
          initializers:
            result:
              reason: reason
              metadata:
                continue: continue
                resourceVersion: resourceVersion
                selfLink: selfLink
              apiVersion: apiVersion
              code: 1
              kind: kind
              details:
                uid: uid
                kind: kind
                causes:
                - reason: reason
                  field: field
                  message: message
                - reason: reason
                  field: field
                  message: message
                retryAfterSeconds: 5
                name: name
                group: group
              message: message
              status: status
            pending:
            - name: name
            - name: name
          clusterName: clusterName
          creationTimestamp: creationTimestamp
          name: name
          namespace: namespace
        apiVersion: apiVersion
        kind: kind
        spec:
          template:
            metadata:
              generation: 6
              finalizers:
              - finalizers
              - finalizers
              resourceVersion: resourceVersion
              annotations: "{}"
              generateName: generateName
              deletionTimestamp: deletionTimestamp
              labels: "{}"
              ownerReferences:
              - uid: uid
                controller: true
                apiVersion: apiVersion
                kind: kind
                name: name
                blockOwnerDeletion: true
              - uid: uid
                controller: true
                apiVersion: apiVersion
                kind: kind
                name: name
                blockOwnerDeletion: true
              selfLink: selfLink
              deletionGracePeriodSeconds: 0
              uid: uid
              initializers:
                result:
                  reason: reason
                  metadata:
                    continue: continue
                    resourceVersion: resourceVersion
                    selfLink: selfLink
                  apiVersion: apiVersion
                  code: 1
                  kind: kind
                  details:
                    uid: uid
                    kind: kind
                    causes:
                    - reason: reason
                      field: field
                      message: message
                    - reason: reason
                      field: field
                      message: message
                    retryAfterSeconds: 5
                    name: name
                    group: group
                  message: message
                  status: status
                pending:
                - name: name
                - name: name
              clusterName: clusterName
              creationTimestamp: creationTimestamp
              name: name
              namespace: namespace
            spec:
              dnsPolicy: dnsPolicy
              nodeName: nodeName
              terminationGracePeriodSeconds: 1
              dnsConfig:
                searches:
                - searches
                - searches
                nameservers:
                - nameservers
                - nameservers
                options:
                - name: name
                  value: value
                - name: name
                  value: value
              hostNetwork: true
              readinessGates:
              - conditionType: conditionType
              - conditionType: conditionType
              serviceAccountName: serviceAccountName
              imagePullSecrets:
              - name: name
              - name: name
              priorityClassName: priorityClassName
              hostAliases:
              - ip: ip
                hostnames:
                - hostnames
                - hostnames
              - ip: ip
                hostnames:
                - hostnames
                - hostnames
              securityContext:
                runAsUser: 6
                seLinuxOptions:
                  role: role
                  level: level
                  type: type
                  user: user
                fsGroup: 1
                supplementalGroups:
                - 7
                - 7
                runAsGroup: 1
                runAsNonRoot: true
                sysctls:
                - name: name
                  value: value
                - name: name
                  value: value
              nodeSelector: "{}"
              hostname: hostname
              tolerations:
              - effect: effect
                tolerationSeconds: 4
                value: value
                key: key
                operator: operator
              - effect: effect
                tolerationSeconds: 4
                value: value
                key: key
                operator: operator
              automountServiceAccountToken: true
              schedulerName: schedulerName
              activeDeadlineSeconds: 0
              hostIPC: true
              volumes:
              - quobyte:
                  volume: volume
                  registry: registry
                  readOnly: true
                  user: user
                  group: group
                azureFile:
                  secretName: secretName
                  readOnly: true
                  shareName: shareName
                flexVolume:
                  driver: driver
                  options: "{}"
                  secretRef:
                    name: name
                  readOnly: true
                  fsType: fsType
                secret:
                  secretName: secretName
                  defaultMode: 2
                  optional: true
                  items:
                  - mode: 9
                    path: path
                    key: key
                  - mode: 9
                    path: path
                    key: key
                projected:
                  sources:
                  - downwardAPI:
                      items:
                      - mode: 8
                        path: path
                        resourceFieldRef:
                          divisor: divisor
                          resource: resource
                          containerName: containerName
                        fieldRef:
                          apiVersion: apiVersion
                          fieldPath: fieldPath
                      - mode: 8
                        path: path
                        resourceFieldRef:
                          divisor: divisor
                          resource: resource
                          containerName: containerName
                        fieldRef:
                          apiVersion: apiVersion
                          fieldPath: fieldPath
                    configMap:
                      name: name
                      optional: true
                      items:
                      - mode: 9
                        path: path
                        key: key
                      - mode: 9
                        path: path
                        key: key
                    secret:
                      name: name
                      optional: true
                      items:
                      - mode: 9
                        path: path
                        key: key
                      - mode: 9
                        path: path
                        key: key
                    serviceAccountToken:
                      path: path
                      audience: audience
                      expirationSeconds: 1
                  - downwardAPI:
                      items:
                      - mode: 8
                        path: path
                        resourceFieldRef:
                          divisor: divisor
                          resource: resource
                          containerName: containerName
                        fieldRef:
                          apiVersion: apiVersion
                          fieldPath: fieldPath
                      - mode: 8
                        path: path
                        resourceFieldRef:
                          divisor: divisor
                          resource: resource
                          containerName: containerName
                        fieldRef:
                          apiVersion: apiVersion
                          fieldPath: fieldPath
                    configMap:
                      name: name
                      optional: true
                      items:
                      - mode: 9
                        path: path
                        key: key
                      - mode: 9
                        path: path
                        key: key
                    secret:
                      name: name
                      optional: true
                      items:
                      - mode: 9
                        path: path
                        key: key
                      - mode: 9
                        path: path
                        key: key
                    serviceAccountToken:
                      path: path
                      audience: audience
                      expirationSeconds: 1
                  defaultMode: 6
                cephfs:
                  path: path
                  secretRef:
                    name: name
                  secretFile: secretFile
                  readOnly: true
                  user: user
                  monitors:
                  - monitors
                  - monitors
                scaleIO:
                  system: system
                  protectionDomain: protectionDomain
                  sslEnabled: true
                  storageMode: storageMode
                  volumeName: volumeName
                  secretRef:
                    name: name
                  readOnly: true
                  fsType: fsType
                  storagePool: storagePool
                  gateway: gateway
                emptyDir:
                  sizeLimit: sizeLimit
                  medium: medium
                glusterfs:
                  path: path
                  endpoints: endpoints
                  readOnly: true
                gcePersistentDisk:
                  partition: 6
                  readOnly: true
                  pdName: pdName
                  fsType: fsType
                photonPersistentDisk:
                  pdID: pdID
                  fsType: fsType
                azureDisk:
                  diskName: diskName
                  kind: "{}"
                  readOnly: true
                  cachingMode: "{}"
                  diskURI: diskURI
                  fsType: fsType
                cinder:
                  secretRef:
                    name: name
                  volumeID: volumeID
                  readOnly: true
                  fsType: fsType
                downwardAPI:
                  defaultMode: 6
                  items:
                  - mode: 8
                    path: path
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                  - mode: 8
                    path: path
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                awsElasticBlockStore:
                  partition: 5
                  volumeID: volumeID
                  readOnly: true
                  fsType: fsType
                flocker:
                  datasetName: datasetName
                  datasetUUID: datasetUUID
                iscsi:
                  chapAuthSession: true
                  iscsiInterface: iscsiInterface
                  lun: 3
                  chapAuthDiscovery: true
                  iqn: iqn
                  portals:
                  - portals
                  - portals
                  secretRef:
                    name: name
                  initiatorName: initiatorName
                  readOnly: true
                  fsType: fsType
                  targetPortal: targetPortal
                rbd:
                  image: image
                  pool: pool
                  secretRef:
                    name: name
                  readOnly: true
                  fsType: fsType
                  keyring: keyring
                  user: user
                  monitors:
                  - monitors
                  - monitors
                configMap:
                  defaultMode: 9
                  name: name
                  optional: true
                  items:
                  - mode: 9
                    path: path
                    key: key
                  - mode: 9
                    path: path
                    key: key
                storageos:
                  volumeNamespace: volumeNamespace
                  volumeName: volumeName
                  secretRef:
                    name: name
                  readOnly: true
                  fsType: fsType
                name: name
                nfs:
                  path: path
                  server: server
                  readOnly: true
                persistentVolumeClaim:
                  claimName: claimName
                  readOnly: true
                gitRepo:
                  repository: repository
                  directory: directory
                  revision: revision
                portworxVolume:
                  volumeID: volumeID
                  readOnly: true
                  fsType: fsType
                vsphereVolume:
                  storagePolicyName: storagePolicyName
                  storagePolicyID: storagePolicyID
                  volumePath: volumePath
                  fsType: fsType
                fc:
                  lun: 9
                  targetWWNs:
                  - targetWWNs
                  - targetWWNs
                  readOnly: true
                  wwids:
                  - wwids
                  - wwids
                  fsType: fsType
                hostPath:
                  path: path
                  type: "{}"
              - quobyte:
                  volume: volume
                  registry: registry
                  readOnly: true
                  user: user
                  group: group
                azureFile:
                  secretName: secretName
                  readOnly: true
                  shareName: shareName
                flexVolume:
                  driver: driver
                  options: "{}"
                  secretRef:
                    name: name
                  readOnly: true
                  fsType: fsType
                secret:
                  secretName: secretName
                  defaultMode: 2
                  optional: true
                  items:
                  - mode: 9
                    path: path
                    key: key
                  - mode: 9
                    path: path
                    key: key
                projected:
                  sources:
                  - downwardAPI:
                      items:
                      - mode: 8
                        path: path
                        resourceFieldRef:
                          divisor: divisor
                          resource: resource
                          containerName: containerName
                        fieldRef:
                          apiVersion: apiVersion
                          fieldPath: fieldPath
                      - mode: 8
                        path: path
                        resourceFieldRef:
                          divisor: divisor
                          resource: resource
                          containerName: containerName
                        fieldRef:
                          apiVersion: apiVersion
                          fieldPath: fieldPath
                    configMap:
                      name: name
                      optional: true
                      items:
                      - mode: 9
                        path: path
                        key: key
                      - mode: 9
                        path: path
                        key: key
                    secret:
                      name: name
                      optional: true
                      items:
                      - mode: 9
                        path: path
                        key: key
                      - mode: 9
                        path: path
                        key: key
                    serviceAccountToken:
                      path: path
                      audience: audience
                      expirationSeconds: 1
                  - downwardAPI:
                      items:
                      - mode: 8
                        path: path
                        resourceFieldRef:
                          divisor: divisor
                          resource: resource
                          containerName: containerName
                        fieldRef:
                          apiVersion: apiVersion
                          fieldPath: fieldPath
                      - mode: 8
                        path: path
                        resourceFieldRef:
                          divisor: divisor
                          resource: resource
                          containerName: containerName
                        fieldRef:
                          apiVersion: apiVersion
                          fieldPath: fieldPath
                    configMap:
                      name: name
                      optional: true
                      items:
                      - mode: 9
                        path: path
                        key: key
                      - mode: 9
                        path: path
                        key: key
                    secret:
                      name: name
                      optional: true
                      items:
                      - mode: 9
                        path: path
                        key: key
                      - mode: 9
                        path: path
                        key: key
                    serviceAccountToken:
                      path: path
                      audience: audience
                      expirationSeconds: 1
                  defaultMode: 6
                cephfs:
                  path: path
                  secretRef:
                    name: name
                  secretFile: secretFile
                  readOnly: true
                  user: user
                  monitors:
                  - monitors
                  - monitors
                scaleIO:
                  system: system
                  protectionDomain: protectionDomain
                  sslEnabled: true
                  storageMode: storageMode
                  volumeName: volumeName
                  secretRef:
                    name: name
                  readOnly: true
                  fsType: fsType
                  storagePool: storagePool
                  gateway: gateway
                emptyDir:
                  sizeLimit: sizeLimit
                  medium: medium
                glusterfs:
                  path: path
                  endpoints: endpoints
                  readOnly: true
                gcePersistentDisk:
                  partition: 6
                  readOnly: true
                  pdName: pdName
                  fsType: fsType
                photonPersistentDisk:
                  pdID: pdID
                  fsType: fsType
                azureDisk:
                  diskName: diskName
                  kind: "{}"
                  readOnly: true
                  cachingMode: "{}"
                  diskURI: diskURI
                  fsType: fsType
                cinder:
                  secretRef:
                    name: name
                  volumeID: volumeID
                  readOnly: true
                  fsType: fsType
                downwardAPI:
                  defaultMode: 6
                  items:
                  - mode: 8
                    path: path
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                  - mode: 8
                    path: path
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                awsElasticBlockStore:
                  partition: 5
                  volumeID: volumeID
                  readOnly: true
                  fsType: fsType
                flocker:
                  datasetName: datasetName
                  datasetUUID: datasetUUID
                iscsi:
                  chapAuthSession: true
                  iscsiInterface: iscsiInterface
                  lun: 3
                  chapAuthDiscovery: true
                  iqn: iqn
                  portals:
                  - portals
                  - portals
                  secretRef:
                    name: name
                  initiatorName: initiatorName
                  readOnly: true
                  fsType: fsType
                  targetPortal: targetPortal
                rbd:
                  image: image
                  pool: pool
                  secretRef:
                    name: name
                  readOnly: true
                  fsType: fsType
                  keyring: keyring
                  user: user
                  monitors:
                  - monitors
                  - monitors
                configMap:
                  defaultMode: 9
                  name: name
                  optional: true
                  items:
                  - mode: 9
                    path: path
                    key: key
                  - mode: 9
                    path: path
                    key: key
                storageos:
                  volumeNamespace: volumeNamespace
                  volumeName: volumeName
                  secretRef:
                    name: name
                  readOnly: true
                  fsType: fsType
                name: name
                nfs:
                  path: path
                  server: server
                  readOnly: true
                persistentVolumeClaim:
                  claimName: claimName
                  readOnly: true
                gitRepo:
                  repository: repository
                  directory: directory
                  revision: revision
                portworxVolume:
                  volumeID: volumeID
                  readOnly: true
                  fsType: fsType
                vsphereVolume:
                  storagePolicyName: storagePolicyName
                  storagePolicyID: storagePolicyID
                  volumePath: volumePath
                  fsType: fsType
                fc:
                  lun: 9
                  targetWWNs:
                  - targetWWNs
                  - targetWWNs
                  readOnly: true
                  wwids:
                  - wwids
                  - wwids
                  fsType: fsType
                hostPath:
                  path: path
                  type: "{}"
              serviceAccount: serviceAccount
              priority: 1
              restartPolicy: restartPolicy
              shareProcessNamespace: true
              subdomain: subdomain
              containers:
              - volumeDevices:
                - devicePath: devicePath
                  name: name
                - devicePath: devicePath
                  name: name
                image: image
                imagePullPolicy: imagePullPolicy
                livenessProbe:
                  failureThreshold: 5
                  periodSeconds: 2
                  tcpSocket:
                    port: port
                    host: host
                  timeoutSeconds: 9
                  successThreshold: 7
                  initialDelaySeconds: 5
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: port
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
                stdin: true
                terminationMessagePolicy: terminationMessagePolicy
                terminationMessagePath: terminationMessagePath
                workingDir: workingDir
                resources:
                  requests: "{}"
                  limits: "{}"
                securityContext:
                  privileged: true
                  runAsUser: 7
                  capabilities:
                    add:
                    - "{}"
                    - "{}"
                    drop:
                    - "{}"
                    - "{}"
                  seLinuxOptions:
                    role: role
                    level: level
                    type: type
                    user: user
                  allowPrivilegeEscalation: true
                  runAsGroup: 4
                  runAsNonRoot: true
                  readOnlyRootFilesystem: true
                env:
                - name: name
                  value: value
                  valueFrom:
                    secretKeyRef:
                      name: name
                      optional: true
                      key: key
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    configMapKeyRef:
                      name: name
                      optional: true
                      key: key
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                - name: name
                  value: value
                  valueFrom:
                    secretKeyRef:
                      name: name
                      optional: true
                      key: key
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    configMapKeyRef:
                      name: name
                      optional: true
                      key: key
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                ports:
                - protocol: protocol
                  hostIP: hostIP
                  name: name
                  containerPort: 3
                  hostPort: 2
                - protocol: protocol
                  hostIP: hostIP
                  name: name
                  containerPort: 3
                  hostPort: 2
                command:
                - command
                - command
                volumeMounts:
                - mountPath: mountPath
                  mountPropagation: "{}"
                  name: name
                  readOnly: true
                  subPath: subPath
                - mountPath: mountPath
                  mountPropagation: "{}"
                  name: name
                  readOnly: true
                  subPath: subPath
                args:
                - args
                - args
                lifecycle:
                  postStart:
                    tcpSocket:
                      port: port
                      host: host
                    exec:
                      command:
                      - command
                      - command
                    httpGet:
                      path: path
                      scheme: scheme
                      port: port
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  preStop:
                    tcpSocket:
                      port: port
                      host: host
                    exec:
                      command:
                      - command
                      - command
                    httpGet:
                      path: path
                      scheme: scheme
                      port: port
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                name: name
                tty: true
                readinessProbe:
                  failureThreshold: 5
                  periodSeconds: 2
                  tcpSocket:
                    port: port
                    host: host
                  timeoutSeconds: 9
                  successThreshold: 7
                  initialDelaySeconds: 5
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: port
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
                stdinOnce: true
                envFrom:
                - configMapRef:
                    name: name
                    optional: true
                  prefix: prefix
                  secretRef:
                    name: name
                    optional: true
                - configMapRef:
                    name: name
                    optional: true
                  prefix: prefix
                  secretRef:
                    name: name
                    optional: true
              - volumeDevices:
                - devicePath: devicePath
                  name: name
                - devicePath: devicePath
                  name: name
                image: image
                imagePullPolicy: imagePullPolicy
                livenessProbe:
                  failureThreshold: 5
                  periodSeconds: 2
                  tcpSocket:
                    port: port
                    host: host
                  timeoutSeconds: 9
                  successThreshold: 7
                  initialDelaySeconds: 5
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: port
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
                stdin: true
                terminationMessagePolicy: terminationMessagePolicy
                terminationMessagePath: terminationMessagePath
                workingDir: workingDir
                resources:
                  requests: "{}"
                  limits: "{}"
                securityContext:
                  privileged: true
                  runAsUser: 7
                  capabilities:
                    add:
                    - "{}"
                    - "{}"
                    drop:
                    - "{}"
                    - "{}"
                  seLinuxOptions:
                    role: role
                    level: level
                    type: type
                    user: user
                  allowPrivilegeEscalation: true
                  runAsGroup: 4
                  runAsNonRoot: true
                  readOnlyRootFilesystem: true
                env:
                - name: name
                  value: value
                  valueFrom:
                    secretKeyRef:
                      name: name
                      optional: true
                      key: key
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    configMapKeyRef:
                      name: name
                      optional: true
                      key: key
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                - name: name
                  value: value
                  valueFrom:
                    secretKeyRef:
                      name: name
                      optional: true
                      key: key
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    configMapKeyRef:
                      name: name
                      optional: true
                      key: key
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                ports:
                - protocol: protocol
                  hostIP: hostIP
                  name: name
                  containerPort: 3
                  hostPort: 2
                - protocol: protocol
                  hostIP: hostIP
                  name: name
                  containerPort: 3
                  hostPort: 2
                command:
                - command
                - command
                volumeMounts:
                - mountPath: mountPath
                  mountPropagation: "{}"
                  name: name
                  readOnly: true
                  subPath: subPath
                - mountPath: mountPath
                  mountPropagation: "{}"
                  name: name
                  readOnly: true
                  subPath: subPath
                args:
                - args
                - args
                lifecycle:
                  postStart:
                    tcpSocket:
                      port: port
                      host: host
                    exec:
                      command:
                      - command
                      - command
                    httpGet:
                      path: path
                      scheme: scheme
                      port: port
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  preStop:
                    tcpSocket:
                      port: port
                      host: host
                    exec:
                      command:
                      - command
                      - command
                    httpGet:
                      path: path
                      scheme: scheme
                      port: port
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                name: name
                tty: true
                readinessProbe:
                  failureThreshold: 5
                  periodSeconds: 2
                  tcpSocket:
                    port: port
                    host: host
                  timeoutSeconds: 9
                  successThreshold: 7
                  initialDelaySeconds: 5
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: port
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
                stdinOnce: true
                envFrom:
                - configMapRef:
                    name: name
                    optional: true
                  prefix: prefix
                  secretRef:
                    name: name
                    optional: true
                - configMapRef:
                    name: name
                    optional: true
                  prefix: prefix
                  secretRef:
                    name: name
                    optional: true
              initContainers:
              - volumeDevices:
                - devicePath: devicePath
                  name: name
                - devicePath: devicePath
                  name: name
                image: image
                imagePullPolicy: imagePullPolicy
                livenessProbe:
                  failureThreshold: 5
                  periodSeconds: 2
                  tcpSocket:
                    port: port
                    host: host
                  timeoutSeconds: 9
                  successThreshold: 7
                  initialDelaySeconds: 5
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: port
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
                stdin: true
                terminationMessagePolicy: terminationMessagePolicy
                terminationMessagePath: terminationMessagePath
                workingDir: workingDir
                resources:
                  requests: "{}"
                  limits: "{}"
                securityContext:
                  privileged: true
                  runAsUser: 7
                  capabilities:
                    add:
                    - "{}"
                    - "{}"
                    drop:
                    - "{}"
                    - "{}"
                  seLinuxOptions:
                    role: role
                    level: level
                    type: type
                    user: user
                  allowPrivilegeEscalation: true
                  runAsGroup: 4
                  runAsNonRoot: true
                  readOnlyRootFilesystem: true
                env:
                - name: name
                  value: value
                  valueFrom:
                    secretKeyRef:
                      name: name
                      optional: true
                      key: key
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    configMapKeyRef:
                      name: name
                      optional: true
                      key: key
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                - name: name
                  value: value
                  valueFrom:
                    secretKeyRef:
                      name: name
                      optional: true
                      key: key
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    configMapKeyRef:
                      name: name
                      optional: true
                      key: key
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                ports:
                - protocol: protocol
                  hostIP: hostIP
                  name: name
                  containerPort: 3
                  hostPort: 2
                - protocol: protocol
                  hostIP: hostIP
                  name: name
                  containerPort: 3
                  hostPort: 2
                command:
                - command
                - command
                volumeMounts:
                - mountPath: mountPath
                  mountPropagation: "{}"
                  name: name
                  readOnly: true
                  subPath: subPath
                - mountPath: mountPath
                  mountPropagation: "{}"
                  name: name
                  readOnly: true
                  subPath: subPath
                args:
                - args
                - args
                lifecycle:
                  postStart:
                    tcpSocket:
                      port: port
                      host: host
                    exec:
                      command:
                      - command
                      - command
                    httpGet:
                      path: path
                      scheme: scheme
                      port: port
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  preStop:
                    tcpSocket:
                      port: port
                      host: host
                    exec:
                      command:
                      - command
                      - command
                    httpGet:
                      path: path
                      scheme: scheme
                      port: port
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                name: name
                tty: true
                readinessProbe:
                  failureThreshold: 5
                  periodSeconds: 2
                  tcpSocket:
                    port: port
                    host: host
                  timeoutSeconds: 9
                  successThreshold: 7
                  initialDelaySeconds: 5
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: port
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
                stdinOnce: true
                envFrom:
                - configMapRef:
                    name: name
                    optional: true
                  prefix: prefix
                  secretRef:
                    name: name
                    optional: true
                - configMapRef:
                    name: name
                    optional: true
                  prefix: prefix
                  secretRef:
                    name: name
                    optional: true
              - volumeDevices:
                - devicePath: devicePath
                  name: name
                - devicePath: devicePath
                  name: name
                image: image
                imagePullPolicy: imagePullPolicy
                livenessProbe:
                  failureThreshold: 5
                  periodSeconds: 2
                  tcpSocket:
                    port: port
                    host: host
                  timeoutSeconds: 9
                  successThreshold: 7
                  initialDelaySeconds: 5
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: port
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
                stdin: true
                terminationMessagePolicy: terminationMessagePolicy
                terminationMessagePath: terminationMessagePath
                workingDir: workingDir
                resources:
                  requests: "{}"
                  limits: "{}"
                securityContext:
                  privileged: true
                  runAsUser: 7
                  capabilities:
                    add:
                    - "{}"
                    - "{}"
                    drop:
                    - "{}"
                    - "{}"
                  seLinuxOptions:
                    role: role
                    level: level
                    type: type
                    user: user
                  allowPrivilegeEscalation: true
                  runAsGroup: 4
                  runAsNonRoot: true
                  readOnlyRootFilesystem: true
                env:
                - name: name
                  value: value
                  valueFrom:
                    secretKeyRef:
                      name: name
                      optional: true
                      key: key
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    configMapKeyRef:
                      name: name
                      optional: true
                      key: key
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                - name: name
                  value: value
                  valueFrom:
                    secretKeyRef:
                      name: name
                      optional: true
                      key: key
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    configMapKeyRef:
                      name: name
                      optional: true
                      key: key
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                ports:
                - protocol: protocol
                  hostIP: hostIP
                  name: name
                  containerPort: 3
                  hostPort: 2
                - protocol: protocol
                  hostIP: hostIP
                  name: name
                  containerPort: 3
                  hostPort: 2
                command:
                - command
                - command
                volumeMounts:
                - mountPath: mountPath
                  mountPropagation: "{}"
                  name: name
                  readOnly: true
                  subPath: subPath
                - mountPath: mountPath
                  mountPropagation: "{}"
                  name: name
                  readOnly: true
                  subPath: subPath
                args:
                - args
                - args
                lifecycle:
                  postStart:
                    tcpSocket:
                      port: port
                      host: host
                    exec:
                      command:
                      - command
                      - command
                    httpGet:
                      path: path
                      scheme: scheme
                      port: port
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  preStop:
                    tcpSocket:
                      port: port
                      host: host
                    exec:
                      command:
                      - command
                      - command
                    httpGet:
                      path: path
                      scheme: scheme
                      port: port
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                name: name
                tty: true
                readinessProbe:
                  failureThreshold: 5
                  periodSeconds: 2
                  tcpSocket:
                    port: port
                    host: host
                  timeoutSeconds: 9
                  successThreshold: 7
                  initialDelaySeconds: 5
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: port
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
                stdinOnce: true
                envFrom:
                - configMapRef:
                    name: name
                    optional: true
                  prefix: prefix
                  secretRef:
                    name: name
                    optional: true
                - configMapRef:
                    name: name
                    optional: true
                  prefix: prefix
                  secretRef:
                    name: name
                    optional: true
              affinity:
                nodeAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                    nodeSelectorTerms:
                    - matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchFields:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                    - matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchFields:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                  preferredDuringSchedulingIgnoredDuringExecution:
                  - preference:
                      matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchFields:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                    weight: 6
                  - preference:
                      matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchFields:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                    weight: 6
                podAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                  - labelSelector:
                      matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchLabels: "{}"
                    topologyKey: topologyKey
                    namespaces:
                    - namespaces
                    - namespaces
                  - labelSelector:
                      matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchLabels: "{}"
                    topologyKey: topologyKey
                    namespaces:
                    - namespaces
                    - namespaces
                  preferredDuringSchedulingIgnoredDuringExecution:
                  - podAffinityTerm:
                      labelSelector:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchLabels: "{}"
                      topologyKey: topologyKey
                      namespaces:
                      - namespaces
                      - namespaces
                    weight: 1
                  - podAffinityTerm:
                      labelSelector:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchLabels: "{}"
                      topologyKey: topologyKey
                      namespaces:
                      - namespaces
                      - namespaces
                    weight: 1
                podAntiAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                  - labelSelector:
                      matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchLabels: "{}"
                    topologyKey: topologyKey
                    namespaces:
                    - namespaces
                    - namespaces
                  - labelSelector:
                      matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchLabels: "{}"
                    topologyKey: topologyKey
                    namespaces:
                    - namespaces
                    - namespaces
                  preferredDuringSchedulingIgnoredDuringExecution:
                  - podAffinityTerm:
                      labelSelector:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchLabels: "{}"
                      topologyKey: topologyKey
                      namespaces:
                      - namespaces
                      - namespaces
                    weight: 1
                  - podAffinityTerm:
                      labelSelector:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchLabels: "{}"
                      topologyKey: topologyKey
                      namespaces:
                      - namespaces
                      - namespaces
                    weight: 1
              hostPID: true
          paused: true
          replicas: 1
          revisionHistoryLimit: 5
          selector:
            matchExpressions:
            - values:
              - values
              - values
              key: key
              operator: operator
            - values:
              - values
              - values
              key: key
              operator: operator
            matchLabels: "{}"
          minReadySeconds: 0
          strategy:
            type: type
            rollingUpdate:
              maxSurge: maxSurge
              maxUnavailable: maxUnavailable
          progressDeadlineSeconds: 6
        status:
          unavailableReplicas: 2
          replicas: 3
          readyReplicas: 9
          collisionCount: 2
          conditions:
          - reason: reason
            lastTransitionTime: lastTransitionTime
            message: message
            type: type
            lastUpdateTime: lastUpdateTime
            status: status
          - reason: reason
            lastTransitionTime: lastTransitionTime
            message: message
            type: type
            lastUpdateTime: lastUpdateTime
            status: status
          updatedReplicas: 4
          availableReplicas: 5
          observedGeneration: 7
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
          type: string
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: '#/components/schemas/v1.ObjectMeta'
        spec:
          $ref: '#/components/schemas/v1.DeploymentSpec'
        status:
          $ref: '#/components/schemas/v1.DeploymentStatus'
      type: object
    v1.DeploymentCondition:
      description: DeploymentCondition describes the state of a deployment at a certain
        point.
      example:
        reason: reason
        lastTransitionTime: lastTransitionTime
        message: message
        type: type
        lastUpdateTime: lastUpdateTime
        status: status
      properties:
        lastTransitionTime:
          description: Last time the condition transitioned from one status to another.
          type: string
        lastUpdateTime:
          description: The last time this condition was updated.
          type: string
        message:
          description: A human readable message indicating details about the transition.
          type: string
        reason:
          description: The reason for the condition's last transition.
          type: string
        status:
          description: "Status of the condition, one of True, False, Unknown."
          type: string
        type:
          description: Type of deployment condition.
          type: string
      required:
      - status
      - type
      type: object
    v1.DeploymentList:
      description: DeploymentList is a list of Deployments.
      example:
        metadata:
          continue: continue
          resourceVersion: resourceVersion
          selfLink: selfLink
        apiVersion: apiVersion
        kind: kind
        items:
        - metadata:
            generation: 6
            finalizers:
            - finalizers
            - finalizers
            resourceVersion: resourceVersion
            annotations: "{}"
            generateName: generateName
            deletionTimestamp: deletionTimestamp
            labels: "{}"
            ownerReferences:
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            selfLink: selfLink
            deletionGracePeriodSeconds: 0
            uid: uid
            initializers:
              result:
                reason: reason
                metadata:
                  continue: continue
                  resourceVersion: resourceVersion
                  selfLink: selfLink
                apiVersion: apiVersion
                code: 1
                kind: kind
                details:
                  uid: uid
                  kind: kind
                  causes:
                  - reason: reason
                    field: field
                    message: message
                  - reason: reason
                    field: field
                    message: message
                  retryAfterSeconds: 5
                  name: name
                  group: group
                message: message
                status: status
              pending:
              - name: name
              - name: name
            clusterName: clusterName
            creationTimestamp: creationTimestamp
            name: name
            namespace: namespace
          apiVersion: apiVersion
          kind: kind
          spec:
            template:
              metadata:
                generation: 6
                finalizers:
                - finalizers
                - finalizers
                resourceVersion: resourceVersion
                annotations: "{}"
                generateName: generateName
                deletionTimestamp: deletionTimestamp
                labels: "{}"
                ownerReferences:
                - uid: uid
                  controller: true
                  apiVersion: apiVersion
                  kind: kind
                  name: name
                  blockOwnerDeletion: true
                - uid: uid
                  controller: true
                  apiVersion: apiVersion
                  kind: kind
                  name: name
                  blockOwnerDeletion: true
                selfLink: selfLink
                deletionGracePeriodSeconds: 0
                uid: uid
                initializers:
                  result:
                    reason: reason
                    metadata:
                      continue: continue
                      resourceVersion: resourceVersion
                      selfLink: selfLink
                    apiVersion: apiVersion
                    code: 1
                    kind: kind
                    details:
                      uid: uid
                      kind: kind
                      causes:
                      - reason: reason
                        field: field
                        message: message
                      - reason: reason
                        field: field
                        message: message
                      retryAfterSeconds: 5
                      name: name
                      group: group
                    message: message
                    status: status
                  pending:
                  - name: name
                  - name: name
                clusterName: clusterName
                creationTimestamp: creationTimestamp
                name: name
                namespace: namespace
              spec:
                dnsPolicy: dnsPolicy
                nodeName: nodeName
                terminationGracePeriodSeconds: 1
                dnsConfig:
                  searches:
                  - searches
                  - searches
                  nameservers:
                  - nameservers
                  - nameservers
                  options:
                  - name: name
                    value: value
                  - name: name
                    value: value
                hostNetwork: true
                readinessGates:
                - conditionType: conditionType
                - conditionType: conditionType
                serviceAccountName: serviceAccountName
                imagePullSecrets:
                - name: name
                - name: name
                priorityClassName: priorityClassName
                hostAliases:
                - ip: ip
                  hostnames:
                  - hostnames
                  - hostnames
                - ip: ip
                  hostnames:
                  - hostnames
                  - hostnames
                securityContext:
                  runAsUser: 6
                  seLinuxOptions:
                    role: role
                    level: level
                    type: type
                    user: user
                  fsGroup: 1
                  supplementalGroups:
                  - 7
                  - 7
                  runAsGroup: 1
                  runAsNonRoot: true
                  sysctls:
                  - name: name
                    value: value
                  - name: name
                    value: value
                nodeSelector: "{}"
                hostname: hostname
                tolerations:
                - effect: effect
                  tolerationSeconds: 4
                  value: value
                  key: key
                  operator: operator
                - effect: effect
                  tolerationSeconds: 4
                  value: value
                  key: key
                  operator: operator
                automountServiceAccountToken: true
                schedulerName: schedulerName
                activeDeadlineSeconds: 0
                hostIPC: true
                volumes:
                - quobyte:
                    volume: volume
                    registry: registry
                    readOnly: true
                    user: user
                    group: group
                  azureFile:
                    secretName: secretName
                    readOnly: true
                    shareName: shareName
                  flexVolume:
                    driver: driver
                    options: "{}"
                    secretRef:
                      name: name
                    readOnly: true
                    fsType: fsType
                  secret:
                    secretName: secretName
                    defaultMode: 2
                    optional: true
                    items:
                    - mode: 9
                      path: path
                      key: key
                    - mode: 9
                      path: path
                      key: key
                  projected:
                    sources:
                    - downwardAPI:
                        items:
                        - mode: 8
                          path: path
                          resourceFieldRef:
                            divisor: divisor
                            resource: resource
                            containerName: containerName
                          fieldRef:
                            apiVersion: apiVersion
                            fieldPath: fieldPath
                        - mode: 8
                          path: path
                          resourceFieldRef:
                            divisor: divisor
                            resource: resource
                            containerName: containerName
                          fieldRef:
                            apiVersion: apiVersion
                            fieldPath: fieldPath
                      configMap:
                        name: name
                        optional: true
                        items:
                        - mode: 9
                          path: path
                          key: key
                        - mode: 9
                          path: path
                          key: key
                      secret:
                        name: name
                        optional: true
                        items:
                        - mode: 9
                          path: path
                          key: key
                        - mode: 9
                          path: path
                          key: key
                      serviceAccountToken:
                        path: path
                        audience: audience
                        expirationSeconds: 1
                    - downwardAPI:
                        items:
                        - mode: 8
                          path: path
                          resourceFieldRef:
                            divisor: divisor
                            resource: resource
                            containerName: containerName
                          fieldRef:
                            apiVersion: apiVersion
                            fieldPath: fieldPath
                        - mode: 8
                          path: path
                          resourceFieldRef:
                            divisor: divisor
                            resource: resource
                            containerName: containerName
                          fieldRef:
                            apiVersion: apiVersion
                            fieldPath: fieldPath
                      configMap:
                        name: name
                        optional: true
                        items:
                        - mode: 9
                          path: path
                          key: key
                        - mode: 9
                          path: path
                          key: key
                      secret:
                        name: name
                        optional: true
                        items:
                        - mode: 9
                          path: path
                          key: key
                        - mode: 9
                          path: path
                          key: key
                      serviceAccountToken:
                        path: path
                        audience: audience
                        expirationSeconds: 1
                    defaultMode: 6
                  cephfs:
                    path: path
                    secretRef:
                      name: name
                    secretFile: secretFile
                    readOnly: true
                    user: user
                    monitors:
                    - monitors
                    - monitors
                  scaleIO:
                    system: system
                    protectionDomain: protectionDomain
                    sslEnabled: true
                    storageMode: storageMode
                    volumeName: volumeName
                    secretRef:
                      name: name
                    readOnly: true
                    fsType: fsType
                    storagePool: storagePool
                    gateway: gateway
                  emptyDir:
                    sizeLimit: sizeLimit
                    medium: medium
                  glusterfs:
                    path: path
                    endpoints: endpoints
                    readOnly: true
                  gcePersistentDisk:
                    partition: 6
                    readOnly: true
                    pdName: pdName
                    fsType: fsType
                  photonPersistentDisk:
                    pdID: pdID
                    fsType: fsType
                  azureDisk:
                    diskName: diskName
                    kind: "{}"
                    readOnly: true
                    cachingMode: "{}"
                    diskURI: diskURI
                    fsType: fsType
                  cinder:
                    secretRef:
                      name: name
                    volumeID: volumeID
                    readOnly: true
                    fsType: fsType
                  downwardAPI:
                    defaultMode: 6
                    items:
                    - mode: 8
                      path: path
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                    - mode: 8
                      path: path
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  awsElasticBlockStore:
                    partition: 5
                    volumeID: volumeID
                    readOnly: true
                    fsType: fsType
                  flocker:
                    datasetName: datasetName
                    datasetUUID: datasetUUID
                  iscsi:
                    chapAuthSession: true
                    iscsiInterface: iscsiInterface
                    lun: 3
                    chapAuthDiscovery: true
                    iqn: iqn
                    portals:
                    - portals
                    - portals
                    secretRef:
                      name: name
                    initiatorName: initiatorName
                    readOnly: true
                    fsType: fsType
                    targetPortal: targetPortal
                  rbd:
                    image: image
                    pool: pool
                    secretRef:
                      name: name
                    readOnly: true
                    fsType: fsType
                    keyring: keyring
                    user: user
                    monitors:
                    - monitors
                    - monitors
                  configMap:
                    defaultMode: 9
                    name: name
                    optional: true
                    items:
                    - mode: 9
                      path: path
                      key: key
                    - mode: 9
                      path: path
                      key: key
                  storageos:
                    volumeNamespace: volumeNamespace
                    volumeName: volumeName
                    secretRef:
                      name: name
                    readOnly: true
                    fsType: fsType
                  name: name
                  nfs:
                    path: path
                    server: server
                    readOnly: true
                  persistentVolumeClaim:
                    claimName: claimName
                    readOnly: true
                  gitRepo:
                    repository: repository
                    directory: directory
                    revision: revision
                  portworxVolume:
                    volumeID: volumeID
                    readOnly: true
                    fsType: fsType
                  vsphereVolume:
                    storagePolicyName: storagePolicyName
                    storagePolicyID: storagePolicyID
                    volumePath: volumePath
                    fsType: fsType
                  fc:
                    lun: 9
                    targetWWNs:
                    - targetWWNs
                    - targetWWNs
                    readOnly: true
                    wwids:
                    - wwids
                    - wwids
                    fsType: fsType
                  hostPath:
                    path: path
                    type: "{}"
                - quobyte:
                    volume: volume
                    registry: registry
                    readOnly: true
                    user: user
                    group: group
                  azureFile:
                    secretName: secretName
                    readOnly: true
                    shareName: shareName
                  flexVolume:
                    driver: driver
                    options: "{}"
                    secretRef:
                      name: name
                    readOnly: true
                    fsType: fsType
                  secret:
                    secretName: secretName
                    defaultMode: 2
                    optional: true
                    items:
                    - mode: 9
                      path: path
                      key: key
                    - mode: 9
                      path: path
                      key: key
                  projected:
                    sources:
                    - downwardAPI:
                        items:
                        - mode: 8
                          path: path
                          resourceFieldRef:
                            divisor: divisor
                            resource: resource
                            containerName: containerName
                          fieldRef:
                            apiVersion: apiVersion
                            fieldPath: fieldPath
                        - mode: 8
                          path: path
                          resourceFieldRef:
                            divisor: divisor
                            resource: resource
                            containerName: containerName
                          fieldRef:
                            apiVersion: apiVersion
                            fieldPath: fieldPath
                      configMap:
                        name: name
                        optional: true
                        items:
                        - mode: 9
                          path: path
                          key: key
                        - mode: 9
                          path: path
                          key: key
                      secret:
                        name: name
                        optional: true
                        items:
                        - mode: 9
                          path: path
                          key: key
                        - mode: 9
                          path: path
                          key: key
                      serviceAccountToken:
                        path: path
                        audience: audience
                        expirationSeconds: 1
                    - downwardAPI:
                        items:
                        - mode: 8
                          path: path
                          resourceFieldRef:
                            divisor: divisor
                            resource: resource
                            containerName: containerName
                          fieldRef:
                            apiVersion: apiVersion
                            fieldPath: fieldPath
                        - mode: 8
                          path: path
                          resourceFieldRef:
                            divisor: divisor
                            resource: resource
                            containerName: containerName
                          fieldRef:
                            apiVersion: apiVersion
                            fieldPath: fieldPath
                      configMap:
                        name: name
                        optional: true
                        items:
                        - mode: 9
                          path: path
                          key: key
                        - mode: 9
                          path: path
                          key: key
                      secret:
                        name: name
                        optional: true
                        items:
                        - mode: 9
                          path: path
                          key: key
                        - mode: 9
                          path: path
                          key: key
                      serviceAccountToken:
                        path: path
                        audience: audience
                        expirationSeconds: 1
                    defaultMode: 6
                  cephfs:
                    path: path
                    secretRef:
                      name: name
                    secretFile: secretFile
                    readOnly: true
                    user: user
                    monitors:
                    - monitors
                    - monitors
                  scaleIO:
                    system: system
                    protectionDomain: protectionDomain
                    sslEnabled: true
                    storageMode: storageMode
                    volumeName: volumeName
                    secretRef:
                      name: name
                    readOnly: true
                    fsType: fsType
                    storagePool: storagePool
                    gateway: gateway
                  emptyDir:
                    sizeLimit: sizeLimit
                    medium: medium
                  glusterfs:
                    path: path
                    endpoints: endpoints
                    readOnly: true
                  gcePersistentDisk:
                    partition: 6
                    readOnly: true
                    pdName: pdName
                    fsType: fsType
                  photonPersistentDisk:
                    pdID: pdID
                    fsType: fsType
                  azureDisk:
                    diskName: diskName
                    kind: "{}"
                    readOnly: true
                    cachingMode: "{}"
                    diskURI: diskURI
                    fsType: fsType
                  cinder:
                    secretRef:
                      name: name
                    volumeID: volumeID
                    readOnly: true
                    fsType: fsType
                  downwardAPI:
                    defaultMode: 6
                    items:
                    - mode: 8
                      path: path
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                    - mode: 8
                      path: path
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  awsElasticBlockStore:
                    partition: 5
                    volumeID: volumeID
                    readOnly: true
                    fsType: fsType
                  flocker:
                    datasetName: datasetName
                    datasetUUID: datasetUUID
                  iscsi:
                    chapAuthSession: true
                    iscsiInterface: iscsiInterface
                    lun: 3
                    chapAuthDiscovery: true
                    iqn: iqn
                    portals:
                    - portals
                    - portals
                    secretRef:
                      name: name
                    initiatorName: initiatorName
                    readOnly: true
                    fsType: fsType
                    targetPortal: targetPortal
                  rbd:
                    image: image
                    pool: pool
                    secretRef:
                      name: name
                    readOnly: true
                    fsType: fsType
                    keyring: keyring
                    user: user
                    monitors:
                    - monitors
                    - monitors
                  configMap:
                    defaultMode: 9
                    name: name
                    optional: true
                    items:
                    - mode: 9
                      path: path
                      key: key
                    - mode: 9
                      path: path
                      key: key
                  storageos:
                    volumeNamespace: volumeNamespace
                    volumeName: volumeName
                    secretRef:
                      name: name
                    readOnly: true
                    fsType: fsType
                  name: name
                  nfs:
                    path: path
                    server: server
                    readOnly: true
                  persistentVolumeClaim:
                    claimName: claimName
                    readOnly: true
                  gitRepo:
                    repository: repository
                    directory: directory
                    revision: revision
                  portworxVolume:
                    volumeID: volumeID
                    readOnly: true
                    fsType: fsType
                  vsphereVolume:
                    storagePolicyName: storagePolicyName
                    storagePolicyID: storagePolicyID
                    volumePath: volumePath
                    fsType: fsType
                  fc:
                    lun: 9
                    targetWWNs:
                    - targetWWNs
                    - targetWWNs
                    readOnly: true
                    wwids:
                    - wwids
                    - wwids
                    fsType: fsType
                  hostPath:
                    path: path
                    type: "{}"
                serviceAccount: serviceAccount
                priority: 1
                restartPolicy: restartPolicy
                shareProcessNamespace: true
                subdomain: subdomain
                containers:
                - volumeDevices:
                  - devicePath: devicePath
                    name: name
                  - devicePath: devicePath
                    name: name
                  image: image
                  imagePullPolicy: imagePullPolicy
                  livenessProbe:
                    failureThreshold: 5
                    periodSeconds: 2
                    tcpSocket:
                      port: port
                      host: host
                    timeoutSeconds: 9
                    successThreshold: 7
                    initialDelaySeconds: 5
                    exec:
                      command:
                      - command
                      - command
                    httpGet:
                      path: path
                      scheme: scheme
                      port: port
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  stdin: true
                  terminationMessagePolicy: terminationMessagePolicy
                  terminationMessagePath: terminationMessagePath
                  workingDir: workingDir
                  resources:
                    requests: "{}"
                    limits: "{}"
                  securityContext:
                    privileged: true
                    runAsUser: 7
                    capabilities:
                      add:
                      - "{}"
                      - "{}"
                      drop:
                      - "{}"
                      - "{}"
                    seLinuxOptions:
                      role: role
                      level: level
                      type: type
                      user: user
                    allowPrivilegeEscalation: true
                    runAsGroup: 4
                    runAsNonRoot: true
                    readOnlyRootFilesystem: true
                  env:
                  - name: name
                    value: value
                    valueFrom:
                      secretKeyRef:
                        name: name
                        optional: true
                        key: key
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      configMapKeyRef:
                        name: name
                        optional: true
                        key: key
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  - name: name
                    value: value
                    valueFrom:
                      secretKeyRef:
                        name: name
                        optional: true
                        key: key
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      configMapKeyRef:
                        name: name
                        optional: true
                        key: key
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  ports:
                  - protocol: protocol
                    hostIP: hostIP
                    name: name
                    containerPort: 3
                    hostPort: 2
                  - protocol: protocol
                    hostIP: hostIP
                    name: name
                    containerPort: 3
                    hostPort: 2
                  command:
                  - command
                  - command
                  volumeMounts:
                  - mountPath: mountPath
                    mountPropagation: "{}"
                    name: name
                    readOnly: true
                    subPath: subPath
                  - mountPath: mountPath
                    mountPropagation: "{}"
                    name: name
                    readOnly: true
                    subPath: subPath
                  args:
                  - args
                  - args
                  lifecycle:
                    postStart:
                      tcpSocket:
                        port: port
                        host: host
                      exec:
                        command:
                        - command
                        - command
                      httpGet:
                        path: path
                        scheme: scheme
                        port: port
                        host: host
                        httpHeaders:
                        - name: name
                          value: value
                        - name: name
                          value: value
                    preStop:
                      tcpSocket:
                        port: port
                        host: host
                      exec:
                        command:
                        - command
                        - command
                      httpGet:
                        path: path
                        scheme: scheme
                        port: port
                        host: host
                        httpHeaders:
                        - name: name
                          value: value
                        - name: name
                          value: value
                  name: name
                  tty: true
                  readinessProbe:
                    failureThreshold: 5
                    periodSeconds: 2
                    tcpSocket:
                      port: port
                      host: host
                    timeoutSeconds: 9
                    successThreshold: 7
                    initialDelaySeconds: 5
                    exec:
                      command:
                      - command
                      - command
                    httpGet:
                      path: path
                      scheme: scheme
                      port: port
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  stdinOnce: true
                  envFrom:
                  - configMapRef:
                      name: name
                      optional: true
                    prefix: prefix
                    secretRef:
                      name: name
                      optional: true
                  - configMapRef:
                      name: name
                      optional: true
                    prefix: prefix
                    secretRef:
                      name: name
                      optional: true
                - volumeDevices:
                  - devicePath: devicePath
                    name: name
                  - devicePath: devicePath
                    name: name
                  image: image
                  imagePullPolicy: imagePullPolicy
                  livenessProbe:
                    failureThreshold: 5
                    periodSeconds: 2
                    tcpSocket:
                      port: port
                      host: host
                    timeoutSeconds: 9
                    successThreshold: 7
                    initialDelaySeconds: 5
                    exec:
                      command:
                      - command
                      - command
                    httpGet:
                      path: path
                      scheme: scheme
                      port: port
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  stdin: true
                  terminationMessagePolicy: terminationMessagePolicy
                  terminationMessagePath: terminationMessagePath
                  workingDir: workingDir
                  resources:
                    requests: "{}"
                    limits: "{}"
                  securityContext:
                    privileged: true
                    runAsUser: 7
                    capabilities:
                      add:
                      - "{}"
                      - "{}"
                      drop:
                      - "{}"
                      - "{}"
                    seLinuxOptions:
                      role: role
                      level: level
                      type: type
                      user: user
                    allowPrivilegeEscalation: true
                    runAsGroup: 4
                    runAsNonRoot: true
                    readOnlyRootFilesystem: true
                  env:
                  - name: name
                    value: value
                    valueFrom:
                      secretKeyRef:
                        name: name
                        optional: true
                        key: key
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      configMapKeyRef:
                        name: name
                        optional: true
                        key: key
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  - name: name
                    value: value
                    valueFrom:
                      secretKeyRef:
                        name: name
                        optional: true
                        key: key
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      configMapKeyRef:
                        name: name
                        optional: true
                        key: key
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  ports:
                  - protocol: protocol
                    hostIP: hostIP
                    name: name
                    containerPort: 3
                    hostPort: 2
                  - protocol: protocol
                    hostIP: hostIP
                    name: name
                    containerPort: 3
                    hostPort: 2
                  command:
                  - command
                  - command
                  volumeMounts:
                  - mountPath: mountPath
                    mountPropagation: "{}"
                    name: name
                    readOnly: true
                    subPath: subPath
                  - mountPath: mountPath
                    mountPropagation: "{}"
                    name: name
                    readOnly: true
                    subPath: subPath
                  args:
                  - args
                  - args
                  lifecycle:
                    postStart:
                      tcpSocket:
                        port: port
                        host: host
                      exec:
                        command:
                        - command
                        - command
                      httpGet:
                        path: path
                        scheme: scheme
                        port: port
                        host: host
                        httpHeaders:
                        - name: name
                          value: value
                        - name: name
                          value: value
                    preStop:
                      tcpSocket:
                        port: port
                        host: host
                      exec:
                        command:
                        - command
                        - command
                      httpGet:
                        path: path
                        scheme: scheme
                        port: port
                        host: host
                        httpHeaders:
                        - name: name
                          value: value
                        - name: name
                          value: value
                  name: name
                  tty: true
                  readinessProbe:
                    failureThreshold: 5
                    periodSeconds: 2
                    tcpSocket:
                      port: port
                      host: host
                    timeoutSeconds: 9
                    successThreshold: 7
                    initialDelaySeconds: 5
                    exec:
                      command:
                      - command
                      - command
                    httpGet:
                      path: path
                      scheme: scheme
                      port: port
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  stdinOnce: true
                  envFrom:
                  - configMapRef:
                      name: name
                      optional: true
                    prefix: prefix
                    secretRef:
                      name: name
                      optional: true
                  - configMapRef:
                      name: name
                      optional: true
                    prefix: prefix
                    secretRef:
                      name: name
                      optional: true
                initContainers:
                - volumeDevices:
                  - devicePath: devicePath
                    name: name
                  - devicePath: devicePath
                    name: name
                  image: image
                  imagePullPolicy: imagePullPolicy
                  livenessProbe:
                    failureThreshold: 5
                    periodSeconds: 2
                    tcpSocket:
                      port: port
                      host: host
                    timeoutSeconds: 9
                    successThreshold: 7
                    initialDelaySeconds: 5
                    exec:
                      command:
                      - command
                      - command
                    httpGet:
                      path: path
                      scheme: scheme
                      port: port
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  stdin: true
                  terminationMessagePolicy: terminationMessagePolicy
                  terminationMessagePath: terminationMessagePath
                  workingDir: workingDir
                  resources:
                    requests: "{}"
                    limits: "{}"
                  securityContext:
                    privileged: true
                    runAsUser: 7
                    capabilities:
                      add:
                      - "{}"
                      - "{}"
                      drop:
                      - "{}"
                      - "{}"
                    seLinuxOptions:
                      role: role
                      level: level
                      type: type
                      user: user
                    allowPrivilegeEscalation: true
                    runAsGroup: 4
                    runAsNonRoot: true
                    readOnlyRootFilesystem: true
                  env:
                  - name: name
                    value: value
                    valueFrom:
                      secretKeyRef:
                        name: name
                        optional: true
                        key: key
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      configMapKeyRef:
                        name: name
                        optional: true
                        key: key
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  - name: name
                    value: value
                    valueFrom:
                      secretKeyRef:
                        name: name
                        optional: true
                        key: key
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      configMapKeyRef:
                        name: name
                        optional: true
                        key: key
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  ports:
                  - protocol: protocol
                    hostIP: hostIP
                    name: name
                    containerPort: 3
                    hostPort: 2
                  - protocol: protocol
                    hostIP: hostIP
                    name: name
                    containerPort: 3
                    hostPort: 2
                  command:
                  - command
                  - command
                  volumeMounts:
                  - mountPath: mountPath
                    mountPropagation: "{}"
                    name: name
                    readOnly: true
                    subPath: subPath
                  - mountPath: mountPath
                    mountPropagation: "{}"
                    name: name
                    readOnly: true
                    subPath: subPath
                  args:
                  - args
                  - args
                  lifecycle:
                    postStart:
                      tcpSocket:
                        port: port
                        host: host
                      exec:
                        command:
                        - command
                        - command
                      httpGet:
                        path: path
                        scheme: scheme
                        port: port
                        host: host
                        httpHeaders:
                        - name: name
                          value: value
                        - name: name
                          value: value
                    preStop:
                      tcpSocket:
                        port: port
                        host: host
                      exec:
                        command:
                        - command
                        - command
                      httpGet:
                        path: path
                        scheme: scheme
                        port: port
                        host: host
                        httpHeaders:
                        - name: name
                          value: value
                        - name: name
                          value: value
                  name: name
                  tty: true
                  readinessProbe:
                    failureThreshold: 5
                    periodSeconds: 2
                    tcpSocket:
                      port: port
                      host: host
                    timeoutSeconds: 9
                    successThreshold: 7
                    initialDelaySeconds: 5
                    exec:
                      command:
                      - command
                      - command
                    httpGet:
                      path: path
                      scheme: scheme
                      port: port
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  stdinOnce: true
                  envFrom:
                  - configMapRef:
                      name: name
                      optional: true
                    prefix: prefix
                    secretRef:
                      name: name
                      optional: true
                  - configMapRef:
                      name: name
                      optional: true
                    prefix: prefix
                    secretRef:
                      name: name
                      optional: true
                - volumeDevices:
                  - devicePath: devicePath
                    name: name
                  - devicePath: devicePath
                    name: name
                  image: image
                  imagePullPolicy: imagePullPolicy
                  livenessProbe:
                    failureThreshold: 5
                    periodSeconds: 2
                    tcpSocket:
                      port: port
                      host: host
                    timeoutSeconds: 9
                    successThreshold: 7
                    initialDelaySeconds: 5
                    exec:
                      command:
                      - command
                      - command
                    httpGet:
                      path: path
                      scheme: scheme
                      port: port
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  stdin: true
                  terminationMessagePolicy: terminationMessagePolicy
                  terminationMessagePath: terminationMessagePath
                  workingDir: workingDir
                  resources:
                    requests: "{}"
                    limits: "{}"
                  securityContext:
                    privileged: true
                    runAsUser: 7
                    capabilities:
                      add:
                      - "{}"
                      - "{}"
                      drop:
                      - "{}"
                      - "{}"
                    seLinuxOptions:
                      role: role
                      level: level
                      type: type
                      user: user
                    allowPrivilegeEscalation: true
                    runAsGroup: 4
                    runAsNonRoot: true
                    readOnlyRootFilesystem: true
                  env:
                  - name: name
                    value: value
                    valueFrom:
                      secretKeyRef:
                        name: name
                        optional: true
                        key: key
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      configMapKeyRef:
                        name: name
                        optional: true
                        key: key
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  - name: name
                    value: value
                    valueFrom:
                      secretKeyRef:
                        name: name
                        optional: true
                        key: key
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      configMapKeyRef:
                        name: name
                        optional: true
                        key: key
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  ports:
                  - protocol: protocol
                    hostIP: hostIP
                    name: name
                    containerPort: 3
                    hostPort: 2
                  - protocol: protocol
                    hostIP: hostIP
                    name: name
                    containerPort: 3
                    hostPort: 2
                  command:
                  - command
                  - command
                  volumeMounts:
                  - mountPath: mountPath
                    mountPropagation: "{}"
                    name: name
                    readOnly: true
                    subPath: subPath
                  - mountPath: mountPath
                    mountPropagation: "{}"
                    name: name
                    readOnly: true
                    subPath: subPath
                  args:
                  - args
                  - args
                  lifecycle:
                    postStart:
                      tcpSocket:
                        port: port
                        host: host
                      exec:
                        command:
                        - command
                        - command
                      httpGet:
                        path: path
                        scheme: scheme
                        port: port
                        host: host
                        httpHeaders:
                        - name: name
                          value: value
                        - name: name
                          value: value
                    preStop:
                      tcpSocket:
                        port: port
                        host: host
                      exec:
                        command:
                        - command
                        - command
                      httpGet:
                        path: path
                        scheme: scheme
                        port: port
                        host: host
                        httpHeaders:
                        - name: name
                          value: value
                        - name: name
                          value: value
                  name: name
                  tty: true
                  readinessProbe:
                    failureThreshold: 5
                    periodSeconds: 2
                    tcpSocket:
                      port: port
                      host: host
                    timeoutSeconds: 9
                    successThreshold: 7
                    initialDelaySeconds: 5
                    exec:
                      command:
                      - command
                      - command
                    httpGet:
                      path: path
                      scheme: scheme
                      port: port
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  stdinOnce: true
                  envFrom:
                  - configMapRef:
                      name: name
                      optional: true
                    prefix: prefix
                    secretRef:
                      name: name
                      optional: true
                  - configMapRef:
                      name: name
                      optional: true
                    prefix: prefix
                    secretRef:
                      name: name
                      optional: true
                affinity:
                  nodeAffinity:
                    requiredDuringSchedulingIgnoredDuringExecution:
                      nodeSelectorTerms:
                      - matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchFields:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                      - matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchFields:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                    preferredDuringSchedulingIgnoredDuringExecution:
                    - preference:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchFields:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                      weight: 6
                    - preference:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchFields:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                      weight: 6
                  podAffinity:
                    requiredDuringSchedulingIgnoredDuringExecution:
                    - labelSelector:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchLabels: "{}"
                      topologyKey: topologyKey
                      namespaces:
                      - namespaces
                      - namespaces
                    - labelSelector:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchLabels: "{}"
                      topologyKey: topologyKey
                      namespaces:
                      - namespaces
                      - namespaces
                    preferredDuringSchedulingIgnoredDuringExecution:
                    - podAffinityTerm:
                        labelSelector:
                          matchExpressions:
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          matchLabels: "{}"
                        topologyKey: topologyKey
                        namespaces:
                        - namespaces
                        - namespaces
                      weight: 1
                    - podAffinityTerm:
                        labelSelector:
                          matchExpressions:
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          matchLabels: "{}"
                        topologyKey: topologyKey
                        namespaces:
                        - namespaces
                        - namespaces
                      weight: 1
                  podAntiAffinity:
                    requiredDuringSchedulingIgnoredDuringExecution:
                    - labelSelector:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchLabels: "{}"
                      topologyKey: topologyKey
                      namespaces:
                      - namespaces
                      - namespaces
                    - labelSelector:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchLabels: "{}"
                      topologyKey: topologyKey
                      namespaces:
                      - namespaces
                      - namespaces
                    preferredDuringSchedulingIgnoredDuringExecution:
                    - podAffinityTerm:
                        labelSelector:
                          matchExpressions:
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          matchLabels: "{}"
                        topologyKey: topologyKey
                        namespaces:
                        - namespaces
                        - namespaces
                      weight: 1
                    - podAffinityTerm:
                        labelSelector:
                          matchExpressions:
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          matchLabels: "{}"
                        topologyKey: topologyKey
                        namespaces:
                        - namespaces
                        - namespaces
                      weight: 1
                hostPID: true
            paused: true
            replicas: 1
            revisionHistoryLimit: 5
            selector:
              matchExpressions:
              - values:
                - values
                - values
                key: key
                operator: operator
              - values:
                - values
                - values
                key: key
                operator: operator
              matchLabels: "{}"
            minReadySeconds: 0
            strategy:
              type: type
              rollingUpdate:
                maxSurge: maxSurge
                maxUnavailable: maxUnavailable
            progressDeadlineSeconds: 6
          status:
            unavailableReplicas: 2
            replicas: 3
            readyReplicas: 9
            collisionCount: 2
            conditions:
            - reason: reason
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
              lastUpdateTime: lastUpdateTime
              status: status
            - reason: reason
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
              lastUpdateTime: lastUpdateTime
              status: status
            updatedReplicas: 4
            availableReplicas: 5
            observedGeneration: 7
        - metadata:
            generation: 6
            finalizers:
            - finalizers
            - finalizers
            resourceVersion: resourceVersion
            annotations: "{}"
            generateName: generateName
            deletionTimestamp: deletionTimestamp
            labels: "{}"
            ownerReferences:
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            selfLink: selfLink
            deletionGracePeriodSeconds: 0
            uid: uid
            initializers:
              result:
                reason: reason
                metadata:
                  continue: continue
                  resourceVersion: resourceVersion
                  selfLink: selfLink
                apiVersion: apiVersion
                code: 1
                kind: kind
                details:
                  uid: uid
                  kind: kind
                  causes:
                  - reason: reason
                    field: field
                    message: message
                  - reason: reason
                    field: field
                    message: message
                  retryAfterSeconds: 5
                  name: name
                  group: group
                message: message
                status: status
              pending:
              - name: name
              - name: name
            clusterName: clusterName
            creationTimestamp: creationTimestamp
            name: name
            namespace: namespace
          apiVersion: apiVersion
          kind: kind
          spec:
            template:
              metadata:
                generation: 6
                finalizers:
                - finalizers
                - finalizers
                resourceVersion: resourceVersion
                annotations: "{}"
                generateName: generateName
                deletionTimestamp: deletionTimestamp
                labels: "{}"
                ownerReferences:
                - uid: uid
                  controller: true
                  apiVersion: apiVersion
                  kind: kind
                  name: name
                  blockOwnerDeletion: true
                - uid: uid
                  controller: true
                  apiVersion: apiVersion
                  kind: kind
                  name: name
                  blockOwnerDeletion: true
                selfLink: selfLink
                deletionGracePeriodSeconds: 0
                uid: uid
                initializers:
                  result:
                    reason: reason
                    metadata:
                      continue: continue
                      resourceVersion: resourceVersion
                      selfLink: selfLink
                    apiVersion: apiVersion
                    code: 1
                    kind: kind
                    details:
                      uid: uid
                      kind: kind
                      causes:
                      - reason: reason
                        field: field
                        message: message
                      - reason: reason
                        field: field
                        message: message
                      retryAfterSeconds: 5
                      name: name
                      group: group
                    message: message
                    status: status
                  pending:
                  - name: name
                  - name: name
                clusterName: clusterName
                creationTimestamp: creationTimestamp
                name: name
                namespace: namespace
              spec:
                dnsPolicy: dnsPolicy
                nodeName: nodeName
                terminationGracePeriodSeconds: 1
                dnsConfig:
                  searches:
                  - searches
                  - searches
                  nameservers:
                  - nameservers
                  - nameservers
                  options:
                  - name: name
                    value: value
                  - name: name
                    value: value
                hostNetwork: true
                readinessGates:
                - conditionType: conditionType
                - conditionType: conditionType
                serviceAccountName: serviceAccountName
                imagePullSecrets:
                - name: name
                - name: name
                priorityClassName: priorityClassName
                hostAliases:
                - ip: ip
                  hostnames:
                  - hostnames
                  - hostnames
                - ip: ip
                  hostnames:
                  - hostnames
                  - hostnames
                securityContext:
                  runAsUser: 6
                  seLinuxOptions:
                    role: role
                    level: level
                    type: type
                    user: user
                  fsGroup: 1
                  supplementalGroups:
                  - 7
                  - 7
                  runAsGroup: 1
                  runAsNonRoot: true
                  sysctls:
                  - name: name
                    value: value
                  - name: name
                    value: value
                nodeSelector: "{}"
                hostname: hostname
                tolerations:
                - effect: effect
                  tolerationSeconds: 4
                  value: value
                  key: key
                  operator: operator
                - effect: effect
                  tolerationSeconds: 4
                  value: value
                  key: key
                  operator: operator
                automountServiceAccountToken: true
                schedulerName: schedulerName
                activeDeadlineSeconds: 0
                hostIPC: true
                volumes:
                - quobyte:
                    volume: volume
                    registry: registry
                    readOnly: true
                    user: user
                    group: group
                  azureFile:
                    secretName: secretName
                    readOnly: true
                    shareName: shareName
                  flexVolume:
                    driver: driver
                    options: "{}"
                    secretRef:
                      name: name
                    readOnly: true
                    fsType: fsType
                  secret:
                    secretName: secretName
                    defaultMode: 2
                    optional: true
                    items:
                    - mode: 9
                      path: path
                      key: key
                    - mode: 9
                      path: path
                      key: key
                  projected:
                    sources:
                    - downwardAPI:
                        items:
                        - mode: 8
                          path: path
                          resourceFieldRef:
                            divisor: divisor
                            resource: resource
                            containerName: containerName
                          fieldRef:
                            apiVersion: apiVersion
                            fieldPath: fieldPath
                        - mode: 8
                          path: path
                          resourceFieldRef:
                            divisor: divisor
                            resource: resource
                            containerName: containerName
                          fieldRef:
                            apiVersion: apiVersion
                            fieldPath: fieldPath
                      configMap:
                        name: name
                        optional: true
                        items:
                        - mode: 9
                          path: path
                          key: key
                        - mode: 9
                          path: path
                          key: key
                      secret:
                        name: name
                        optional: true
                        items:
                        - mode: 9
                          path: path
                          key: key
                        - mode: 9
                          path: path
                          key: key
                      serviceAccountToken:
                        path: path
                        audience: audience
                        expirationSeconds: 1
                    - downwardAPI:
                        items:
                        - mode: 8
                          path: path
                          resourceFieldRef:
                            divisor: divisor
                            resource: resource
                            containerName: containerName
                          fieldRef:
                            apiVersion: apiVersion
                            fieldPath: fieldPath
                        - mode: 8
                          path: path
                          resourceFieldRef:
                            divisor: divisor
                            resource: resource
                            containerName: containerName
                          fieldRef:
                            apiVersion: apiVersion
                            fieldPath: fieldPath
                      configMap:
                        name: name
                        optional: true
                        items:
                        - mode: 9
                          path: path
                          key: key
                        - mode: 9
                          path: path
                          key: key
                      secret:
                        name: name
                        optional: true
                        items:
                        - mode: 9
                          path: path
                          key: key
                        - mode: 9
                          path: path
                          key: key
                      serviceAccountToken:
                        path: path
                        audience: audience
                        expirationSeconds: 1
                    defaultMode: 6
                  cephfs:
                    path: path
                    secretRef:
                      name: name
                    secretFile: secretFile
                    readOnly: true
                    user: user
                    monitors:
                    - monitors
                    - monitors
                  scaleIO:
                    system: system
                    protectionDomain: protectionDomain
                    sslEnabled: true
                    storageMode: storageMode
                    volumeName: volumeName
                    secretRef:
                      name: name
                    readOnly: true
                    fsType: fsType
                    storagePool: storagePool
                    gateway: gateway
                  emptyDir:
                    sizeLimit: sizeLimit
                    medium: medium
                  glusterfs:
                    path: path
                    endpoints: endpoints
                    readOnly: true
                  gcePersistentDisk:
                    partition: 6
                    readOnly: true
                    pdName: pdName
                    fsType: fsType
                  photonPersistentDisk:
                    pdID: pdID
                    fsType: fsType
                  azureDisk:
                    diskName: diskName
                    kind: "{}"
                    readOnly: true
                    cachingMode: "{}"
                    diskURI: diskURI
                    fsType: fsType
                  cinder:
                    secretRef:
                      name: name
                    volumeID: volumeID
                    readOnly: true
                    fsType: fsType
                  downwardAPI:
                    defaultMode: 6
                    items:
                    - mode: 8
                      path: path
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                    - mode: 8
                      path: path
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  awsElasticBlockStore:
                    partition: 5
                    volumeID: volumeID
                    readOnly: true
                    fsType: fsType
                  flocker:
                    datasetName: datasetName
                    datasetUUID: datasetUUID
                  iscsi:
                    chapAuthSession: true
                    iscsiInterface: iscsiInterface
                    lun: 3
                    chapAuthDiscovery: true
                    iqn: iqn
                    portals:
                    - portals
                    - portals
                    secretRef:
                      name: name
                    initiatorName: initiatorName
                    readOnly: true
                    fsType: fsType
                    targetPortal: targetPortal
                  rbd:
                    image: image
                    pool: pool
                    secretRef:
                      name: name
                    readOnly: true
                    fsType: fsType
                    keyring: keyring
                    user: user
                    monitors:
                    - monitors
                    - monitors
                  configMap:
                    defaultMode: 9
                    name: name
                    optional: true
                    items:
                    - mode: 9
                      path: path
                      key: key
                    - mode: 9
                      path: path
                      key: key
                  storageos:
                    volumeNamespace: volumeNamespace
                    volumeName: volumeName
                    secretRef:
                      name: name
                    readOnly: true
                    fsType: fsType
                  name: name
                  nfs:
                    path: path
                    server: server
                    readOnly: true
                  persistentVolumeClaim:
                    claimName: claimName
                    readOnly: true
                  gitRepo:
                    repository: repository
                    directory: directory
                    revision: revision
                  portworxVolume:
                    volumeID: volumeID
                    readOnly: true
                    fsType: fsType
                  vsphereVolume:
                    storagePolicyName: storagePolicyName
                    storagePolicyID: storagePolicyID
                    volumePath: volumePath
                    fsType: fsType
                  fc:
                    lun: 9
                    targetWWNs:
                    - targetWWNs
                    - targetWWNs
                    readOnly: true
                    wwids:
                    - wwids
                    - wwids
                    fsType: fsType
                  hostPath:
                    path: path
                    type: "{}"
                - quobyte:
                    volume: volume
                    registry: registry
                    readOnly: true
                    user: user
                    group: group
                  azureFile:
                    secretName: secretName
                    readOnly: true
                    shareName: shareName
                  flexVolume:
                    driver: driver
                    options: "{}"
                    secretRef:
                      name: name
                    readOnly: true
                    fsType: fsType
                  secret:
                    secretName: secretName
                    defaultMode: 2
                    optional: true
                    items:
                    - mode: 9
                      path: path
                      key: key
                    - mode: 9
                      path: path
                      key: key
                  projected:
                    sources:
                    - downwardAPI:
                        items:
                        - mode: 8
                          path: path
                          resourceFieldRef:
                            divisor: divisor
                            resource: resource
                            containerName: containerName
                          fieldRef:
                            apiVersion: apiVersion
                            fieldPath: fieldPath
                        - mode: 8
                          path: path
                          resourceFieldRef:
                            divisor: divisor
                            resource: resource
                            containerName: containerName
                          fieldRef:
                            apiVersion: apiVersion
                            fieldPath: fieldPath
                      configMap:
                        name: name
                        optional: true
                        items:
                        - mode: 9
                          path: path
                          key: key
                        - mode: 9
                          path: path
                          key: key
                      secret:
                        name: name
                        optional: true
                        items:
                        - mode: 9
                          path: path
                          key: key
                        - mode: 9
                          path: path
                          key: key
                      serviceAccountToken:
                        path: path
                        audience: audience
                        expirationSeconds: 1
                    - downwardAPI:
                        items:
                        - mode: 8
                          path: path
                          resourceFieldRef:
                            divisor: divisor
                            resource: resource
                            containerName: containerName
                          fieldRef:
                            apiVersion: apiVersion
                            fieldPath: fieldPath
                        - mode: 8
                          path: path
                          resourceFieldRef:
                            divisor: divisor
                            resource: resource
                            containerName: containerName
                          fieldRef:
                            apiVersion: apiVersion
                            fieldPath: fieldPath
                      configMap:
                        name: name
                        optional: true
                        items:
                        - mode: 9
                          path: path
                          key: key
                        - mode: 9
                          path: path
                          key: key
                      secret:
                        name: name
                        optional: true
                        items:
                        - mode: 9
                          path: path
                          key: key
                        - mode: 9
                          path: path
                          key: key
                      serviceAccountToken:
                        path: path
                        audience: audience
                        expirationSeconds: 1
                    defaultMode: 6
                  cephfs:
                    path: path
                    secretRef:
                      name: name
                    secretFile: secretFile
                    readOnly: true
                    user: user
                    monitors:
                    - monitors
                    - monitors
                  scaleIO:
                    system: system
                    protectionDomain: protectionDomain
                    sslEnabled: true
                    storageMode: storageMode
                    volumeName: volumeName
                    secretRef:
                      name: name
                    readOnly: true
                    fsType: fsType
                    storagePool: storagePool
                    gateway: gateway
                  emptyDir:
                    sizeLimit: sizeLimit
                    medium: medium
                  glusterfs:
                    path: path
                    endpoints: endpoints
                    readOnly: true
                  gcePersistentDisk:
                    partition: 6
                    readOnly: true
                    pdName: pdName
                    fsType: fsType
                  photonPersistentDisk:
                    pdID: pdID
                    fsType: fsType
                  azureDisk:
                    diskName: diskName
                    kind: "{}"
                    readOnly: true
                    cachingMode: "{}"
                    diskURI: diskURI
                    fsType: fsType
                  cinder:
                    secretRef:
                      name: name
                    volumeID: volumeID
                    readOnly: true
                    fsType: fsType
                  downwardAPI:
                    defaultMode: 6
                    items:
                    - mode: 8
                      path: path
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                    - mode: 8
                      path: path
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  awsElasticBlockStore:
                    partition: 5
                    volumeID: volumeID
                    readOnly: true
                    fsType: fsType
                  flocker:
                    datasetName: datasetName
                    datasetUUID: datasetUUID
                  iscsi:
                    chapAuthSession: true
                    iscsiInterface: iscsiInterface
                    lun: 3
                    chapAuthDiscovery: true
                    iqn: iqn
                    portals:
                    - portals
                    - portals
                    secretRef:
                      name: name
                    initiatorName: initiatorName
                    readOnly: true
                    fsType: fsType
                    targetPortal: targetPortal
                  rbd:
                    image: image
                    pool: pool
                    secretRef:
                      name: name
                    readOnly: true
                    fsType: fsType
                    keyring: keyring
                    user: user
                    monitors:
                    - monitors
                    - monitors
                  configMap:
                    defaultMode: 9
                    name: name
                    optional: true
                    items:
                    - mode: 9
                      path: path
                      key: key
                    - mode: 9
                      path: path
                      key: key
                  storageos:
                    volumeNamespace: volumeNamespace
                    volumeName: volumeName
                    secretRef:
                      name: name
                    readOnly: true
                    fsType: fsType
                  name: name
                  nfs:
                    path: path
                    server: server
                    readOnly: true
                  persistentVolumeClaim:
                    claimName: claimName
                    readOnly: true
                  gitRepo:
                    repository: repository
                    directory: directory
                    revision: revision
                  portworxVolume:
                    volumeID: volumeID
                    readOnly: true
                    fsType: fsType
                  vsphereVolume:
                    storagePolicyName: storagePolicyName
                    storagePolicyID: storagePolicyID
                    volumePath: volumePath
                    fsType: fsType
                  fc:
                    lun: 9
                    targetWWNs:
                    - targetWWNs
                    - targetWWNs
                    readOnly: true
                    wwids:
                    - wwids
                    - wwids
                    fsType: fsType
                  hostPath:
                    path: path
                    type: "{}"
                serviceAccount: serviceAccount
                priority: 1
                restartPolicy: restartPolicy
                shareProcessNamespace: true
                subdomain: subdomain
                containers:
                - volumeDevices:
                  - devicePath: devicePath
                    name: name
                  - devicePath: devicePath
                    name: name
                  image: image
                  imagePullPolicy: imagePullPolicy
                  livenessProbe:
                    failureThreshold: 5
                    periodSeconds: 2
                    tcpSocket:
                      port: port
                      host: host
                    timeoutSeconds: 9
                    successThreshold: 7
                    initialDelaySeconds: 5
                    exec:
                      command:
                      - command
                      - command
                    httpGet:
                      path: path
                      scheme: scheme
                      port: port
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  stdin: true
                  terminationMessagePolicy: terminationMessagePolicy
                  terminationMessagePath: terminationMessagePath
                  workingDir: workingDir
                  resources:
                    requests: "{}"
                    limits: "{}"
                  securityContext:
                    privileged: true
                    runAsUser: 7
                    capabilities:
                      add:
                      - "{}"
                      - "{}"
                      drop:
                      - "{}"
                      - "{}"
                    seLinuxOptions:
                      role: role
                      level: level
                      type: type
                      user: user
                    allowPrivilegeEscalation: true
                    runAsGroup: 4
                    runAsNonRoot: true
                    readOnlyRootFilesystem: true
                  env:
                  - name: name
                    value: value
                    valueFrom:
                      secretKeyRef:
                        name: name
                        optional: true
                        key: key
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      configMapKeyRef:
                        name: name
                        optional: true
                        key: key
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  - name: name
                    value: value
                    valueFrom:
                      secretKeyRef:
                        name: name
                        optional: true
                        key: key
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      configMapKeyRef:
                        name: name
                        optional: true
                        key: key
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  ports:
                  - protocol: protocol
                    hostIP: hostIP
                    name: name
                    containerPort: 3
                    hostPort: 2
                  - protocol: protocol
                    hostIP: hostIP
                    name: name
                    containerPort: 3
                    hostPort: 2
                  command:
                  - command
                  - command
                  volumeMounts:
                  - mountPath: mountPath
                    mountPropagation: "{}"
                    name: name
                    readOnly: true
                    subPath: subPath
                  - mountPath: mountPath
                    mountPropagation: "{}"
                    name: name
                    readOnly: true
                    subPath: subPath
                  args:
                  - args
                  - args
                  lifecycle:
                    postStart:
                      tcpSocket:
                        port: port
                        host: host
                      exec:
                        command:
                        - command
                        - command
                      httpGet:
                        path: path
                        scheme: scheme
                        port: port
                        host: host
                        httpHeaders:
                        - name: name
                          value: value
                        - name: name
                          value: value
                    preStop:
                      tcpSocket:
                        port: port
                        host: host
                      exec:
                        command:
                        - command
                        - command
                      httpGet:
                        path: path
                        scheme: scheme
                        port: port
                        host: host
                        httpHeaders:
                        - name: name
                          value: value
                        - name: name
                          value: value
                  name: name
                  tty: true
                  readinessProbe:
                    failureThreshold: 5
                    periodSeconds: 2
                    tcpSocket:
                      port: port
                      host: host
                    timeoutSeconds: 9
                    successThreshold: 7
                    initialDelaySeconds: 5
                    exec:
                      command:
                      - command
                      - command
                    httpGet:
                      path: path
                      scheme: scheme
                      port: port
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  stdinOnce: true
                  envFrom:
                  - configMapRef:
                      name: name
                      optional: true
                    prefix: prefix
                    secretRef:
                      name: name
                      optional: true
                  - configMapRef:
                      name: name
                      optional: true
                    prefix: prefix
                    secretRef:
                      name: name
                      optional: true
                - volumeDevices:
                  - devicePath: devicePath
                    name: name
                  - devicePath: devicePath
                    name: name
                  image: image
                  imagePullPolicy: imagePullPolicy
                  livenessProbe:
                    failureThreshold: 5
                    periodSeconds: 2
                    tcpSocket:
                      port: port
                      host: host
                    timeoutSeconds: 9
                    successThreshold: 7
                    initialDelaySeconds: 5
                    exec:
                      command:
                      - command
                      - command
                    httpGet:
                      path: path
                      scheme: scheme
                      port: port
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  stdin: true
                  terminationMessagePolicy: terminationMessagePolicy
                  terminationMessagePath: terminationMessagePath
                  workingDir: workingDir
                  resources:
                    requests: "{}"
                    limits: "{}"
                  securityContext:
                    privileged: true
                    runAsUser: 7
                    capabilities:
                      add:
                      - "{}"
                      - "{}"
                      drop:
                      - "{}"
                      - "{}"
                    seLinuxOptions:
                      role: role
                      level: level
                      type: type
                      user: user
                    allowPrivilegeEscalation: true
                    runAsGroup: 4
                    runAsNonRoot: true
                    readOnlyRootFilesystem: true
                  env:
                  - name: name
                    value: value
                    valueFrom:
                      secretKeyRef:
                        name: name
                        optional: true
                        key: key
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      configMapKeyRef:
                        name: name
                        optional: true
                        key: key
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  - name: name
                    value: value
                    valueFrom:
                      secretKeyRef:
                        name: name
                        optional: true
                        key: key
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      configMapKeyRef:
                        name: name
                        optional: true
                        key: key
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  ports:
                  - protocol: protocol
                    hostIP: hostIP
                    name: name
                    containerPort: 3
                    hostPort: 2
                  - protocol: protocol
                    hostIP: hostIP
                    name: name
                    containerPort: 3
                    hostPort: 2
                  command:
                  - command
                  - command
                  volumeMounts:
                  - mountPath: mountPath
                    mountPropagation: "{}"
                    name: name
                    readOnly: true
                    subPath: subPath
                  - mountPath: mountPath
                    mountPropagation: "{}"
                    name: name
                    readOnly: true
                    subPath: subPath
                  args:
                  - args
                  - args
                  lifecycle:
                    postStart:
                      tcpSocket:
                        port: port
                        host: host
                      exec:
                        command:
                        - command
                        - command
                      httpGet:
                        path: path
                        scheme: scheme
                        port: port
                        host: host
                        httpHeaders:
                        - name: name
                          value: value
                        - name: name
                          value: value
                    preStop:
                      tcpSocket:
                        port: port
                        host: host
                      exec:
                        command:
                        - command
                        - command
                      httpGet:
                        path: path
                        scheme: scheme
                        port: port
                        host: host
                        httpHeaders:
                        - name: name
                          value: value
                        - name: name
                          value: value
                  name: name
                  tty: true
                  readinessProbe:
                    failureThreshold: 5
                    periodSeconds: 2
                    tcpSocket:
                      port: port
                      host: host
                    timeoutSeconds: 9
                    successThreshold: 7
                    initialDelaySeconds: 5
                    exec:
                      command:
                      - command
                      - command
                    httpGet:
                      path: path
                      scheme: scheme
                      port: port
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  stdinOnce: true
                  envFrom:
                  - configMapRef:
                      name: name
                      optional: true
                    prefix: prefix
                    secretRef:
                      name: name
                      optional: true
                  - configMapRef:
                      name: name
                      optional: true
                    prefix: prefix
                    secretRef:
                      name: name
                      optional: true
                initContainers:
                - volumeDevices:
                  - devicePath: devicePath
                    name: name
                  - devicePath: devicePath
                    name: name
                  image: image
                  imagePullPolicy: imagePullPolicy
                  livenessProbe:
                    failureThreshold: 5
                    periodSeconds: 2
                    tcpSocket:
                      port: port
                      host: host
                    timeoutSeconds: 9
                    successThreshold: 7
                    initialDelaySeconds: 5
                    exec:
                      command:
                      - command
                      - command
                    httpGet:
                      path: path
                      scheme: scheme
                      port: port
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  stdin: true
                  terminationMessagePolicy: terminationMessagePolicy
                  terminationMessagePath: terminationMessagePath
                  workingDir: workingDir
                  resources:
                    requests: "{}"
                    limits: "{}"
                  securityContext:
                    privileged: true
                    runAsUser: 7
                    capabilities:
                      add:
                      - "{}"
                      - "{}"
                      drop:
                      - "{}"
                      - "{}"
                    seLinuxOptions:
                      role: role
                      level: level
                      type: type
                      user: user
                    allowPrivilegeEscalation: true
                    runAsGroup: 4
                    runAsNonRoot: true
                    readOnlyRootFilesystem: true
                  env:
                  - name: name
                    value: value
                    valueFrom:
                      secretKeyRef:
                        name: name
                        optional: true
                        key: key
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      configMapKeyRef:
                        name: name
                        optional: true
                        key: key
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  - name: name
                    value: value
                    valueFrom:
                      secretKeyRef:
                        name: name
                        optional: true
                        key: key
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      configMapKeyRef:
                        name: name
                        optional: true
                        key: key
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  ports:
                  - protocol: protocol
                    hostIP: hostIP
                    name: name
                    containerPort: 3
                    hostPort: 2
                  - protocol: protocol
                    hostIP: hostIP
                    name: name
                    containerPort: 3
                    hostPort: 2
                  command:
                  - command
                  - command
                  volumeMounts:
                  - mountPath: mountPath
                    mountPropagation: "{}"
                    name: name
                    readOnly: true
                    subPath: subPath
                  - mountPath: mountPath
                    mountPropagation: "{}"
                    name: name
                    readOnly: true
                    subPath: subPath
                  args:
                  - args
                  - args
                  lifecycle:
                    postStart:
                      tcpSocket:
                        port: port
                        host: host
                      exec:
                        command:
                        - command
                        - command
                      httpGet:
                        path: path
                        scheme: scheme
                        port: port
                        host: host
                        httpHeaders:
                        - name: name
                          value: value
                        - name: name
                          value: value
                    preStop:
                      tcpSocket:
                        port: port
                        host: host
                      exec:
                        command:
                        - command
                        - command
                      httpGet:
                        path: path
                        scheme: scheme
                        port: port
                        host: host
                        httpHeaders:
                        - name: name
                          value: value
                        - name: name
                          value: value
                  name: name
                  tty: true
                  readinessProbe:
                    failureThreshold: 5
                    periodSeconds: 2
                    tcpSocket:
                      port: port
                      host: host
                    timeoutSeconds: 9
                    successThreshold: 7
                    initialDelaySeconds: 5
                    exec:
                      command:
                      - command
                      - command
                    httpGet:
                      path: path
                      scheme: scheme
                      port: port
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  stdinOnce: true
                  envFrom:
                  - configMapRef:
                      name: name
                      optional: true
                    prefix: prefix
                    secretRef:
                      name: name
                      optional: true
                  - configMapRef:
                      name: name
                      optional: true
                    prefix: prefix
                    secretRef:
                      name: name
                      optional: true
                - volumeDevices:
                  - devicePath: devicePath
                    name: name
                  - devicePath: devicePath
                    name: name
                  image: image
                  imagePullPolicy: imagePullPolicy
                  livenessProbe:
                    failureThreshold: 5
                    periodSeconds: 2
                    tcpSocket:
                      port: port
                      host: host
                    timeoutSeconds: 9
                    successThreshold: 7
                    initialDelaySeconds: 5
                    exec:
                      command:
                      - command
                      - command
                    httpGet:
                      path: path
                      scheme: scheme
                      port: port
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  stdin: true
                  terminationMessagePolicy: terminationMessagePolicy
                  terminationMessagePath: terminationMessagePath
                  workingDir: workingDir
                  resources:
                    requests: "{}"
                    limits: "{}"
                  securityContext:
                    privileged: true
                    runAsUser: 7
                    capabilities:
                      add:
                      - "{}"
                      - "{}"
                      drop:
                      - "{}"
                      - "{}"
                    seLinuxOptions:
                      role: role
                      level: level
                      type: type
                      user: user
                    allowPrivilegeEscalation: true
                    runAsGroup: 4
                    runAsNonRoot: true
                    readOnlyRootFilesystem: true
                  env:
                  - name: name
                    value: value
                    valueFrom:
                      secretKeyRef:
                        name: name
                        optional: true
                        key: key
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      configMapKeyRef:
                        name: name
                        optional: true
                        key: key
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  - name: name
                    value: value
                    valueFrom:
                      secretKeyRef:
                        name: name
                        optional: true
                        key: key
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      configMapKeyRef:
                        name: name
                        optional: true
                        key: key
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  ports:
                  - protocol: protocol
                    hostIP: hostIP
                    name: name
                    containerPort: 3
                    hostPort: 2
                  - protocol: protocol
                    hostIP: hostIP
                    name: name
                    containerPort: 3
                    hostPort: 2
                  command:
                  - command
                  - command
                  volumeMounts:
                  - mountPath: mountPath
                    mountPropagation: "{}"
                    name: name
                    readOnly: true
                    subPath: subPath
                  - mountPath: mountPath
                    mountPropagation: "{}"
                    name: name
                    readOnly: true
                    subPath: subPath
                  args:
                  - args
                  - args
                  lifecycle:
                    postStart:
                      tcpSocket:
                        port: port
                        host: host
                      exec:
                        command:
                        - command
                        - command
                      httpGet:
                        path: path
                        scheme: scheme
                        port: port
                        host: host
                        httpHeaders:
                        - name: name
                          value: value
                        - name: name
                          value: value
                    preStop:
                      tcpSocket:
                        port: port
                        host: host
                      exec:
                        command:
                        - command
                        - command
                      httpGet:
                        path: path
                        scheme: scheme
                        port: port
                        host: host
                        httpHeaders:
                        - name: name
                          value: value
                        - name: name
                          value: value
                  name: name
                  tty: true
                  readinessProbe:
                    failureThreshold: 5
                    periodSeconds: 2
                    tcpSocket:
                      port: port
                      host: host
                    timeoutSeconds: 9
                    successThreshold: 7
                    initialDelaySeconds: 5
                    exec:
                      command:
                      - command
                      - command
                    httpGet:
                      path: path
                      scheme: scheme
                      port: port
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  stdinOnce: true
                  envFrom:
                  - configMapRef:
                      name: name
                      optional: true
                    prefix: prefix
                    secretRef:
                      name: name
                      optional: true
                  - configMapRef:
                      name: name
                      optional: true
                    prefix: prefix
                    secretRef:
                      name: name
                      optional: true
                affinity:
                  nodeAffinity:
                    requiredDuringSchedulingIgnoredDuringExecution:
                      nodeSelectorTerms:
                      - matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchFields:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                      - matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchFields:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                    preferredDuringSchedulingIgnoredDuringExecution:
                    - preference:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchFields:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                      weight: 6
                    - preference:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchFields:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                      weight: 6
                  podAffinity:
                    requiredDuringSchedulingIgnoredDuringExecution:
                    - labelSelector:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchLabels: "{}"
                      topologyKey: topologyKey
                      namespaces:
                      - namespaces
                      - namespaces
                    - labelSelector:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchLabels: "{}"
                      topologyKey: topologyKey
                      namespaces:
                      - namespaces
                      - namespaces
                    preferredDuringSchedulingIgnoredDuringExecution:
                    - podAffinityTerm:
                        labelSelector:
                          matchExpressions:
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          matchLabels: "{}"
                        topologyKey: topologyKey
                        namespaces:
                        - namespaces
                        - namespaces
                      weight: 1
                    - podAffinityTerm:
                        labelSelector:
                          matchExpressions:
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          matchLabels: "{}"
                        topologyKey: topologyKey
                        namespaces:
                        - namespaces
                        - namespaces
                      weight: 1
                  podAntiAffinity:
                    requiredDuringSchedulingIgnoredDuringExecution:
                    - labelSelector:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchLabels: "{}"
                      topologyKey: topologyKey
                      namespaces:
                      - namespaces
                      - namespaces
                    - labelSelector:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchLabels: "{}"
                      topologyKey: topologyKey
                      namespaces:
                      - namespaces
                      - namespaces
                    preferredDuringSchedulingIgnoredDuringExecution:
                    - podAffinityTerm:
                        labelSelector:
                          matchExpressions:
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          matchLabels: "{}"
                        topologyKey: topologyKey
                        namespaces:
                        - namespaces
                        - namespaces
                      weight: 1
                    - podAffinityTerm:
                        labelSelector:
                          matchExpressions:
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          matchLabels: "{}"
                        topologyKey: topologyKey
                        namespaces:
                        - namespaces
                        - namespaces
                      weight: 1
                hostPID: true
            paused: true
            replicas: 1
            revisionHistoryLimit: 5
            selector:
              matchExpressions:
              - values:
                - values
                - values
                key: key
                operator: operator
              - values:
                - values
                - values
                key: key
                operator: operator
              matchLabels: "{}"
            minReadySeconds: 0
            strategy:
              type: type
              rollingUpdate:
                maxSurge: maxSurge
                maxUnavailable: maxUnavailable
            progressDeadlineSeconds: 6
          status:
            unavailableReplicas: 2
            replicas: 3
            readyReplicas: 9
            collisionCount: 2
            conditions:
            - reason: reason
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
              lastUpdateTime: lastUpdateTime
              status: status
            - reason: reason
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
              lastUpdateTime: lastUpdateTime
              status: status
            updatedReplicas: 4
            availableReplicas: 5
            observedGeneration: 7
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
          type: string
        items:
          description: Items is the list of Deployments.
          items:
            $ref: '#/components/schemas/v1.Deployment'
          type: array
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: '#/components/schemas/v1.ListMeta'
      required:
      - items
      type: object
    v1.DeploymentSpec:
      description: DeploymentSpec is the specification of the desired behavior of
        the Deployment.
      example:
        template:
          metadata:
            generation: 6
            finalizers:
            - finalizers
            - finalizers
            resourceVersion: resourceVersion
            annotations: "{}"
            generateName: generateName
            deletionTimestamp: deletionTimestamp
            labels: "{}"
            ownerReferences:
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            selfLink: selfLink
            deletionGracePeriodSeconds: 0
            uid: uid
            initializers:
              result:
                reason: reason
                metadata:
                  continue: continue
                  resourceVersion: resourceVersion
                  selfLink: selfLink
                apiVersion: apiVersion
                code: 1
                kind: kind
                details:
                  uid: uid
                  kind: kind
                  causes:
                  - reason: reason
                    field: field
                    message: message
                  - reason: reason
                    field: field
                    message: message
                  retryAfterSeconds: 5
                  name: name
                  group: group
                message: message
                status: status
              pending:
              - name: name
              - name: name
            clusterName: clusterName
            creationTimestamp: creationTimestamp
            name: name
            namespace: namespace
          spec:
            dnsPolicy: dnsPolicy
            nodeName: nodeName
            terminationGracePeriodSeconds: 1
            dnsConfig:
              searches:
              - searches
              - searches
              nameservers:
              - nameservers
              - nameservers
              options:
              - name: name
                value: value
              - name: name
                value: value
            hostNetwork: true
            readinessGates:
            - conditionType: conditionType
            - conditionType: conditionType
            serviceAccountName: serviceAccountName
            imagePullSecrets:
            - name: name
            - name: name
            priorityClassName: priorityClassName
            hostAliases:
            - ip: ip
              hostnames:
              - hostnames
              - hostnames
            - ip: ip
              hostnames:
              - hostnames
              - hostnames
            securityContext:
              runAsUser: 6
              seLinuxOptions:
                role: role
                level: level
                type: type
                user: user
              fsGroup: 1
              supplementalGroups:
              - 7
              - 7
              runAsGroup: 1
              runAsNonRoot: true
              sysctls:
              - name: name
                value: value
              - name: name
                value: value
            nodeSelector: "{}"
            hostname: hostname
            tolerations:
            - effect: effect
              tolerationSeconds: 4
              value: value
              key: key
              operator: operator
            - effect: effect
              tolerationSeconds: 4
              value: value
              key: key
              operator: operator
            automountServiceAccountToken: true
            schedulerName: schedulerName
            activeDeadlineSeconds: 0
            hostIPC: true
            volumes:
            - quobyte:
                volume: volume
                registry: registry
                readOnly: true
                user: user
                group: group
              azureFile:
                secretName: secretName
                readOnly: true
                shareName: shareName
              flexVolume:
                driver: driver
                options: "{}"
                secretRef:
                  name: name
                readOnly: true
                fsType: fsType
              secret:
                secretName: secretName
                defaultMode: 2
                optional: true
                items:
                - mode: 9
                  path: path
                  key: key
                - mode: 9
                  path: path
                  key: key
              projected:
                sources:
                - downwardAPI:
                    items:
                    - mode: 8
                      path: path
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                    - mode: 8
                      path: path
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  configMap:
                    name: name
                    optional: true
                    items:
                    - mode: 9
                      path: path
                      key: key
                    - mode: 9
                      path: path
                      key: key
                  secret:
                    name: name
                    optional: true
                    items:
                    - mode: 9
                      path: path
                      key: key
                    - mode: 9
                      path: path
                      key: key
                  serviceAccountToken:
                    path: path
                    audience: audience
                    expirationSeconds: 1
                - downwardAPI:
                    items:
                    - mode: 8
                      path: path
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                    - mode: 8
                      path: path
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  configMap:
                    name: name
                    optional: true
                    items:
                    - mode: 9
                      path: path
                      key: key
                    - mode: 9
                      path: path
                      key: key
                  secret:
                    name: name
                    optional: true
                    items:
                    - mode: 9
                      path: path
                      key: key
                    - mode: 9
                      path: path
                      key: key
                  serviceAccountToken:
                    path: path
                    audience: audience
                    expirationSeconds: 1
                defaultMode: 6
              cephfs:
                path: path
                secretRef:
                  name: name
                secretFile: secretFile
                readOnly: true
                user: user
                monitors:
                - monitors
                - monitors
              scaleIO:
                system: system
                protectionDomain: protectionDomain
                sslEnabled: true
                storageMode: storageMode
                volumeName: volumeName
                secretRef:
                  name: name
                readOnly: true
                fsType: fsType
                storagePool: storagePool
                gateway: gateway
              emptyDir:
                sizeLimit: sizeLimit
                medium: medium
              glusterfs:
                path: path
                endpoints: endpoints
                readOnly: true
              gcePersistentDisk:
                partition: 6
                readOnly: true
                pdName: pdName
                fsType: fsType
              photonPersistentDisk:
                pdID: pdID
                fsType: fsType
              azureDisk:
                diskName: diskName
                kind: "{}"
                readOnly: true
                cachingMode: "{}"
                diskURI: diskURI
                fsType: fsType
              cinder:
                secretRef:
                  name: name
                volumeID: volumeID
                readOnly: true
                fsType: fsType
              downwardAPI:
                defaultMode: 6
                items:
                - mode: 8
                  path: path
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
                - mode: 8
                  path: path
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              awsElasticBlockStore:
                partition: 5
                volumeID: volumeID
                readOnly: true
                fsType: fsType
              flocker:
                datasetName: datasetName
                datasetUUID: datasetUUID
              iscsi:
                chapAuthSession: true
                iscsiInterface: iscsiInterface
                lun: 3
                chapAuthDiscovery: true
                iqn: iqn
                portals:
                - portals
                - portals
                secretRef:
                  name: name
                initiatorName: initiatorName
                readOnly: true
                fsType: fsType
                targetPortal: targetPortal
              rbd:
                image: image
                pool: pool
                secretRef:
                  name: name
                readOnly: true
                fsType: fsType
                keyring: keyring
                user: user
                monitors:
                - monitors
                - monitors
              configMap:
                defaultMode: 9
                name: name
                optional: true
                items:
                - mode: 9
                  path: path
                  key: key
                - mode: 9
                  path: path
                  key: key
              storageos:
                volumeNamespace: volumeNamespace
                volumeName: volumeName
                secretRef:
                  name: name
                readOnly: true
                fsType: fsType
              name: name
              nfs:
                path: path
                server: server
                readOnly: true
              persistentVolumeClaim:
                claimName: claimName
                readOnly: true
              gitRepo:
                repository: repository
                directory: directory
                revision: revision
              portworxVolume:
                volumeID: volumeID
                readOnly: true
                fsType: fsType
              vsphereVolume:
                storagePolicyName: storagePolicyName
                storagePolicyID: storagePolicyID
                volumePath: volumePath
                fsType: fsType
              fc:
                lun: 9
                targetWWNs:
                - targetWWNs
                - targetWWNs
                readOnly: true
                wwids:
                - wwids
                - wwids
                fsType: fsType
              hostPath:
                path: path
                type: "{}"
            - quobyte:
                volume: volume
                registry: registry
                readOnly: true
                user: user
                group: group
              azureFile:
                secretName: secretName
                readOnly: true
                shareName: shareName
              flexVolume:
                driver: driver
                options: "{}"
                secretRef:
                  name: name
                readOnly: true
                fsType: fsType
              secret:
                secretName: secretName
                defaultMode: 2
                optional: true
                items:
                - mode: 9
                  path: path
                  key: key
                - mode: 9
                  path: path
                  key: key
              projected:
                sources:
                - downwardAPI:
                    items:
                    - mode: 8
                      path: path
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                    - mode: 8
                      path: path
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  configMap:
                    name: name
                    optional: true
                    items:
                    - mode: 9
                      path: path
                      key: key
                    - mode: 9
                      path: path
                      key: key
                  secret:
                    name: name
                    optional: true
                    items:
                    - mode: 9
                      path: path
                      key: key
                    - mode: 9
                      path: path
                      key: key
                  serviceAccountToken:
                    path: path
                    audience: audience
                    expirationSeconds: 1
                - downwardAPI:
                    items:
                    - mode: 8
                      path: path
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                    - mode: 8
                      path: path
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  configMap:
                    name: name
                    optional: true
                    items:
                    - mode: 9
                      path: path
                      key: key
                    - mode: 9
                      path: path
                      key: key
                  secret:
                    name: name
                    optional: true
                    items:
                    - mode: 9
                      path: path
                      key: key
                    - mode: 9
                      path: path
                      key: key
                  serviceAccountToken:
                    path: path
                    audience: audience
                    expirationSeconds: 1
                defaultMode: 6
              cephfs:
                path: path
                secretRef:
                  name: name
                secretFile: secretFile
                readOnly: true
                user: user
                monitors:
                - monitors
                - monitors
              scaleIO:
                system: system
                protectionDomain: protectionDomain
                sslEnabled: true
                storageMode: storageMode
                volumeName: volumeName
                secretRef:
                  name: name
                readOnly: true
                fsType: fsType
                storagePool: storagePool
                gateway: gateway
              emptyDir:
                sizeLimit: sizeLimit
                medium: medium
              glusterfs:
                path: path
                endpoints: endpoints
                readOnly: true
              gcePersistentDisk:
                partition: 6
                readOnly: true
                pdName: pdName
                fsType: fsType
              photonPersistentDisk:
                pdID: pdID
                fsType: fsType
              azureDisk:
                diskName: diskName
                kind: "{}"
                readOnly: true
                cachingMode: "{}"
                diskURI: diskURI
                fsType: fsType
              cinder:
                secretRef:
                  name: name
                volumeID: volumeID
                readOnly: true
                fsType: fsType
              downwardAPI:
                defaultMode: 6
                items:
                - mode: 8
                  path: path
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
                - mode: 8
                  path: path
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              awsElasticBlockStore:
                partition: 5
                volumeID: volumeID
                readOnly: true
                fsType: fsType
              flocker:
                datasetName: datasetName
                datasetUUID: datasetUUID
              iscsi:
                chapAuthSession: true
                iscsiInterface: iscsiInterface
                lun: 3
                chapAuthDiscovery: true
                iqn: iqn
                portals:
                - portals
                - portals
                secretRef:
                  name: name
                initiatorName: initiatorName
                readOnly: true
                fsType: fsType
                targetPortal: targetPortal
              rbd:
                image: image
                pool: pool
                secretRef:
                  name: name
                readOnly: true
                fsType: fsType
                keyring: keyring
                user: user
                monitors:
                - monitors
                - monitors
              configMap:
                defaultMode: 9
                name: name
                optional: true
                items:
                - mode: 9
                  path: path
                  key: key
                - mode: 9
                  path: path
                  key: key
              storageos:
                volumeNamespace: volumeNamespace
                volumeName: volumeName
                secretRef:
                  name: name
                readOnly: true
                fsType: fsType
              name: name
              nfs:
                path: path
                server: server
                readOnly: true
              persistentVolumeClaim:
                claimName: claimName
                readOnly: true
              gitRepo:
                repository: repository
                directory: directory
                revision: revision
              portworxVolume:
                volumeID: volumeID
                readOnly: true
                fsType: fsType
              vsphereVolume:
                storagePolicyName: storagePolicyName
                storagePolicyID: storagePolicyID
                volumePath: volumePath
                fsType: fsType
              fc:
                lun: 9
                targetWWNs:
                - targetWWNs
                - targetWWNs
                readOnly: true
                wwids:
                - wwids
                - wwids
                fsType: fsType
              hostPath:
                path: path
                type: "{}"
            serviceAccount: serviceAccount
            priority: 1
            restartPolicy: restartPolicy
            shareProcessNamespace: true
            subdomain: subdomain
            containers:
            - volumeDevices:
              - devicePath: devicePath
                name: name
              - devicePath: devicePath
                name: name
              image: image
              imagePullPolicy: imagePullPolicy
              livenessProbe:
                failureThreshold: 5
                periodSeconds: 2
                tcpSocket:
                  port: port
                  host: host
                timeoutSeconds: 9
                successThreshold: 7
                initialDelaySeconds: 5
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: port
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              stdin: true
              terminationMessagePolicy: terminationMessagePolicy
              terminationMessagePath: terminationMessagePath
              workingDir: workingDir
              resources:
                requests: "{}"
                limits: "{}"
              securityContext:
                privileged: true
                runAsUser: 7
                capabilities:
                  add:
                  - "{}"
                  - "{}"
                  drop:
                  - "{}"
                  - "{}"
                seLinuxOptions:
                  role: role
                  level: level
                  type: type
                  user: user
                allowPrivilegeEscalation: true
                runAsGroup: 4
                runAsNonRoot: true
                readOnlyRootFilesystem: true
              env:
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    name: name
                    optional: true
                    key: key
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  configMapKeyRef:
                    name: name
                    optional: true
                    key: key
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    name: name
                    optional: true
                    key: key
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  configMapKeyRef:
                    name: name
                    optional: true
                    key: key
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              ports:
              - protocol: protocol
                hostIP: hostIP
                name: name
                containerPort: 3
                hostPort: 2
              - protocol: protocol
                hostIP: hostIP
                name: name
                containerPort: 3
                hostPort: 2
              command:
              - command
              - command
              volumeMounts:
              - mountPath: mountPath
                mountPropagation: "{}"
                name: name
                readOnly: true
                subPath: subPath
              - mountPath: mountPath
                mountPropagation: "{}"
                name: name
                readOnly: true
                subPath: subPath
              args:
              - args
              - args
              lifecycle:
                postStart:
                  tcpSocket:
                    port: port
                    host: host
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: port
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
                preStop:
                  tcpSocket:
                    port: port
                    host: host
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: port
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
              name: name
              tty: true
              readinessProbe:
                failureThreshold: 5
                periodSeconds: 2
                tcpSocket:
                  port: port
                  host: host
                timeoutSeconds: 9
                successThreshold: 7
                initialDelaySeconds: 5
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: port
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              stdinOnce: true
              envFrom:
              - configMapRef:
                  name: name
                  optional: true
                prefix: prefix
                secretRef:
                  name: name
                  optional: true
              - configMapRef:
                  name: name
                  optional: true
                prefix: prefix
                secretRef:
                  name: name
                  optional: true
            - volumeDevices:
              - devicePath: devicePath
                name: name
              - devicePath: devicePath
                name: name
              image: image
              imagePullPolicy: imagePullPolicy
              livenessProbe:
                failureThreshold: 5
                periodSeconds: 2
                tcpSocket:
                  port: port
                  host: host
                timeoutSeconds: 9
                successThreshold: 7
                initialDelaySeconds: 5
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: port
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              stdin: true
              terminationMessagePolicy: terminationMessagePolicy
              terminationMessagePath: terminationMessagePath
              workingDir: workingDir
              resources:
                requests: "{}"
                limits: "{}"
              securityContext:
                privileged: true
                runAsUser: 7
                capabilities:
                  add:
                  - "{}"
                  - "{}"
                  drop:
                  - "{}"
                  - "{}"
                seLinuxOptions:
                  role: role
                  level: level
                  type: type
                  user: user
                allowPrivilegeEscalation: true
                runAsGroup: 4
                runAsNonRoot: true
                readOnlyRootFilesystem: true
              env:
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    name: name
                    optional: true
                    key: key
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  configMapKeyRef:
                    name: name
                    optional: true
                    key: key
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    name: name
                    optional: true
                    key: key
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  configMapKeyRef:
                    name: name
                    optional: true
                    key: key
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              ports:
              - protocol: protocol
                hostIP: hostIP
                name: name
                containerPort: 3
                hostPort: 2
              - protocol: protocol
                hostIP: hostIP
                name: name
                containerPort: 3
                hostPort: 2
              command:
              - command
              - command
              volumeMounts:
              - mountPath: mountPath
                mountPropagation: "{}"
                name: name
                readOnly: true
                subPath: subPath
              - mountPath: mountPath
                mountPropagation: "{}"
                name: name
                readOnly: true
                subPath: subPath
              args:
              - args
              - args
              lifecycle:
                postStart:
                  tcpSocket:
                    port: port
                    host: host
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: port
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
                preStop:
                  tcpSocket:
                    port: port
                    host: host
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: port
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
              name: name
              tty: true
              readinessProbe:
                failureThreshold: 5
                periodSeconds: 2
                tcpSocket:
                  port: port
                  host: host
                timeoutSeconds: 9
                successThreshold: 7
                initialDelaySeconds: 5
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: port
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              stdinOnce: true
              envFrom:
              - configMapRef:
                  name: name
                  optional: true
                prefix: prefix
                secretRef:
                  name: name
                  optional: true
              - configMapRef:
                  name: name
                  optional: true
                prefix: prefix
                secretRef:
                  name: name
                  optional: true
            initContainers:
            - volumeDevices:
              - devicePath: devicePath
                name: name
              - devicePath: devicePath
                name: name
              image: image
              imagePullPolicy: imagePullPolicy
              livenessProbe:
                failureThreshold: 5
                periodSeconds: 2
                tcpSocket:
                  port: port
                  host: host
                timeoutSeconds: 9
                successThreshold: 7
                initialDelaySeconds: 5
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: port
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              stdin: true
              terminationMessagePolicy: terminationMessagePolicy
              terminationMessagePath: terminationMessagePath
              workingDir: workingDir
              resources:
                requests: "{}"
                limits: "{}"
              securityContext:
                privileged: true
                runAsUser: 7
                capabilities:
                  add:
                  - "{}"
                  - "{}"
                  drop:
                  - "{}"
                  - "{}"
                seLinuxOptions:
                  role: role
                  level: level
                  type: type
                  user: user
                allowPrivilegeEscalation: true
                runAsGroup: 4
                runAsNonRoot: true
                readOnlyRootFilesystem: true
              env:
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    name: name
                    optional: true
                    key: key
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  configMapKeyRef:
                    name: name
                    optional: true
                    key: key
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    name: name
                    optional: true
                    key: key
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  configMapKeyRef:
                    name: name
                    optional: true
                    key: key
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              ports:
              - protocol: protocol
                hostIP: hostIP
                name: name
                containerPort: 3
                hostPort: 2
              - protocol: protocol
                hostIP: hostIP
                name: name
                containerPort: 3
                hostPort: 2
              command:
              - command
              - command
              volumeMounts:
              - mountPath: mountPath
                mountPropagation: "{}"
                name: name
                readOnly: true
                subPath: subPath
              - mountPath: mountPath
                mountPropagation: "{}"
                name: name
                readOnly: true
                subPath: subPath
              args:
              - args
              - args
              lifecycle:
                postStart:
                  tcpSocket:
                    port: port
                    host: host
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: port
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
                preStop:
                  tcpSocket:
                    port: port
                    host: host
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: port
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
              name: name
              tty: true
              readinessProbe:
                failureThreshold: 5
                periodSeconds: 2
                tcpSocket:
                  port: port
                  host: host
                timeoutSeconds: 9
                successThreshold: 7
                initialDelaySeconds: 5
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: port
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              stdinOnce: true
              envFrom:
              - configMapRef:
                  name: name
                  optional: true
                prefix: prefix
                secretRef:
                  name: name
                  optional: true
              - configMapRef:
                  name: name
                  optional: true
                prefix: prefix
                secretRef:
                  name: name
                  optional: true
            - volumeDevices:
              - devicePath: devicePath
                name: name
              - devicePath: devicePath
                name: name
              image: image
              imagePullPolicy: imagePullPolicy
              livenessProbe:
                failureThreshold: 5
                periodSeconds: 2
                tcpSocket:
                  port: port
                  host: host
                timeoutSeconds: 9
                successThreshold: 7
                initialDelaySeconds: 5
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: port
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              stdin: true
              terminationMessagePolicy: terminationMessagePolicy
              terminationMessagePath: terminationMessagePath
              workingDir: workingDir
              resources:
                requests: "{}"
                limits: "{}"
              securityContext:
                privileged: true
                runAsUser: 7
                capabilities:
                  add:
                  - "{}"
                  - "{}"
                  drop:
                  - "{}"
                  - "{}"
                seLinuxOptions:
                  role: role
                  level: level
                  type: type
                  user: user
                allowPrivilegeEscalation: true
                runAsGroup: 4
                runAsNonRoot: true
                readOnlyRootFilesystem: true
              env:
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    name: name
                    optional: true
                    key: key
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  configMapKeyRef:
                    name: name
                    optional: true
                    key: key
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    name: name
                    optional: true
                    key: key
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  configMapKeyRef:
                    name: name
                    optional: true
                    key: key
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              ports:
              - protocol: protocol
                hostIP: hostIP
                name: name
                containerPort: 3
                hostPort: 2
              - protocol: protocol
                hostIP: hostIP
                name: name
                containerPort: 3
                hostPort: 2
              command:
              - command
              - command
              volumeMounts:
              - mountPath: mountPath
                mountPropagation: "{}"
                name: name
                readOnly: true
                subPath: subPath
              - mountPath: mountPath
                mountPropagation: "{}"
                name: name
                readOnly: true
                subPath: subPath
              args:
              - args
              - args
              lifecycle:
                postStart:
                  tcpSocket:
                    port: port
                    host: host
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: port
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
                preStop:
                  tcpSocket:
                    port: port
                    host: host
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: port
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
              name: name
              tty: true
              readinessProbe:
                failureThreshold: 5
                periodSeconds: 2
                tcpSocket:
                  port: port
                  host: host
                timeoutSeconds: 9
                successThreshold: 7
                initialDelaySeconds: 5
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: port
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              stdinOnce: true
              envFrom:
              - configMapRef:
                  name: name
                  optional: true
                prefix: prefix
                secretRef:
                  name: name
                  optional: true
              - configMapRef:
                  name: name
                  optional: true
                prefix: prefix
                secretRef:
                  name: name
                  optional: true
            affinity:
              nodeAffinity:
                requiredDuringSchedulingIgnoredDuringExecution:
                  nodeSelectorTerms:
                  - matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchFields:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                  - matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchFields:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                preferredDuringSchedulingIgnoredDuringExecution:
                - preference:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchFields:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                  weight: 6
                - preference:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchFields:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                  weight: 6
              podAffinity:
                requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchLabels: "{}"
                  topologyKey: topologyKey
                  namespaces:
                  - namespaces
                  - namespaces
                - labelSelector:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchLabels: "{}"
                  topologyKey: topologyKey
                  namespaces:
                  - namespaces
                  - namespaces
                preferredDuringSchedulingIgnoredDuringExecution:
                - podAffinityTerm:
                    labelSelector:
                      matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchLabels: "{}"
                    topologyKey: topologyKey
                    namespaces:
                    - namespaces
                    - namespaces
                  weight: 1
                - podAffinityTerm:
                    labelSelector:
                      matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchLabels: "{}"
                    topologyKey: topologyKey
                    namespaces:
                    - namespaces
                    - namespaces
                  weight: 1
              podAntiAffinity:
                requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchLabels: "{}"
                  topologyKey: topologyKey
                  namespaces:
                  - namespaces
                  - namespaces
                - labelSelector:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchLabels: "{}"
                  topologyKey: topologyKey
                  namespaces:
                  - namespaces
                  - namespaces
                preferredDuringSchedulingIgnoredDuringExecution:
                - podAffinityTerm:
                    labelSelector:
                      matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchLabels: "{}"
                    topologyKey: topologyKey
                    namespaces:
                    - namespaces
                    - namespaces
                  weight: 1
                - podAffinityTerm:
                    labelSelector:
                      matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchLabels: "{}"
                    topologyKey: topologyKey
                    namespaces:
                    - namespaces
                    - namespaces
                  weight: 1
            hostPID: true
        paused: true
        replicas: 1
        revisionHistoryLimit: 5
        selector:
          matchExpressions:
          - values:
            - values
            - values
            key: key
            operator: operator
          - values:
            - values
            - values
            key: key
            operator: operator
          matchLabels: "{}"
        minReadySeconds: 0
        strategy:
          type: type
          rollingUpdate:
            maxSurge: maxSurge
            maxUnavailable: maxUnavailable
        progressDeadlineSeconds: 6
      properties:
        minReadySeconds:
          description: "Minimum number of seconds for which a newly created pod should\
            \ be ready without any of its container crashing, for it to be considered\
            \ available. Defaults to 0 (pod will be considered available as soon as\
            \ it is ready)"
          format: int32
          type: integer
        paused:
          description: Indicates that the deployment is paused.
          type: boolean
        progressDeadlineSeconds:
          description: The maximum time in seconds for a deployment to make progress
            before it is considered to be failed. The deployment controller will continue
            to process failed deployments and a condition with a ProgressDeadlineExceeded
            reason will be surfaced in the deployment status. Note that progress will
            not be estimated during the time a deployment is paused. Defaults to 600s.
          format: int32
          type: integer
        replicas:
          description: Number of desired pods. This is a pointer to distinguish between
            explicit zero and not specified. Defaults to 1.
          format: int32
          type: integer
        revisionHistoryLimit:
          description: The number of old ReplicaSets to retain to allow rollback.
            This is a pointer to distinguish between explicit zero and not specified.
            Defaults to 10.
          format: int32
          type: integer
        selector:
          $ref: '#/components/schemas/v1.LabelSelector'
        strategy:
          $ref: '#/components/schemas/v1.DeploymentStrategy'
        template:
          $ref: '#/components/schemas/v1.PodTemplateSpec'
      required:
      - selector
      - template
      type: object
    v1.DeploymentStatus:
      description: DeploymentStatus is the most recently observed status of the Deployment.
      example:
        unavailableReplicas: 2
        replicas: 3
        readyReplicas: 9
        collisionCount: 2
        conditions:
        - reason: reason
          lastTransitionTime: lastTransitionTime
          message: message
          type: type
          lastUpdateTime: lastUpdateTime
          status: status
        - reason: reason
          lastTransitionTime: lastTransitionTime
          message: message
          type: type
          lastUpdateTime: lastUpdateTime
          status: status
        updatedReplicas: 4
        availableReplicas: 5
        observedGeneration: 7
      properties:
        availableReplicas:
          description: Total number of available pods (ready for at least minReadySeconds)
            targeted by this deployment.
          format: int32
          type: integer
        collisionCount:
          description: Count of hash collisions for the Deployment. The Deployment
            controller uses this field as a collision avoidance mechanism when it
            needs to create the name for the newest ReplicaSet.
          format: int32
          type: integer
        conditions:
          description: Represents the latest available observations of a deployment's
            current state.
          items:
            $ref: '#/components/schemas/v1.DeploymentCondition'
          type: array
        observedGeneration:
          description: The generation observed by the deployment controller.
          format: int64
          type: integer
        readyReplicas:
          description: Total number of ready pods targeted by this deployment.
          format: int32
          type: integer
        replicas:
          description: Total number of non-terminated pods targeted by this deployment
            (their labels match the selector).
          format: int32
          type: integer
        unavailableReplicas:
          description: Total number of unavailable pods targeted by this deployment.
            This is the total number of pods that are still required for the deployment
            to have 100% available capacity. They may either be pods that are running
            but not yet available or pods that still have not been created.
          format: int32
          type: integer
        updatedReplicas:
          description: Total number of non-terminated pods targeted by this deployment
            that have the desired template spec.
          format: int32
          type: integer
      type: object
    v1.DeploymentStrategy:
      description: DeploymentStrategy describes how to replace existing pods with
        new ones.
      example:
        type: type
        rollingUpdate:
          maxSurge: maxSurge
          maxUnavailable: maxUnavailable
      properties:
        rollingUpdate:
          $ref: '#/components/schemas/v1.RollingUpdateDeployment'
        type:
          description: Type of deployment. Can be "Recreate" or "RollingUpdate". Default
            is RollingUpdate.
          type: string
      type: object
    v1.ReplicaSet:
      description: ReplicaSet ensures that a specified number of pod replicas are
        running at any given time.
      example:
        metadata:
          generation: 6
          finalizers:
          - finalizers
          - finalizers
          resourceVersion: resourceVersion
          annotations: "{}"
          generateName: generateName
          deletionTimestamp: deletionTimestamp
          labels: "{}"
          ownerReferences:
          - uid: uid
            controller: true
            apiVersion: apiVersion
            kind: kind
            name: name
            blockOwnerDeletion: true
          - uid: uid
            controller: true
            apiVersion: apiVersion
            kind: kind
            name: name
            blockOwnerDeletion: true
          selfLink: selfLink
          deletionGracePeriodSeconds: 0
          uid: uid
          initializers:
            result:
              reason: reason
              metadata:
                continue: continue
                resourceVersion: resourceVersion
                selfLink: selfLink
              apiVersion: apiVersion
              code: 1
              kind: kind
              details:
                uid: uid
                kind: kind
                causes:
                - reason: reason
                  field: field
                  message: message
                - reason: reason
                  field: field
                  message: message
                retryAfterSeconds: 5
                name: name
                group: group
              message: message
              status: status
            pending:
            - name: name
            - name: name
          clusterName: clusterName
          creationTimestamp: creationTimestamp
          name: name
          namespace: namespace
        apiVersion: apiVersion
        kind: kind
        spec:
          template:
            metadata:
              generation: 6
              finalizers:
              - finalizers
              - finalizers
              resourceVersion: resourceVersion
              annotations: "{}"
              generateName: generateName
              deletionTimestamp: deletionTimestamp
              labels: "{}"
              ownerReferences:
              - uid: uid
                controller: true
                apiVersion: apiVersion
                kind: kind
                name: name
                blockOwnerDeletion: true
              - uid: uid
                controller: true
                apiVersion: apiVersion
                kind: kind
                name: name
                blockOwnerDeletion: true
              selfLink: selfLink
              deletionGracePeriodSeconds: 0
              uid: uid
              initializers:
                result:
                  reason: reason
                  metadata:
                    continue: continue
                    resourceVersion: resourceVersion
                    selfLink: selfLink
                  apiVersion: apiVersion
                  code: 1
                  kind: kind
                  details:
                    uid: uid
                    kind: kind
                    causes:
                    - reason: reason
                      field: field
                      message: message
                    - reason: reason
                      field: field
                      message: message
                    retryAfterSeconds: 5
                    name: name
                    group: group
                  message: message
                  status: status
                pending:
                - name: name
                - name: name
              clusterName: clusterName
              creationTimestamp: creationTimestamp
              name: name
              namespace: namespace
            spec:
              dnsPolicy: dnsPolicy
              nodeName: nodeName
              terminationGracePeriodSeconds: 1
              dnsConfig:
                searches:
                - searches
                - searches
                nameservers:
                - nameservers
                - nameservers
                options:
                - name: name
                  value: value
                - name: name
                  value: value
              hostNetwork: true
              readinessGates:
              - conditionType: conditionType
              - conditionType: conditionType
              serviceAccountName: serviceAccountName
              imagePullSecrets:
              - name: name
              - name: name
              priorityClassName: priorityClassName
              hostAliases:
              - ip: ip
                hostnames:
                - hostnames
                - hostnames
              - ip: ip
                hostnames:
                - hostnames
                - hostnames
              securityContext:
                runAsUser: 6
                seLinuxOptions:
                  role: role
                  level: level
                  type: type
                  user: user
                fsGroup: 1
                supplementalGroups:
                - 7
                - 7
                runAsGroup: 1
                runAsNonRoot: true
                sysctls:
                - name: name
                  value: value
                - name: name
                  value: value
              nodeSelector: "{}"
              hostname: hostname
              tolerations:
              - effect: effect
                tolerationSeconds: 4
                value: value
                key: key
                operator: operator
              - effect: effect
                tolerationSeconds: 4
                value: value
                key: key
                operator: operator
              automountServiceAccountToken: true
              schedulerName: schedulerName
              activeDeadlineSeconds: 0
              hostIPC: true
              volumes:
              - quobyte:
                  volume: volume
                  registry: registry
                  readOnly: true
                  user: user
                  group: group
                azureFile:
                  secretName: secretName
                  readOnly: true
                  shareName: shareName
                flexVolume:
                  driver: driver
                  options: "{}"
                  secretRef:
                    name: name
                  readOnly: true
                  fsType: fsType
                secret:
                  secretName: secretName
                  defaultMode: 2
                  optional: true
                  items:
                  - mode: 9
                    path: path
                    key: key
                  - mode: 9
                    path: path
                    key: key
                projected:
                  sources:
                  - downwardAPI:
                      items:
                      - mode: 8
                        path: path
                        resourceFieldRef:
                          divisor: divisor
                          resource: resource
                          containerName: containerName
                        fieldRef:
                          apiVersion: apiVersion
                          fieldPath: fieldPath
                      - mode: 8
                        path: path
                        resourceFieldRef:
                          divisor: divisor
                          resource: resource
                          containerName: containerName
                        fieldRef:
                          apiVersion: apiVersion
                          fieldPath: fieldPath
                    configMap:
                      name: name
                      optional: true
                      items:
                      - mode: 9
                        path: path
                        key: key
                      - mode: 9
                        path: path
                        key: key
                    secret:
                      name: name
                      optional: true
                      items:
                      - mode: 9
                        path: path
                        key: key
                      - mode: 9
                        path: path
                        key: key
                    serviceAccountToken:
                      path: path
                      audience: audience
                      expirationSeconds: 1
                  - downwardAPI:
                      items:
                      - mode: 8
                        path: path
                        resourceFieldRef:
                          divisor: divisor
                          resource: resource
                          containerName: containerName
                        fieldRef:
                          apiVersion: apiVersion
                          fieldPath: fieldPath
                      - mode: 8
                        path: path
                        resourceFieldRef:
                          divisor: divisor
                          resource: resource
                          containerName: containerName
                        fieldRef:
                          apiVersion: apiVersion
                          fieldPath: fieldPath
                    configMap:
                      name: name
                      optional: true
                      items:
                      - mode: 9
                        path: path
                        key: key
                      - mode: 9
                        path: path
                        key: key
                    secret:
                      name: name
                      optional: true
                      items:
                      - mode: 9
                        path: path
                        key: key
                      - mode: 9
                        path: path
                        key: key
                    serviceAccountToken:
                      path: path
                      audience: audience
                      expirationSeconds: 1
                  defaultMode: 6
                cephfs:
                  path: path
                  secretRef:
                    name: name
                  secretFile: secretFile
                  readOnly: true
                  user: user
                  monitors:
                  - monitors
                  - monitors
                scaleIO:
                  system: system
                  protectionDomain: protectionDomain
                  sslEnabled: true
                  storageMode: storageMode
                  volumeName: volumeName
                  secretRef:
                    name: name
                  readOnly: true
                  fsType: fsType
                  storagePool: storagePool
                  gateway: gateway
                emptyDir:
                  sizeLimit: sizeLimit
                  medium: medium
                glusterfs:
                  path: path
                  endpoints: endpoints
                  readOnly: true
                gcePersistentDisk:
                  partition: 6
                  readOnly: true
                  pdName: pdName
                  fsType: fsType
                photonPersistentDisk:
                  pdID: pdID
                  fsType: fsType
                azureDisk:
                  diskName: diskName
                  kind: "{}"
                  readOnly: true
                  cachingMode: "{}"
                  diskURI: diskURI
                  fsType: fsType
                cinder:
                  secretRef:
                    name: name
                  volumeID: volumeID
                  readOnly: true
                  fsType: fsType
                downwardAPI:
                  defaultMode: 6
                  items:
                  - mode: 8
                    path: path
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                  - mode: 8
                    path: path
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                awsElasticBlockStore:
                  partition: 5
                  volumeID: volumeID
                  readOnly: true
                  fsType: fsType
                flocker:
                  datasetName: datasetName
                  datasetUUID: datasetUUID
                iscsi:
                  chapAuthSession: true
                  iscsiInterface: iscsiInterface
                  lun: 3
                  chapAuthDiscovery: true
                  iqn: iqn
                  portals:
                  - portals
                  - portals
                  secretRef:
                    name: name
                  initiatorName: initiatorName
                  readOnly: true
                  fsType: fsType
                  targetPortal: targetPortal
                rbd:
                  image: image
                  pool: pool
                  secretRef:
                    name: name
                  readOnly: true
                  fsType: fsType
                  keyring: keyring
                  user: user
                  monitors:
                  - monitors
                  - monitors
                configMap:
                  defaultMode: 9
                  name: name
                  optional: true
                  items:
                  - mode: 9
                    path: path
                    key: key
                  - mode: 9
                    path: path
                    key: key
                storageos:
                  volumeNamespace: volumeNamespace
                  volumeName: volumeName
                  secretRef:
                    name: name
                  readOnly: true
                  fsType: fsType
                name: name
                nfs:
                  path: path
                  server: server
                  readOnly: true
                persistentVolumeClaim:
                  claimName: claimName
                  readOnly: true
                gitRepo:
                  repository: repository
                  directory: directory
                  revision: revision
                portworxVolume:
                  volumeID: volumeID
                  readOnly: true
                  fsType: fsType
                vsphereVolume:
                  storagePolicyName: storagePolicyName
                  storagePolicyID: storagePolicyID
                  volumePath: volumePath
                  fsType: fsType
                fc:
                  lun: 9
                  targetWWNs:
                  - targetWWNs
                  - targetWWNs
                  readOnly: true
                  wwids:
                  - wwids
                  - wwids
                  fsType: fsType
                hostPath:
                  path: path
                  type: "{}"
              - quobyte:
                  volume: volume
                  registry: registry
                  readOnly: true
                  user: user
                  group: group
                azureFile:
                  secretName: secretName
                  readOnly: true
                  shareName: shareName
                flexVolume:
                  driver: driver
                  options: "{}"
                  secretRef:
                    name: name
                  readOnly: true
                  fsType: fsType
                secret:
                  secretName: secretName
                  defaultMode: 2
                  optional: true
                  items:
                  - mode: 9
                    path: path
                    key: key
                  - mode: 9
                    path: path
                    key: key
                projected:
                  sources:
                  - downwardAPI:
                      items:
                      - mode: 8
                        path: path
                        resourceFieldRef:
                          divisor: divisor
                          resource: resource
                          containerName: containerName
                        fieldRef:
                          apiVersion: apiVersion
                          fieldPath: fieldPath
                      - mode: 8
                        path: path
                        resourceFieldRef:
                          divisor: divisor
                          resource: resource
                          containerName: containerName
                        fieldRef:
                          apiVersion: apiVersion
                          fieldPath: fieldPath
                    configMap:
                      name: name
                      optional: true
                      items:
                      - mode: 9
                        path: path
                        key: key
                      - mode: 9
                        path: path
                        key: key
                    secret:
                      name: name
                      optional: true
                      items:
                      - mode: 9
                        path: path
                        key: key
                      - mode: 9
                        path: path
                        key: key
                    serviceAccountToken:
                      path: path
                      audience: audience
                      expirationSeconds: 1
                  - downwardAPI:
                      items:
                      - mode: 8
                        path: path
                        resourceFieldRef:
                          divisor: divisor
                          resource: resource
                          containerName: containerName
                        fieldRef:
                          apiVersion: apiVersion
                          fieldPath: fieldPath
                      - mode: 8
                        path: path
                        resourceFieldRef:
                          divisor: divisor
                          resource: resource
                          containerName: containerName
                        fieldRef:
                          apiVersion: apiVersion
                          fieldPath: fieldPath
                    configMap:
                      name: name
                      optional: true
                      items:
                      - mode: 9
                        path: path
                        key: key
                      - mode: 9
                        path: path
                        key: key
                    secret:
                      name: name
                      optional: true
                      items:
                      - mode: 9
                        path: path
                        key: key
                      - mode: 9
                        path: path
                        key: key
                    serviceAccountToken:
                      path: path
                      audience: audience
                      expirationSeconds: 1
                  defaultMode: 6
                cephfs:
                  path: path
                  secretRef:
                    name: name
                  secretFile: secretFile
                  readOnly: true
                  user: user
                  monitors:
                  - monitors
                  - monitors
                scaleIO:
                  system: system
                  protectionDomain: protectionDomain
                  sslEnabled: true
                  storageMode: storageMode
                  volumeName: volumeName
                  secretRef:
                    name: name
                  readOnly: true
                  fsType: fsType
                  storagePool: storagePool
                  gateway: gateway
                emptyDir:
                  sizeLimit: sizeLimit
                  medium: medium
                glusterfs:
                  path: path
                  endpoints: endpoints
                  readOnly: true
                gcePersistentDisk:
                  partition: 6
                  readOnly: true
                  pdName: pdName
                  fsType: fsType
                photonPersistentDisk:
                  pdID: pdID
                  fsType: fsType
                azureDisk:
                  diskName: diskName
                  kind: "{}"
                  readOnly: true
                  cachingMode: "{}"
                  diskURI: diskURI
                  fsType: fsType
                cinder:
                  secretRef:
                    name: name
                  volumeID: volumeID
                  readOnly: true
                  fsType: fsType
                downwardAPI:
                  defaultMode: 6
                  items:
                  - mode: 8
                    path: path
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                  - mode: 8
                    path: path
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                awsElasticBlockStore:
                  partition: 5
                  volumeID: volumeID
                  readOnly: true
                  fsType: fsType
                flocker:
                  datasetName: datasetName
                  datasetUUID: datasetUUID
                iscsi:
                  chapAuthSession: true
                  iscsiInterface: iscsiInterface
                  lun: 3
                  chapAuthDiscovery: true
                  iqn: iqn
                  portals:
                  - portals
                  - portals
                  secretRef:
                    name: name
                  initiatorName: initiatorName
                  readOnly: true
                  fsType: fsType
                  targetPortal: targetPortal
                rbd:
                  image: image
                  pool: pool
                  secretRef:
                    name: name
                  readOnly: true
                  fsType: fsType
                  keyring: keyring
                  user: user
                  monitors:
                  - monitors
                  - monitors
                configMap:
                  defaultMode: 9
                  name: name
                  optional: true
                  items:
                  - mode: 9
                    path: path
                    key: key
                  - mode: 9
                    path: path
                    key: key
                storageos:
                  volumeNamespace: volumeNamespace
                  volumeName: volumeName
                  secretRef:
                    name: name
                  readOnly: true
                  fsType: fsType
                name: name
                nfs:
                  path: path
                  server: server
                  readOnly: true
                persistentVolumeClaim:
                  claimName: claimName
                  readOnly: true
                gitRepo:
                  repository: repository
                  directory: directory
                  revision: revision
                portworxVolume:
                  volumeID: volumeID
                  readOnly: true
                  fsType: fsType
                vsphereVolume:
                  storagePolicyName: storagePolicyName
                  storagePolicyID: storagePolicyID
                  volumePath: volumePath
                  fsType: fsType
                fc:
                  lun: 9
                  targetWWNs:
                  - targetWWNs
                  - targetWWNs
                  readOnly: true
                  wwids:
                  - wwids
                  - wwids
                  fsType: fsType
                hostPath:
                  path: path
                  type: "{}"
              serviceAccount: serviceAccount
              priority: 1
              restartPolicy: restartPolicy
              shareProcessNamespace: true
              subdomain: subdomain
              containers:
              - volumeDevices:
                - devicePath: devicePath
                  name: name
                - devicePath: devicePath
                  name: name
                image: image
                imagePullPolicy: imagePullPolicy
                livenessProbe:
                  failureThreshold: 5
                  periodSeconds: 2
                  tcpSocket:
                    port: port
                    host: host
                  timeoutSeconds: 9
                  successThreshold: 7
                  initialDelaySeconds: 5
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: port
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
                stdin: true
                terminationMessagePolicy: terminationMessagePolicy
                terminationMessagePath: terminationMessagePath
                workingDir: workingDir
                resources:
                  requests: "{}"
                  limits: "{}"
                securityContext:
                  privileged: true
                  runAsUser: 7
                  capabilities:
                    add:
                    - "{}"
                    - "{}"
                    drop:
                    - "{}"
                    - "{}"
                  seLinuxOptions:
                    role: role
                    level: level
                    type: type
                    user: user
                  allowPrivilegeEscalation: true
                  runAsGroup: 4
                  runAsNonRoot: true
                  readOnlyRootFilesystem: true
                env:
                - name: name
                  value: value
                  valueFrom:
                    secretKeyRef:
                      name: name
                      optional: true
                      key: key
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    configMapKeyRef:
                      name: name
                      optional: true
                      key: key
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                - name: name
                  value: value
                  valueFrom:
                    secretKeyRef:
                      name: name
                      optional: true
                      key: key
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    configMapKeyRef:
                      name: name
                      optional: true
                      key: key
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                ports:
                - protocol: protocol
                  hostIP: hostIP
                  name: name
                  containerPort: 3
                  hostPort: 2
                - protocol: protocol
                  hostIP: hostIP
                  name: name
                  containerPort: 3
                  hostPort: 2
                command:
                - command
                - command
                volumeMounts:
                - mountPath: mountPath
                  mountPropagation: "{}"
                  name: name
                  readOnly: true
                  subPath: subPath
                - mountPath: mountPath
                  mountPropagation: "{}"
                  name: name
                  readOnly: true
                  subPath: subPath
                args:
                - args
                - args
                lifecycle:
                  postStart:
                    tcpSocket:
                      port: port
                      host: host
                    exec:
                      command:
                      - command
                      - command
                    httpGet:
                      path: path
                      scheme: scheme
                      port: port
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  preStop:
                    tcpSocket:
                      port: port
                      host: host
                    exec:
                      command:
                      - command
                      - command
                    httpGet:
                      path: path
                      scheme: scheme
                      port: port
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                name: name
                tty: true
                readinessProbe:
                  failureThreshold: 5
                  periodSeconds: 2
                  tcpSocket:
                    port: port
                    host: host
                  timeoutSeconds: 9
                  successThreshold: 7
                  initialDelaySeconds: 5
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: port
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
                stdinOnce: true
                envFrom:
                - configMapRef:
                    name: name
                    optional: true
                  prefix: prefix
                  secretRef:
                    name: name
                    optional: true
                - configMapRef:
                    name: name
                    optional: true
                  prefix: prefix
                  secretRef:
                    name: name
                    optional: true
              - volumeDevices:
                - devicePath: devicePath
                  name: name
                - devicePath: devicePath
                  name: name
                image: image
                imagePullPolicy: imagePullPolicy
                livenessProbe:
                  failureThreshold: 5
                  periodSeconds: 2
                  tcpSocket:
                    port: port
                    host: host
                  timeoutSeconds: 9
                  successThreshold: 7
                  initialDelaySeconds: 5
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: port
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
                stdin: true
                terminationMessagePolicy: terminationMessagePolicy
                terminationMessagePath: terminationMessagePath
                workingDir: workingDir
                resources:
                  requests: "{}"
                  limits: "{}"
                securityContext:
                  privileged: true
                  runAsUser: 7
                  capabilities:
                    add:
                    - "{}"
                    - "{}"
                    drop:
                    - "{}"
                    - "{}"
                  seLinuxOptions:
                    role: role
                    level: level
                    type: type
                    user: user
                  allowPrivilegeEscalation: true
                  runAsGroup: 4
                  runAsNonRoot: true
                  readOnlyRootFilesystem: true
                env:
                - name: name
                  value: value
                  valueFrom:
                    secretKeyRef:
                      name: name
                      optional: true
                      key: key
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    configMapKeyRef:
                      name: name
                      optional: true
                      key: key
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                - name: name
                  value: value
                  valueFrom:
                    secretKeyRef:
                      name: name
                      optional: true
                      key: key
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    configMapKeyRef:
                      name: name
                      optional: true
                      key: key
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                ports:
                - protocol: protocol
                  hostIP: hostIP
                  name: name
                  containerPort: 3
                  hostPort: 2
                - protocol: protocol
                  hostIP: hostIP
                  name: name
                  containerPort: 3
                  hostPort: 2
                command:
                - command
                - command
                volumeMounts:
                - mountPath: mountPath
                  mountPropagation: "{}"
                  name: name
                  readOnly: true
                  subPath: subPath
                - mountPath: mountPath
                  mountPropagation: "{}"
                  name: name
                  readOnly: true
                  subPath: subPath
                args:
                - args
                - args
                lifecycle:
                  postStart:
                    tcpSocket:
                      port: port
                      host: host
                    exec:
                      command:
                      - command
                      - command
                    httpGet:
                      path: path
                      scheme: scheme
                      port: port
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  preStop:
                    tcpSocket:
                      port: port
                      host: host
                    exec:
                      command:
                      - command
                      - command
                    httpGet:
                      path: path
                      scheme: scheme
                      port: port
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                name: name
                tty: true
                readinessProbe:
                  failureThreshold: 5
                  periodSeconds: 2
                  tcpSocket:
                    port: port
                    host: host
                  timeoutSeconds: 9
                  successThreshold: 7
                  initialDelaySeconds: 5
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: port
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
                stdinOnce: true
                envFrom:
                - configMapRef:
                    name: name
                    optional: true
                  prefix: prefix
                  secretRef:
                    name: name
                    optional: true
                - configMapRef:
                    name: name
                    optional: true
                  prefix: prefix
                  secretRef:
                    name: name
                    optional: true
              initContainers:
              - volumeDevices:
                - devicePath: devicePath
                  name: name
                - devicePath: devicePath
                  name: name
                image: image
                imagePullPolicy: imagePullPolicy
                livenessProbe:
                  failureThreshold: 5
                  periodSeconds: 2
                  tcpSocket:
                    port: port
                    host: host
                  timeoutSeconds: 9
                  successThreshold: 7
                  initialDelaySeconds: 5
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: port
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
                stdin: true
                terminationMessagePolicy: terminationMessagePolicy
                terminationMessagePath: terminationMessagePath
                workingDir: workingDir
                resources:
                  requests: "{}"
                  limits: "{}"
                securityContext:
                  privileged: true
                  runAsUser: 7
                  capabilities:
                    add:
                    - "{}"
                    - "{}"
                    drop:
                    - "{}"
                    - "{}"
                  seLinuxOptions:
                    role: role
                    level: level
                    type: type
                    user: user
                  allowPrivilegeEscalation: true
                  runAsGroup: 4
                  runAsNonRoot: true
                  readOnlyRootFilesystem: true
                env:
                - name: name
                  value: value
                  valueFrom:
                    secretKeyRef:
                      name: name
                      optional: true
                      key: key
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    configMapKeyRef:
                      name: name
                      optional: true
                      key: key
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                - name: name
                  value: value
                  valueFrom:
                    secretKeyRef:
                      name: name
                      optional: true
                      key: key
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    configMapKeyRef:
                      name: name
                      optional: true
                      key: key
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                ports:
                - protocol: protocol
                  hostIP: hostIP
                  name: name
                  containerPort: 3
                  hostPort: 2
                - protocol: protocol
                  hostIP: hostIP
                  name: name
                  containerPort: 3
                  hostPort: 2
                command:
                - command
                - command
                volumeMounts:
                - mountPath: mountPath
                  mountPropagation: "{}"
                  name: name
                  readOnly: true
                  subPath: subPath
                - mountPath: mountPath
                  mountPropagation: "{}"
                  name: name
                  readOnly: true
                  subPath: subPath
                args:
                - args
                - args
                lifecycle:
                  postStart:
                    tcpSocket:
                      port: port
                      host: host
                    exec:
                      command:
                      - command
                      - command
                    httpGet:
                      path: path
                      scheme: scheme
                      port: port
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  preStop:
                    tcpSocket:
                      port: port
                      host: host
                    exec:
                      command:
                      - command
                      - command
                    httpGet:
                      path: path
                      scheme: scheme
                      port: port
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                name: name
                tty: true
                readinessProbe:
                  failureThreshold: 5
                  periodSeconds: 2
                  tcpSocket:
                    port: port
                    host: host
                  timeoutSeconds: 9
                  successThreshold: 7
                  initialDelaySeconds: 5
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: port
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
                stdinOnce: true
                envFrom:
                - configMapRef:
                    name: name
                    optional: true
                  prefix: prefix
                  secretRef:
                    name: name
                    optional: true
                - configMapRef:
                    name: name
                    optional: true
                  prefix: prefix
                  secretRef:
                    name: name
                    optional: true
              - volumeDevices:
                - devicePath: devicePath
                  name: name
                - devicePath: devicePath
                  name: name
                image: image
                imagePullPolicy: imagePullPolicy
                livenessProbe:
                  failureThreshold: 5
                  periodSeconds: 2
                  tcpSocket:
                    port: port
                    host: host
                  timeoutSeconds: 9
                  successThreshold: 7
                  initialDelaySeconds: 5
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: port
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
                stdin: true
                terminationMessagePolicy: terminationMessagePolicy
                terminationMessagePath: terminationMessagePath
                workingDir: workingDir
                resources:
                  requests: "{}"
                  limits: "{}"
                securityContext:
                  privileged: true
                  runAsUser: 7
                  capabilities:
                    add:
                    - "{}"
                    - "{}"
                    drop:
                    - "{}"
                    - "{}"
                  seLinuxOptions:
                    role: role
                    level: level
                    type: type
                    user: user
                  allowPrivilegeEscalation: true
                  runAsGroup: 4
                  runAsNonRoot: true
                  readOnlyRootFilesystem: true
                env:
                - name: name
                  value: value
                  valueFrom:
                    secretKeyRef:
                      name: name
                      optional: true
                      key: key
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    configMapKeyRef:
                      name: name
                      optional: true
                      key: key
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                - name: name
                  value: value
                  valueFrom:
                    secretKeyRef:
                      name: name
                      optional: true
                      key: key
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    configMapKeyRef:
                      name: name
                      optional: true
                      key: key
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                ports:
                - protocol: protocol
                  hostIP: hostIP
                  name: name
                  containerPort: 3
                  hostPort: 2
                - protocol: protocol
                  hostIP: hostIP
                  name: name
                  containerPort: 3
                  hostPort: 2
                command:
                - command
                - command
                volumeMounts:
                - mountPath: mountPath
                  mountPropagation: "{}"
                  name: name
                  readOnly: true
                  subPath: subPath
                - mountPath: mountPath
                  mountPropagation: "{}"
                  name: name
                  readOnly: true
                  subPath: subPath
                args:
                - args
                - args
                lifecycle:
                  postStart:
                    tcpSocket:
                      port: port
                      host: host
                    exec:
                      command:
                      - command
                      - command
                    httpGet:
                      path: path
                      scheme: scheme
                      port: port
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  preStop:
                    tcpSocket:
                      port: port
                      host: host
                    exec:
                      command:
                      - command
                      - command
                    httpGet:
                      path: path
                      scheme: scheme
                      port: port
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                name: name
                tty: true
                readinessProbe:
                  failureThreshold: 5
                  periodSeconds: 2
                  tcpSocket:
                    port: port
                    host: host
                  timeoutSeconds: 9
                  successThreshold: 7
                  initialDelaySeconds: 5
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: port
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
                stdinOnce: true
                envFrom:
                - configMapRef:
                    name: name
                    optional: true
                  prefix: prefix
                  secretRef:
                    name: name
                    optional: true
                - configMapRef:
                    name: name
                    optional: true
                  prefix: prefix
                  secretRef:
                    name: name
                    optional: true
              affinity:
                nodeAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                    nodeSelectorTerms:
                    - matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchFields:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                    - matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchFields:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                  preferredDuringSchedulingIgnoredDuringExecution:
                  - preference:
                      matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchFields:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                    weight: 6
                  - preference:
                      matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchFields:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                    weight: 6
                podAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                  - labelSelector:
                      matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchLabels: "{}"
                    topologyKey: topologyKey
                    namespaces:
                    - namespaces
                    - namespaces
                  - labelSelector:
                      matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchLabels: "{}"
                    topologyKey: topologyKey
                    namespaces:
                    - namespaces
                    - namespaces
                  preferredDuringSchedulingIgnoredDuringExecution:
                  - podAffinityTerm:
                      labelSelector:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchLabels: "{}"
                      topologyKey: topologyKey
                      namespaces:
                      - namespaces
                      - namespaces
                    weight: 1
                  - podAffinityTerm:
                      labelSelector:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchLabels: "{}"
                      topologyKey: topologyKey
                      namespaces:
                      - namespaces
                      - namespaces
                    weight: 1
                podAntiAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                  - labelSelector:
                      matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchLabels: "{}"
                    topologyKey: topologyKey
                    namespaces:
                    - namespaces
                    - namespaces
                  - labelSelector:
                      matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchLabels: "{}"
                    topologyKey: topologyKey
                    namespaces:
                    - namespaces
                    - namespaces
                  preferredDuringSchedulingIgnoredDuringExecution:
                  - podAffinityTerm:
                      labelSelector:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchLabels: "{}"
                      topologyKey: topologyKey
                      namespaces:
                      - namespaces
                      - namespaces
                    weight: 1
                  - podAffinityTerm:
                      labelSelector:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchLabels: "{}"
                      topologyKey: topologyKey
                      namespaces:
                      - namespaces
                      - namespaces
                    weight: 1
              hostPID: true
          replicas: 6
          selector:
            matchExpressions:
            - values:
              - values
              - values
              key: key
              operator: operator
            - values:
              - values
              - values
              key: key
              operator: operator
            matchLabels: "{}"
          minReadySeconds: 0
        status:
          fullyLabeledReplicas: 5
          replicas: 7
          readyReplicas: 2
          conditions:
          - reason: reason
            lastTransitionTime: lastTransitionTime
            message: message
            type: type
            status: status
          - reason: reason
            lastTransitionTime: lastTransitionTime
            message: message
            type: type
            status: status
          availableReplicas: 1
          observedGeneration: 5
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
          type: string
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: '#/components/schemas/v1.ObjectMeta'
        spec:
          $ref: '#/components/schemas/v1.ReplicaSetSpec'
        status:
          $ref: '#/components/schemas/v1.ReplicaSetStatus'
      type: object
    v1.ReplicaSetCondition:
      description: ReplicaSetCondition describes the state of a replica set at a certain
        point.
      example:
        reason: reason
        lastTransitionTime: lastTransitionTime
        message: message
        type: type
        status: status
      properties:
        lastTransitionTime:
          description: The last time the condition transitioned from one status to
            another.
          type: string
        message:
          description: A human readable message indicating details about the transition.
          type: string
        reason:
          description: The reason for the condition's last transition.
          type: string
        status:
          description: "Status of the condition, one of True, False, Unknown."
          type: string
        type:
          description: Type of replica set condition.
          type: string
      required:
      - status
      - type
      type: object
    v1.ReplicaSetList:
      description: ReplicaSetList is a collection of ReplicaSets.
      example:
        metadata:
          continue: continue
          resourceVersion: resourceVersion
          selfLink: selfLink
        apiVersion: apiVersion
        kind: kind
        items:
        - metadata:
            generation: 6
            finalizers:
            - finalizers
            - finalizers
            resourceVersion: resourceVersion
            annotations: "{}"
            generateName: generateName
            deletionTimestamp: deletionTimestamp
            labels: "{}"
            ownerReferences:
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            selfLink: selfLink
            deletionGracePeriodSeconds: 0
            uid: uid
            initializers:
              result:
                reason: reason
                metadata:
                  continue: continue
                  resourceVersion: resourceVersion
                  selfLink: selfLink
                apiVersion: apiVersion
                code: 1
                kind: kind
                details:
                  uid: uid
                  kind: kind
                  causes:
                  - reason: reason
                    field: field
                    message: message
                  - reason: reason
                    field: field
                    message: message
                  retryAfterSeconds: 5
                  name: name
                  group: group
                message: message
                status: status
              pending:
              - name: name
              - name: name
            clusterName: clusterName
            creationTimestamp: creationTimestamp
            name: name
            namespace: namespace
          apiVersion: apiVersion
          kind: kind
          spec:
            template:
              metadata:
                generation: 6
                finalizers:
                - finalizers
                - finalizers
                resourceVersion: resourceVersion
                annotations: "{}"
                generateName: generateName
                deletionTimestamp: deletionTimestamp
                labels: "{}"
                ownerReferences:
                - uid: uid
                  controller: true
                  apiVersion: apiVersion
                  kind: kind
                  name: name
                  blockOwnerDeletion: true
                - uid: uid
                  controller: true
                  apiVersion: apiVersion
                  kind: kind
                  name: name
                  blockOwnerDeletion: true
                selfLink: selfLink
                deletionGracePeriodSeconds: 0
                uid: uid
                initializers:
                  result:
                    reason: reason
                    metadata:
                      continue: continue
                      resourceVersion: resourceVersion
                      selfLink: selfLink
                    apiVersion: apiVersion
                    code: 1
                    kind: kind
                    details:
                      uid: uid
                      kind: kind
                      causes:
                      - reason: reason
                        field: field
                        message: message
                      - reason: reason
                        field: field
                        message: message
                      retryAfterSeconds: 5
                      name: name
                      group: group
                    message: message
                    status: status
                  pending:
                  - name: name
                  - name: name
                clusterName: clusterName
                creationTimestamp: creationTimestamp
                name: name
                namespace: namespace
              spec:
                dnsPolicy: dnsPolicy
                nodeName: nodeName
                terminationGracePeriodSeconds: 1
                dnsConfig:
                  searches:
                  - searches
                  - searches
                  nameservers:
                  - nameservers
                  - nameservers
                  options:
                  - name: name
                    value: value
                  - name: name
                    value: value
                hostNetwork: true
                readinessGates:
                - conditionType: conditionType
                - conditionType: conditionType
                serviceAccountName: serviceAccountName
                imagePullSecrets:
                - name: name
                - name: name
                priorityClassName: priorityClassName
                hostAliases:
                - ip: ip
                  hostnames:
                  - hostnames
                  - hostnames
                - ip: ip
                  hostnames:
                  - hostnames
                  - hostnames
                securityContext:
                  runAsUser: 6
                  seLinuxOptions:
                    role: role
                    level: level
                    type: type
                    user: user
                  fsGroup: 1
                  supplementalGroups:
                  - 7
                  - 7
                  runAsGroup: 1
                  runAsNonRoot: true
                  sysctls:
                  - name: name
                    value: value
                  - name: name
                    value: value
                nodeSelector: "{}"
                hostname: hostname
                tolerations:
                - effect: effect
                  tolerationSeconds: 4
                  value: value
                  key: key
                  operator: operator
                - effect: effect
                  tolerationSeconds: 4
                  value: value
                  key: key
                  operator: operator
                automountServiceAccountToken: true
                schedulerName: schedulerName
                activeDeadlineSeconds: 0
                hostIPC: true
                volumes:
                - quobyte:
                    volume: volume
                    registry: registry
                    readOnly: true
                    user: user
                    group: group
                  azureFile:
                    secretName: secretName
                    readOnly: true
                    shareName: shareName
                  flexVolume:
                    driver: driver
                    options: "{}"
                    secretRef:
                      name: name
                    readOnly: true
                    fsType: fsType
                  secret:
                    secretName: secretName
                    defaultMode: 2
                    optional: true
                    items:
                    - mode: 9
                      path: path
                      key: key
                    - mode: 9
                      path: path
                      key: key
                  projected:
                    sources:
                    - downwardAPI:
                        items:
                        - mode: 8
                          path: path
                          resourceFieldRef:
                            divisor: divisor
                            resource: resource
                            containerName: containerName
                          fieldRef:
                            apiVersion: apiVersion
                            fieldPath: fieldPath
                        - mode: 8
                          path: path
                          resourceFieldRef:
                            divisor: divisor
                            resource: resource
                            containerName: containerName
                          fieldRef:
                            apiVersion: apiVersion
                            fieldPath: fieldPath
                      configMap:
                        name: name
                        optional: true
                        items:
                        - mode: 9
                          path: path
                          key: key
                        - mode: 9
                          path: path
                          key: key
                      secret:
                        name: name
                        optional: true
                        items:
                        - mode: 9
                          path: path
                          key: key
                        - mode: 9
                          path: path
                          key: key
                      serviceAccountToken:
                        path: path
                        audience: audience
                        expirationSeconds: 1
                    - downwardAPI:
                        items:
                        - mode: 8
                          path: path
                          resourceFieldRef:
                            divisor: divisor
                            resource: resource
                            containerName: containerName
                          fieldRef:
                            apiVersion: apiVersion
                            fieldPath: fieldPath
                        - mode: 8
                          path: path
                          resourceFieldRef:
                            divisor: divisor
                            resource: resource
                            containerName: containerName
                          fieldRef:
                            apiVersion: apiVersion
                            fieldPath: fieldPath
                      configMap:
                        name: name
                        optional: true
                        items:
                        - mode: 9
                          path: path
                          key: key
                        - mode: 9
                          path: path
                          key: key
                      secret:
                        name: name
                        optional: true
                        items:
                        - mode: 9
                          path: path
                          key: key
                        - mode: 9
                          path: path
                          key: key
                      serviceAccountToken:
                        path: path
                        audience: audience
                        expirationSeconds: 1
                    defaultMode: 6
                  cephfs:
                    path: path
                    secretRef:
                      name: name
                    secretFile: secretFile
                    readOnly: true
                    user: user
                    monitors:
                    - monitors
                    - monitors
                  scaleIO:
                    system: system
                    protectionDomain: protectionDomain
                    sslEnabled: true
                    storageMode: storageMode
                    volumeName: volumeName
                    secretRef:
                      name: name
                    readOnly: true
                    fsType: fsType
                    storagePool: storagePool
                    gateway: gateway
                  emptyDir:
                    sizeLimit: sizeLimit
                    medium: medium
                  glusterfs:
                    path: path
                    endpoints: endpoints
                    readOnly: true
                  gcePersistentDisk:
                    partition: 6
                    readOnly: true
                    pdName: pdName
                    fsType: fsType
                  photonPersistentDisk:
                    pdID: pdID
                    fsType: fsType
                  azureDisk:
                    diskName: diskName
                    kind: "{}"
                    readOnly: true
                    cachingMode: "{}"
                    diskURI: diskURI
                    fsType: fsType
                  cinder:
                    secretRef:
                      name: name
                    volumeID: volumeID
                    readOnly: true
                    fsType: fsType
                  downwardAPI:
                    defaultMode: 6
                    items:
                    - mode: 8
                      path: path
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                    - mode: 8
                      path: path
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  awsElasticBlockStore:
                    partition: 5
                    volumeID: volumeID
                    readOnly: true
                    fsType: fsType
                  flocker:
                    datasetName: datasetName
                    datasetUUID: datasetUUID
                  iscsi:
                    chapAuthSession: true
                    iscsiInterface: iscsiInterface
                    lun: 3
                    chapAuthDiscovery: true
                    iqn: iqn
                    portals:
                    - portals
                    - portals
                    secretRef:
                      name: name
                    initiatorName: initiatorName
                    readOnly: true
                    fsType: fsType
                    targetPortal: targetPortal
                  rbd:
                    image: image
                    pool: pool
                    secretRef:
                      name: name
                    readOnly: true
                    fsType: fsType
                    keyring: keyring
                    user: user
                    monitors:
                    - monitors
                    - monitors
                  configMap:
                    defaultMode: 9
                    name: name
                    optional: true
                    items:
                    - mode: 9
                      path: path
                      key: key
                    - mode: 9
                      path: path
                      key: key
                  storageos:
                    volumeNamespace: volumeNamespace
                    volumeName: volumeName
                    secretRef:
                      name: name
                    readOnly: true
                    fsType: fsType
                  name: name
                  nfs:
                    path: path
                    server: server
                    readOnly: true
                  persistentVolumeClaim:
                    claimName: claimName
                    readOnly: true
                  gitRepo:
                    repository: repository
                    directory: directory
                    revision: revision
                  portworxVolume:
                    volumeID: volumeID
                    readOnly: true
                    fsType: fsType
                  vsphereVolume:
                    storagePolicyName: storagePolicyName
                    storagePolicyID: storagePolicyID
                    volumePath: volumePath
                    fsType: fsType
                  fc:
                    lun: 9
                    targetWWNs:
                    - targetWWNs
                    - targetWWNs
                    readOnly: true
                    wwids:
                    - wwids
                    - wwids
                    fsType: fsType
                  hostPath:
                    path: path
                    type: "{}"
                - quobyte:
                    volume: volume
                    registry: registry
                    readOnly: true
                    user: user
                    group: group
                  azureFile:
                    secretName: secretName
                    readOnly: true
                    shareName: shareName
                  flexVolume:
                    driver: driver
                    options: "{}"
                    secretRef:
                      name: name
                    readOnly: true
                    fsType: fsType
                  secret:
                    secretName: secretName
                    defaultMode: 2
                    optional: true
                    items:
                    - mode: 9
                      path: path
                      key: key
                    - mode: 9
                      path: path
                      key: key
                  projected:
                    sources:
                    - downwardAPI:
                        items:
                        - mode: 8
                          path: path
                          resourceFieldRef:
                            divisor: divisor
                            resource: resource
                            containerName: containerName
                          fieldRef:
                            apiVersion: apiVersion
                            fieldPath: fieldPath
                        - mode: 8
                          path: path
                          resourceFieldRef:
                            divisor: divisor
                            resource: resource
                            containerName: containerName
                          fieldRef:
                            apiVersion: apiVersion
                            fieldPath: fieldPath
                      configMap:
                        name: name
                        optional: true
                        items:
                        - mode: 9
                          path: path
                          key: key
                        - mode: 9
                          path: path
                          key: key
                      secret:
                        name: name
                        optional: true
                        items:
                        - mode: 9
                          path: path
                          key: key
                        - mode: 9
                          path: path
                          key: key
                      serviceAccountToken:
                        path: path
                        audience: audience
                        expirationSeconds: 1
                    - downwardAPI:
                        items:
                        - mode: 8
                          path: path
                          resourceFieldRef:
                            divisor: divisor
                            resource: resource
                            containerName: containerName
                          fieldRef:
                            apiVersion: apiVersion
                            fieldPath: fieldPath
                        - mode: 8
                          path: path
                          resourceFieldRef:
                            divisor: divisor
                            resource: resource
                            containerName: containerName
                          fieldRef:
                            apiVersion: apiVersion
                            fieldPath: fieldPath
                      configMap:
                        name: name
                        optional: true
                        items:
                        - mode: 9
                          path: path
                          key: key
                        - mode: 9
                          path: path
                          key: key
                      secret:
                        name: name
                        optional: true
                        items:
                        - mode: 9
                          path: path
                          key: key
                        - mode: 9
                          path: path
                          key: key
                      serviceAccountToken:
                        path: path
                        audience: audience
                        expirationSeconds: 1
                    defaultMode: 6
                  cephfs:
                    path: path
                    secretRef:
                      name: name
                    secretFile: secretFile
                    readOnly: true
                    user: user
                    monitors:
                    - monitors
                    - monitors
                  scaleIO:
                    system: system
                    protectionDomain: protectionDomain
                    sslEnabled: true
                    storageMode: storageMode
                    volumeName: volumeName
                    secretRef:
                      name: name
                    readOnly: true
                    fsType: fsType
                    storagePool: storagePool
                    gateway: gateway
                  emptyDir:
                    sizeLimit: sizeLimit
                    medium: medium
                  glusterfs:
                    path: path
                    endpoints: endpoints
                    readOnly: true
                  gcePersistentDisk:
                    partition: 6
                    readOnly: true
                    pdName: pdName
                    fsType: fsType
                  photonPersistentDisk:
                    pdID: pdID
                    fsType: fsType
                  azureDisk:
                    diskName: diskName
                    kind: "{}"
                    readOnly: true
                    cachingMode: "{}"
                    diskURI: diskURI
                    fsType: fsType
                  cinder:
                    secretRef:
                      name: name
                    volumeID: volumeID
                    readOnly: true
                    fsType: fsType
                  downwardAPI:
                    defaultMode: 6
                    items:
                    - mode: 8
                      path: path
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                    - mode: 8
                      path: path
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  awsElasticBlockStore:
                    partition: 5
                    volumeID: volumeID
                    readOnly: true
                    fsType: fsType
                  flocker:
                    datasetName: datasetName
                    datasetUUID: datasetUUID
                  iscsi:
                    chapAuthSession: true
                    iscsiInterface: iscsiInterface
                    lun: 3
                    chapAuthDiscovery: true
                    iqn: iqn
                    portals:
                    - portals
                    - portals
                    secretRef:
                      name: name
                    initiatorName: initiatorName
                    readOnly: true
                    fsType: fsType
                    targetPortal: targetPortal
                  rbd:
                    image: image
                    pool: pool
                    secretRef:
                      name: name
                    readOnly: true
                    fsType: fsType
                    keyring: keyring
                    user: user
                    monitors:
                    - monitors
                    - monitors
                  configMap:
                    defaultMode: 9
                    name: name
                    optional: true
                    items:
                    - mode: 9
                      path: path
                      key: key
                    - mode: 9
                      path: path
                      key: key
                  storageos:
                    volumeNamespace: volumeNamespace
                    volumeName: volumeName
                    secretRef:
                      name: name
                    readOnly: true
                    fsType: fsType
                  name: name
                  nfs:
                    path: path
                    server: server
                    readOnly: true
                  persistentVolumeClaim:
                    claimName: claimName
                    readOnly: true
                  gitRepo:
                    repository: repository
                    directory: directory
                    revision: revision
                  portworxVolume:
                    volumeID: volumeID
                    readOnly: true
                    fsType: fsType
                  vsphereVolume:
                    storagePolicyName: storagePolicyName
                    storagePolicyID: storagePolicyID
                    volumePath: volumePath
                    fsType: fsType
                  fc:
                    lun: 9
                    targetWWNs:
                    - targetWWNs
                    - targetWWNs
                    readOnly: true
                    wwids:
                    - wwids
                    - wwids
                    fsType: fsType
                  hostPath:
                    path: path
                    type: "{}"
                serviceAccount: serviceAccount
                priority: 1
                restartPolicy: restartPolicy
                shareProcessNamespace: true
                subdomain: subdomain
                containers:
                - volumeDevices:
                  - devicePath: devicePath
                    name: name
                  - devicePath: devicePath
                    name: name
                  image: image
                  imagePullPolicy: imagePullPolicy
                  livenessProbe:
                    failureThreshold: 5
                    periodSeconds: 2
                    tcpSocket:
                      port: port
                      host: host
                    timeoutSeconds: 9
                    successThreshold: 7
                    initialDelaySeconds: 5
                    exec:
                      command:
                      - command
                      - command
                    httpGet:
                      path: path
                      scheme: scheme
                      port: port
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  stdin: true
                  terminationMessagePolicy: terminationMessagePolicy
                  terminationMessagePath: terminationMessagePath
                  workingDir: workingDir
                  resources:
                    requests: "{}"
                    limits: "{}"
                  securityContext:
                    privileged: true
                    runAsUser: 7
                    capabilities:
                      add:
                      - "{}"
                      - "{}"
                      drop:
                      - "{}"
                      - "{}"
                    seLinuxOptions:
                      role: role
                      level: level
                      type: type
                      user: user
                    allowPrivilegeEscalation: true
                    runAsGroup: 4
                    runAsNonRoot: true
                    readOnlyRootFilesystem: true
                  env:
                  - name: name
                    value: value
                    valueFrom:
                      secretKeyRef:
                        name: name
                        optional: true
                        key: key
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      configMapKeyRef:
                        name: name
                        optional: true
                        key: key
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  - name: name
                    value: value
                    valueFrom:
                      secretKeyRef:
                        name: name
                        optional: true
                        key: key
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      configMapKeyRef:
                        name: name
                        optional: true
                        key: key
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  ports:
                  - protocol: protocol
                    hostIP: hostIP
                    name: name
                    containerPort: 3
                    hostPort: 2
                  - protocol: protocol
                    hostIP: hostIP
                    name: name
                    containerPort: 3
                    hostPort: 2
                  command:
                  - command
                  - command
                  volumeMounts:
                  - mountPath: mountPath
                    mountPropagation: "{}"
                    name: name
                    readOnly: true
                    subPath: subPath
                  - mountPath: mountPath
                    mountPropagation: "{}"
                    name: name
                    readOnly: true
                    subPath: subPath
                  args:
                  - args
                  - args
                  lifecycle:
                    postStart:
                      tcpSocket:
                        port: port
                        host: host
                      exec:
                        command:
                        - command
                        - command
                      httpGet:
                        path: path
                        scheme: scheme
                        port: port
                        host: host
                        httpHeaders:
                        - name: name
                          value: value
                        - name: name
                          value: value
                    preStop:
                      tcpSocket:
                        port: port
                        host: host
                      exec:
                        command:
                        - command
                        - command
                      httpGet:
                        path: path
                        scheme: scheme
                        port: port
                        host: host
                        httpHeaders:
                        - name: name
                          value: value
                        - name: name
                          value: value
                  name: name
                  tty: true
                  readinessProbe:
                    failureThreshold: 5
                    periodSeconds: 2
                    tcpSocket:
                      port: port
                      host: host
                    timeoutSeconds: 9
                    successThreshold: 7
                    initialDelaySeconds: 5
                    exec:
                      command:
                      - command
                      - command
                    httpGet:
                      path: path
                      scheme: scheme
                      port: port
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  stdinOnce: true
                  envFrom:
                  - configMapRef:
                      name: name
                      optional: true
                    prefix: prefix
                    secretRef:
                      name: name
                      optional: true
                  - configMapRef:
                      name: name
                      optional: true
                    prefix: prefix
                    secretRef:
                      name: name
                      optional: true
                - volumeDevices:
                  - devicePath: devicePath
                    name: name
                  - devicePath: devicePath
                    name: name
                  image: image
                  imagePullPolicy: imagePullPolicy
                  livenessProbe:
                    failureThreshold: 5
                    periodSeconds: 2
                    tcpSocket:
                      port: port
                      host: host
                    timeoutSeconds: 9
                    successThreshold: 7
                    initialDelaySeconds: 5
                    exec:
                      command:
                      - command
                      - command
                    httpGet:
                      path: path
                      scheme: scheme
                      port: port
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  stdin: true
                  terminationMessagePolicy: terminationMessagePolicy
                  terminationMessagePath: terminationMessagePath
                  workingDir: workingDir
                  resources:
                    requests: "{}"
                    limits: "{}"
                  securityContext:
                    privileged: true
                    runAsUser: 7
                    capabilities:
                      add:
                      - "{}"
                      - "{}"
                      drop:
                      - "{}"
                      - "{}"
                    seLinuxOptions:
                      role: role
                      level: level
                      type: type
                      user: user
                    allowPrivilegeEscalation: true
                    runAsGroup: 4
                    runAsNonRoot: true
                    readOnlyRootFilesystem: true
                  env:
                  - name: name
                    value: value
                    valueFrom:
                      secretKeyRef:
                        name: name
                        optional: true
                        key: key
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      configMapKeyRef:
                        name: name
                        optional: true
                        key: key
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  - name: name
                    value: value
                    valueFrom:
                      secretKeyRef:
                        name: name
                        optional: true
                        key: key
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      configMapKeyRef:
                        name: name
                        optional: true
                        key: key
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  ports:
                  - protocol: protocol
                    hostIP: hostIP
                    name: name
                    containerPort: 3
                    hostPort: 2
                  - protocol: protocol
                    hostIP: hostIP
                    name: name
                    containerPort: 3
                    hostPort: 2
                  command:
                  - command
                  - command
                  volumeMounts:
                  - mountPath: mountPath
                    mountPropagation: "{}"
                    name: name
                    readOnly: true
                    subPath: subPath
                  - mountPath: mountPath
                    mountPropagation: "{}"
                    name: name
                    readOnly: true
                    subPath: subPath
                  args:
                  - args
                  - args
                  lifecycle:
                    postStart:
                      tcpSocket:
                        port: port
                        host: host
                      exec:
                        command:
                        - command
                        - command
                      httpGet:
                        path: path
                        scheme: scheme
                        port: port
                        host: host
                        httpHeaders:
                        - name: name
                          value: value
                        - name: name
                          value: value
                    preStop:
                      tcpSocket:
                        port: port
                        host: host
                      exec:
                        command:
                        - command
                        - command
                      httpGet:
                        path: path
                        scheme: scheme
                        port: port
                        host: host
                        httpHeaders:
                        - name: name
                          value: value
                        - name: name
                          value: value
                  name: name
                  tty: true
                  readinessProbe:
                    failureThreshold: 5
                    periodSeconds: 2
                    tcpSocket:
                      port: port
                      host: host
                    timeoutSeconds: 9
                    successThreshold: 7
                    initialDelaySeconds: 5
                    exec:
                      command:
                      - command
                      - command
                    httpGet:
                      path: path
                      scheme: scheme
                      port: port
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  stdinOnce: true
                  envFrom:
                  - configMapRef:
                      name: name
                      optional: true
                    prefix: prefix
                    secretRef:
                      name: name
                      optional: true
                  - configMapRef:
                      name: name
                      optional: true
                    prefix: prefix
                    secretRef:
                      name: name
                      optional: true
                initContainers:
                - volumeDevices:
                  - devicePath: devicePath
                    name: name
                  - devicePath: devicePath
                    name: name
                  image: image
                  imagePullPolicy: imagePullPolicy
                  livenessProbe:
                    failureThreshold: 5
                    periodSeconds: 2
                    tcpSocket:
                      port: port
                      host: host
                    timeoutSeconds: 9
                    successThreshold: 7
                    initialDelaySeconds: 5
                    exec:
                      command:
                      - command
                      - command
                    httpGet:
                      path: path
                      scheme: scheme
                      port: port
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  stdin: true
                  terminationMessagePolicy: terminationMessagePolicy
                  terminationMessagePath: terminationMessagePath
                  workingDir: workingDir
                  resources:
                    requests: "{}"
                    limits: "{}"
                  securityContext:
                    privileged: true
                    runAsUser: 7
                    capabilities:
                      add:
                      - "{}"
                      - "{}"
                      drop:
                      - "{}"
                      - "{}"
                    seLinuxOptions:
                      role: role
                      level: level
                      type: type
                      user: user
                    allowPrivilegeEscalation: true
                    runAsGroup: 4
                    runAsNonRoot: true
                    readOnlyRootFilesystem: true
                  env:
                  - name: name
                    value: value
                    valueFrom:
                      secretKeyRef:
                        name: name
                        optional: true
                        key: key
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      configMapKeyRef:
                        name: name
                        optional: true
                        key: key
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  - name: name
                    value: value
                    valueFrom:
                      secretKeyRef:
                        name: name
                        optional: true
                        key: key
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      configMapKeyRef:
                        name: name
                        optional: true
                        key: key
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  ports:
                  - protocol: protocol
                    hostIP: hostIP
                    name: name
                    containerPort: 3
                    hostPort: 2
                  - protocol: protocol
                    hostIP: hostIP
                    name: name
                    containerPort: 3
                    hostPort: 2
                  command:
                  - command
                  - command
                  volumeMounts:
                  - mountPath: mountPath
                    mountPropagation: "{}"
                    name: name
                    readOnly: true
                    subPath: subPath
                  - mountPath: mountPath
                    mountPropagation: "{}"
                    name: name
                    readOnly: true
                    subPath: subPath
                  args:
                  - args
                  - args
                  lifecycle:
                    postStart:
                      tcpSocket:
                        port: port
                        host: host
                      exec:
                        command:
                        - command
                        - command
                      httpGet:
                        path: path
                        scheme: scheme
                        port: port
                        host: host
                        httpHeaders:
                        - name: name
                          value: value
                        - name: name
                          value: value
                    preStop:
                      tcpSocket:
                        port: port
                        host: host
                      exec:
                        command:
                        - command
                        - command
                      httpGet:
                        path: path
                        scheme: scheme
                        port: port
                        host: host
                        httpHeaders:
                        - name: name
                          value: value
                        - name: name
                          value: value
                  name: name
                  tty: true
                  readinessProbe:
                    failureThreshold: 5
                    periodSeconds: 2
                    tcpSocket:
                      port: port
                      host: host
                    timeoutSeconds: 9
                    successThreshold: 7
                    initialDelaySeconds: 5
                    exec:
                      command:
                      - command
                      - command
                    httpGet:
                      path: path
                      scheme: scheme
                      port: port
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  stdinOnce: true
                  envFrom:
                  - configMapRef:
                      name: name
                      optional: true
                    prefix: prefix
                    secretRef:
                      name: name
                      optional: true
                  - configMapRef:
                      name: name
                      optional: true
                    prefix: prefix
                    secretRef:
                      name: name
                      optional: true
                - volumeDevices:
                  - devicePath: devicePath
                    name: name
                  - devicePath: devicePath
                    name: name
                  image: image
                  imagePullPolicy: imagePullPolicy
                  livenessProbe:
                    failureThreshold: 5
                    periodSeconds: 2
                    tcpSocket:
                      port: port
                      host: host
                    timeoutSeconds: 9
                    successThreshold: 7
                    initialDelaySeconds: 5
                    exec:
                      command:
                      - command
                      - command
                    httpGet:
                      path: path
                      scheme: scheme
                      port: port
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  stdin: true
                  terminationMessagePolicy: terminationMessagePolicy
                  terminationMessagePath: terminationMessagePath
                  workingDir: workingDir
                  resources:
                    requests: "{}"
                    limits: "{}"
                  securityContext:
                    privileged: true
                    runAsUser: 7
                    capabilities:
                      add:
                      - "{}"
                      - "{}"
                      drop:
                      - "{}"
                      - "{}"
                    seLinuxOptions:
                      role: role
                      level: level
                      type: type
                      user: user
                    allowPrivilegeEscalation: true
                    runAsGroup: 4
                    runAsNonRoot: true
                    readOnlyRootFilesystem: true
                  env:
                  - name: name
                    value: value
                    valueFrom:
                      secretKeyRef:
                        name: name
                        optional: true
                        key: key
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      configMapKeyRef:
                        name: name
                        optional: true
                        key: key
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  - name: name
                    value: value
                    valueFrom:
                      secretKeyRef:
                        name: name
                        optional: true
                        key: key
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      configMapKeyRef:
                        name: name
                        optional: true
                        key: key
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  ports:
                  - protocol: protocol
                    hostIP: hostIP
                    name: name
                    containerPort: 3
                    hostPort: 2
                  - protocol: protocol
                    hostIP: hostIP
                    name: name
                    containerPort: 3
                    hostPort: 2
                  command:
                  - command
                  - command
                  volumeMounts:
                  - mountPath: mountPath
                    mountPropagation: "{}"
                    name: name
                    readOnly: true
                    subPath: subPath
                  - mountPath: mountPath
                    mountPropagation: "{}"
                    name: name
                    readOnly: true
                    subPath: subPath
                  args:
                  - args
                  - args
                  lifecycle:
                    postStart:
                      tcpSocket:
                        port: port
                        host: host
                      exec:
                        command:
                        - command
                        - command
                      httpGet:
                        path: path
                        scheme: scheme
                        port: port
                        host: host
                        httpHeaders:
                        - name: name
                          value: value
                        - name: name
                          value: value
                    preStop:
                      tcpSocket:
                        port: port
                        host: host
                      exec:
                        command:
                        - command
                        - command
                      httpGet:
                        path: path
                        scheme: scheme
                        port: port
                        host: host
                        httpHeaders:
                        - name: name
                          value: value
                        - name: name
                          value: value
                  name: name
                  tty: true
                  readinessProbe:
                    failureThreshold: 5
                    periodSeconds: 2
                    tcpSocket:
                      port: port
                      host: host
                    timeoutSeconds: 9
                    successThreshold: 7
                    initialDelaySeconds: 5
                    exec:
                      command:
                      - command
                      - command
                    httpGet:
                      path: path
                      scheme: scheme
                      port: port
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  stdinOnce: true
                  envFrom:
                  - configMapRef:
                      name: name
                      optional: true
                    prefix: prefix
                    secretRef:
                      name: name
                      optional: true
                  - configMapRef:
                      name: name
                      optional: true
                    prefix: prefix
                    secretRef:
                      name: name
                      optional: true
                affinity:
                  nodeAffinity:
                    requiredDuringSchedulingIgnoredDuringExecution:
                      nodeSelectorTerms:
                      - matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchFields:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                      - matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchFields:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                    preferredDuringSchedulingIgnoredDuringExecution:
                    - preference:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchFields:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                      weight: 6
                    - preference:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchFields:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                      weight: 6
                  podAffinity:
                    requiredDuringSchedulingIgnoredDuringExecution:
                    - labelSelector:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchLabels: "{}"
                      topologyKey: topologyKey
                      namespaces:
                      - namespaces
                      - namespaces
                    - labelSelector:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchLabels: "{}"
                      topologyKey: topologyKey
                      namespaces:
                      - namespaces
                      - namespaces
                    preferredDuringSchedulingIgnoredDuringExecution:
                    - podAffinityTerm:
                        labelSelector:
                          matchExpressions:
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          matchLabels: "{}"
                        topologyKey: topologyKey
                        namespaces:
                        - namespaces
                        - namespaces
                      weight: 1
                    - podAffinityTerm:
                        labelSelector:
                          matchExpressions:
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          matchLabels: "{}"
                        topologyKey: topologyKey
                        namespaces:
                        - namespaces
                        - namespaces
                      weight: 1
                  podAntiAffinity:
                    requiredDuringSchedulingIgnoredDuringExecution:
                    - labelSelector:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchLabels: "{}"
                      topologyKey: topologyKey
                      namespaces:
                      - namespaces
                      - namespaces
                    - labelSelector:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchLabels: "{}"
                      topologyKey: topologyKey
                      namespaces:
                      - namespaces
                      - namespaces
                    preferredDuringSchedulingIgnoredDuringExecution:
                    - podAffinityTerm:
                        labelSelector:
                          matchExpressions:
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          matchLabels: "{}"
                        topologyKey: topologyKey
                        namespaces:
                        - namespaces
                        - namespaces
                      weight: 1
                    - podAffinityTerm:
                        labelSelector:
                          matchExpressions:
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          matchLabels: "{}"
                        topologyKey: topologyKey
                        namespaces:
                        - namespaces
                        - namespaces
                      weight: 1
                hostPID: true
            replicas: 6
            selector:
              matchExpressions:
              - values:
                - values
                - values
                key: key
                operator: operator
              - values:
                - values
                - values
                key: key
                operator: operator
              matchLabels: "{}"
            minReadySeconds: 0
          status:
            fullyLabeledReplicas: 5
            replicas: 7
            readyReplicas: 2
            conditions:
            - reason: reason
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
              status: status
            - reason: reason
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
              status: status
            availableReplicas: 1
            observedGeneration: 5
        - metadata:
            generation: 6
            finalizers:
            - finalizers
            - finalizers
            resourceVersion: resourceVersion
            annotations: "{}"
            generateName: generateName
            deletionTimestamp: deletionTimestamp
            labels: "{}"
            ownerReferences:
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            selfLink: selfLink
            deletionGracePeriodSeconds: 0
            uid: uid
            initializers:
              result:
                reason: reason
                metadata:
                  continue: continue
                  resourceVersion: resourceVersion
                  selfLink: selfLink
                apiVersion: apiVersion
                code: 1
                kind: kind
                details:
                  uid: uid
                  kind: kind
                  causes:
                  - reason: reason
                    field: field
                    message: message
                  - reason: reason
                    field: field
                    message: message
                  retryAfterSeconds: 5
                  name: name
                  group: group
                message: message
                status: status
              pending:
              - name: name
              - name: name
            clusterName: clusterName
            creationTimestamp: creationTimestamp
            name: name
            namespace: namespace
          apiVersion: apiVersion
          kind: kind
          spec:
            template:
              metadata:
                generation: 6
                finalizers:
                - finalizers
                - finalizers
                resourceVersion: resourceVersion
                annotations: "{}"
                generateName: generateName
                deletionTimestamp: deletionTimestamp
                labels: "{}"
                ownerReferences:
                - uid: uid
                  controller: true
                  apiVersion: apiVersion
                  kind: kind
                  name: name
                  blockOwnerDeletion: true
                - uid: uid
                  controller: true
                  apiVersion: apiVersion
                  kind: kind
                  name: name
                  blockOwnerDeletion: true
                selfLink: selfLink
                deletionGracePeriodSeconds: 0
                uid: uid
                initializers:
                  result:
                    reason: reason
                    metadata:
                      continue: continue
                      resourceVersion: resourceVersion
                      selfLink: selfLink
                    apiVersion: apiVersion
                    code: 1
                    kind: kind
                    details:
                      uid: uid
                      kind: kind
                      causes:
                      - reason: reason
                        field: field
                        message: message
                      - reason: reason
                        field: field
                        message: message
                      retryAfterSeconds: 5
                      name: name
                      group: group
                    message: message
                    status: status
                  pending:
                  - name: name
                  - name: name
                clusterName: clusterName
                creationTimestamp: creationTimestamp
                name: name
                namespace: namespace
              spec:
                dnsPolicy: dnsPolicy
                nodeName: nodeName
                terminationGracePeriodSeconds: 1
                dnsConfig:
                  searches:
                  - searches
                  - searches
                  nameservers:
                  - nameservers
                  - nameservers
                  options:
                  - name: name
                    value: value
                  - name: name
                    value: value
                hostNetwork: true
                readinessGates:
                - conditionType: conditionType
                - conditionType: conditionType
                serviceAccountName: serviceAccountName
                imagePullSecrets:
                - name: name
                - name: name
                priorityClassName: priorityClassName
                hostAliases:
                - ip: ip
                  hostnames:
                  - hostnames
                  - hostnames
                - ip: ip
                  hostnames:
                  - hostnames
                  - hostnames
                securityContext:
                  runAsUser: 6
                  seLinuxOptions:
                    role: role
                    level: level
                    type: type
                    user: user
                  fsGroup: 1
                  supplementalGroups:
                  - 7
                  - 7
                  runAsGroup: 1
                  runAsNonRoot: true
                  sysctls:
                  - name: name
                    value: value
                  - name: name
                    value: value
                nodeSelector: "{}"
                hostname: hostname
                tolerations:
                - effect: effect
                  tolerationSeconds: 4
                  value: value
                  key: key
                  operator: operator
                - effect: effect
                  tolerationSeconds: 4
                  value: value
                  key: key
                  operator: operator
                automountServiceAccountToken: true
                schedulerName: schedulerName
                activeDeadlineSeconds: 0
                hostIPC: true
                volumes:
                - quobyte:
                    volume: volume
                    registry: registry
                    readOnly: true
                    user: user
                    group: group
                  azureFile:
                    secretName: secretName
                    readOnly: true
                    shareName: shareName
                  flexVolume:
                    driver: driver
                    options: "{}"
                    secretRef:
                      name: name
                    readOnly: true
                    fsType: fsType
                  secret:
                    secretName: secretName
                    defaultMode: 2
                    optional: true
                    items:
                    - mode: 9
                      path: path
                      key: key
                    - mode: 9
                      path: path
                      key: key
                  projected:
                    sources:
                    - downwardAPI:
                        items:
                        - mode: 8
                          path: path
                          resourceFieldRef:
                            divisor: divisor
                            resource: resource
                            containerName: containerName
                          fieldRef:
                            apiVersion: apiVersion
                            fieldPath: fieldPath
                        - mode: 8
                          path: path
                          resourceFieldRef:
                            divisor: divisor
                            resource: resource
                            containerName: containerName
                          fieldRef:
                            apiVersion: apiVersion
                            fieldPath: fieldPath
                      configMap:
                        name: name
                        optional: true
                        items:
                        - mode: 9
                          path: path
                          key: key
                        - mode: 9
                          path: path
                          key: key
                      secret:
                        name: name
                        optional: true
                        items:
                        - mode: 9
                          path: path
                          key: key
                        - mode: 9
                          path: path
                          key: key
                      serviceAccountToken:
                        path: path
                        audience: audience
                        expirationSeconds: 1
                    - downwardAPI:
                        items:
                        - mode: 8
                          path: path
                          resourceFieldRef:
                            divisor: divisor
                            resource: resource
                            containerName: containerName
                          fieldRef:
                            apiVersion: apiVersion
                            fieldPath: fieldPath
                        - mode: 8
                          path: path
                          resourceFieldRef:
                            divisor: divisor
                            resource: resource
                            containerName: containerName
                          fieldRef:
                            apiVersion: apiVersion
                            fieldPath: fieldPath
                      configMap:
                        name: name
                        optional: true
                        items:
                        - mode: 9
                          path: path
                          key: key
                        - mode: 9
                          path: path
                          key: key
                      secret:
                        name: name
                        optional: true
                        items:
                        - mode: 9
                          path: path
                          key: key
                        - mode: 9
                          path: path
                          key: key
                      serviceAccountToken:
                        path: path
                        audience: audience
                        expirationSeconds: 1
                    defaultMode: 6
                  cephfs:
                    path: path
                    secretRef:
                      name: name
                    secretFile: secretFile
                    readOnly: true
                    user: user
                    monitors:
                    - monitors
                    - monitors
                  scaleIO:
                    system: system
                    protectionDomain: protectionDomain
                    sslEnabled: true
                    storageMode: storageMode
                    volumeName: volumeName
                    secretRef:
                      name: name
                    readOnly: true
                    fsType: fsType
                    storagePool: storagePool
                    gateway: gateway
                  emptyDir:
                    sizeLimit: sizeLimit
                    medium: medium
                  glusterfs:
                    path: path
                    endpoints: endpoints
                    readOnly: true
                  gcePersistentDisk:
                    partition: 6
                    readOnly: true
                    pdName: pdName
                    fsType: fsType
                  photonPersistentDisk:
                    pdID: pdID
                    fsType: fsType
                  azureDisk:
                    diskName: diskName
                    kind: "{}"
                    readOnly: true
                    cachingMode: "{}"
                    diskURI: diskURI
                    fsType: fsType
                  cinder:
                    secretRef:
                      name: name
                    volumeID: volumeID
                    readOnly: true
                    fsType: fsType
                  downwardAPI:
                    defaultMode: 6
                    items:
                    - mode: 8
                      path: path
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                    - mode: 8
                      path: path
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  awsElasticBlockStore:
                    partition: 5
                    volumeID: volumeID
                    readOnly: true
                    fsType: fsType
                  flocker:
                    datasetName: datasetName
                    datasetUUID: datasetUUID
                  iscsi:
                    chapAuthSession: true
                    iscsiInterface: iscsiInterface
                    lun: 3
                    chapAuthDiscovery: true
                    iqn: iqn
                    portals:
                    - portals
                    - portals
                    secretRef:
                      name: name
                    initiatorName: initiatorName
                    readOnly: true
                    fsType: fsType
                    targetPortal: targetPortal
                  rbd:
                    image: image
                    pool: pool
                    secretRef:
                      name: name
                    readOnly: true
                    fsType: fsType
                    keyring: keyring
                    user: user
                    monitors:
                    - monitors
                    - monitors
                  configMap:
                    defaultMode: 9
                    name: name
                    optional: true
                    items:
                    - mode: 9
                      path: path
                      key: key
                    - mode: 9
                      path: path
                      key: key
                  storageos:
                    volumeNamespace: volumeNamespace
                    volumeName: volumeName
                    secretRef:
                      name: name
                    readOnly: true
                    fsType: fsType
                  name: name
                  nfs:
                    path: path
                    server: server
                    readOnly: true
                  persistentVolumeClaim:
                    claimName: claimName
                    readOnly: true
                  gitRepo:
                    repository: repository
                    directory: directory
                    revision: revision
                  portworxVolume:
                    volumeID: volumeID
                    readOnly: true
                    fsType: fsType
                  vsphereVolume:
                    storagePolicyName: storagePolicyName
                    storagePolicyID: storagePolicyID
                    volumePath: volumePath
                    fsType: fsType
                  fc:
                    lun: 9
                    targetWWNs:
                    - targetWWNs
                    - targetWWNs
                    readOnly: true
                    wwids:
                    - wwids
                    - wwids
                    fsType: fsType
                  hostPath:
                    path: path
                    type: "{}"
                - quobyte:
                    volume: volume
                    registry: registry
                    readOnly: true
                    user: user
                    group: group
                  azureFile:
                    secretName: secretName
                    readOnly: true
                    shareName: shareName
                  flexVolume:
                    driver: driver
                    options: "{}"
                    secretRef:
                      name: name
                    readOnly: true
                    fsType: fsType
                  secret:
                    secretName: secretName
                    defaultMode: 2
                    optional: true
                    items:
                    - mode: 9
                      path: path
                      key: key
                    - mode: 9
                      path: path
                      key: key
                  projected:
                    sources:
                    - downwardAPI:
                        items:
                        - mode: 8
                          path: path
                          resourceFieldRef:
                            divisor: divisor
                            resource: resource
                            containerName: containerName
                          fieldRef:
                            apiVersion: apiVersion
                            fieldPath: fieldPath
                        - mode: 8
                          path: path
                          resourceFieldRef:
                            divisor: divisor
                            resource: resource
                            containerName: containerName
                          fieldRef:
                            apiVersion: apiVersion
                            fieldPath: fieldPath
                      configMap:
                        name: name
                        optional: true
                        items:
                        - mode: 9
                          path: path
                          key: key
                        - mode: 9
                          path: path
                          key: key
                      secret:
                        name: name
                        optional: true
                        items:
                        - mode: 9
                          path: path
                          key: key
                        - mode: 9
                          path: path
                          key: key
                      serviceAccountToken:
                        path: path
                        audience: audience
                        expirationSeconds: 1
                    - downwardAPI:
                        items:
                        - mode: 8
                          path: path
                          resourceFieldRef:
                            divisor: divisor
                            resource: resource
                            containerName: containerName
                          fieldRef:
                            apiVersion: apiVersion
                            fieldPath: fieldPath
                        - mode: 8
                          path: path
                          resourceFieldRef:
                            divisor: divisor
                            resource: resource
                            containerName: containerName
                          fieldRef:
                            apiVersion: apiVersion
                            fieldPath: fieldPath
                      configMap:
                        name: name
                        optional: true
                        items:
                        - mode: 9
                          path: path
                          key: key
                        - mode: 9
                          path: path
                          key: key
                      secret:
                        name: name
                        optional: true
                        items:
                        - mode: 9
                          path: path
                          key: key
                        - mode: 9
                          path: path
                          key: key
                      serviceAccountToken:
                        path: path
                        audience: audience
                        expirationSeconds: 1
                    defaultMode: 6
                  cephfs:
                    path: path
                    secretRef:
                      name: name
                    secretFile: secretFile
                    readOnly: true
                    user: user
                    monitors:
                    - monitors
                    - monitors
                  scaleIO:
                    system: system
                    protectionDomain: protectionDomain
                    sslEnabled: true
                    storageMode: storageMode
                    volumeName: volumeName
                    secretRef:
                      name: name
                    readOnly: true
                    fsType: fsType
                    storagePool: storagePool
                    gateway: gateway
                  emptyDir:
                    sizeLimit: sizeLimit
                    medium: medium
                  glusterfs:
                    path: path
                    endpoints: endpoints
                    readOnly: true
                  gcePersistentDisk:
                    partition: 6
                    readOnly: true
                    pdName: pdName
                    fsType: fsType
                  photonPersistentDisk:
                    pdID: pdID
                    fsType: fsType
                  azureDisk:
                    diskName: diskName
                    kind: "{}"
                    readOnly: true
                    cachingMode: "{}"
                    diskURI: diskURI
                    fsType: fsType
                  cinder:
                    secretRef:
                      name: name
                    volumeID: volumeID
                    readOnly: true
                    fsType: fsType
                  downwardAPI:
                    defaultMode: 6
                    items:
                    - mode: 8
                      path: path
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                    - mode: 8
                      path: path
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  awsElasticBlockStore:
                    partition: 5
                    volumeID: volumeID
                    readOnly: true
                    fsType: fsType
                  flocker:
                    datasetName: datasetName
                    datasetUUID: datasetUUID
                  iscsi:
                    chapAuthSession: true
                    iscsiInterface: iscsiInterface
                    lun: 3
                    chapAuthDiscovery: true
                    iqn: iqn
                    portals:
                    - portals
                    - portals
                    secretRef:
                      name: name
                    initiatorName: initiatorName
                    readOnly: true
                    fsType: fsType
                    targetPortal: targetPortal
                  rbd:
                    image: image
                    pool: pool
                    secretRef:
                      name: name
                    readOnly: true
                    fsType: fsType
                    keyring: keyring
                    user: user
                    monitors:
                    - monitors
                    - monitors
                  configMap:
                    defaultMode: 9
                    name: name
                    optional: true
                    items:
                    - mode: 9
                      path: path
                      key: key
                    - mode: 9
                      path: path
                      key: key
                  storageos:
                    volumeNamespace: volumeNamespace
                    volumeName: volumeName
                    secretRef:
                      name: name
                    readOnly: true
                    fsType: fsType
                  name: name
                  nfs:
                    path: path
                    server: server
                    readOnly: true
                  persistentVolumeClaim:
                    claimName: claimName
                    readOnly: true
                  gitRepo:
                    repository: repository
                    directory: directory
                    revision: revision
                  portworxVolume:
                    volumeID: volumeID
                    readOnly: true
                    fsType: fsType
                  vsphereVolume:
                    storagePolicyName: storagePolicyName
                    storagePolicyID: storagePolicyID
                    volumePath: volumePath
                    fsType: fsType
                  fc:
                    lun: 9
                    targetWWNs:
                    - targetWWNs
                    - targetWWNs
                    readOnly: true
                    wwids:
                    - wwids
                    - wwids
                    fsType: fsType
                  hostPath:
                    path: path
                    type: "{}"
                serviceAccount: serviceAccount
                priority: 1
                restartPolicy: restartPolicy
                shareProcessNamespace: true
                subdomain: subdomain
                containers:
                - volumeDevices:
                  - devicePath: devicePath
                    name: name
                  - devicePath: devicePath
                    name: name
                  image: image
                  imagePullPolicy: imagePullPolicy
                  livenessProbe:
                    failureThreshold: 5
                    periodSeconds: 2
                    tcpSocket:
                      port: port
                      host: host
                    timeoutSeconds: 9
                    successThreshold: 7
                    initialDelaySeconds: 5
                    exec:
                      command:
                      - command
                      - command
                    httpGet:
                      path: path
                      scheme: scheme
                      port: port
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  stdin: true
                  terminationMessagePolicy: terminationMessagePolicy
                  terminationMessagePath: terminationMessagePath
                  workingDir: workingDir
                  resources:
                    requests: "{}"
                    limits: "{}"
                  securityContext:
                    privileged: true
                    runAsUser: 7
                    capabilities:
                      add:
                      - "{}"
                      - "{}"
                      drop:
                      - "{}"
                      - "{}"
                    seLinuxOptions:
                      role: role
                      level: level
                      type: type
                      user: user
                    allowPrivilegeEscalation: true
                    runAsGroup: 4
                    runAsNonRoot: true
                    readOnlyRootFilesystem: true
                  env:
                  - name: name
                    value: value
                    valueFrom:
                      secretKeyRef:
                        name: name
                        optional: true
                        key: key
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      configMapKeyRef:
                        name: name
                        optional: true
                        key: key
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  - name: name
                    value: value
                    valueFrom:
                      secretKeyRef:
                        name: name
                        optional: true
                        key: key
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      configMapKeyRef:
                        name: name
                        optional: true
                        key: key
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  ports:
                  - protocol: protocol
                    hostIP: hostIP
                    name: name
                    containerPort: 3
                    hostPort: 2
                  - protocol: protocol
                    hostIP: hostIP
                    name: name
                    containerPort: 3
                    hostPort: 2
                  command:
                  - command
                  - command
                  volumeMounts:
                  - mountPath: mountPath
                    mountPropagation: "{}"
                    name: name
                    readOnly: true
                    subPath: subPath
                  - mountPath: mountPath
                    mountPropagation: "{}"
                    name: name
                    readOnly: true
                    subPath: subPath
                  args:
                  - args
                  - args
                  lifecycle:
                    postStart:
                      tcpSocket:
                        port: port
                        host: host
                      exec:
                        command:
                        - command
                        - command
                      httpGet:
                        path: path
                        scheme: scheme
                        port: port
                        host: host
                        httpHeaders:
                        - name: name
                          value: value
                        - name: name
                          value: value
                    preStop:
                      tcpSocket:
                        port: port
                        host: host
                      exec:
                        command:
                        - command
                        - command
                      httpGet:
                        path: path
                        scheme: scheme
                        port: port
                        host: host
                        httpHeaders:
                        - name: name
                          value: value
                        - name: name
                          value: value
                  name: name
                  tty: true
                  readinessProbe:
                    failureThreshold: 5
                    periodSeconds: 2
                    tcpSocket:
                      port: port
                      host: host
                    timeoutSeconds: 9
                    successThreshold: 7
                    initialDelaySeconds: 5
                    exec:
                      command:
                      - command
                      - command
                    httpGet:
                      path: path
                      scheme: scheme
                      port: port
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  stdinOnce: true
                  envFrom:
                  - configMapRef:
                      name: name
                      optional: true
                    prefix: prefix
                    secretRef:
                      name: name
                      optional: true
                  - configMapRef:
                      name: name
                      optional: true
                    prefix: prefix
                    secretRef:
                      name: name
                      optional: true
                - volumeDevices:
                  - devicePath: devicePath
                    name: name
                  - devicePath: devicePath
                    name: name
                  image: image
                  imagePullPolicy: imagePullPolicy
                  livenessProbe:
                    failureThreshold: 5
                    periodSeconds: 2
                    tcpSocket:
                      port: port
                      host: host
                    timeoutSeconds: 9
                    successThreshold: 7
                    initialDelaySeconds: 5
                    exec:
                      command:
                      - command
                      - command
                    httpGet:
                      path: path
                      scheme: scheme
                      port: port
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  stdin: true
                  terminationMessagePolicy: terminationMessagePolicy
                  terminationMessagePath: terminationMessagePath
                  workingDir: workingDir
                  resources:
                    requests: "{}"
                    limits: "{}"
                  securityContext:
                    privileged: true
                    runAsUser: 7
                    capabilities:
                      add:
                      - "{}"
                      - "{}"
                      drop:
                      - "{}"
                      - "{}"
                    seLinuxOptions:
                      role: role
                      level: level
                      type: type
                      user: user
                    allowPrivilegeEscalation: true
                    runAsGroup: 4
                    runAsNonRoot: true
                    readOnlyRootFilesystem: true
                  env:
                  - name: name
                    value: value
                    valueFrom:
                      secretKeyRef:
                        name: name
                        optional: true
                        key: key
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      configMapKeyRef:
                        name: name
                        optional: true
                        key: key
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  - name: name
                    value: value
                    valueFrom:
                      secretKeyRef:
                        name: name
                        optional: true
                        key: key
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      configMapKeyRef:
                        name: name
                        optional: true
                        key: key
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  ports:
                  - protocol: protocol
                    hostIP: hostIP
                    name: name
                    containerPort: 3
                    hostPort: 2
                  - protocol: protocol
                    hostIP: hostIP
                    name: name
                    containerPort: 3
                    hostPort: 2
                  command:
                  - command
                  - command
                  volumeMounts:
                  - mountPath: mountPath
                    mountPropagation: "{}"
                    name: name
                    readOnly: true
                    subPath: subPath
                  - mountPath: mountPath
                    mountPropagation: "{}"
                    name: name
                    readOnly: true
                    subPath: subPath
                  args:
                  - args
                  - args
                  lifecycle:
                    postStart:
                      tcpSocket:
                        port: port
                        host: host
                      exec:
                        command:
                        - command
                        - command
                      httpGet:
                        path: path
                        scheme: scheme
                        port: port
                        host: host
                        httpHeaders:
                        - name: name
                          value: value
                        - name: name
                          value: value
                    preStop:
                      tcpSocket:
                        port: port
                        host: host
                      exec:
                        command:
                        - command
                        - command
                      httpGet:
                        path: path
                        scheme: scheme
                        port: port
                        host: host
                        httpHeaders:
                        - name: name
                          value: value
                        - name: name
                          value: value
                  name: name
                  tty: true
                  readinessProbe:
                    failureThreshold: 5
                    periodSeconds: 2
                    tcpSocket:
                      port: port
                      host: host
                    timeoutSeconds: 9
                    successThreshold: 7
                    initialDelaySeconds: 5
                    exec:
                      command:
                      - command
                      - command
                    httpGet:
                      path: path
                      scheme: scheme
                      port: port
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  stdinOnce: true
                  envFrom:
                  - configMapRef:
                      name: name
                      optional: true
                    prefix: prefix
                    secretRef:
                      name: name
                      optional: true
                  - configMapRef:
                      name: name
                      optional: true
                    prefix: prefix
                    secretRef:
                      name: name
                      optional: true
                initContainers:
                - volumeDevices:
                  - devicePath: devicePath
                    name: name
                  - devicePath: devicePath
                    name: name
                  image: image
                  imagePullPolicy: imagePullPolicy
                  livenessProbe:
                    failureThreshold: 5
                    periodSeconds: 2
                    tcpSocket:
                      port: port
                      host: host
                    timeoutSeconds: 9
                    successThreshold: 7
                    initialDelaySeconds: 5
                    exec:
                      command:
                      - command
                      - command
                    httpGet:
                      path: path
                      scheme: scheme
                      port: port
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  stdin: true
                  terminationMessagePolicy: terminationMessagePolicy
                  terminationMessagePath: terminationMessagePath
                  workingDir: workingDir
                  resources:
                    requests: "{}"
                    limits: "{}"
                  securityContext:
                    privileged: true
                    runAsUser: 7
                    capabilities:
                      add:
                      - "{}"
                      - "{}"
                      drop:
                      - "{}"
                      - "{}"
                    seLinuxOptions:
                      role: role
                      level: level
                      type: type
                      user: user
                    allowPrivilegeEscalation: true
                    runAsGroup: 4
                    runAsNonRoot: true
                    readOnlyRootFilesystem: true
                  env:
                  - name: name
                    value: value
                    valueFrom:
                      secretKeyRef:
                        name: name
                        optional: true
                        key: key
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      configMapKeyRef:
                        name: name
                        optional: true
                        key: key
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  - name: name
                    value: value
                    valueFrom:
                      secretKeyRef:
                        name: name
                        optional: true
                        key: key
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      configMapKeyRef:
                        name: name
                        optional: true
                        key: key
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  ports:
                  - protocol: protocol
                    hostIP: hostIP
                    name: name
                    containerPort: 3
                    hostPort: 2
                  - protocol: protocol
                    hostIP: hostIP
                    name: name
                    containerPort: 3
                    hostPort: 2
                  command:
                  - command
                  - command
                  volumeMounts:
                  - mountPath: mountPath
                    mountPropagation: "{}"
                    name: name
                    readOnly: true
                    subPath: subPath
                  - mountPath: mountPath
                    mountPropagation: "{}"
                    name: name
                    readOnly: true
                    subPath: subPath
                  args:
                  - args
                  - args
                  lifecycle:
                    postStart:
                      tcpSocket:
                        port: port
                        host: host
                      exec:
                        command:
                        - command
                        - command
                      httpGet:
                        path: path
                        scheme: scheme
                        port: port
                        host: host
                        httpHeaders:
                        - name: name
                          value: value
                        - name: name
                          value: value
                    preStop:
                      tcpSocket:
                        port: port
                        host: host
                      exec:
                        command:
                        - command
                        - command
                      httpGet:
                        path: path
                        scheme: scheme
                        port: port
                        host: host
                        httpHeaders:
                        - name: name
                          value: value
                        - name: name
                          value: value
                  name: name
                  tty: true
                  readinessProbe:
                    failureThreshold: 5
                    periodSeconds: 2
                    tcpSocket:
                      port: port
                      host: host
                    timeoutSeconds: 9
                    successThreshold: 7
                    initialDelaySeconds: 5
                    exec:
                      command:
                      - command
                      - command
                    httpGet:
                      path: path
                      scheme: scheme
                      port: port
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  stdinOnce: true
                  envFrom:
                  - configMapRef:
                      name: name
                      optional: true
                    prefix: prefix
                    secretRef:
                      name: name
                      optional: true
                  - configMapRef:
                      name: name
                      optional: true
                    prefix: prefix
                    secretRef:
                      name: name
                      optional: true
                - volumeDevices:
                  - devicePath: devicePath
                    name: name
                  - devicePath: devicePath
                    name: name
                  image: image
                  imagePullPolicy: imagePullPolicy
                  livenessProbe:
                    failureThreshold: 5
                    periodSeconds: 2
                    tcpSocket:
                      port: port
                      host: host
                    timeoutSeconds: 9
                    successThreshold: 7
                    initialDelaySeconds: 5
                    exec:
                      command:
                      - command
                      - command
                    httpGet:
                      path: path
                      scheme: scheme
                      port: port
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  stdin: true
                  terminationMessagePolicy: terminationMessagePolicy
                  terminationMessagePath: terminationMessagePath
                  workingDir: workingDir
                  resources:
                    requests: "{}"
                    limits: "{}"
                  securityContext:
                    privileged: true
                    runAsUser: 7
                    capabilities:
                      add:
                      - "{}"
                      - "{}"
                      drop:
                      - "{}"
                      - "{}"
                    seLinuxOptions:
                      role: role
                      level: level
                      type: type
                      user: user
                    allowPrivilegeEscalation: true
                    runAsGroup: 4
                    runAsNonRoot: true
                    readOnlyRootFilesystem: true
                  env:
                  - name: name
                    value: value
                    valueFrom:
                      secretKeyRef:
                        name: name
                        optional: true
                        key: key
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      configMapKeyRef:
                        name: name
                        optional: true
                        key: key
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  - name: name
                    value: value
                    valueFrom:
                      secretKeyRef:
                        name: name
                        optional: true
                        key: key
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      configMapKeyRef:
                        name: name
                        optional: true
                        key: key
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  ports:
                  - protocol: protocol
                    hostIP: hostIP
                    name: name
                    containerPort: 3
                    hostPort: 2
                  - protocol: protocol
                    hostIP: hostIP
                    name: name
                    containerPort: 3
                    hostPort: 2
                  command:
                  - command
                  - command
                  volumeMounts:
                  - mountPath: mountPath
                    mountPropagation: "{}"
                    name: name
                    readOnly: true
                    subPath: subPath
                  - mountPath: mountPath
                    mountPropagation: "{}"
                    name: name
                    readOnly: true
                    subPath: subPath
                  args:
                  - args
                  - args
                  lifecycle:
                    postStart:
                      tcpSocket:
                        port: port
                        host: host
                      exec:
                        command:
                        - command
                        - command
                      httpGet:
                        path: path
                        scheme: scheme
                        port: port
                        host: host
                        httpHeaders:
                        - name: name
                          value: value
                        - name: name
                          value: value
                    preStop:
                      tcpSocket:
                        port: port
                        host: host
                      exec:
                        command:
                        - command
                        - command
                      httpGet:
                        path: path
                        scheme: scheme
                        port: port
                        host: host
                        httpHeaders:
                        - name: name
                          value: value
                        - name: name
                          value: value
                  name: name
                  tty: true
                  readinessProbe:
                    failureThreshold: 5
                    periodSeconds: 2
                    tcpSocket:
                      port: port
                      host: host
                    timeoutSeconds: 9
                    successThreshold: 7
                    initialDelaySeconds: 5
                    exec:
                      command:
                      - command
                      - command
                    httpGet:
                      path: path
                      scheme: scheme
                      port: port
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  stdinOnce: true
                  envFrom:
                  - configMapRef:
                      name: name
                      optional: true
                    prefix: prefix
                    secretRef:
                      name: name
                      optional: true
                  - configMapRef:
                      name: name
                      optional: true
                    prefix: prefix
                    secretRef:
                      name: name
                      optional: true
                affinity:
                  nodeAffinity:
                    requiredDuringSchedulingIgnoredDuringExecution:
                      nodeSelectorTerms:
                      - matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchFields:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                      - matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchFields:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                    preferredDuringSchedulingIgnoredDuringExecution:
                    - preference:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchFields:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                      weight: 6
                    - preference:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchFields:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                      weight: 6
                  podAffinity:
                    requiredDuringSchedulingIgnoredDuringExecution:
                    - labelSelector:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchLabels: "{}"
                      topologyKey: topologyKey
                      namespaces:
                      - namespaces
                      - namespaces
                    - labelSelector:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchLabels: "{}"
                      topologyKey: topologyKey
                      namespaces:
                      - namespaces
                      - namespaces
                    preferredDuringSchedulingIgnoredDuringExecution:
                    - podAffinityTerm:
                        labelSelector:
                          matchExpressions:
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          matchLabels: "{}"
                        topologyKey: topologyKey
                        namespaces:
                        - namespaces
                        - namespaces
                      weight: 1
                    - podAffinityTerm:
                        labelSelector:
                          matchExpressions:
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          matchLabels: "{}"
                        topologyKey: topologyKey
                        namespaces:
                        - namespaces
                        - namespaces
                      weight: 1
                  podAntiAffinity:
                    requiredDuringSchedulingIgnoredDuringExecution:
                    - labelSelector:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchLabels: "{}"
                      topologyKey: topologyKey
                      namespaces:
                      - namespaces
                      - namespaces
                    - labelSelector:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchLabels: "{}"
                      topologyKey: topologyKey
                      namespaces:
                      - namespaces
                      - namespaces
                    preferredDuringSchedulingIgnoredDuringExecution:
                    - podAffinityTerm:
                        labelSelector:
                          matchExpressions:
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          matchLabels: "{}"
                        topologyKey: topologyKey
                        namespaces:
                        - namespaces
                        - namespaces
                      weight: 1
                    - podAffinityTerm:
                        labelSelector:
                          matchExpressions:
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          matchLabels: "{}"
                        topologyKey: topologyKey
                        namespaces:
                        - namespaces
                        - namespaces
                      weight: 1
                hostPID: true
            replicas: 6
            selector:
              matchExpressions:
              - values:
                - values
                - values
                key: key
                operator: operator
              - values:
                - values
                - values
                key: key
                operator: operator
              matchLabels: "{}"
            minReadySeconds: 0
          status:
            fullyLabeledReplicas: 5
            replicas: 7
            readyReplicas: 2
            conditions:
            - reason: reason
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
              status: status
            - reason: reason
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
              status: status
            availableReplicas: 1
            observedGeneration: 5
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
          type: string
        items:
          description: "List of ReplicaSets. More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller"
          items:
            $ref: '#/components/schemas/v1.ReplicaSet'
          type: array
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: '#/components/schemas/v1.ListMeta'
      required:
      - items
      type: object
    v1.ReplicaSetSpec:
      description: ReplicaSetSpec is the specification of a ReplicaSet.
      example:
        template:
          metadata:
            generation: 6
            finalizers:
            - finalizers
            - finalizers
            resourceVersion: resourceVersion
            annotations: "{}"
            generateName: generateName
            deletionTimestamp: deletionTimestamp
            labels: "{}"
            ownerReferences:
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            selfLink: selfLink
            deletionGracePeriodSeconds: 0
            uid: uid
            initializers:
              result:
                reason: reason
                metadata:
                  continue: continue
                  resourceVersion: resourceVersion
                  selfLink: selfLink
                apiVersion: apiVersion
                code: 1
                kind: kind
                details:
                  uid: uid
                  kind: kind
                  causes:
                  - reason: reason
                    field: field
                    message: message
                  - reason: reason
                    field: field
                    message: message
                  retryAfterSeconds: 5
                  name: name
                  group: group
                message: message
                status: status
              pending:
              - name: name
              - name: name
            clusterName: clusterName
            creationTimestamp: creationTimestamp
            name: name
            namespace: namespace
          spec:
            dnsPolicy: dnsPolicy
            nodeName: nodeName
            terminationGracePeriodSeconds: 1
            dnsConfig:
              searches:
              - searches
              - searches
              nameservers:
              - nameservers
              - nameservers
              options:
              - name: name
                value: value
              - name: name
                value: value
            hostNetwork: true
            readinessGates:
            - conditionType: conditionType
            - conditionType: conditionType
            serviceAccountName: serviceAccountName
            imagePullSecrets:
            - name: name
            - name: name
            priorityClassName: priorityClassName
            hostAliases:
            - ip: ip
              hostnames:
              - hostnames
              - hostnames
            - ip: ip
              hostnames:
              - hostnames
              - hostnames
            securityContext:
              runAsUser: 6
              seLinuxOptions:
                role: role
                level: level
                type: type
                user: user
              fsGroup: 1
              supplementalGroups:
              - 7
              - 7
              runAsGroup: 1
              runAsNonRoot: true
              sysctls:
              - name: name
                value: value
              - name: name
                value: value
            nodeSelector: "{}"
            hostname: hostname
            tolerations:
            - effect: effect
              tolerationSeconds: 4
              value: value
              key: key
              operator: operator
            - effect: effect
              tolerationSeconds: 4
              value: value
              key: key
              operator: operator
            automountServiceAccountToken: true
            schedulerName: schedulerName
            activeDeadlineSeconds: 0
            hostIPC: true
            volumes:
            - quobyte:
                volume: volume
                registry: registry
                readOnly: true
                user: user
                group: group
              azureFile:
                secretName: secretName
                readOnly: true
                shareName: shareName
              flexVolume:
                driver: driver
                options: "{}"
                secretRef:
                  name: name
                readOnly: true
                fsType: fsType
              secret:
                secretName: secretName
                defaultMode: 2
                optional: true
                items:
                - mode: 9
                  path: path
                  key: key
                - mode: 9
                  path: path
                  key: key
              projected:
                sources:
                - downwardAPI:
                    items:
                    - mode: 8
                      path: path
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                    - mode: 8
                      path: path
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  configMap:
                    name: name
                    optional: true
                    items:
                    - mode: 9
                      path: path
                      key: key
                    - mode: 9
                      path: path
                      key: key
                  secret:
                    name: name
                    optional: true
                    items:
                    - mode: 9
                      path: path
                      key: key
                    - mode: 9
                      path: path
                      key: key
                  serviceAccountToken:
                    path: path
                    audience: audience
                    expirationSeconds: 1
                - downwardAPI:
                    items:
                    - mode: 8
                      path: path
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                    - mode: 8
                      path: path
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  configMap:
                    name: name
                    optional: true
                    items:
                    - mode: 9
                      path: path
                      key: key
                    - mode: 9
                      path: path
                      key: key
                  secret:
                    name: name
                    optional: true
                    items:
                    - mode: 9
                      path: path
                      key: key
                    - mode: 9
                      path: path
                      key: key
                  serviceAccountToken:
                    path: path
                    audience: audience
                    expirationSeconds: 1
                defaultMode: 6
              cephfs:
                path: path
                secretRef:
                  name: name
                secretFile: secretFile
                readOnly: true
                user: user
                monitors:
                - monitors
                - monitors
              scaleIO:
                system: system
                protectionDomain: protectionDomain
                sslEnabled: true
                storageMode: storageMode
                volumeName: volumeName
                secretRef:
                  name: name
                readOnly: true
                fsType: fsType
                storagePool: storagePool
                gateway: gateway
              emptyDir:
                sizeLimit: sizeLimit
                medium: medium
              glusterfs:
                path: path
                endpoints: endpoints
                readOnly: true
              gcePersistentDisk:
                partition: 6
                readOnly: true
                pdName: pdName
                fsType: fsType
              photonPersistentDisk:
                pdID: pdID
                fsType: fsType
              azureDisk:
                diskName: diskName
                kind: "{}"
                readOnly: true
                cachingMode: "{}"
                diskURI: diskURI
                fsType: fsType
              cinder:
                secretRef:
                  name: name
                volumeID: volumeID
                readOnly: true
                fsType: fsType
              downwardAPI:
                defaultMode: 6
                items:
                - mode: 8
                  path: path
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
                - mode: 8
                  path: path
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              awsElasticBlockStore:
                partition: 5
                volumeID: volumeID
                readOnly: true
                fsType: fsType
              flocker:
                datasetName: datasetName
                datasetUUID: datasetUUID
              iscsi:
                chapAuthSession: true
                iscsiInterface: iscsiInterface
                lun: 3
                chapAuthDiscovery: true
                iqn: iqn
                portals:
                - portals
                - portals
                secretRef:
                  name: name
                initiatorName: initiatorName
                readOnly: true
                fsType: fsType
                targetPortal: targetPortal
              rbd:
                image: image
                pool: pool
                secretRef:
                  name: name
                readOnly: true
                fsType: fsType
                keyring: keyring
                user: user
                monitors:
                - monitors
                - monitors
              configMap:
                defaultMode: 9
                name: name
                optional: true
                items:
                - mode: 9
                  path: path
                  key: key
                - mode: 9
                  path: path
                  key: key
              storageos:
                volumeNamespace: volumeNamespace
                volumeName: volumeName
                secretRef:
                  name: name
                readOnly: true
                fsType: fsType
              name: name
              nfs:
                path: path
                server: server
                readOnly: true
              persistentVolumeClaim:
                claimName: claimName
                readOnly: true
              gitRepo:
                repository: repository
                directory: directory
                revision: revision
              portworxVolume:
                volumeID: volumeID
                readOnly: true
                fsType: fsType
              vsphereVolume:
                storagePolicyName: storagePolicyName
                storagePolicyID: storagePolicyID
                volumePath: volumePath
                fsType: fsType
              fc:
                lun: 9
                targetWWNs:
                - targetWWNs
                - targetWWNs
                readOnly: true
                wwids:
                - wwids
                - wwids
                fsType: fsType
              hostPath:
                path: path
                type: "{}"
            - quobyte:
                volume: volume
                registry: registry
                readOnly: true
                user: user
                group: group
              azureFile:
                secretName: secretName
                readOnly: true
                shareName: shareName
              flexVolume:
                driver: driver
                options: "{}"
                secretRef:
                  name: name
                readOnly: true
                fsType: fsType
              secret:
                secretName: secretName
                defaultMode: 2
                optional: true
                items:
                - mode: 9
                  path: path
                  key: key
                - mode: 9
                  path: path
                  key: key
              projected:
                sources:
                - downwardAPI:
                    items:
                    - mode: 8
                      path: path
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                    - mode: 8
                      path: path
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  configMap:
                    name: name
                    optional: true
                    items:
                    - mode: 9
                      path: path
                      key: key
                    - mode: 9
                      path: path
                      key: key
                  secret:
                    name: name
                    optional: true
                    items:
                    - mode: 9
                      path: path
                      key: key
                    - mode: 9
                      path: path
                      key: key
                  serviceAccountToken:
                    path: path
                    audience: audience
                    expirationSeconds: 1
                - downwardAPI:
                    items:
                    - mode: 8
                      path: path
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                    - mode: 8
                      path: path
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  configMap:
                    name: name
                    optional: true
                    items:
                    - mode: 9
                      path: path
                      key: key
                    - mode: 9
                      path: path
                      key: key
                  secret:
                    name: name
                    optional: true
                    items:
                    - mode: 9
                      path: path
                      key: key
                    - mode: 9
                      path: path
                      key: key
                  serviceAccountToken:
                    path: path
                    audience: audience
                    expirationSeconds: 1
                defaultMode: 6
              cephfs:
                path: path
                secretRef:
                  name: name
                secretFile: secretFile
                readOnly: true
                user: user
                monitors:
                - monitors
                - monitors
              scaleIO:
                system: system
                protectionDomain: protectionDomain
                sslEnabled: true
                storageMode: storageMode
                volumeName: volumeName
                secretRef:
                  name: name
                readOnly: true
                fsType: fsType
                storagePool: storagePool
                gateway: gateway
              emptyDir:
                sizeLimit: sizeLimit
                medium: medium
              glusterfs:
                path: path
                endpoints: endpoints
                readOnly: true
              gcePersistentDisk:
                partition: 6
                readOnly: true
                pdName: pdName
                fsType: fsType
              photonPersistentDisk:
                pdID: pdID
                fsType: fsType
              azureDisk:
                diskName: diskName
                kind: "{}"
                readOnly: true
                cachingMode: "{}"
                diskURI: diskURI
                fsType: fsType
              cinder:
                secretRef:
                  name: name
                volumeID: volumeID
                readOnly: true
                fsType: fsType
              downwardAPI:
                defaultMode: 6
                items:
                - mode: 8
                  path: path
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
                - mode: 8
                  path: path
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              awsElasticBlockStore:
                partition: 5
                volumeID: volumeID
                readOnly: true
                fsType: fsType
              flocker:
                datasetName: datasetName
                datasetUUID: datasetUUID
              iscsi:
                chapAuthSession: true
                iscsiInterface: iscsiInterface
                lun: 3
                chapAuthDiscovery: true
                iqn: iqn
                portals:
                - portals
                - portals
                secretRef:
                  name: name
                initiatorName: initiatorName
                readOnly: true
                fsType: fsType
                targetPortal: targetPortal
              rbd:
                image: image
                pool: pool
                secretRef:
                  name: name
                readOnly: true
                fsType: fsType
                keyring: keyring
                user: user
                monitors:
                - monitors
                - monitors
              configMap:
                defaultMode: 9
                name: name
                optional: true
                items:
                - mode: 9
                  path: path
                  key: key
                - mode: 9
                  path: path
                  key: key
              storageos:
                volumeNamespace: volumeNamespace
                volumeName: volumeName
                secretRef:
                  name: name
                readOnly: true
                fsType: fsType
              name: name
              nfs:
                path: path
                server: server
                readOnly: true
              persistentVolumeClaim:
                claimName: claimName
                readOnly: true
              gitRepo:
                repository: repository
                directory: directory
                revision: revision
              portworxVolume:
                volumeID: volumeID
                readOnly: true
                fsType: fsType
              vsphereVolume:
                storagePolicyName: storagePolicyName
                storagePolicyID: storagePolicyID
                volumePath: volumePath
                fsType: fsType
              fc:
                lun: 9
                targetWWNs:
                - targetWWNs
                - targetWWNs
                readOnly: true
                wwids:
                - wwids
                - wwids
                fsType: fsType
              hostPath:
                path: path
                type: "{}"
            serviceAccount: serviceAccount
            priority: 1
            restartPolicy: restartPolicy
            shareProcessNamespace: true
            subdomain: subdomain
            containers:
            - volumeDevices:
              - devicePath: devicePath
                name: name
              - devicePath: devicePath
                name: name
              image: image
              imagePullPolicy: imagePullPolicy
              livenessProbe:
                failureThreshold: 5
                periodSeconds: 2
                tcpSocket:
                  port: port
                  host: host
                timeoutSeconds: 9
                successThreshold: 7
                initialDelaySeconds: 5
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: port
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              stdin: true
              terminationMessagePolicy: terminationMessagePolicy
              terminationMessagePath: terminationMessagePath
              workingDir: workingDir
              resources:
                requests: "{}"
                limits: "{}"
              securityContext:
                privileged: true
                runAsUser: 7
                capabilities:
                  add:
                  - "{}"
                  - "{}"
                  drop:
                  - "{}"
                  - "{}"
                seLinuxOptions:
                  role: role
                  level: level
                  type: type
                  user: user
                allowPrivilegeEscalation: true
                runAsGroup: 4
                runAsNonRoot: true
                readOnlyRootFilesystem: true
              env:
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    name: name
                    optional: true
                    key: key
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  configMapKeyRef:
                    name: name
                    optional: true
                    key: key
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    name: name
                    optional: true
                    key: key
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  configMapKeyRef:
                    name: name
                    optional: true
                    key: key
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              ports:
              - protocol: protocol
                hostIP: hostIP
                name: name
                containerPort: 3
                hostPort: 2
              - protocol: protocol
                hostIP: hostIP
                name: name
                containerPort: 3
                hostPort: 2
              command:
              - command
              - command
              volumeMounts:
              - mountPath: mountPath
                mountPropagation: "{}"
                name: name
                readOnly: true
                subPath: subPath
              - mountPath: mountPath
                mountPropagation: "{}"
                name: name
                readOnly: true
                subPath: subPath
              args:
              - args
              - args
              lifecycle:
                postStart:
                  tcpSocket:
                    port: port
                    host: host
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: port
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
                preStop:
                  tcpSocket:
                    port: port
                    host: host
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: port
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
              name: name
              tty: true
              readinessProbe:
                failureThreshold: 5
                periodSeconds: 2
                tcpSocket:
                  port: port
                  host: host
                timeoutSeconds: 9
                successThreshold: 7
                initialDelaySeconds: 5
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: port
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              stdinOnce: true
              envFrom:
              - configMapRef:
                  name: name
                  optional: true
                prefix: prefix
                secretRef:
                  name: name
                  optional: true
              - configMapRef:
                  name: name
                  optional: true
                prefix: prefix
                secretRef:
                  name: name
                  optional: true
            - volumeDevices:
              - devicePath: devicePath
                name: name
              - devicePath: devicePath
                name: name
              image: image
              imagePullPolicy: imagePullPolicy
              livenessProbe:
                failureThreshold: 5
                periodSeconds: 2
                tcpSocket:
                  port: port
                  host: host
                timeoutSeconds: 9
                successThreshold: 7
                initialDelaySeconds: 5
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: port
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              stdin: true
              terminationMessagePolicy: terminationMessagePolicy
              terminationMessagePath: terminationMessagePath
              workingDir: workingDir
              resources:
                requests: "{}"
                limits: "{}"
              securityContext:
                privileged: true
                runAsUser: 7
                capabilities:
                  add:
                  - "{}"
                  - "{}"
                  drop:
                  - "{}"
                  - "{}"
                seLinuxOptions:
                  role: role
                  level: level
                  type: type
                  user: user
                allowPrivilegeEscalation: true
                runAsGroup: 4
                runAsNonRoot: true
                readOnlyRootFilesystem: true
              env:
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    name: name
                    optional: true
                    key: key
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  configMapKeyRef:
                    name: name
                    optional: true
                    key: key
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    name: name
                    optional: true
                    key: key
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  configMapKeyRef:
                    name: name
                    optional: true
                    key: key
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              ports:
              - protocol: protocol
                hostIP: hostIP
                name: name
                containerPort: 3
                hostPort: 2
              - protocol: protocol
                hostIP: hostIP
                name: name
                containerPort: 3
                hostPort: 2
              command:
              - command
              - command
              volumeMounts:
              - mountPath: mountPath
                mountPropagation: "{}"
                name: name
                readOnly: true
                subPath: subPath
              - mountPath: mountPath
                mountPropagation: "{}"
                name: name
                readOnly: true
                subPath: subPath
              args:
              - args
              - args
              lifecycle:
                postStart:
                  tcpSocket:
                    port: port
                    host: host
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: port
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
                preStop:
                  tcpSocket:
                    port: port
                    host: host
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: port
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
              name: name
              tty: true
              readinessProbe:
                failureThreshold: 5
                periodSeconds: 2
                tcpSocket:
                  port: port
                  host: host
                timeoutSeconds: 9
                successThreshold: 7
                initialDelaySeconds: 5
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: port
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              stdinOnce: true
              envFrom:
              - configMapRef:
                  name: name
                  optional: true
                prefix: prefix
                secretRef:
                  name: name
                  optional: true
              - configMapRef:
                  name: name
                  optional: true
                prefix: prefix
                secretRef:
                  name: name
                  optional: true
            initContainers:
            - volumeDevices:
              - devicePath: devicePath
                name: name
              - devicePath: devicePath
                name: name
              image: image
              imagePullPolicy: imagePullPolicy
              livenessProbe:
                failureThreshold: 5
                periodSeconds: 2
                tcpSocket:
                  port: port
                  host: host
                timeoutSeconds: 9
                successThreshold: 7
                initialDelaySeconds: 5
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: port
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              stdin: true
              terminationMessagePolicy: terminationMessagePolicy
              terminationMessagePath: terminationMessagePath
              workingDir: workingDir
              resources:
                requests: "{}"
                limits: "{}"
              securityContext:
                privileged: true
                runAsUser: 7
                capabilities:
                  add:
                  - "{}"
                  - "{}"
                  drop:
                  - "{}"
                  - "{}"
                seLinuxOptions:
                  role: role
                  level: level
                  type: type
                  user: user
                allowPrivilegeEscalation: true
                runAsGroup: 4
                runAsNonRoot: true
                readOnlyRootFilesystem: true
              env:
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    name: name
                    optional: true
                    key: key
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  configMapKeyRef:
                    name: name
                    optional: true
                    key: key
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    name: name
                    optional: true
                    key: key
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  configMapKeyRef:
                    name: name
                    optional: true
                    key: key
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              ports:
              - protocol: protocol
                hostIP: hostIP
                name: name
                containerPort: 3
                hostPort: 2
              - protocol: protocol
                hostIP: hostIP
                name: name
                containerPort: 3
                hostPort: 2
              command:
              - command
              - command
              volumeMounts:
              - mountPath: mountPath
                mountPropagation: "{}"
                name: name
                readOnly: true
                subPath: subPath
              - mountPath: mountPath
                mountPropagation: "{}"
                name: name
                readOnly: true
                subPath: subPath
              args:
              - args
              - args
              lifecycle:
                postStart:
                  tcpSocket:
                    port: port
                    host: host
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: port
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
                preStop:
                  tcpSocket:
                    port: port
                    host: host
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: port
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
              name: name
              tty: true
              readinessProbe:
                failureThreshold: 5
                periodSeconds: 2
                tcpSocket:
                  port: port
                  host: host
                timeoutSeconds: 9
                successThreshold: 7
                initialDelaySeconds: 5
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: port
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              stdinOnce: true
              envFrom:
              - configMapRef:
                  name: name
                  optional: true
                prefix: prefix
                secretRef:
                  name: name
                  optional: true
              - configMapRef:
                  name: name
                  optional: true
                prefix: prefix
                secretRef:
                  name: name
                  optional: true
            - volumeDevices:
              - devicePath: devicePath
                name: name
              - devicePath: devicePath
                name: name
              image: image
              imagePullPolicy: imagePullPolicy
              livenessProbe:
                failureThreshold: 5
                periodSeconds: 2
                tcpSocket:
                  port: port
                  host: host
                timeoutSeconds: 9
                successThreshold: 7
                initialDelaySeconds: 5
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: port
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              stdin: true
              terminationMessagePolicy: terminationMessagePolicy
              terminationMessagePath: terminationMessagePath
              workingDir: workingDir
              resources:
                requests: "{}"
                limits: "{}"
              securityContext:
                privileged: true
                runAsUser: 7
                capabilities:
                  add:
                  - "{}"
                  - "{}"
                  drop:
                  - "{}"
                  - "{}"
                seLinuxOptions:
                  role: role
                  level: level
                  type: type
                  user: user
                allowPrivilegeEscalation: true
                runAsGroup: 4
                runAsNonRoot: true
                readOnlyRootFilesystem: true
              env:
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    name: name
                    optional: true
                    key: key
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  configMapKeyRef:
                    name: name
                    optional: true
                    key: key
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    name: name
                    optional: true
                    key: key
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  configMapKeyRef:
                    name: name
                    optional: true
                    key: key
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              ports:
              - protocol: protocol
                hostIP: hostIP
                name: name
                containerPort: 3
                hostPort: 2
              - protocol: protocol
                hostIP: hostIP
                name: name
                containerPort: 3
                hostPort: 2
              command:
              - command
              - command
              volumeMounts:
              - mountPath: mountPath
                mountPropagation: "{}"
                name: name
                readOnly: true
                subPath: subPath
              - mountPath: mountPath
                mountPropagation: "{}"
                name: name
                readOnly: true
                subPath: subPath
              args:
              - args
              - args
              lifecycle:
                postStart:
                  tcpSocket:
                    port: port
                    host: host
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: port
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
                preStop:
                  tcpSocket:
                    port: port
                    host: host
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: port
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
              name: name
              tty: true
              readinessProbe:
                failureThreshold: 5
                periodSeconds: 2
                tcpSocket:
                  port: port
                  host: host
                timeoutSeconds: 9
                successThreshold: 7
                initialDelaySeconds: 5
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: port
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              stdinOnce: true
              envFrom:
              - configMapRef:
                  name: name
                  optional: true
                prefix: prefix
                secretRef:
                  name: name
                  optional: true
              - configMapRef:
                  name: name
                  optional: true
                prefix: prefix
                secretRef:
                  name: name
                  optional: true
            affinity:
              nodeAffinity:
                requiredDuringSchedulingIgnoredDuringExecution:
                  nodeSelectorTerms:
                  - matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchFields:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                  - matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchFields:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                preferredDuringSchedulingIgnoredDuringExecution:
                - preference:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchFields:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                  weight: 6
                - preference:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchFields:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                  weight: 6
              podAffinity:
                requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchLabels: "{}"
                  topologyKey: topologyKey
                  namespaces:
                  - namespaces
                  - namespaces
                - labelSelector:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchLabels: "{}"
                  topologyKey: topologyKey
                  namespaces:
                  - namespaces
                  - namespaces
                preferredDuringSchedulingIgnoredDuringExecution:
                - podAffinityTerm:
                    labelSelector:
                      matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchLabels: "{}"
                    topologyKey: topologyKey
                    namespaces:
                    - namespaces
                    - namespaces
                  weight: 1
                - podAffinityTerm:
                    labelSelector:
                      matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchLabels: "{}"
                    topologyKey: topologyKey
                    namespaces:
                    - namespaces
                    - namespaces
                  weight: 1
              podAntiAffinity:
                requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchLabels: "{}"
                  topologyKey: topologyKey
                  namespaces:
                  - namespaces
                  - namespaces
                - labelSelector:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchLabels: "{}"
                  topologyKey: topologyKey
                  namespaces:
                  - namespaces
                  - namespaces
                preferredDuringSchedulingIgnoredDuringExecution:
                - podAffinityTerm:
                    labelSelector:
                      matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchLabels: "{}"
                    topologyKey: topologyKey
                    namespaces:
                    - namespaces
                    - namespaces
                  weight: 1
                - podAffinityTerm:
                    labelSelector:
                      matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchLabels: "{}"
                    topologyKey: topologyKey
                    namespaces:
                    - namespaces
                    - namespaces
                  weight: 1
            hostPID: true
        replicas: 6
        selector:
          matchExpressions:
          - values:
            - values
            - values
            key: key
            operator: operator
          - values:
            - values
            - values
            key: key
            operator: operator
          matchLabels: "{}"
        minReadySeconds: 0
      properties:
        minReadySeconds:
          description: "Minimum number of seconds for which a newly created pod should\
            \ be ready without any of its container crashing, for it to be considered\
            \ available. Defaults to 0 (pod will be considered available as soon as\
            \ it is ready)"
          format: int32
          type: integer
        replicas:
          description: "Replicas is the number of desired replicas. This is a pointer\
            \ to distinguish between explicit zero and unspecified. Defaults to 1.\
            \ More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller/#what-is-a-replicationcontroller"
          format: int32
          type: integer
        selector:
          $ref: '#/components/schemas/v1.LabelSelector'
        template:
          $ref: '#/components/schemas/v1.PodTemplateSpec'
      required:
      - selector
      type: object
    v1.ReplicaSetStatus:
      description: ReplicaSetStatus represents the current status of a ReplicaSet.
      example:
        fullyLabeledReplicas: 5
        replicas: 7
        readyReplicas: 2
        conditions:
        - reason: reason
          lastTransitionTime: lastTransitionTime
          message: message
          type: type
          status: status
        - reason: reason
          lastTransitionTime: lastTransitionTime
          message: message
          type: type
          status: status
        availableReplicas: 1
        observedGeneration: 5
      properties:
        availableReplicas:
          description: The number of available replicas (ready for at least minReadySeconds)
            for this replica set.
          format: int32
          type: integer
        conditions:
          description: Represents the latest available observations of a replica set's
            current state.
          items:
            $ref: '#/components/schemas/v1.ReplicaSetCondition'
          type: array
        fullyLabeledReplicas:
          description: The number of pods that have labels matching the labels of
            the pod template of the replicaset.
          format: int32
          type: integer
        observedGeneration:
          description: ObservedGeneration reflects the generation of the most recently
            observed ReplicaSet.
          format: int64
          type: integer
        readyReplicas:
          description: The number of ready replicas for this replica set.
          format: int32
          type: integer
        replicas:
          description: "Replicas is the most recently oberved number of replicas.\
            \ More info: https://kubernetes.io/docs/concepts/workloads/controllers/replicationcontroller/#what-is-a-replicationcontroller"
          format: int32
          type: integer
      required:
      - replicas
      type: object
    v1.RollingUpdateDaemonSet:
      description: Spec to control the desired behavior of daemon set rolling update.
      properties:
        maxUnavailable:
          description: "The maximum number of DaemonSet pods that can be unavailable\
            \ during the update. Value can be an absolute number (ex: 5) or a percentage\
            \ of total number of DaemonSet pods at the start of the update (ex: 10%).\
            \ Absolute number is calculated from percentage by rounding up. This cannot\
            \ be 0. Default value is 1. Example: when this is set to 30%, at most\
            \ 30% of the total number of nodes that should be running the daemon pod\
            \ (i.e. status.desiredNumberScheduled) can have their pods stopped for\
            \ an update at any given time. The update starts by stopping at most 30%\
            \ of those DaemonSet pods and then brings up new DaemonSet pods in their\
            \ place. Once the new pods are available, it then proceeds onto other\
            \ DaemonSet pods, thus ensuring that at least 70% of original number of\
            \ DaemonSet pods are available at all times during the update."
          type: string
      type: object
    v1.RollingUpdateDeployment:
      description: Spec to control the desired behavior of rolling update.
      example:
        maxSurge: maxSurge
        maxUnavailable: maxUnavailable
      properties:
        maxSurge:
          description: "The maximum number of pods that can be scheduled above the\
            \ desired number of pods. Value can be an absolute number (ex: 5) or a\
            \ percentage of desired pods (ex: 10%). This can not be 0 if MaxUnavailable\
            \ is 0. Absolute number is calculated from percentage by rounding up.\
            \ Defaults to 25%. Example: when this is set to 30%, the new ReplicaSet\
            \ can be scaled up immediately when the rolling update starts, such that\
            \ the total number of old and new pods do not exceed 130% of desired pods.\
            \ Once old pods have been killed, new ReplicaSet can be scaled up further,\
            \ ensuring that total number of pods running at any time during the update\
            \ is at most 130% of desired pods."
          type: string
        maxUnavailable:
          description: "The maximum number of pods that can be unavailable during\
            \ the update. Value can be an absolute number (ex: 5) or a percentage\
            \ of desired pods (ex: 10%). Absolute number is calculated from percentage\
            \ by rounding down. This can not be 0 if MaxSurge is 0. Defaults to 25%.\
            \ Example: when this is set to 30%, the old ReplicaSet can be scaled down\
            \ to 70% of desired pods immediately when the rolling update starts. Once\
            \ new pods are ready, old ReplicaSet can be scaled down further, followed\
            \ by scaling up the new ReplicaSet, ensuring that the total number of\
            \ pods available at all times during the update is at least 70% of desired\
            \ pods."
          type: string
      type: object
    v1.RollingUpdateStatefulSetStrategy:
      description: RollingUpdateStatefulSetStrategy is used to communicate parameter
        for RollingUpdateStatefulSetStrategyType.
      example:
        partition: 1
      properties:
        partition:
          description: Partition indicates the ordinal at which the StatefulSet should
            be partitioned. Default value is 0.
          format: int32
          type: integer
      type: object
    v1.StatefulSet:
      description: |-
        StatefulSet represents a set of pods with consistent identities. Identities are defined as:
         - Network: A single stable DNS and hostname.
         - Storage: As many VolumeClaims as requested.
        The StatefulSet guarantees that a given network identity will always map to the same storage identity.
      example:
        metadata:
          generation: 6
          finalizers:
          - finalizers
          - finalizers
          resourceVersion: resourceVersion
          annotations: "{}"
          generateName: generateName
          deletionTimestamp: deletionTimestamp
          labels: "{}"
          ownerReferences:
          - uid: uid
            controller: true
            apiVersion: apiVersion
            kind: kind
            name: name
            blockOwnerDeletion: true
          - uid: uid
            controller: true
            apiVersion: apiVersion
            kind: kind
            name: name
            blockOwnerDeletion: true
          selfLink: selfLink
          deletionGracePeriodSeconds: 0
          uid: uid
          initializers:
            result:
              reason: reason
              metadata:
                continue: continue
                resourceVersion: resourceVersion
                selfLink: selfLink
              apiVersion: apiVersion
              code: 1
              kind: kind
              details:
                uid: uid
                kind: kind
                causes:
                - reason: reason
                  field: field
                  message: message
                - reason: reason
                  field: field
                  message: message
                retryAfterSeconds: 5
                name: name
                group: group
              message: message
              status: status
            pending:
            - name: name
            - name: name
          clusterName: clusterName
          creationTimestamp: creationTimestamp
          name: name
          namespace: namespace
        apiVersion: apiVersion
        kind: kind
        spec:
          template:
            metadata:
              generation: 6
              finalizers:
              - finalizers
              - finalizers
              resourceVersion: resourceVersion
              annotations: "{}"
              generateName: generateName
              deletionTimestamp: deletionTimestamp
              labels: "{}"
              ownerReferences:
              - uid: uid
                controller: true
                apiVersion: apiVersion
                kind: kind
                name: name
                blockOwnerDeletion: true
              - uid: uid
                controller: true
                apiVersion: apiVersion
                kind: kind
                name: name
                blockOwnerDeletion: true
              selfLink: selfLink
              deletionGracePeriodSeconds: 0
              uid: uid
              initializers:
                result:
                  reason: reason
                  metadata:
                    continue: continue
                    resourceVersion: resourceVersion
                    selfLink: selfLink
                  apiVersion: apiVersion
                  code: 1
                  kind: kind
                  details:
                    uid: uid
                    kind: kind
                    causes:
                    - reason: reason
                      field: field
                      message: message
                    - reason: reason
                      field: field
                      message: message
                    retryAfterSeconds: 5
                    name: name
                    group: group
                  message: message
                  status: status
                pending:
                - name: name
                - name: name
              clusterName: clusterName
              creationTimestamp: creationTimestamp
              name: name
              namespace: namespace
            spec:
              dnsPolicy: dnsPolicy
              nodeName: nodeName
              terminationGracePeriodSeconds: 1
              dnsConfig:
                searches:
                - searches
                - searches
                nameservers:
                - nameservers
                - nameservers
                options:
                - name: name
                  value: value
                - name: name
                  value: value
              hostNetwork: true
              readinessGates:
              - conditionType: conditionType
              - conditionType: conditionType
              serviceAccountName: serviceAccountName
              imagePullSecrets:
              - name: name
              - name: name
              priorityClassName: priorityClassName
              hostAliases:
              - ip: ip
                hostnames:
                - hostnames
                - hostnames
              - ip: ip
                hostnames:
                - hostnames
                - hostnames
              securityContext:
                runAsUser: 6
                seLinuxOptions:
                  role: role
                  level: level
                  type: type
                  user: user
                fsGroup: 1
                supplementalGroups:
                - 7
                - 7
                runAsGroup: 1
                runAsNonRoot: true
                sysctls:
                - name: name
                  value: value
                - name: name
                  value: value
              nodeSelector: "{}"
              hostname: hostname
              tolerations:
              - effect: effect
                tolerationSeconds: 4
                value: value
                key: key
                operator: operator
              - effect: effect
                tolerationSeconds: 4
                value: value
                key: key
                operator: operator
              automountServiceAccountToken: true
              schedulerName: schedulerName
              activeDeadlineSeconds: 0
              hostIPC: true
              volumes:
              - quobyte:
                  volume: volume
                  registry: registry
                  readOnly: true
                  user: user
                  group: group
                azureFile:
                  secretName: secretName
                  readOnly: true
                  shareName: shareName
                flexVolume:
                  driver: driver
                  options: "{}"
                  secretRef:
                    name: name
                  readOnly: true
                  fsType: fsType
                secret:
                  secretName: secretName
                  defaultMode: 2
                  optional: true
                  items:
                  - mode: 9
                    path: path
                    key: key
                  - mode: 9
                    path: path
                    key: key
                projected:
                  sources:
                  - downwardAPI:
                      items:
                      - mode: 8
                        path: path
                        resourceFieldRef:
                          divisor: divisor
                          resource: resource
                          containerName: containerName
                        fieldRef:
                          apiVersion: apiVersion
                          fieldPath: fieldPath
                      - mode: 8
                        path: path
                        resourceFieldRef:
                          divisor: divisor
                          resource: resource
                          containerName: containerName
                        fieldRef:
                          apiVersion: apiVersion
                          fieldPath: fieldPath
                    configMap:
                      name: name
                      optional: true
                      items:
                      - mode: 9
                        path: path
                        key: key
                      - mode: 9
                        path: path
                        key: key
                    secret:
                      name: name
                      optional: true
                      items:
                      - mode: 9
                        path: path
                        key: key
                      - mode: 9
                        path: path
                        key: key
                    serviceAccountToken:
                      path: path
                      audience: audience
                      expirationSeconds: 1
                  - downwardAPI:
                      items:
                      - mode: 8
                        path: path
                        resourceFieldRef:
                          divisor: divisor
                          resource: resource
                          containerName: containerName
                        fieldRef:
                          apiVersion: apiVersion
                          fieldPath: fieldPath
                      - mode: 8
                        path: path
                        resourceFieldRef:
                          divisor: divisor
                          resource: resource
                          containerName: containerName
                        fieldRef:
                          apiVersion: apiVersion
                          fieldPath: fieldPath
                    configMap:
                      name: name
                      optional: true
                      items:
                      - mode: 9
                        path: path
                        key: key
                      - mode: 9
                        path: path
                        key: key
                    secret:
                      name: name
                      optional: true
                      items:
                      - mode: 9
                        path: path
                        key: key
                      - mode: 9
                        path: path
                        key: key
                    serviceAccountToken:
                      path: path
                      audience: audience
                      expirationSeconds: 1
                  defaultMode: 6
                cephfs:
                  path: path
                  secretRef:
                    name: name
                  secretFile: secretFile
                  readOnly: true
                  user: user
                  monitors:
                  - monitors
                  - monitors
                scaleIO:
                  system: system
                  protectionDomain: protectionDomain
                  sslEnabled: true
                  storageMode: storageMode
                  volumeName: volumeName
                  secretRef:
                    name: name
                  readOnly: true
                  fsType: fsType
                  storagePool: storagePool
                  gateway: gateway
                emptyDir:
                  sizeLimit: sizeLimit
                  medium: medium
                glusterfs:
                  path: path
                  endpoints: endpoints
                  readOnly: true
                gcePersistentDisk:
                  partition: 6
                  readOnly: true
                  pdName: pdName
                  fsType: fsType
                photonPersistentDisk:
                  pdID: pdID
                  fsType: fsType
                azureDisk:
                  diskName: diskName
                  kind: "{}"
                  readOnly: true
                  cachingMode: "{}"
                  diskURI: diskURI
                  fsType: fsType
                cinder:
                  secretRef:
                    name: name
                  volumeID: volumeID
                  readOnly: true
                  fsType: fsType
                downwardAPI:
                  defaultMode: 6
                  items:
                  - mode: 8
                    path: path
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                  - mode: 8
                    path: path
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                awsElasticBlockStore:
                  partition: 5
                  volumeID: volumeID
                  readOnly: true
                  fsType: fsType
                flocker:
                  datasetName: datasetName
                  datasetUUID: datasetUUID
                iscsi:
                  chapAuthSession: true
                  iscsiInterface: iscsiInterface
                  lun: 3
                  chapAuthDiscovery: true
                  iqn: iqn
                  portals:
                  - portals
                  - portals
                  secretRef:
                    name: name
                  initiatorName: initiatorName
                  readOnly: true
                  fsType: fsType
                  targetPortal: targetPortal
                rbd:
                  image: image
                  pool: pool
                  secretRef:
                    name: name
                  readOnly: true
                  fsType: fsType
                  keyring: keyring
                  user: user
                  monitors:
                  - monitors
                  - monitors
                configMap:
                  defaultMode: 9
                  name: name
                  optional: true
                  items:
                  - mode: 9
                    path: path
                    key: key
                  - mode: 9
                    path: path
                    key: key
                storageos:
                  volumeNamespace: volumeNamespace
                  volumeName: volumeName
                  secretRef:
                    name: name
                  readOnly: true
                  fsType: fsType
                name: name
                nfs:
                  path: path
                  server: server
                  readOnly: true
                persistentVolumeClaim:
                  claimName: claimName
                  readOnly: true
                gitRepo:
                  repository: repository
                  directory: directory
                  revision: revision
                portworxVolume:
                  volumeID: volumeID
                  readOnly: true
                  fsType: fsType
                vsphereVolume:
                  storagePolicyName: storagePolicyName
                  storagePolicyID: storagePolicyID
                  volumePath: volumePath
                  fsType: fsType
                fc:
                  lun: 9
                  targetWWNs:
                  - targetWWNs
                  - targetWWNs
                  readOnly: true
                  wwids:
                  - wwids
                  - wwids
                  fsType: fsType
                hostPath:
                  path: path
                  type: "{}"
              - quobyte:
                  volume: volume
                  registry: registry
                  readOnly: true
                  user: user
                  group: group
                azureFile:
                  secretName: secretName
                  readOnly: true
                  shareName: shareName
                flexVolume:
                  driver: driver
                  options: "{}"
                  secretRef:
                    name: name
                  readOnly: true
                  fsType: fsType
                secret:
                  secretName: secretName
                  defaultMode: 2
                  optional: true
                  items:
                  - mode: 9
                    path: path
                    key: key
                  - mode: 9
                    path: path
                    key: key
                projected:
                  sources:
                  - downwardAPI:
                      items:
                      - mode: 8
                        path: path
                        resourceFieldRef:
                          divisor: divisor
                          resource: resource
                          containerName: containerName
                        fieldRef:
                          apiVersion: apiVersion
                          fieldPath: fieldPath
                      - mode: 8
                        path: path
                        resourceFieldRef:
                          divisor: divisor
                          resource: resource
                          containerName: containerName
                        fieldRef:
                          apiVersion: apiVersion
                          fieldPath: fieldPath
                    configMap:
                      name: name
                      optional: true
                      items:
                      - mode: 9
                        path: path
                        key: key
                      - mode: 9
                        path: path
                        key: key
                    secret:
                      name: name
                      optional: true
                      items:
                      - mode: 9
                        path: path
                        key: key
                      - mode: 9
                        path: path
                        key: key
                    serviceAccountToken:
                      path: path
                      audience: audience
                      expirationSeconds: 1
                  - downwardAPI:
                      items:
                      - mode: 8
                        path: path
                        resourceFieldRef:
                          divisor: divisor
                          resource: resource
                          containerName: containerName
                        fieldRef:
                          apiVersion: apiVersion
                          fieldPath: fieldPath
                      - mode: 8
                        path: path
                        resourceFieldRef:
                          divisor: divisor
                          resource: resource
                          containerName: containerName
                        fieldRef:
                          apiVersion: apiVersion
                          fieldPath: fieldPath
                    configMap:
                      name: name
                      optional: true
                      items:
                      - mode: 9
                        path: path
                        key: key
                      - mode: 9
                        path: path
                        key: key
                    secret:
                      name: name
                      optional: true
                      items:
                      - mode: 9
                        path: path
                        key: key
                      - mode: 9
                        path: path
                        key: key
                    serviceAccountToken:
                      path: path
                      audience: audience
                      expirationSeconds: 1
                  defaultMode: 6
                cephfs:
                  path: path
                  secretRef:
                    name: name
                  secretFile: secretFile
                  readOnly: true
                  user: user
                  monitors:
                  - monitors
                  - monitors
                scaleIO:
                  system: system
                  protectionDomain: protectionDomain
                  sslEnabled: true
                  storageMode: storageMode
                  volumeName: volumeName
                  secretRef:
                    name: name
                  readOnly: true
                  fsType: fsType
                  storagePool: storagePool
                  gateway: gateway
                emptyDir:
                  sizeLimit: sizeLimit
                  medium: medium
                glusterfs:
                  path: path
                  endpoints: endpoints
                  readOnly: true
                gcePersistentDisk:
                  partition: 6
                  readOnly: true
                  pdName: pdName
                  fsType: fsType
                photonPersistentDisk:
                  pdID: pdID
                  fsType: fsType
                azureDisk:
                  diskName: diskName
                  kind: "{}"
                  readOnly: true
                  cachingMode: "{}"
                  diskURI: diskURI
                  fsType: fsType
                cinder:
                  secretRef:
                    name: name
                  volumeID: volumeID
                  readOnly: true
                  fsType: fsType
                downwardAPI:
                  defaultMode: 6
                  items:
                  - mode: 8
                    path: path
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                  - mode: 8
                    path: path
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                awsElasticBlockStore:
                  partition: 5
                  volumeID: volumeID
                  readOnly: true
                  fsType: fsType
                flocker:
                  datasetName: datasetName
                  datasetUUID: datasetUUID
                iscsi:
                  chapAuthSession: true
                  iscsiInterface: iscsiInterface
                  lun: 3
                  chapAuthDiscovery: true
                  iqn: iqn
                  portals:
                  - portals
                  - portals
                  secretRef:
                    name: name
                  initiatorName: initiatorName
                  readOnly: true
                  fsType: fsType
                  targetPortal: targetPortal
                rbd:
                  image: image
                  pool: pool
                  secretRef:
                    name: name
                  readOnly: true
                  fsType: fsType
                  keyring: keyring
                  user: user
                  monitors:
                  - monitors
                  - monitors
                configMap:
                  defaultMode: 9
                  name: name
                  optional: true
                  items:
                  - mode: 9
                    path: path
                    key: key
                  - mode: 9
                    path: path
                    key: key
                storageos:
                  volumeNamespace: volumeNamespace
                  volumeName: volumeName
                  secretRef:
                    name: name
                  readOnly: true
                  fsType: fsType
                name: name
                nfs:
                  path: path
                  server: server
                  readOnly: true
                persistentVolumeClaim:
                  claimName: claimName
                  readOnly: true
                gitRepo:
                  repository: repository
                  directory: directory
                  revision: revision
                portworxVolume:
                  volumeID: volumeID
                  readOnly: true
                  fsType: fsType
                vsphereVolume:
                  storagePolicyName: storagePolicyName
                  storagePolicyID: storagePolicyID
                  volumePath: volumePath
                  fsType: fsType
                fc:
                  lun: 9
                  targetWWNs:
                  - targetWWNs
                  - targetWWNs
                  readOnly: true
                  wwids:
                  - wwids
                  - wwids
                  fsType: fsType
                hostPath:
                  path: path
                  type: "{}"
              serviceAccount: serviceAccount
              priority: 1
              restartPolicy: restartPolicy
              shareProcessNamespace: true
              subdomain: subdomain
              containers:
              - volumeDevices:
                - devicePath: devicePath
                  name: name
                - devicePath: devicePath
                  name: name
                image: image
                imagePullPolicy: imagePullPolicy
                livenessProbe:
                  failureThreshold: 5
                  periodSeconds: 2
                  tcpSocket:
                    port: port
                    host: host
                  timeoutSeconds: 9
                  successThreshold: 7
                  initialDelaySeconds: 5
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: port
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
                stdin: true
                terminationMessagePolicy: terminationMessagePolicy
                terminationMessagePath: terminationMessagePath
                workingDir: workingDir
                resources:
                  requests: "{}"
                  limits: "{}"
                securityContext:
                  privileged: true
                  runAsUser: 7
                  capabilities:
                    add:
                    - "{}"
                    - "{}"
                    drop:
                    - "{}"
                    - "{}"
                  seLinuxOptions:
                    role: role
                    level: level
                    type: type
                    user: user
                  allowPrivilegeEscalation: true
                  runAsGroup: 4
                  runAsNonRoot: true
                  readOnlyRootFilesystem: true
                env:
                - name: name
                  value: value
                  valueFrom:
                    secretKeyRef:
                      name: name
                      optional: true
                      key: key
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    configMapKeyRef:
                      name: name
                      optional: true
                      key: key
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                - name: name
                  value: value
                  valueFrom:
                    secretKeyRef:
                      name: name
                      optional: true
                      key: key
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    configMapKeyRef:
                      name: name
                      optional: true
                      key: key
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                ports:
                - protocol: protocol
                  hostIP: hostIP
                  name: name
                  containerPort: 3
                  hostPort: 2
                - protocol: protocol
                  hostIP: hostIP
                  name: name
                  containerPort: 3
                  hostPort: 2
                command:
                - command
                - command
                volumeMounts:
                - mountPath: mountPath
                  mountPropagation: "{}"
                  name: name
                  readOnly: true
                  subPath: subPath
                - mountPath: mountPath
                  mountPropagation: "{}"
                  name: name
                  readOnly: true
                  subPath: subPath
                args:
                - args
                - args
                lifecycle:
                  postStart:
                    tcpSocket:
                      port: port
                      host: host
                    exec:
                      command:
                      - command
                      - command
                    httpGet:
                      path: path
                      scheme: scheme
                      port: port
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  preStop:
                    tcpSocket:
                      port: port
                      host: host
                    exec:
                      command:
                      - command
                      - command
                    httpGet:
                      path: path
                      scheme: scheme
                      port: port
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                name: name
                tty: true
                readinessProbe:
                  failureThreshold: 5
                  periodSeconds: 2
                  tcpSocket:
                    port: port
                    host: host
                  timeoutSeconds: 9
                  successThreshold: 7
                  initialDelaySeconds: 5
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: port
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
                stdinOnce: true
                envFrom:
                - configMapRef:
                    name: name
                    optional: true
                  prefix: prefix
                  secretRef:
                    name: name
                    optional: true
                - configMapRef:
                    name: name
                    optional: true
                  prefix: prefix
                  secretRef:
                    name: name
                    optional: true
              - volumeDevices:
                - devicePath: devicePath
                  name: name
                - devicePath: devicePath
                  name: name
                image: image
                imagePullPolicy: imagePullPolicy
                livenessProbe:
                  failureThreshold: 5
                  periodSeconds: 2
                  tcpSocket:
                    port: port
                    host: host
                  timeoutSeconds: 9
                  successThreshold: 7
                  initialDelaySeconds: 5
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: port
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
                stdin: true
                terminationMessagePolicy: terminationMessagePolicy
                terminationMessagePath: terminationMessagePath
                workingDir: workingDir
                resources:
                  requests: "{}"
                  limits: "{}"
                securityContext:
                  privileged: true
                  runAsUser: 7
                  capabilities:
                    add:
                    - "{}"
                    - "{}"
                    drop:
                    - "{}"
                    - "{}"
                  seLinuxOptions:
                    role: role
                    level: level
                    type: type
                    user: user
                  allowPrivilegeEscalation: true
                  runAsGroup: 4
                  runAsNonRoot: true
                  readOnlyRootFilesystem: true
                env:
                - name: name
                  value: value
                  valueFrom:
                    secretKeyRef:
                      name: name
                      optional: true
                      key: key
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    configMapKeyRef:
                      name: name
                      optional: true
                      key: key
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                - name: name
                  value: value
                  valueFrom:
                    secretKeyRef:
                      name: name
                      optional: true
                      key: key
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    configMapKeyRef:
                      name: name
                      optional: true
                      key: key
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                ports:
                - protocol: protocol
                  hostIP: hostIP
                  name: name
                  containerPort: 3
                  hostPort: 2
                - protocol: protocol
                  hostIP: hostIP
                  name: name
                  containerPort: 3
                  hostPort: 2
                command:
                - command
                - command
                volumeMounts:
                - mountPath: mountPath
                  mountPropagation: "{}"
                  name: name
                  readOnly: true
                  subPath: subPath
                - mountPath: mountPath
                  mountPropagation: "{}"
                  name: name
                  readOnly: true
                  subPath: subPath
                args:
                - args
                - args
                lifecycle:
                  postStart:
                    tcpSocket:
                      port: port
                      host: host
                    exec:
                      command:
                      - command
                      - command
                    httpGet:
                      path: path
                      scheme: scheme
                      port: port
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  preStop:
                    tcpSocket:
                      port: port
                      host: host
                    exec:
                      command:
                      - command
                      - command
                    httpGet:
                      path: path
                      scheme: scheme
                      port: port
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                name: name
                tty: true
                readinessProbe:
                  failureThreshold: 5
                  periodSeconds: 2
                  tcpSocket:
                    port: port
                    host: host
                  timeoutSeconds: 9
                  successThreshold: 7
                  initialDelaySeconds: 5
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: port
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
                stdinOnce: true
                envFrom:
                - configMapRef:
                    name: name
                    optional: true
                  prefix: prefix
                  secretRef:
                    name: name
                    optional: true
                - configMapRef:
                    name: name
                    optional: true
                  prefix: prefix
                  secretRef:
                    name: name
                    optional: true
              initContainers:
              - volumeDevices:
                - devicePath: devicePath
                  name: name
                - devicePath: devicePath
                  name: name
                image: image
                imagePullPolicy: imagePullPolicy
                livenessProbe:
                  failureThreshold: 5
                  periodSeconds: 2
                  tcpSocket:
                    port: port
                    host: host
                  timeoutSeconds: 9
                  successThreshold: 7
                  initialDelaySeconds: 5
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: port
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
                stdin: true
                terminationMessagePolicy: terminationMessagePolicy
                terminationMessagePath: terminationMessagePath
                workingDir: workingDir
                resources:
                  requests: "{}"
                  limits: "{}"
                securityContext:
                  privileged: true
                  runAsUser: 7
                  capabilities:
                    add:
                    - "{}"
                    - "{}"
                    drop:
                    - "{}"
                    - "{}"
                  seLinuxOptions:
                    role: role
                    level: level
                    type: type
                    user: user
                  allowPrivilegeEscalation: true
                  runAsGroup: 4
                  runAsNonRoot: true
                  readOnlyRootFilesystem: true
                env:
                - name: name
                  value: value
                  valueFrom:
                    secretKeyRef:
                      name: name
                      optional: true
                      key: key
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    configMapKeyRef:
                      name: name
                      optional: true
                      key: key
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                - name: name
                  value: value
                  valueFrom:
                    secretKeyRef:
                      name: name
                      optional: true
                      key: key
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    configMapKeyRef:
                      name: name
                      optional: true
                      key: key
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                ports:
                - protocol: protocol
                  hostIP: hostIP
                  name: name
                  containerPort: 3
                  hostPort: 2
                - protocol: protocol
                  hostIP: hostIP
                  name: name
                  containerPort: 3
                  hostPort: 2
                command:
                - command
                - command
                volumeMounts:
                - mountPath: mountPath
                  mountPropagation: "{}"
                  name: name
                  readOnly: true
                  subPath: subPath
                - mountPath: mountPath
                  mountPropagation: "{}"
                  name: name
                  readOnly: true
                  subPath: subPath
                args:
                - args
                - args
                lifecycle:
                  postStart:
                    tcpSocket:
                      port: port
                      host: host
                    exec:
                      command:
                      - command
                      - command
                    httpGet:
                      path: path
                      scheme: scheme
                      port: port
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  preStop:
                    tcpSocket:
                      port: port
                      host: host
                    exec:
                      command:
                      - command
                      - command
                    httpGet:
                      path: path
                      scheme: scheme
                      port: port
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                name: name
                tty: true
                readinessProbe:
                  failureThreshold: 5
                  periodSeconds: 2
                  tcpSocket:
                    port: port
                    host: host
                  timeoutSeconds: 9
                  successThreshold: 7
                  initialDelaySeconds: 5
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: port
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
                stdinOnce: true
                envFrom:
                - configMapRef:
                    name: name
                    optional: true
                  prefix: prefix
                  secretRef:
                    name: name
                    optional: true
                - configMapRef:
                    name: name
                    optional: true
                  prefix: prefix
                  secretRef:
                    name: name
                    optional: true
              - volumeDevices:
                - devicePath: devicePath
                  name: name
                - devicePath: devicePath
                  name: name
                image: image
                imagePullPolicy: imagePullPolicy
                livenessProbe:
                  failureThreshold: 5
                  periodSeconds: 2
                  tcpSocket:
                    port: port
                    host: host
                  timeoutSeconds: 9
                  successThreshold: 7
                  initialDelaySeconds: 5
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: port
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
                stdin: true
                terminationMessagePolicy: terminationMessagePolicy
                terminationMessagePath: terminationMessagePath
                workingDir: workingDir
                resources:
                  requests: "{}"
                  limits: "{}"
                securityContext:
                  privileged: true
                  runAsUser: 7
                  capabilities:
                    add:
                    - "{}"
                    - "{}"
                    drop:
                    - "{}"
                    - "{}"
                  seLinuxOptions:
                    role: role
                    level: level
                    type: type
                    user: user
                  allowPrivilegeEscalation: true
                  runAsGroup: 4
                  runAsNonRoot: true
                  readOnlyRootFilesystem: true
                env:
                - name: name
                  value: value
                  valueFrom:
                    secretKeyRef:
                      name: name
                      optional: true
                      key: key
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    configMapKeyRef:
                      name: name
                      optional: true
                      key: key
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                - name: name
                  value: value
                  valueFrom:
                    secretKeyRef:
                      name: name
                      optional: true
                      key: key
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    configMapKeyRef:
                      name: name
                      optional: true
                      key: key
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                ports:
                - protocol: protocol
                  hostIP: hostIP
                  name: name
                  containerPort: 3
                  hostPort: 2
                - protocol: protocol
                  hostIP: hostIP
                  name: name
                  containerPort: 3
                  hostPort: 2
                command:
                - command
                - command
                volumeMounts:
                - mountPath: mountPath
                  mountPropagation: "{}"
                  name: name
                  readOnly: true
                  subPath: subPath
                - mountPath: mountPath
                  mountPropagation: "{}"
                  name: name
                  readOnly: true
                  subPath: subPath
                args:
                - args
                - args
                lifecycle:
                  postStart:
                    tcpSocket:
                      port: port
                      host: host
                    exec:
                      command:
                      - command
                      - command
                    httpGet:
                      path: path
                      scheme: scheme
                      port: port
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  preStop:
                    tcpSocket:
                      port: port
                      host: host
                    exec:
                      command:
                      - command
                      - command
                    httpGet:
                      path: path
                      scheme: scheme
                      port: port
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                name: name
                tty: true
                readinessProbe:
                  failureThreshold: 5
                  periodSeconds: 2
                  tcpSocket:
                    port: port
                    host: host
                  timeoutSeconds: 9
                  successThreshold: 7
                  initialDelaySeconds: 5
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: port
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
                stdinOnce: true
                envFrom:
                - configMapRef:
                    name: name
                    optional: true
                  prefix: prefix
                  secretRef:
                    name: name
                    optional: true
                - configMapRef:
                    name: name
                    optional: true
                  prefix: prefix
                  secretRef:
                    name: name
                    optional: true
              affinity:
                nodeAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                    nodeSelectorTerms:
                    - matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchFields:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                    - matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchFields:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                  preferredDuringSchedulingIgnoredDuringExecution:
                  - preference:
                      matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchFields:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                    weight: 6
                  - preference:
                      matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchFields:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                    weight: 6
                podAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                  - labelSelector:
                      matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchLabels: "{}"
                    topologyKey: topologyKey
                    namespaces:
                    - namespaces
                    - namespaces
                  - labelSelector:
                      matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchLabels: "{}"
                    topologyKey: topologyKey
                    namespaces:
                    - namespaces
                    - namespaces
                  preferredDuringSchedulingIgnoredDuringExecution:
                  - podAffinityTerm:
                      labelSelector:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchLabels: "{}"
                      topologyKey: topologyKey
                      namespaces:
                      - namespaces
                      - namespaces
                    weight: 1
                  - podAffinityTerm:
                      labelSelector:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchLabels: "{}"
                      topologyKey: topologyKey
                      namespaces:
                      - namespaces
                      - namespaces
                    weight: 1
                podAntiAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                  - labelSelector:
                      matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchLabels: "{}"
                    topologyKey: topologyKey
                    namespaces:
                    - namespaces
                    - namespaces
                  - labelSelector:
                      matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchLabels: "{}"
                    topologyKey: topologyKey
                    namespaces:
                    - namespaces
                    - namespaces
                  preferredDuringSchedulingIgnoredDuringExecution:
                  - podAffinityTerm:
                      labelSelector:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchLabels: "{}"
                      topologyKey: topologyKey
                      namespaces:
                      - namespaces
                      - namespaces
                    weight: 1
                  - podAffinityTerm:
                      labelSelector:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchLabels: "{}"
                      topologyKey: topologyKey
                      namespaces:
                      - namespaces
                      - namespaces
                    weight: 1
              hostPID: true
          podManagementPolicy: podManagementPolicy
          updateStrategy:
            type: type
            rollingUpdate:
              partition: 1
          replicas: 0
          revisionHistoryLimit: 6
          selector:
            matchExpressions:
            - values:
              - values
              - values
              key: key
              operator: operator
            - values:
              - values
              - values
              key: key
              operator: operator
            matchLabels: "{}"
          serviceName: serviceName
          volumeClaimTemplates:
          - metadata:
              generation: 6
              finalizers:
              - finalizers
              - finalizers
              resourceVersion: resourceVersion
              annotations: "{}"
              generateName: generateName
              deletionTimestamp: deletionTimestamp
              labels: "{}"
              ownerReferences:
              - uid: uid
                controller: true
                apiVersion: apiVersion
                kind: kind
                name: name
                blockOwnerDeletion: true
              - uid: uid
                controller: true
                apiVersion: apiVersion
                kind: kind
                name: name
                blockOwnerDeletion: true
              selfLink: selfLink
              deletionGracePeriodSeconds: 0
              uid: uid
              initializers:
                result:
                  reason: reason
                  metadata:
                    continue: continue
                    resourceVersion: resourceVersion
                    selfLink: selfLink
                  apiVersion: apiVersion
                  code: 1
                  kind: kind
                  details:
                    uid: uid
                    kind: kind
                    causes:
                    - reason: reason
                      field: field
                      message: message
                    - reason: reason
                      field: field
                      message: message
                    retryAfterSeconds: 5
                    name: name
                    group: group
                  message: message
                  status: status
                pending:
                - name: name
                - name: name
              clusterName: clusterName
              creationTimestamp: creationTimestamp
              name: name
              namespace: namespace
            apiVersion: apiVersion
            kind: kind
            spec:
              storageClassName: storageClassName
              volumeName: volumeName
              resources:
                requests: "{}"
                limits: "{}"
              selector:
                matchExpressions:
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                matchLabels: "{}"
              accessModes:
              - "{}"
              - "{}"
              volumeMode: "{}"
            status:
              phase: phase
              accessModes:
              - "{}"
              - "{}"
              conditions:
              - reason: reason
                lastTransitionTime: lastTransitionTime
                message: message
                type: type
                lastProbeTime: lastProbeTime
                status: status
              - reason: reason
                lastTransitionTime: lastTransitionTime
                message: message
                type: type
                lastProbeTime: lastProbeTime
                status: status
              capacity: "{}"
          - metadata:
              generation: 6
              finalizers:
              - finalizers
              - finalizers
              resourceVersion: resourceVersion
              annotations: "{}"
              generateName: generateName
              deletionTimestamp: deletionTimestamp
              labels: "{}"
              ownerReferences:
              - uid: uid
                controller: true
                apiVersion: apiVersion
                kind: kind
                name: name
                blockOwnerDeletion: true
              - uid: uid
                controller: true
                apiVersion: apiVersion
                kind: kind
                name: name
                blockOwnerDeletion: true
              selfLink: selfLink
              deletionGracePeriodSeconds: 0
              uid: uid
              initializers:
                result:
                  reason: reason
                  metadata:
                    continue: continue
                    resourceVersion: resourceVersion
                    selfLink: selfLink
                  apiVersion: apiVersion
                  code: 1
                  kind: kind
                  details:
                    uid: uid
                    kind: kind
                    causes:
                    - reason: reason
                      field: field
                      message: message
                    - reason: reason
                      field: field
                      message: message
                    retryAfterSeconds: 5
                    name: name
                    group: group
                  message: message
                  status: status
                pending:
                - name: name
                - name: name
              clusterName: clusterName
              creationTimestamp: creationTimestamp
              name: name
              namespace: namespace
            apiVersion: apiVersion
            kind: kind
            spec:
              storageClassName: storageClassName
              volumeName: volumeName
              resources:
                requests: "{}"
                limits: "{}"
              selector:
                matchExpressions:
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                - values:
                  - values
                  - values
                  key: key
                  operator: operator
                matchLabels: "{}"
              accessModes:
              - "{}"
              - "{}"
              volumeMode: "{}"
            status:
              phase: phase
              accessModes:
              - "{}"
              - "{}"
              conditions:
              - reason: reason
                lastTransitionTime: lastTransitionTime
                message: message
                type: type
                lastProbeTime: lastProbeTime
                status: status
              - reason: reason
                lastTransitionTime: lastTransitionTime
                message: message
                type: type
                lastProbeTime: lastProbeTime
                status: status
              capacity: "{}"
        status:
          currentRevision: currentRevision
          replicas: 9
          updateRevision: updateRevision
          readyReplicas: 7
          collisionCount: 5
          currentReplicas: 5
          conditions:
          - reason: reason
            lastTransitionTime: lastTransitionTime
            message: message
            type: type
            status: status
          - reason: reason
            lastTransitionTime: lastTransitionTime
            message: message
            type: type
            status: status
          updatedReplicas: 3
          observedGeneration: 2
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
          type: string
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: '#/components/schemas/v1.ObjectMeta'
        spec:
          $ref: '#/components/schemas/v1.StatefulSetSpec'
        status:
          $ref: '#/components/schemas/v1.StatefulSetStatus'
      type: object
    v1.StatefulSetCondition:
      description: StatefulSetCondition describes the state of a statefulset at a
        certain point.
      example:
        reason: reason
        lastTransitionTime: lastTransitionTime
        message: message
        type: type
        status: status
      properties:
        lastTransitionTime:
          description: Last time the condition transitioned from one status to another.
          type: string
        message:
          description: A human readable message indicating details about the transition.
          type: string
        reason:
          description: The reason for the condition's last transition.
          type: string
        status:
          description: "Status of the condition, one of True, False, Unknown."
          type: string
        type:
          description: Type of statefulset condition.
          type: string
      required:
      - status
      - type
      type: object
    v1.StatefulSetList:
      description: StatefulSetList is a collection of StatefulSets.
      example:
        metadata:
          continue: continue
          resourceVersion: resourceVersion
          selfLink: selfLink
        apiVersion: apiVersion
        kind: kind
        items:
        - metadata:
            generation: 6
            finalizers:
            - finalizers
            - finalizers
            resourceVersion: resourceVersion
            annotations: "{}"
            generateName: generateName
            deletionTimestamp: deletionTimestamp
            labels: "{}"
            ownerReferences:
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            selfLink: selfLink
            deletionGracePeriodSeconds: 0
            uid: uid
            initializers:
              result:
                reason: reason
                metadata:
                  continue: continue
                  resourceVersion: resourceVersion
                  selfLink: selfLink
                apiVersion: apiVersion
                code: 1
                kind: kind
                details:
                  uid: uid
                  kind: kind
                  causes:
                  - reason: reason
                    field: field
                    message: message
                  - reason: reason
                    field: field
                    message: message
                  retryAfterSeconds: 5
                  name: name
                  group: group
                message: message
                status: status
              pending:
              - name: name
              - name: name
            clusterName: clusterName
            creationTimestamp: creationTimestamp
            name: name
            namespace: namespace
          apiVersion: apiVersion
          kind: kind
          spec:
            template:
              metadata:
                generation: 6
                finalizers:
                - finalizers
                - finalizers
                resourceVersion: resourceVersion
                annotations: "{}"
                generateName: generateName
                deletionTimestamp: deletionTimestamp
                labels: "{}"
                ownerReferences:
                - uid: uid
                  controller: true
                  apiVersion: apiVersion
                  kind: kind
                  name: name
                  blockOwnerDeletion: true
                - uid: uid
                  controller: true
                  apiVersion: apiVersion
                  kind: kind
                  name: name
                  blockOwnerDeletion: true
                selfLink: selfLink
                deletionGracePeriodSeconds: 0
                uid: uid
                initializers:
                  result:
                    reason: reason
                    metadata:
                      continue: continue
                      resourceVersion: resourceVersion
                      selfLink: selfLink
                    apiVersion: apiVersion
                    code: 1
                    kind: kind
                    details:
                      uid: uid
                      kind: kind
                      causes:
                      - reason: reason
                        field: field
                        message: message
                      - reason: reason
                        field: field
                        message: message
                      retryAfterSeconds: 5
                      name: name
                      group: group
                    message: message
                    status: status
                  pending:
                  - name: name
                  - name: name
                clusterName: clusterName
                creationTimestamp: creationTimestamp
                name: name
                namespace: namespace
              spec:
                dnsPolicy: dnsPolicy
                nodeName: nodeName
                terminationGracePeriodSeconds: 1
                dnsConfig:
                  searches:
                  - searches
                  - searches
                  nameservers:
                  - nameservers
                  - nameservers
                  options:
                  - name: name
                    value: value
                  - name: name
                    value: value
                hostNetwork: true
                readinessGates:
                - conditionType: conditionType
                - conditionType: conditionType
                serviceAccountName: serviceAccountName
                imagePullSecrets:
                - name: name
                - name: name
                priorityClassName: priorityClassName
                hostAliases:
                - ip: ip
                  hostnames:
                  - hostnames
                  - hostnames
                - ip: ip
                  hostnames:
                  - hostnames
                  - hostnames
                securityContext:
                  runAsUser: 6
                  seLinuxOptions:
                    role: role
                    level: level
                    type: type
                    user: user
                  fsGroup: 1
                  supplementalGroups:
                  - 7
                  - 7
                  runAsGroup: 1
                  runAsNonRoot: true
                  sysctls:
                  - name: name
                    value: value
                  - name: name
                    value: value
                nodeSelector: "{}"
                hostname: hostname
                tolerations:
                - effect: effect
                  tolerationSeconds: 4
                  value: value
                  key: key
                  operator: operator
                - effect: effect
                  tolerationSeconds: 4
                  value: value
                  key: key
                  operator: operator
                automountServiceAccountToken: true
                schedulerName: schedulerName
                activeDeadlineSeconds: 0
                hostIPC: true
                volumes:
                - quobyte:
                    volume: volume
                    registry: registry
                    readOnly: true
                    user: user
                    group: group
                  azureFile:
                    secretName: secretName
                    readOnly: true
                    shareName: shareName
                  flexVolume:
                    driver: driver
                    options: "{}"
                    secretRef:
                      name: name
                    readOnly: true
                    fsType: fsType
                  secret:
                    secretName: secretName
                    defaultMode: 2
                    optional: true
                    items:
                    - mode: 9
                      path: path
                      key: key
                    - mode: 9
                      path: path
                      key: key
                  projected:
                    sources:
                    - downwardAPI:
                        items:
                        - mode: 8
                          path: path
                          resourceFieldRef:
                            divisor: divisor
                            resource: resource
                            containerName: containerName
                          fieldRef:
                            apiVersion: apiVersion
                            fieldPath: fieldPath
                        - mode: 8
                          path: path
                          resourceFieldRef:
                            divisor: divisor
                            resource: resource
                            containerName: containerName
                          fieldRef:
                            apiVersion: apiVersion
                            fieldPath: fieldPath
                      configMap:
                        name: name
                        optional: true
                        items:
                        - mode: 9
                          path: path
                          key: key
                        - mode: 9
                          path: path
                          key: key
                      secret:
                        name: name
                        optional: true
                        items:
                        - mode: 9
                          path: path
                          key: key
                        - mode: 9
                          path: path
                          key: key
                      serviceAccountToken:
                        path: path
                        audience: audience
                        expirationSeconds: 1
                    - downwardAPI:
                        items:
                        - mode: 8
                          path: path
                          resourceFieldRef:
                            divisor: divisor
                            resource: resource
                            containerName: containerName
                          fieldRef:
                            apiVersion: apiVersion
                            fieldPath: fieldPath
                        - mode: 8
                          path: path
                          resourceFieldRef:
                            divisor: divisor
                            resource: resource
                            containerName: containerName
                          fieldRef:
                            apiVersion: apiVersion
                            fieldPath: fieldPath
                      configMap:
                        name: name
                        optional: true
                        items:
                        - mode: 9
                          path: path
                          key: key
                        - mode: 9
                          path: path
                          key: key
                      secret:
                        name: name
                        optional: true
                        items:
                        - mode: 9
                          path: path
                          key: key
                        - mode: 9
                          path: path
                          key: key
                      serviceAccountToken:
                        path: path
                        audience: audience
                        expirationSeconds: 1
                    defaultMode: 6
                  cephfs:
                    path: path
                    secretRef:
                      name: name
                    secretFile: secretFile
                    readOnly: true
                    user: user
                    monitors:
                    - monitors
                    - monitors
                  scaleIO:
                    system: system
                    protectionDomain: protectionDomain
                    sslEnabled: true
                    storageMode: storageMode
                    volumeName: volumeName
                    secretRef:
                      name: name
                    readOnly: true
                    fsType: fsType
                    storagePool: storagePool
                    gateway: gateway
                  emptyDir:
                    sizeLimit: sizeLimit
                    medium: medium
                  glusterfs:
                    path: path
                    endpoints: endpoints
                    readOnly: true
                  gcePersistentDisk:
                    partition: 6
                    readOnly: true
                    pdName: pdName
                    fsType: fsType
                  photonPersistentDisk:
                    pdID: pdID
                    fsType: fsType
                  azureDisk:
                    diskName: diskName
                    kind: "{}"
                    readOnly: true
                    cachingMode: "{}"
                    diskURI: diskURI
                    fsType: fsType
                  cinder:
                    secretRef:
                      name: name
                    volumeID: volumeID
                    readOnly: true
                    fsType: fsType
                  downwardAPI:
                    defaultMode: 6
                    items:
                    - mode: 8
                      path: path
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                    - mode: 8
                      path: path
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  awsElasticBlockStore:
                    partition: 5
                    volumeID: volumeID
                    readOnly: true
                    fsType: fsType
                  flocker:
                    datasetName: datasetName
                    datasetUUID: datasetUUID
                  iscsi:
                    chapAuthSession: true
                    iscsiInterface: iscsiInterface
                    lun: 3
                    chapAuthDiscovery: true
                    iqn: iqn
                    portals:
                    - portals
                    - portals
                    secretRef:
                      name: name
                    initiatorName: initiatorName
                    readOnly: true
                    fsType: fsType
                    targetPortal: targetPortal
                  rbd:
                    image: image
                    pool: pool
                    secretRef:
                      name: name
                    readOnly: true
                    fsType: fsType
                    keyring: keyring
                    user: user
                    monitors:
                    - monitors
                    - monitors
                  configMap:
                    defaultMode: 9
                    name: name
                    optional: true
                    items:
                    - mode: 9
                      path: path
                      key: key
                    - mode: 9
                      path: path
                      key: key
                  storageos:
                    volumeNamespace: volumeNamespace
                    volumeName: volumeName
                    secretRef:
                      name: name
                    readOnly: true
                    fsType: fsType
                  name: name
                  nfs:
                    path: path
                    server: server
                    readOnly: true
                  persistentVolumeClaim:
                    claimName: claimName
                    readOnly: true
                  gitRepo:
                    repository: repository
                    directory: directory
                    revision: revision
                  portworxVolume:
                    volumeID: volumeID
                    readOnly: true
                    fsType: fsType
                  vsphereVolume:
                    storagePolicyName: storagePolicyName
                    storagePolicyID: storagePolicyID
                    volumePath: volumePath
                    fsType: fsType
                  fc:
                    lun: 9
                    targetWWNs:
                    - targetWWNs
                    - targetWWNs
                    readOnly: true
                    wwids:
                    - wwids
                    - wwids
                    fsType: fsType
                  hostPath:
                    path: path
                    type: "{}"
                - quobyte:
                    volume: volume
                    registry: registry
                    readOnly: true
                    user: user
                    group: group
                  azureFile:
                    secretName: secretName
                    readOnly: true
                    shareName: shareName
                  flexVolume:
                    driver: driver
                    options: "{}"
                    secretRef:
                      name: name
                    readOnly: true
                    fsType: fsType
                  secret:
                    secretName: secretName
                    defaultMode: 2
                    optional: true
                    items:
                    - mode: 9
                      path: path
                      key: key
                    - mode: 9
                      path: path
                      key: key
                  projected:
                    sources:
                    - downwardAPI:
                        items:
                        - mode: 8
                          path: path
                          resourceFieldRef:
                            divisor: divisor
                            resource: resource
                            containerName: containerName
                          fieldRef:
                            apiVersion: apiVersion
                            fieldPath: fieldPath
                        - mode: 8
                          path: path
                          resourceFieldRef:
                            divisor: divisor
                            resource: resource
                            containerName: containerName
                          fieldRef:
                            apiVersion: apiVersion
                            fieldPath: fieldPath
                      configMap:
                        name: name
                        optional: true
                        items:
                        - mode: 9
                          path: path
                          key: key
                        - mode: 9
                          path: path
                          key: key
                      secret:
                        name: name
                        optional: true
                        items:
                        - mode: 9
                          path: path
                          key: key
                        - mode: 9
                          path: path
                          key: key
                      serviceAccountToken:
                        path: path
                        audience: audience
                        expirationSeconds: 1
                    - downwardAPI:
                        items:
                        - mode: 8
                          path: path
                          resourceFieldRef:
                            divisor: divisor
                            resource: resource
                            containerName: containerName
                          fieldRef:
                            apiVersion: apiVersion
                            fieldPath: fieldPath
                        - mode: 8
                          path: path
                          resourceFieldRef:
                            divisor: divisor
                            resource: resource
                            containerName: containerName
                          fieldRef:
                            apiVersion: apiVersion
                            fieldPath: fieldPath
                      configMap:
                        name: name
                        optional: true
                        items:
                        - mode: 9
                          path: path
                          key: key
                        - mode: 9
                          path: path
                          key: key
                      secret:
                        name: name
                        optional: true
                        items:
                        - mode: 9
                          path: path
                          key: key
                        - mode: 9
                          path: path
                          key: key
                      serviceAccountToken:
                        path: path
                        audience: audience
                        expirationSeconds: 1
                    defaultMode: 6
                  cephfs:
                    path: path
                    secretRef:
                      name: name
                    secretFile: secretFile
                    readOnly: true
                    user: user
                    monitors:
                    - monitors
                    - monitors
                  scaleIO:
                    system: system
                    protectionDomain: protectionDomain
                    sslEnabled: true
                    storageMode: storageMode
                    volumeName: volumeName
                    secretRef:
                      name: name
                    readOnly: true
                    fsType: fsType
                    storagePool: storagePool
                    gateway: gateway
                  emptyDir:
                    sizeLimit: sizeLimit
                    medium: medium
                  glusterfs:
                    path: path
                    endpoints: endpoints
                    readOnly: true
                  gcePersistentDisk:
                    partition: 6
                    readOnly: true
                    pdName: pdName
                    fsType: fsType
                  photonPersistentDisk:
                    pdID: pdID
                    fsType: fsType
                  azureDisk:
                    diskName: diskName
                    kind: "{}"
                    readOnly: true
                    cachingMode: "{}"
                    diskURI: diskURI
                    fsType: fsType
                  cinder:
                    secretRef:
                      name: name
                    volumeID: volumeID
                    readOnly: true
                    fsType: fsType
                  downwardAPI:
                    defaultMode: 6
                    items:
                    - mode: 8
                      path: path
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                    - mode: 8
                      path: path
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  awsElasticBlockStore:
                    partition: 5
                    volumeID: volumeID
                    readOnly: true
                    fsType: fsType
                  flocker:
                    datasetName: datasetName
                    datasetUUID: datasetUUID
                  iscsi:
                    chapAuthSession: true
                    iscsiInterface: iscsiInterface
                    lun: 3
                    chapAuthDiscovery: true
                    iqn: iqn
                    portals:
                    - portals
                    - portals
                    secretRef:
                      name: name
                    initiatorName: initiatorName
                    readOnly: true
                    fsType: fsType
                    targetPortal: targetPortal
                  rbd:
                    image: image
                    pool: pool
                    secretRef:
                      name: name
                    readOnly: true
                    fsType: fsType
                    keyring: keyring
                    user: user
                    monitors:
                    - monitors
                    - monitors
                  configMap:
                    defaultMode: 9
                    name: name
                    optional: true
                    items:
                    - mode: 9
                      path: path
                      key: key
                    - mode: 9
                      path: path
                      key: key
                  storageos:
                    volumeNamespace: volumeNamespace
                    volumeName: volumeName
                    secretRef:
                      name: name
                    readOnly: true
                    fsType: fsType
                  name: name
                  nfs:
                    path: path
                    server: server
                    readOnly: true
                  persistentVolumeClaim:
                    claimName: claimName
                    readOnly: true
                  gitRepo:
                    repository: repository
                    directory: directory
                    revision: revision
                  portworxVolume:
                    volumeID: volumeID
                    readOnly: true
                    fsType: fsType
                  vsphereVolume:
                    storagePolicyName: storagePolicyName
                    storagePolicyID: storagePolicyID
                    volumePath: volumePath
                    fsType: fsType
                  fc:
                    lun: 9
                    targetWWNs:
                    - targetWWNs
                    - targetWWNs
                    readOnly: true
                    wwids:
                    - wwids
                    - wwids
                    fsType: fsType
                  hostPath:
                    path: path
                    type: "{}"
                serviceAccount: serviceAccount
                priority: 1
                restartPolicy: restartPolicy
                shareProcessNamespace: true
                subdomain: subdomain
                containers:
                - volumeDevices:
                  - devicePath: devicePath
                    name: name
                  - devicePath: devicePath
                    name: name
                  image: image
                  imagePullPolicy: imagePullPolicy
                  livenessProbe:
                    failureThreshold: 5
                    periodSeconds: 2
                    tcpSocket:
                      port: port
                      host: host
                    timeoutSeconds: 9
                    successThreshold: 7
                    initialDelaySeconds: 5
                    exec:
                      command:
                      - command
                      - command
                    httpGet:
                      path: path
                      scheme: scheme
                      port: port
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  stdin: true
                  terminationMessagePolicy: terminationMessagePolicy
                  terminationMessagePath: terminationMessagePath
                  workingDir: workingDir
                  resources:
                    requests: "{}"
                    limits: "{}"
                  securityContext:
                    privileged: true
                    runAsUser: 7
                    capabilities:
                      add:
                      - "{}"
                      - "{}"
                      drop:
                      - "{}"
                      - "{}"
                    seLinuxOptions:
                      role: role
                      level: level
                      type: type
                      user: user
                    allowPrivilegeEscalation: true
                    runAsGroup: 4
                    runAsNonRoot: true
                    readOnlyRootFilesystem: true
                  env:
                  - name: name
                    value: value
                    valueFrom:
                      secretKeyRef:
                        name: name
                        optional: true
                        key: key
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      configMapKeyRef:
                        name: name
                        optional: true
                        key: key
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  - name: name
                    value: value
                    valueFrom:
                      secretKeyRef:
                        name: name
                        optional: true
                        key: key
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      configMapKeyRef:
                        name: name
                        optional: true
                        key: key
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  ports:
                  - protocol: protocol
                    hostIP: hostIP
                    name: name
                    containerPort: 3
                    hostPort: 2
                  - protocol: protocol
                    hostIP: hostIP
                    name: name
                    containerPort: 3
                    hostPort: 2
                  command:
                  - command
                  - command
                  volumeMounts:
                  - mountPath: mountPath
                    mountPropagation: "{}"
                    name: name
                    readOnly: true
                    subPath: subPath
                  - mountPath: mountPath
                    mountPropagation: "{}"
                    name: name
                    readOnly: true
                    subPath: subPath
                  args:
                  - args
                  - args
                  lifecycle:
                    postStart:
                      tcpSocket:
                        port: port
                        host: host
                      exec:
                        command:
                        - command
                        - command
                      httpGet:
                        path: path
                        scheme: scheme
                        port: port
                        host: host
                        httpHeaders:
                        - name: name
                          value: value
                        - name: name
                          value: value
                    preStop:
                      tcpSocket:
                        port: port
                        host: host
                      exec:
                        command:
                        - command
                        - command
                      httpGet:
                        path: path
                        scheme: scheme
                        port: port
                        host: host
                        httpHeaders:
                        - name: name
                          value: value
                        - name: name
                          value: value
                  name: name
                  tty: true
                  readinessProbe:
                    failureThreshold: 5
                    periodSeconds: 2
                    tcpSocket:
                      port: port
                      host: host
                    timeoutSeconds: 9
                    successThreshold: 7
                    initialDelaySeconds: 5
                    exec:
                      command:
                      - command
                      - command
                    httpGet:
                      path: path
                      scheme: scheme
                      port: port
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  stdinOnce: true
                  envFrom:
                  - configMapRef:
                      name: name
                      optional: true
                    prefix: prefix
                    secretRef:
                      name: name
                      optional: true
                  - configMapRef:
                      name: name
                      optional: true
                    prefix: prefix
                    secretRef:
                      name: name
                      optional: true
                - volumeDevices:
                  - devicePath: devicePath
                    name: name
                  - devicePath: devicePath
                    name: name
                  image: image
                  imagePullPolicy: imagePullPolicy
                  livenessProbe:
                    failureThreshold: 5
                    periodSeconds: 2
                    tcpSocket:
                      port: port
                      host: host
                    timeoutSeconds: 9
                    successThreshold: 7
                    initialDelaySeconds: 5
                    exec:
                      command:
                      - command
                      - command
                    httpGet:
                      path: path
                      scheme: scheme
                      port: port
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  stdin: true
                  terminationMessagePolicy: terminationMessagePolicy
                  terminationMessagePath: terminationMessagePath
                  workingDir: workingDir
                  resources:
                    requests: "{}"
                    limits: "{}"
                  securityContext:
                    privileged: true
                    runAsUser: 7
                    capabilities:
                      add:
                      - "{}"
                      - "{}"
                      drop:
                      - "{}"
                      - "{}"
                    seLinuxOptions:
                      role: role
                      level: level
                      type: type
                      user: user
                    allowPrivilegeEscalation: true
                    runAsGroup: 4
                    runAsNonRoot: true
                    readOnlyRootFilesystem: true
                  env:
                  - name: name
                    value: value
                    valueFrom:
                      secretKeyRef:
                        name: name
                        optional: true
                        key: key
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      configMapKeyRef:
                        name: name
                        optional: true
                        key: key
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  - name: name
                    value: value
                    valueFrom:
                      secretKeyRef:
                        name: name
                        optional: true
                        key: key
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      configMapKeyRef:
                        name: name
                        optional: true
                        key: key
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  ports:
                  - protocol: protocol
                    hostIP: hostIP
                    name: name
                    containerPort: 3
                    hostPort: 2
                  - protocol: protocol
                    hostIP: hostIP
                    name: name
                    containerPort: 3
                    hostPort: 2
                  command:
                  - command
                  - command
                  volumeMounts:
                  - mountPath: mountPath
                    mountPropagation: "{}"
                    name: name
                    readOnly: true
                    subPath: subPath
                  - mountPath: mountPath
                    mountPropagation: "{}"
                    name: name
                    readOnly: true
                    subPath: subPath
                  args:
                  - args
                  - args
                  lifecycle:
                    postStart:
                      tcpSocket:
                        port: port
                        host: host
                      exec:
                        command:
                        - command
                        - command
                      httpGet:
                        path: path
                        scheme: scheme
                        port: port
                        host: host
                        httpHeaders:
                        - name: name
                          value: value
                        - name: name
                          value: value
                    preStop:
                      tcpSocket:
                        port: port
                        host: host
                      exec:
                        command:
                        - command
                        - command
                      httpGet:
                        path: path
                        scheme: scheme
                        port: port
                        host: host
                        httpHeaders:
                        - name: name
                          value: value
                        - name: name
                          value: value
                  name: name
                  tty: true
                  readinessProbe:
                    failureThreshold: 5
                    periodSeconds: 2
                    tcpSocket:
                      port: port
                      host: host
                    timeoutSeconds: 9
                    successThreshold: 7
                    initialDelaySeconds: 5
                    exec:
                      command:
                      - command
                      - command
                    httpGet:
                      path: path
                      scheme: scheme
                      port: port
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  stdinOnce: true
                  envFrom:
                  - configMapRef:
                      name: name
                      optional: true
                    prefix: prefix
                    secretRef:
                      name: name
                      optional: true
                  - configMapRef:
                      name: name
                      optional: true
                    prefix: prefix
                    secretRef:
                      name: name
                      optional: true
                initContainers:
                - volumeDevices:
                  - devicePath: devicePath
                    name: name
                  - devicePath: devicePath
                    name: name
                  image: image
                  imagePullPolicy: imagePullPolicy
                  livenessProbe:
                    failureThreshold: 5
                    periodSeconds: 2
                    tcpSocket:
                      port: port
                      host: host
                    timeoutSeconds: 9
                    successThreshold: 7
                    initialDelaySeconds: 5
                    exec:
                      command:
                      - command
                      - command
                    httpGet:
                      path: path
                      scheme: scheme
                      port: port
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  stdin: true
                  terminationMessagePolicy: terminationMessagePolicy
                  terminationMessagePath: terminationMessagePath
                  workingDir: workingDir
                  resources:
                    requests: "{}"
                    limits: "{}"
                  securityContext:
                    privileged: true
                    runAsUser: 7
                    capabilities:
                      add:
                      - "{}"
                      - "{}"
                      drop:
                      - "{}"
                      - "{}"
                    seLinuxOptions:
                      role: role
                      level: level
                      type: type
                      user: user
                    allowPrivilegeEscalation: true
                    runAsGroup: 4
                    runAsNonRoot: true
                    readOnlyRootFilesystem: true
                  env:
                  - name: name
                    value: value
                    valueFrom:
                      secretKeyRef:
                        name: name
                        optional: true
                        key: key
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      configMapKeyRef:
                        name: name
                        optional: true
                        key: key
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  - name: name
                    value: value
                    valueFrom:
                      secretKeyRef:
                        name: name
                        optional: true
                        key: key
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      configMapKeyRef:
                        name: name
                        optional: true
                        key: key
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  ports:
                  - protocol: protocol
                    hostIP: hostIP
                    name: name
                    containerPort: 3
                    hostPort: 2
                  - protocol: protocol
                    hostIP: hostIP
                    name: name
                    containerPort: 3
                    hostPort: 2
                  command:
                  - command
                  - command
                  volumeMounts:
                  - mountPath: mountPath
                    mountPropagation: "{}"
                    name: name
                    readOnly: true
                    subPath: subPath
                  - mountPath: mountPath
                    mountPropagation: "{}"
                    name: name
                    readOnly: true
                    subPath: subPath
                  args:
                  - args
                  - args
                  lifecycle:
                    postStart:
                      tcpSocket:
                        port: port
                        host: host
                      exec:
                        command:
                        - command
                        - command
                      httpGet:
                        path: path
                        scheme: scheme
                        port: port
                        host: host
                        httpHeaders:
                        - name: name
                          value: value
                        - name: name
                          value: value
                    preStop:
                      tcpSocket:
                        port: port
                        host: host
                      exec:
                        command:
                        - command
                        - command
                      httpGet:
                        path: path
                        scheme: scheme
                        port: port
                        host: host
                        httpHeaders:
                        - name: name
                          value: value
                        - name: name
                          value: value
                  name: name
                  tty: true
                  readinessProbe:
                    failureThreshold: 5
                    periodSeconds: 2
                    tcpSocket:
                      port: port
                      host: host
                    timeoutSeconds: 9
                    successThreshold: 7
                    initialDelaySeconds: 5
                    exec:
                      command:
                      - command
                      - command
                    httpGet:
                      path: path
                      scheme: scheme
                      port: port
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  stdinOnce: true
                  envFrom:
                  - configMapRef:
                      name: name
                      optional: true
                    prefix: prefix
                    secretRef:
                      name: name
                      optional: true
                  - configMapRef:
                      name: name
                      optional: true
                    prefix: prefix
                    secretRef:
                      name: name
                      optional: true
                - volumeDevices:
                  - devicePath: devicePath
                    name: name
                  - devicePath: devicePath
                    name: name
                  image: image
                  imagePullPolicy: imagePullPolicy
                  livenessProbe:
                    failureThreshold: 5
                    periodSeconds: 2
                    tcpSocket:
                      port: port
                      host: host
                    timeoutSeconds: 9
                    successThreshold: 7
                    initialDelaySeconds: 5
                    exec:
                      command:
                      - command
                      - command
                    httpGet:
                      path: path
                      scheme: scheme
                      port: port
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  stdin: true
                  terminationMessagePolicy: terminationMessagePolicy
                  terminationMessagePath: terminationMessagePath
                  workingDir: workingDir
                  resources:
                    requests: "{}"
                    limits: "{}"
                  securityContext:
                    privileged: true
                    runAsUser: 7
                    capabilities:
                      add:
                      - "{}"
                      - "{}"
                      drop:
                      - "{}"
                      - "{}"
                    seLinuxOptions:
                      role: role
                      level: level
                      type: type
                      user: user
                    allowPrivilegeEscalation: true
                    runAsGroup: 4
                    runAsNonRoot: true
                    readOnlyRootFilesystem: true
                  env:
                  - name: name
                    value: value
                    valueFrom:
                      secretKeyRef:
                        name: name
                        optional: true
                        key: key
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      configMapKeyRef:
                        name: name
                        optional: true
                        key: key
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  - name: name
                    value: value
                    valueFrom:
                      secretKeyRef:
                        name: name
                        optional: true
                        key: key
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      configMapKeyRef:
                        name: name
                        optional: true
                        key: key
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  ports:
                  - protocol: protocol
                    hostIP: hostIP
                    name: name
                    containerPort: 3
                    hostPort: 2
                  - protocol: protocol
                    hostIP: hostIP
                    name: name
                    containerPort: 3
                    hostPort: 2
                  command:
                  - command
                  - command
                  volumeMounts:
                  - mountPath: mountPath
                    mountPropagation: "{}"
                    name: name
                    readOnly: true
                    subPath: subPath
                  - mountPath: mountPath
                    mountPropagation: "{}"
                    name: name
                    readOnly: true
                    subPath: subPath
                  args:
                  - args
                  - args
                  lifecycle:
                    postStart:
                      tcpSocket:
                        port: port
                        host: host
                      exec:
                        command:
                        - command
                        - command
                      httpGet:
                        path: path
                        scheme: scheme
                        port: port
                        host: host
                        httpHeaders:
                        - name: name
                          value: value
                        - name: name
                          value: value
                    preStop:
                      tcpSocket:
                        port: port
                        host: host
                      exec:
                        command:
                        - command
                        - command
                      httpGet:
                        path: path
                        scheme: scheme
                        port: port
                        host: host
                        httpHeaders:
                        - name: name
                          value: value
                        - name: name
                          value: value
                  name: name
                  tty: true
                  readinessProbe:
                    failureThreshold: 5
                    periodSeconds: 2
                    tcpSocket:
                      port: port
                      host: host
                    timeoutSeconds: 9
                    successThreshold: 7
                    initialDelaySeconds: 5
                    exec:
                      command:
                      - command
                      - command
                    httpGet:
                      path: path
                      scheme: scheme
                      port: port
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  stdinOnce: true
                  envFrom:
                  - configMapRef:
                      name: name
                      optional: true
                    prefix: prefix
                    secretRef:
                      name: name
                      optional: true
                  - configMapRef:
                      name: name
                      optional: true
                    prefix: prefix
                    secretRef:
                      name: name
                      optional: true
                affinity:
                  nodeAffinity:
                    requiredDuringSchedulingIgnoredDuringExecution:
                      nodeSelectorTerms:
                      - matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchFields:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                      - matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchFields:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                    preferredDuringSchedulingIgnoredDuringExecution:
                    - preference:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchFields:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                      weight: 6
                    - preference:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchFields:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                      weight: 6
                  podAffinity:
                    requiredDuringSchedulingIgnoredDuringExecution:
                    - labelSelector:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchLabels: "{}"
                      topologyKey: topologyKey
                      namespaces:
                      - namespaces
                      - namespaces
                    - labelSelector:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchLabels: "{}"
                      topologyKey: topologyKey
                      namespaces:
                      - namespaces
                      - namespaces
                    preferredDuringSchedulingIgnoredDuringExecution:
                    - podAffinityTerm:
                        labelSelector:
                          matchExpressions:
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          matchLabels: "{}"
                        topologyKey: topologyKey
                        namespaces:
                        - namespaces
                        - namespaces
                      weight: 1
                    - podAffinityTerm:
                        labelSelector:
                          matchExpressions:
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          matchLabels: "{}"
                        topologyKey: topologyKey
                        namespaces:
                        - namespaces
                        - namespaces
                      weight: 1
                  podAntiAffinity:
                    requiredDuringSchedulingIgnoredDuringExecution:
                    - labelSelector:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchLabels: "{}"
                      topologyKey: topologyKey
                      namespaces:
                      - namespaces
                      - namespaces
                    - labelSelector:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchLabels: "{}"
                      topologyKey: topologyKey
                      namespaces:
                      - namespaces
                      - namespaces
                    preferredDuringSchedulingIgnoredDuringExecution:
                    - podAffinityTerm:
                        labelSelector:
                          matchExpressions:
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          matchLabels: "{}"
                        topologyKey: topologyKey
                        namespaces:
                        - namespaces
                        - namespaces
                      weight: 1
                    - podAffinityTerm:
                        labelSelector:
                          matchExpressions:
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          matchLabels: "{}"
                        topologyKey: topologyKey
                        namespaces:
                        - namespaces
                        - namespaces
                      weight: 1
                hostPID: true
            podManagementPolicy: podManagementPolicy
            updateStrategy:
              type: type
              rollingUpdate:
                partition: 1
            replicas: 0
            revisionHistoryLimit: 6
            selector:
              matchExpressions:
              - values:
                - values
                - values
                key: key
                operator: operator
              - values:
                - values
                - values
                key: key
                operator: operator
              matchLabels: "{}"
            serviceName: serviceName
            volumeClaimTemplates:
            - metadata:
                generation: 6
                finalizers:
                - finalizers
                - finalizers
                resourceVersion: resourceVersion
                annotations: "{}"
                generateName: generateName
                deletionTimestamp: deletionTimestamp
                labels: "{}"
                ownerReferences:
                - uid: uid
                  controller: true
                  apiVersion: apiVersion
                  kind: kind
                  name: name
                  blockOwnerDeletion: true
                - uid: uid
                  controller: true
                  apiVersion: apiVersion
                  kind: kind
                  name: name
                  blockOwnerDeletion: true
                selfLink: selfLink
                deletionGracePeriodSeconds: 0
                uid: uid
                initializers:
                  result:
                    reason: reason
                    metadata:
                      continue: continue
                      resourceVersion: resourceVersion
                      selfLink: selfLink
                    apiVersion: apiVersion
                    code: 1
                    kind: kind
                    details:
                      uid: uid
                      kind: kind
                      causes:
                      - reason: reason
                        field: field
                        message: message
                      - reason: reason
                        field: field
                        message: message
                      retryAfterSeconds: 5
                      name: name
                      group: group
                    message: message
                    status: status
                  pending:
                  - name: name
                  - name: name
                clusterName: clusterName
                creationTimestamp: creationTimestamp
                name: name
                namespace: namespace
              apiVersion: apiVersion
              kind: kind
              spec:
                storageClassName: storageClassName
                volumeName: volumeName
                resources:
                  requests: "{}"
                  limits: "{}"
                selector:
                  matchExpressions:
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  matchLabels: "{}"
                accessModes:
                - "{}"
                - "{}"
                volumeMode: "{}"
              status:
                phase: phase
                accessModes:
                - "{}"
                - "{}"
                conditions:
                - reason: reason
                  lastTransitionTime: lastTransitionTime
                  message: message
                  type: type
                  lastProbeTime: lastProbeTime
                  status: status
                - reason: reason
                  lastTransitionTime: lastTransitionTime
                  message: message
                  type: type
                  lastProbeTime: lastProbeTime
                  status: status
                capacity: "{}"
            - metadata:
                generation: 6
                finalizers:
                - finalizers
                - finalizers
                resourceVersion: resourceVersion
                annotations: "{}"
                generateName: generateName
                deletionTimestamp: deletionTimestamp
                labels: "{}"
                ownerReferences:
                - uid: uid
                  controller: true
                  apiVersion: apiVersion
                  kind: kind
                  name: name
                  blockOwnerDeletion: true
                - uid: uid
                  controller: true
                  apiVersion: apiVersion
                  kind: kind
                  name: name
                  blockOwnerDeletion: true
                selfLink: selfLink
                deletionGracePeriodSeconds: 0
                uid: uid
                initializers:
                  result:
                    reason: reason
                    metadata:
                      continue: continue
                      resourceVersion: resourceVersion
                      selfLink: selfLink
                    apiVersion: apiVersion
                    code: 1
                    kind: kind
                    details:
                      uid: uid
                      kind: kind
                      causes:
                      - reason: reason
                        field: field
                        message: message
                      - reason: reason
                        field: field
                        message: message
                      retryAfterSeconds: 5
                      name: name
                      group: group
                    message: message
                    status: status
                  pending:
                  - name: name
                  - name: name
                clusterName: clusterName
                creationTimestamp: creationTimestamp
                name: name
                namespace: namespace
              apiVersion: apiVersion
              kind: kind
              spec:
                storageClassName: storageClassName
                volumeName: volumeName
                resources:
                  requests: "{}"
                  limits: "{}"
                selector:
                  matchExpressions:
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  matchLabels: "{}"
                accessModes:
                - "{}"
                - "{}"
                volumeMode: "{}"
              status:
                phase: phase
                accessModes:
                - "{}"
                - "{}"
                conditions:
                - reason: reason
                  lastTransitionTime: lastTransitionTime
                  message: message
                  type: type
                  lastProbeTime: lastProbeTime
                  status: status
                - reason: reason
                  lastTransitionTime: lastTransitionTime
                  message: message
                  type: type
                  lastProbeTime: lastProbeTime
                  status: status
                capacity: "{}"
          status:
            currentRevision: currentRevision
            replicas: 9
            updateRevision: updateRevision
            readyReplicas: 7
            collisionCount: 5
            currentReplicas: 5
            conditions:
            - reason: reason
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
              status: status
            - reason: reason
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
              status: status
            updatedReplicas: 3
            observedGeneration: 2
        - metadata:
            generation: 6
            finalizers:
            - finalizers
            - finalizers
            resourceVersion: resourceVersion
            annotations: "{}"
            generateName: generateName
            deletionTimestamp: deletionTimestamp
            labels: "{}"
            ownerReferences:
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            selfLink: selfLink
            deletionGracePeriodSeconds: 0
            uid: uid
            initializers:
              result:
                reason: reason
                metadata:
                  continue: continue
                  resourceVersion: resourceVersion
                  selfLink: selfLink
                apiVersion: apiVersion
                code: 1
                kind: kind
                details:
                  uid: uid
                  kind: kind
                  causes:
                  - reason: reason
                    field: field
                    message: message
                  - reason: reason
                    field: field
                    message: message
                  retryAfterSeconds: 5
                  name: name
                  group: group
                message: message
                status: status
              pending:
              - name: name
              - name: name
            clusterName: clusterName
            creationTimestamp: creationTimestamp
            name: name
            namespace: namespace
          apiVersion: apiVersion
          kind: kind
          spec:
            template:
              metadata:
                generation: 6
                finalizers:
                - finalizers
                - finalizers
                resourceVersion: resourceVersion
                annotations: "{}"
                generateName: generateName
                deletionTimestamp: deletionTimestamp
                labels: "{}"
                ownerReferences:
                - uid: uid
                  controller: true
                  apiVersion: apiVersion
                  kind: kind
                  name: name
                  blockOwnerDeletion: true
                - uid: uid
                  controller: true
                  apiVersion: apiVersion
                  kind: kind
                  name: name
                  blockOwnerDeletion: true
                selfLink: selfLink
                deletionGracePeriodSeconds: 0
                uid: uid
                initializers:
                  result:
                    reason: reason
                    metadata:
                      continue: continue
                      resourceVersion: resourceVersion
                      selfLink: selfLink
                    apiVersion: apiVersion
                    code: 1
                    kind: kind
                    details:
                      uid: uid
                      kind: kind
                      causes:
                      - reason: reason
                        field: field
                        message: message
                      - reason: reason
                        field: field
                        message: message
                      retryAfterSeconds: 5
                      name: name
                      group: group
                    message: message
                    status: status
                  pending:
                  - name: name
                  - name: name
                clusterName: clusterName
                creationTimestamp: creationTimestamp
                name: name
                namespace: namespace
              spec:
                dnsPolicy: dnsPolicy
                nodeName: nodeName
                terminationGracePeriodSeconds: 1
                dnsConfig:
                  searches:
                  - searches
                  - searches
                  nameservers:
                  - nameservers
                  - nameservers
                  options:
                  - name: name
                    value: value
                  - name: name
                    value: value
                hostNetwork: true
                readinessGates:
                - conditionType: conditionType
                - conditionType: conditionType
                serviceAccountName: serviceAccountName
                imagePullSecrets:
                - name: name
                - name: name
                priorityClassName: priorityClassName
                hostAliases:
                - ip: ip
                  hostnames:
                  - hostnames
                  - hostnames
                - ip: ip
                  hostnames:
                  - hostnames
                  - hostnames
                securityContext:
                  runAsUser: 6
                  seLinuxOptions:
                    role: role
                    level: level
                    type: type
                    user: user
                  fsGroup: 1
                  supplementalGroups:
                  - 7
                  - 7
                  runAsGroup: 1
                  runAsNonRoot: true
                  sysctls:
                  - name: name
                    value: value
                  - name: name
                    value: value
                nodeSelector: "{}"
                hostname: hostname
                tolerations:
                - effect: effect
                  tolerationSeconds: 4
                  value: value
                  key: key
                  operator: operator
                - effect: effect
                  tolerationSeconds: 4
                  value: value
                  key: key
                  operator: operator
                automountServiceAccountToken: true
                schedulerName: schedulerName
                activeDeadlineSeconds: 0
                hostIPC: true
                volumes:
                - quobyte:
                    volume: volume
                    registry: registry
                    readOnly: true
                    user: user
                    group: group
                  azureFile:
                    secretName: secretName
                    readOnly: true
                    shareName: shareName
                  flexVolume:
                    driver: driver
                    options: "{}"
                    secretRef:
                      name: name
                    readOnly: true
                    fsType: fsType
                  secret:
                    secretName: secretName
                    defaultMode: 2
                    optional: true
                    items:
                    - mode: 9
                      path: path
                      key: key
                    - mode: 9
                      path: path
                      key: key
                  projected:
                    sources:
                    - downwardAPI:
                        items:
                        - mode: 8
                          path: path
                          resourceFieldRef:
                            divisor: divisor
                            resource: resource
                            containerName: containerName
                          fieldRef:
                            apiVersion: apiVersion
                            fieldPath: fieldPath
                        - mode: 8
                          path: path
                          resourceFieldRef:
                            divisor: divisor
                            resource: resource
                            containerName: containerName
                          fieldRef:
                            apiVersion: apiVersion
                            fieldPath: fieldPath
                      configMap:
                        name: name
                        optional: true
                        items:
                        - mode: 9
                          path: path
                          key: key
                        - mode: 9
                          path: path
                          key: key
                      secret:
                        name: name
                        optional: true
                        items:
                        - mode: 9
                          path: path
                          key: key
                        - mode: 9
                          path: path
                          key: key
                      serviceAccountToken:
                        path: path
                        audience: audience
                        expirationSeconds: 1
                    - downwardAPI:
                        items:
                        - mode: 8
                          path: path
                          resourceFieldRef:
                            divisor: divisor
                            resource: resource
                            containerName: containerName
                          fieldRef:
                            apiVersion: apiVersion
                            fieldPath: fieldPath
                        - mode: 8
                          path: path
                          resourceFieldRef:
                            divisor: divisor
                            resource: resource
                            containerName: containerName
                          fieldRef:
                            apiVersion: apiVersion
                            fieldPath: fieldPath
                      configMap:
                        name: name
                        optional: true
                        items:
                        - mode: 9
                          path: path
                          key: key
                        - mode: 9
                          path: path
                          key: key
                      secret:
                        name: name
                        optional: true
                        items:
                        - mode: 9
                          path: path
                          key: key
                        - mode: 9
                          path: path
                          key: key
                      serviceAccountToken:
                        path: path
                        audience: audience
                        expirationSeconds: 1
                    defaultMode: 6
                  cephfs:
                    path: path
                    secretRef:
                      name: name
                    secretFile: secretFile
                    readOnly: true
                    user: user
                    monitors:
                    - monitors
                    - monitors
                  scaleIO:
                    system: system
                    protectionDomain: protectionDomain
                    sslEnabled: true
                    storageMode: storageMode
                    volumeName: volumeName
                    secretRef:
                      name: name
                    readOnly: true
                    fsType: fsType
                    storagePool: storagePool
                    gateway: gateway
                  emptyDir:
                    sizeLimit: sizeLimit
                    medium: medium
                  glusterfs:
                    path: path
                    endpoints: endpoints
                    readOnly: true
                  gcePersistentDisk:
                    partition: 6
                    readOnly: true
                    pdName: pdName
                    fsType: fsType
                  photonPersistentDisk:
                    pdID: pdID
                    fsType: fsType
                  azureDisk:
                    diskName: diskName
                    kind: "{}"
                    readOnly: true
                    cachingMode: "{}"
                    diskURI: diskURI
                    fsType: fsType
                  cinder:
                    secretRef:
                      name: name
                    volumeID: volumeID
                    readOnly: true
                    fsType: fsType
                  downwardAPI:
                    defaultMode: 6
                    items:
                    - mode: 8
                      path: path
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                    - mode: 8
                      path: path
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  awsElasticBlockStore:
                    partition: 5
                    volumeID: volumeID
                    readOnly: true
                    fsType: fsType
                  flocker:
                    datasetName: datasetName
                    datasetUUID: datasetUUID
                  iscsi:
                    chapAuthSession: true
                    iscsiInterface: iscsiInterface
                    lun: 3
                    chapAuthDiscovery: true
                    iqn: iqn
                    portals:
                    - portals
                    - portals
                    secretRef:
                      name: name
                    initiatorName: initiatorName
                    readOnly: true
                    fsType: fsType
                    targetPortal: targetPortal
                  rbd:
                    image: image
                    pool: pool
                    secretRef:
                      name: name
                    readOnly: true
                    fsType: fsType
                    keyring: keyring
                    user: user
                    monitors:
                    - monitors
                    - monitors
                  configMap:
                    defaultMode: 9
                    name: name
                    optional: true
                    items:
                    - mode: 9
                      path: path
                      key: key
                    - mode: 9
                      path: path
                      key: key
                  storageos:
                    volumeNamespace: volumeNamespace
                    volumeName: volumeName
                    secretRef:
                      name: name
                    readOnly: true
                    fsType: fsType
                  name: name
                  nfs:
                    path: path
                    server: server
                    readOnly: true
                  persistentVolumeClaim:
                    claimName: claimName
                    readOnly: true
                  gitRepo:
                    repository: repository
                    directory: directory
                    revision: revision
                  portworxVolume:
                    volumeID: volumeID
                    readOnly: true
                    fsType: fsType
                  vsphereVolume:
                    storagePolicyName: storagePolicyName
                    storagePolicyID: storagePolicyID
                    volumePath: volumePath
                    fsType: fsType
                  fc:
                    lun: 9
                    targetWWNs:
                    - targetWWNs
                    - targetWWNs
                    readOnly: true
                    wwids:
                    - wwids
                    - wwids
                    fsType: fsType
                  hostPath:
                    path: path
                    type: "{}"
                - quobyte:
                    volume: volume
                    registry: registry
                    readOnly: true
                    user: user
                    group: group
                  azureFile:
                    secretName: secretName
                    readOnly: true
                    shareName: shareName
                  flexVolume:
                    driver: driver
                    options: "{}"
                    secretRef:
                      name: name
                    readOnly: true
                    fsType: fsType
                  secret:
                    secretName: secretName
                    defaultMode: 2
                    optional: true
                    items:
                    - mode: 9
                      path: path
                      key: key
                    - mode: 9
                      path: path
                      key: key
                  projected:
                    sources:
                    - downwardAPI:
                        items:
                        - mode: 8
                          path: path
                          resourceFieldRef:
                            divisor: divisor
                            resource: resource
                            containerName: containerName
                          fieldRef:
                            apiVersion: apiVersion
                            fieldPath: fieldPath
                        - mode: 8
                          path: path
                          resourceFieldRef:
                            divisor: divisor
                            resource: resource
                            containerName: containerName
                          fieldRef:
                            apiVersion: apiVersion
                            fieldPath: fieldPath
                      configMap:
                        name: name
                        optional: true
                        items:
                        - mode: 9
                          path: path
                          key: key
                        - mode: 9
                          path: path
                          key: key
                      secret:
                        name: name
                        optional: true
                        items:
                        - mode: 9
                          path: path
                          key: key
                        - mode: 9
                          path: path
                          key: key
                      serviceAccountToken:
                        path: path
                        audience: audience
                        expirationSeconds: 1
                    - downwardAPI:
                        items:
                        - mode: 8
                          path: path
                          resourceFieldRef:
                            divisor: divisor
                            resource: resource
                            containerName: containerName
                          fieldRef:
                            apiVersion: apiVersion
                            fieldPath: fieldPath
                        - mode: 8
                          path: path
                          resourceFieldRef:
                            divisor: divisor
                            resource: resource
                            containerName: containerName
                          fieldRef:
                            apiVersion: apiVersion
                            fieldPath: fieldPath
                      configMap:
                        name: name
                        optional: true
                        items:
                        - mode: 9
                          path: path
                          key: key
                        - mode: 9
                          path: path
                          key: key
                      secret:
                        name: name
                        optional: true
                        items:
                        - mode: 9
                          path: path
                          key: key
                        - mode: 9
                          path: path
                          key: key
                      serviceAccountToken:
                        path: path
                        audience: audience
                        expirationSeconds: 1
                    defaultMode: 6
                  cephfs:
                    path: path
                    secretRef:
                      name: name
                    secretFile: secretFile
                    readOnly: true
                    user: user
                    monitors:
                    - monitors
                    - monitors
                  scaleIO:
                    system: system
                    protectionDomain: protectionDomain
                    sslEnabled: true
                    storageMode: storageMode
                    volumeName: volumeName
                    secretRef:
                      name: name
                    readOnly: true
                    fsType: fsType
                    storagePool: storagePool
                    gateway: gateway
                  emptyDir:
                    sizeLimit: sizeLimit
                    medium: medium
                  glusterfs:
                    path: path
                    endpoints: endpoints
                    readOnly: true
                  gcePersistentDisk:
                    partition: 6
                    readOnly: true
                    pdName: pdName
                    fsType: fsType
                  photonPersistentDisk:
                    pdID: pdID
                    fsType: fsType
                  azureDisk:
                    diskName: diskName
                    kind: "{}"
                    readOnly: true
                    cachingMode: "{}"
                    diskURI: diskURI
                    fsType: fsType
                  cinder:
                    secretRef:
                      name: name
                    volumeID: volumeID
                    readOnly: true
                    fsType: fsType
                  downwardAPI:
                    defaultMode: 6
                    items:
                    - mode: 8
                      path: path
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                    - mode: 8
                      path: path
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  awsElasticBlockStore:
                    partition: 5
                    volumeID: volumeID
                    readOnly: true
                    fsType: fsType
                  flocker:
                    datasetName: datasetName
                    datasetUUID: datasetUUID
                  iscsi:
                    chapAuthSession: true
                    iscsiInterface: iscsiInterface
                    lun: 3
                    chapAuthDiscovery: true
                    iqn: iqn
                    portals:
                    - portals
                    - portals
                    secretRef:
                      name: name
                    initiatorName: initiatorName
                    readOnly: true
                    fsType: fsType
                    targetPortal: targetPortal
                  rbd:
                    image: image
                    pool: pool
                    secretRef:
                      name: name
                    readOnly: true
                    fsType: fsType
                    keyring: keyring
                    user: user
                    monitors:
                    - monitors
                    - monitors
                  configMap:
                    defaultMode: 9
                    name: name
                    optional: true
                    items:
                    - mode: 9
                      path: path
                      key: key
                    - mode: 9
                      path: path
                      key: key
                  storageos:
                    volumeNamespace: volumeNamespace
                    volumeName: volumeName
                    secretRef:
                      name: name
                    readOnly: true
                    fsType: fsType
                  name: name
                  nfs:
                    path: path
                    server: server
                    readOnly: true
                  persistentVolumeClaim:
                    claimName: claimName
                    readOnly: true
                  gitRepo:
                    repository: repository
                    directory: directory
                    revision: revision
                  portworxVolume:
                    volumeID: volumeID
                    readOnly: true
                    fsType: fsType
                  vsphereVolume:
                    storagePolicyName: storagePolicyName
                    storagePolicyID: storagePolicyID
                    volumePath: volumePath
                    fsType: fsType
                  fc:
                    lun: 9
                    targetWWNs:
                    - targetWWNs
                    - targetWWNs
                    readOnly: true
                    wwids:
                    - wwids
                    - wwids
                    fsType: fsType
                  hostPath:
                    path: path
                    type: "{}"
                serviceAccount: serviceAccount
                priority: 1
                restartPolicy: restartPolicy
                shareProcessNamespace: true
                subdomain: subdomain
                containers:
                - volumeDevices:
                  - devicePath: devicePath
                    name: name
                  - devicePath: devicePath
                    name: name
                  image: image
                  imagePullPolicy: imagePullPolicy
                  livenessProbe:
                    failureThreshold: 5
                    periodSeconds: 2
                    tcpSocket:
                      port: port
                      host: host
                    timeoutSeconds: 9
                    successThreshold: 7
                    initialDelaySeconds: 5
                    exec:
                      command:
                      - command
                      - command
                    httpGet:
                      path: path
                      scheme: scheme
                      port: port
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  stdin: true
                  terminationMessagePolicy: terminationMessagePolicy
                  terminationMessagePath: terminationMessagePath
                  workingDir: workingDir
                  resources:
                    requests: "{}"
                    limits: "{}"
                  securityContext:
                    privileged: true
                    runAsUser: 7
                    capabilities:
                      add:
                      - "{}"
                      - "{}"
                      drop:
                      - "{}"
                      - "{}"
                    seLinuxOptions:
                      role: role
                      level: level
                      type: type
                      user: user
                    allowPrivilegeEscalation: true
                    runAsGroup: 4
                    runAsNonRoot: true
                    readOnlyRootFilesystem: true
                  env:
                  - name: name
                    value: value
                    valueFrom:
                      secretKeyRef:
                        name: name
                        optional: true
                        key: key
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      configMapKeyRef:
                        name: name
                        optional: true
                        key: key
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  - name: name
                    value: value
                    valueFrom:
                      secretKeyRef:
                        name: name
                        optional: true
                        key: key
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      configMapKeyRef:
                        name: name
                        optional: true
                        key: key
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  ports:
                  - protocol: protocol
                    hostIP: hostIP
                    name: name
                    containerPort: 3
                    hostPort: 2
                  - protocol: protocol
                    hostIP: hostIP
                    name: name
                    containerPort: 3
                    hostPort: 2
                  command:
                  - command
                  - command
                  volumeMounts:
                  - mountPath: mountPath
                    mountPropagation: "{}"
                    name: name
                    readOnly: true
                    subPath: subPath
                  - mountPath: mountPath
                    mountPropagation: "{}"
                    name: name
                    readOnly: true
                    subPath: subPath
                  args:
                  - args
                  - args
                  lifecycle:
                    postStart:
                      tcpSocket:
                        port: port
                        host: host
                      exec:
                        command:
                        - command
                        - command
                      httpGet:
                        path: path
                        scheme: scheme
                        port: port
                        host: host
                        httpHeaders:
                        - name: name
                          value: value
                        - name: name
                          value: value
                    preStop:
                      tcpSocket:
                        port: port
                        host: host
                      exec:
                        command:
                        - command
                        - command
                      httpGet:
                        path: path
                        scheme: scheme
                        port: port
                        host: host
                        httpHeaders:
                        - name: name
                          value: value
                        - name: name
                          value: value
                  name: name
                  tty: true
                  readinessProbe:
                    failureThreshold: 5
                    periodSeconds: 2
                    tcpSocket:
                      port: port
                      host: host
                    timeoutSeconds: 9
                    successThreshold: 7
                    initialDelaySeconds: 5
                    exec:
                      command:
                      - command
                      - command
                    httpGet:
                      path: path
                      scheme: scheme
                      port: port
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  stdinOnce: true
                  envFrom:
                  - configMapRef:
                      name: name
                      optional: true
                    prefix: prefix
                    secretRef:
                      name: name
                      optional: true
                  - configMapRef:
                      name: name
                      optional: true
                    prefix: prefix
                    secretRef:
                      name: name
                      optional: true
                - volumeDevices:
                  - devicePath: devicePath
                    name: name
                  - devicePath: devicePath
                    name: name
                  image: image
                  imagePullPolicy: imagePullPolicy
                  livenessProbe:
                    failureThreshold: 5
                    periodSeconds: 2
                    tcpSocket:
                      port: port
                      host: host
                    timeoutSeconds: 9
                    successThreshold: 7
                    initialDelaySeconds: 5
                    exec:
                      command:
                      - command
                      - command
                    httpGet:
                      path: path
                      scheme: scheme
                      port: port
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  stdin: true
                  terminationMessagePolicy: terminationMessagePolicy
                  terminationMessagePath: terminationMessagePath
                  workingDir: workingDir
                  resources:
                    requests: "{}"
                    limits: "{}"
                  securityContext:
                    privileged: true
                    runAsUser: 7
                    capabilities:
                      add:
                      - "{}"
                      - "{}"
                      drop:
                      - "{}"
                      - "{}"
                    seLinuxOptions:
                      role: role
                      level: level
                      type: type
                      user: user
                    allowPrivilegeEscalation: true
                    runAsGroup: 4
                    runAsNonRoot: true
                    readOnlyRootFilesystem: true
                  env:
                  - name: name
                    value: value
                    valueFrom:
                      secretKeyRef:
                        name: name
                        optional: true
                        key: key
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      configMapKeyRef:
                        name: name
                        optional: true
                        key: key
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  - name: name
                    value: value
                    valueFrom:
                      secretKeyRef:
                        name: name
                        optional: true
                        key: key
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      configMapKeyRef:
                        name: name
                        optional: true
                        key: key
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  ports:
                  - protocol: protocol
                    hostIP: hostIP
                    name: name
                    containerPort: 3
                    hostPort: 2
                  - protocol: protocol
                    hostIP: hostIP
                    name: name
                    containerPort: 3
                    hostPort: 2
                  command:
                  - command
                  - command
                  volumeMounts:
                  - mountPath: mountPath
                    mountPropagation: "{}"
                    name: name
                    readOnly: true
                    subPath: subPath
                  - mountPath: mountPath
                    mountPropagation: "{}"
                    name: name
                    readOnly: true
                    subPath: subPath
                  args:
                  - args
                  - args
                  lifecycle:
                    postStart:
                      tcpSocket:
                        port: port
                        host: host
                      exec:
                        command:
                        - command
                        - command
                      httpGet:
                        path: path
                        scheme: scheme
                        port: port
                        host: host
                        httpHeaders:
                        - name: name
                          value: value
                        - name: name
                          value: value
                    preStop:
                      tcpSocket:
                        port: port
                        host: host
                      exec:
                        command:
                        - command
                        - command
                      httpGet:
                        path: path
                        scheme: scheme
                        port: port
                        host: host
                        httpHeaders:
                        - name: name
                          value: value
                        - name: name
                          value: value
                  name: name
                  tty: true
                  readinessProbe:
                    failureThreshold: 5
                    periodSeconds: 2
                    tcpSocket:
                      port: port
                      host: host
                    timeoutSeconds: 9
                    successThreshold: 7
                    initialDelaySeconds: 5
                    exec:
                      command:
                      - command
                      - command
                    httpGet:
                      path: path
                      scheme: scheme
                      port: port
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  stdinOnce: true
                  envFrom:
                  - configMapRef:
                      name: name
                      optional: true
                    prefix: prefix
                    secretRef:
                      name: name
                      optional: true
                  - configMapRef:
                      name: name
                      optional: true
                    prefix: prefix
                    secretRef:
                      name: name
                      optional: true
                initContainers:
                - volumeDevices:
                  - devicePath: devicePath
                    name: name
                  - devicePath: devicePath
                    name: name
                  image: image
                  imagePullPolicy: imagePullPolicy
                  livenessProbe:
                    failureThreshold: 5
                    periodSeconds: 2
                    tcpSocket:
                      port: port
                      host: host
                    timeoutSeconds: 9
                    successThreshold: 7
                    initialDelaySeconds: 5
                    exec:
                      command:
                      - command
                      - command
                    httpGet:
                      path: path
                      scheme: scheme
                      port: port
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  stdin: true
                  terminationMessagePolicy: terminationMessagePolicy
                  terminationMessagePath: terminationMessagePath
                  workingDir: workingDir
                  resources:
                    requests: "{}"
                    limits: "{}"
                  securityContext:
                    privileged: true
                    runAsUser: 7
                    capabilities:
                      add:
                      - "{}"
                      - "{}"
                      drop:
                      - "{}"
                      - "{}"
                    seLinuxOptions:
                      role: role
                      level: level
                      type: type
                      user: user
                    allowPrivilegeEscalation: true
                    runAsGroup: 4
                    runAsNonRoot: true
                    readOnlyRootFilesystem: true
                  env:
                  - name: name
                    value: value
                    valueFrom:
                      secretKeyRef:
                        name: name
                        optional: true
                        key: key
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      configMapKeyRef:
                        name: name
                        optional: true
                        key: key
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  - name: name
                    value: value
                    valueFrom:
                      secretKeyRef:
                        name: name
                        optional: true
                        key: key
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      configMapKeyRef:
                        name: name
                        optional: true
                        key: key
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  ports:
                  - protocol: protocol
                    hostIP: hostIP
                    name: name
                    containerPort: 3
                    hostPort: 2
                  - protocol: protocol
                    hostIP: hostIP
                    name: name
                    containerPort: 3
                    hostPort: 2
                  command:
                  - command
                  - command
                  volumeMounts:
                  - mountPath: mountPath
                    mountPropagation: "{}"
                    name: name
                    readOnly: true
                    subPath: subPath
                  - mountPath: mountPath
                    mountPropagation: "{}"
                    name: name
                    readOnly: true
                    subPath: subPath
                  args:
                  - args
                  - args
                  lifecycle:
                    postStart:
                      tcpSocket:
                        port: port
                        host: host
                      exec:
                        command:
                        - command
                        - command
                      httpGet:
                        path: path
                        scheme: scheme
                        port: port
                        host: host
                        httpHeaders:
                        - name: name
                          value: value
                        - name: name
                          value: value
                    preStop:
                      tcpSocket:
                        port: port
                        host: host
                      exec:
                        command:
                        - command
                        - command
                      httpGet:
                        path: path
                        scheme: scheme
                        port: port
                        host: host
                        httpHeaders:
                        - name: name
                          value: value
                        - name: name
                          value: value
                  name: name
                  tty: true
                  readinessProbe:
                    failureThreshold: 5
                    periodSeconds: 2
                    tcpSocket:
                      port: port
                      host: host
                    timeoutSeconds: 9
                    successThreshold: 7
                    initialDelaySeconds: 5
                    exec:
                      command:
                      - command
                      - command
                    httpGet:
                      path: path
                      scheme: scheme
                      port: port
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  stdinOnce: true
                  envFrom:
                  - configMapRef:
                      name: name
                      optional: true
                    prefix: prefix
                    secretRef:
                      name: name
                      optional: true
                  - configMapRef:
                      name: name
                      optional: true
                    prefix: prefix
                    secretRef:
                      name: name
                      optional: true
                - volumeDevices:
                  - devicePath: devicePath
                    name: name
                  - devicePath: devicePath
                    name: name
                  image: image
                  imagePullPolicy: imagePullPolicy
                  livenessProbe:
                    failureThreshold: 5
                    periodSeconds: 2
                    tcpSocket:
                      port: port
                      host: host
                    timeoutSeconds: 9
                    successThreshold: 7
                    initialDelaySeconds: 5
                    exec:
                      command:
                      - command
                      - command
                    httpGet:
                      path: path
                      scheme: scheme
                      port: port
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  stdin: true
                  terminationMessagePolicy: terminationMessagePolicy
                  terminationMessagePath: terminationMessagePath
                  workingDir: workingDir
                  resources:
                    requests: "{}"
                    limits: "{}"
                  securityContext:
                    privileged: true
                    runAsUser: 7
                    capabilities:
                      add:
                      - "{}"
                      - "{}"
                      drop:
                      - "{}"
                      - "{}"
                    seLinuxOptions:
                      role: role
                      level: level
                      type: type
                      user: user
                    allowPrivilegeEscalation: true
                    runAsGroup: 4
                    runAsNonRoot: true
                    readOnlyRootFilesystem: true
                  env:
                  - name: name
                    value: value
                    valueFrom:
                      secretKeyRef:
                        name: name
                        optional: true
                        key: key
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      configMapKeyRef:
                        name: name
                        optional: true
                        key: key
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  - name: name
                    value: value
                    valueFrom:
                      secretKeyRef:
                        name: name
                        optional: true
                        key: key
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      configMapKeyRef:
                        name: name
                        optional: true
                        key: key
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  ports:
                  - protocol: protocol
                    hostIP: hostIP
                    name: name
                    containerPort: 3
                    hostPort: 2
                  - protocol: protocol
                    hostIP: hostIP
                    name: name
                    containerPort: 3
                    hostPort: 2
                  command:
                  - command
                  - command
                  volumeMounts:
                  - mountPath: mountPath
                    mountPropagation: "{}"
                    name: name
                    readOnly: true
                    subPath: subPath
                  - mountPath: mountPath
                    mountPropagation: "{}"
                    name: name
                    readOnly: true
                    subPath: subPath
                  args:
                  - args
                  - args
                  lifecycle:
                    postStart:
                      tcpSocket:
                        port: port
                        host: host
                      exec:
                        command:
                        - command
                        - command
                      httpGet:
                        path: path
                        scheme: scheme
                        port: port
                        host: host
                        httpHeaders:
                        - name: name
                          value: value
                        - name: name
                          value: value
                    preStop:
                      tcpSocket:
                        port: port
                        host: host
                      exec:
                        command:
                        - command
                        - command
                      httpGet:
                        path: path
                        scheme: scheme
                        port: port
                        host: host
                        httpHeaders:
                        - name: name
                          value: value
                        - name: name
                          value: value
                  name: name
                  tty: true
                  readinessProbe:
                    failureThreshold: 5
                    periodSeconds: 2
                    tcpSocket:
                      port: port
                      host: host
                    timeoutSeconds: 9
                    successThreshold: 7
                    initialDelaySeconds: 5
                    exec:
                      command:
                      - command
                      - command
                    httpGet:
                      path: path
                      scheme: scheme
                      port: port
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  stdinOnce: true
                  envFrom:
                  - configMapRef:
                      name: name
                      optional: true
                    prefix: prefix
                    secretRef:
                      name: name
                      optional: true
                  - configMapRef:
                      name: name
                      optional: true
                    prefix: prefix
                    secretRef:
                      name: name
                      optional: true
                affinity:
                  nodeAffinity:
                    requiredDuringSchedulingIgnoredDuringExecution:
                      nodeSelectorTerms:
                      - matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchFields:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                      - matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchFields:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                    preferredDuringSchedulingIgnoredDuringExecution:
                    - preference:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchFields:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                      weight: 6
                    - preference:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchFields:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                      weight: 6
                  podAffinity:
                    requiredDuringSchedulingIgnoredDuringExecution:
                    - labelSelector:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchLabels: "{}"
                      topologyKey: topologyKey
                      namespaces:
                      - namespaces
                      - namespaces
                    - labelSelector:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchLabels: "{}"
                      topologyKey: topologyKey
                      namespaces:
                      - namespaces
                      - namespaces
                    preferredDuringSchedulingIgnoredDuringExecution:
                    - podAffinityTerm:
                        labelSelector:
                          matchExpressions:
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          matchLabels: "{}"
                        topologyKey: topologyKey
                        namespaces:
                        - namespaces
                        - namespaces
                      weight: 1
                    - podAffinityTerm:
                        labelSelector:
                          matchExpressions:
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          matchLabels: "{}"
                        topologyKey: topologyKey
                        namespaces:
                        - namespaces
                        - namespaces
                      weight: 1
                  podAntiAffinity:
                    requiredDuringSchedulingIgnoredDuringExecution:
                    - labelSelector:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchLabels: "{}"
                      topologyKey: topologyKey
                      namespaces:
                      - namespaces
                      - namespaces
                    - labelSelector:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchLabels: "{}"
                      topologyKey: topologyKey
                      namespaces:
                      - namespaces
                      - namespaces
                    preferredDuringSchedulingIgnoredDuringExecution:
                    - podAffinityTerm:
                        labelSelector:
                          matchExpressions:
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          matchLabels: "{}"
                        topologyKey: topologyKey
                        namespaces:
                        - namespaces
                        - namespaces
                      weight: 1
                    - podAffinityTerm:
                        labelSelector:
                          matchExpressions:
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          matchLabels: "{}"
                        topologyKey: topologyKey
                        namespaces:
                        - namespaces
                        - namespaces
                      weight: 1
                hostPID: true
            podManagementPolicy: podManagementPolicy
            updateStrategy:
              type: type
              rollingUpdate:
                partition: 1
            replicas: 0
            revisionHistoryLimit: 6
            selector:
              matchExpressions:
              - values:
                - values
                - values
                key: key
                operator: operator
              - values:
                - values
                - values
                key: key
                operator: operator
              matchLabels: "{}"
            serviceName: serviceName
            volumeClaimTemplates:
            - metadata:
                generation: 6
                finalizers:
                - finalizers
                - finalizers
                resourceVersion: resourceVersion
                annotations: "{}"
                generateName: generateName
                deletionTimestamp: deletionTimestamp
                labels: "{}"
                ownerReferences:
                - uid: uid
                  controller: true
                  apiVersion: apiVersion
                  kind: kind
                  name: name
                  blockOwnerDeletion: true
                - uid: uid
                  controller: true
                  apiVersion: apiVersion
                  kind: kind
                  name: name
                  blockOwnerDeletion: true
                selfLink: selfLink
                deletionGracePeriodSeconds: 0
                uid: uid
                initializers:
                  result:
                    reason: reason
                    metadata:
                      continue: continue
                      resourceVersion: resourceVersion
                      selfLink: selfLink
                    apiVersion: apiVersion
                    code: 1
                    kind: kind
                    details:
                      uid: uid
                      kind: kind
                      causes:
                      - reason: reason
                        field: field
                        message: message
                      - reason: reason
                        field: field
                        message: message
                      retryAfterSeconds: 5
                      name: name
                      group: group
                    message: message
                    status: status
                  pending:
                  - name: name
                  - name: name
                clusterName: clusterName
                creationTimestamp: creationTimestamp
                name: name
                namespace: namespace
              apiVersion: apiVersion
              kind: kind
              spec:
                storageClassName: storageClassName
                volumeName: volumeName
                resources:
                  requests: "{}"
                  limits: "{}"
                selector:
                  matchExpressions:
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  matchLabels: "{}"
                accessModes:
                - "{}"
                - "{}"
                volumeMode: "{}"
              status:
                phase: phase
                accessModes:
                - "{}"
                - "{}"
                conditions:
                - reason: reason
                  lastTransitionTime: lastTransitionTime
                  message: message
                  type: type
                  lastProbeTime: lastProbeTime
                  status: status
                - reason: reason
                  lastTransitionTime: lastTransitionTime
                  message: message
                  type: type
                  lastProbeTime: lastProbeTime
                  status: status
                capacity: "{}"
            - metadata:
                generation: 6
                finalizers:
                - finalizers
                - finalizers
                resourceVersion: resourceVersion
                annotations: "{}"
                generateName: generateName
                deletionTimestamp: deletionTimestamp
                labels: "{}"
                ownerReferences:
                - uid: uid
                  controller: true
                  apiVersion: apiVersion
                  kind: kind
                  name: name
                  blockOwnerDeletion: true
                - uid: uid
                  controller: true
                  apiVersion: apiVersion
                  kind: kind
                  name: name
                  blockOwnerDeletion: true
                selfLink: selfLink
                deletionGracePeriodSeconds: 0
                uid: uid
                initializers:
                  result:
                    reason: reason
                    metadata:
                      continue: continue
                      resourceVersion: resourceVersion
                      selfLink: selfLink
                    apiVersion: apiVersion
                    code: 1
                    kind: kind
                    details:
                      uid: uid
                      kind: kind
                      causes:
                      - reason: reason
                        field: field
                        message: message
                      - reason: reason
                        field: field
                        message: message
                      retryAfterSeconds: 5
                      name: name
                      group: group
                    message: message
                    status: status
                  pending:
                  - name: name
                  - name: name
                clusterName: clusterName
                creationTimestamp: creationTimestamp
                name: name
                namespace: namespace
              apiVersion: apiVersion
              kind: kind
              spec:
                storageClassName: storageClassName
                volumeName: volumeName
                resources:
                  requests: "{}"
                  limits: "{}"
                selector:
                  matchExpressions:
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  - values:
                    - values
                    - values
                    key: key
                    operator: operator
                  matchLabels: "{}"
                accessModes:
                - "{}"
                - "{}"
                volumeMode: "{}"
              status:
                phase: phase
                accessModes:
                - "{}"
                - "{}"
                conditions:
                - reason: reason
                  lastTransitionTime: lastTransitionTime
                  message: message
                  type: type
                  lastProbeTime: lastProbeTime
                  status: status
                - reason: reason
                  lastTransitionTime: lastTransitionTime
                  message: message
                  type: type
                  lastProbeTime: lastProbeTime
                  status: status
                capacity: "{}"
          status:
            currentRevision: currentRevision
            replicas: 9
            updateRevision: updateRevision
            readyReplicas: 7
            collisionCount: 5
            currentReplicas: 5
            conditions:
            - reason: reason
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
              status: status
            - reason: reason
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
              status: status
            updatedReplicas: 3
            observedGeneration: 2
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
          type: string
        items:
          items:
            $ref: '#/components/schemas/v1.StatefulSet'
          type: array
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: '#/components/schemas/v1.ListMeta'
      required:
      - items
      type: object
    v1.StatefulSetSpec:
      description: A StatefulSetSpec is the specification of a StatefulSet.
      example:
        template:
          metadata:
            generation: 6
            finalizers:
            - finalizers
            - finalizers
            resourceVersion: resourceVersion
            annotations: "{}"
            generateName: generateName
            deletionTimestamp: deletionTimestamp
            labels: "{}"
            ownerReferences:
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            selfLink: selfLink
            deletionGracePeriodSeconds: 0
            uid: uid
            initializers:
              result:
                reason: reason
                metadata:
                  continue: continue
                  resourceVersion: resourceVersion
                  selfLink: selfLink
                apiVersion: apiVersion
                code: 1
                kind: kind
                details:
                  uid: uid
                  kind: kind
                  causes:
                  - reason: reason
                    field: field
                    message: message
                  - reason: reason
                    field: field
                    message: message
                  retryAfterSeconds: 5
                  name: name
                  group: group
                message: message
                status: status
              pending:
              - name: name
              - name: name
            clusterName: clusterName
            creationTimestamp: creationTimestamp
            name: name
            namespace: namespace
          spec:
            dnsPolicy: dnsPolicy
            nodeName: nodeName
            terminationGracePeriodSeconds: 1
            dnsConfig:
              searches:
              - searches
              - searches
              nameservers:
              - nameservers
              - nameservers
              options:
              - name: name
                value: value
              - name: name
                value: value
            hostNetwork: true
            readinessGates:
            - conditionType: conditionType
            - conditionType: conditionType
            serviceAccountName: serviceAccountName
            imagePullSecrets:
            - name: name
            - name: name
            priorityClassName: priorityClassName
            hostAliases:
            - ip: ip
              hostnames:
              - hostnames
              - hostnames
            - ip: ip
              hostnames:
              - hostnames
              - hostnames
            securityContext:
              runAsUser: 6
              seLinuxOptions:
                role: role
                level: level
                type: type
                user: user
              fsGroup: 1
              supplementalGroups:
              - 7
              - 7
              runAsGroup: 1
              runAsNonRoot: true
              sysctls:
              - name: name
                value: value
              - name: name
                value: value
            nodeSelector: "{}"
            hostname: hostname
            tolerations:
            - effect: effect
              tolerationSeconds: 4
              value: value
              key: key
              operator: operator
            - effect: effect
              tolerationSeconds: 4
              value: value
              key: key
              operator: operator
            automountServiceAccountToken: true
            schedulerName: schedulerName
            activeDeadlineSeconds: 0
            hostIPC: true
            volumes:
            - quobyte:
                volume: volume
                registry: registry
                readOnly: true
                user: user
                group: group
              azureFile:
                secretName: secretName
                readOnly: true
                shareName: shareName
              flexVolume:
                driver: driver
                options: "{}"
                secretRef:
                  name: name
                readOnly: true
                fsType: fsType
              secret:
                secretName: secretName
                defaultMode: 2
                optional: true
                items:
                - mode: 9
                  path: path
                  key: key
                - mode: 9
                  path: path
                  key: key
              projected:
                sources:
                - downwardAPI:
                    items:
                    - mode: 8
                      path: path
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                    - mode: 8
                      path: path
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  configMap:
                    name: name
                    optional: true
                    items:
                    - mode: 9
                      path: path
                      key: key
                    - mode: 9
                      path: path
                      key: key
                  secret:
                    name: name
                    optional: true
                    items:
                    - mode: 9
                      path: path
                      key: key
                    - mode: 9
                      path: path
                      key: key
                  serviceAccountToken:
                    path: path
                    audience: audience
                    expirationSeconds: 1
                - downwardAPI:
                    items:
                    - mode: 8
                      path: path
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                    - mode: 8
                      path: path
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  configMap:
                    name: name
                    optional: true
                    items:
                    - mode: 9
                      path: path
                      key: key
                    - mode: 9
                      path: path
                      key: key
                  secret:
                    name: name
                    optional: true
                    items:
                    - mode: 9
                      path: path
                      key: key
                    - mode: 9
                      path: path
                      key: key
                  serviceAccountToken:
                    path: path
                    audience: audience
                    expirationSeconds: 1
                defaultMode: 6
              cephfs:
                path: path
                secretRef:
                  name: name
                secretFile: secretFile
                readOnly: true
                user: user
                monitors:
                - monitors
                - monitors
              scaleIO:
                system: system
                protectionDomain: protectionDomain
                sslEnabled: true
                storageMode: storageMode
                volumeName: volumeName
                secretRef:
                  name: name
                readOnly: true
                fsType: fsType
                storagePool: storagePool
                gateway: gateway
              emptyDir:
                sizeLimit: sizeLimit
                medium: medium
              glusterfs:
                path: path
                endpoints: endpoints
                readOnly: true
              gcePersistentDisk:
                partition: 6
                readOnly: true
                pdName: pdName
                fsType: fsType
              photonPersistentDisk:
                pdID: pdID
                fsType: fsType
              azureDisk:
                diskName: diskName
                kind: "{}"
                readOnly: true
                cachingMode: "{}"
                diskURI: diskURI
                fsType: fsType
              cinder:
                secretRef:
                  name: name
                volumeID: volumeID
                readOnly: true
                fsType: fsType
              downwardAPI:
                defaultMode: 6
                items:
                - mode: 8
                  path: path
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
                - mode: 8
                  path: path
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              awsElasticBlockStore:
                partition: 5
                volumeID: volumeID
                readOnly: true
                fsType: fsType
              flocker:
                datasetName: datasetName
                datasetUUID: datasetUUID
              iscsi:
                chapAuthSession: true
                iscsiInterface: iscsiInterface
                lun: 3
                chapAuthDiscovery: true
                iqn: iqn
                portals:
                - portals
                - portals
                secretRef:
                  name: name
                initiatorName: initiatorName
                readOnly: true
                fsType: fsType
                targetPortal: targetPortal
              rbd:
                image: image
                pool: pool
                secretRef:
                  name: name
                readOnly: true
                fsType: fsType
                keyring: keyring
                user: user
                monitors:
                - monitors
                - monitors
              configMap:
                defaultMode: 9
                name: name
                optional: true
                items:
                - mode: 9
                  path: path
                  key: key
                - mode: 9
                  path: path
                  key: key
              storageos:
                volumeNamespace: volumeNamespace
                volumeName: volumeName
                secretRef:
                  name: name
                readOnly: true
                fsType: fsType
              name: name
              nfs:
                path: path
                server: server
                readOnly: true
              persistentVolumeClaim:
                claimName: claimName
                readOnly: true
              gitRepo:
                repository: repository
                directory: directory
                revision: revision
              portworxVolume:
                volumeID: volumeID
                readOnly: true
                fsType: fsType
              vsphereVolume:
                storagePolicyName: storagePolicyName
                storagePolicyID: storagePolicyID
                volumePath: volumePath
                fsType: fsType
              fc:
                lun: 9
                targetWWNs:
                - targetWWNs
                - targetWWNs
                readOnly: true
                wwids:
                - wwids
                - wwids
                fsType: fsType
              hostPath:
                path: path
                type: "{}"
            - quobyte:
                volume: volume
                registry: registry
                readOnly: true
                user: user
                group: group
              azureFile:
                secretName: secretName
                readOnly: true
                shareName: shareName
              flexVolume:
                driver: driver
                options: "{}"
                secretRef:
                  name: name
                readOnly: true
                fsType: fsType
              secret:
                secretName: secretName
                defaultMode: 2
                optional: true
                items:
                - mode: 9
                  path: path
                  key: key
                - mode: 9
                  path: path
                  key: key
              projected:
                sources:
                - downwardAPI:
                    items:
                    - mode: 8
                      path: path
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                    - mode: 8
                      path: path
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  configMap:
                    name: name
                    optional: true
                    items:
                    - mode: 9
                      path: path
                      key: key
                    - mode: 9
                      path: path
                      key: key
                  secret:
                    name: name
                    optional: true
                    items:
                    - mode: 9
                      path: path
                      key: key
                    - mode: 9
                      path: path
                      key: key
                  serviceAccountToken:
                    path: path
                    audience: audience
                    expirationSeconds: 1
                - downwardAPI:
                    items:
                    - mode: 8
                      path: path
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                    - mode: 8
                      path: path
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  configMap:
                    name: name
                    optional: true
                    items:
                    - mode: 9
                      path: path
                      key: key
                    - mode: 9
                      path: path
                      key: key
                  secret:
                    name: name
                    optional: true
                    items:
                    - mode: 9
                      path: path
                      key: key
                    - mode: 9
                      path: path
                      key: key
                  serviceAccountToken:
                    path: path
                    audience: audience
                    expirationSeconds: 1
                defaultMode: 6
              cephfs:
                path: path
                secretRef:
                  name: name
                secretFile: secretFile
                readOnly: true
                user: user
                monitors:
                - monitors
                - monitors
              scaleIO:
                system: system
                protectionDomain: protectionDomain
                sslEnabled: true
                storageMode: storageMode
                volumeName: volumeName
                secretRef:
                  name: name
                readOnly: true
                fsType: fsType
                storagePool: storagePool
                gateway: gateway
              emptyDir:
                sizeLimit: sizeLimit
                medium: medium
              glusterfs:
                path: path
                endpoints: endpoints
                readOnly: true
              gcePersistentDisk:
                partition: 6
                readOnly: true
                pdName: pdName
                fsType: fsType
              photonPersistentDisk:
                pdID: pdID
                fsType: fsType
              azureDisk:
                diskName: diskName
                kind: "{}"
                readOnly: true
                cachingMode: "{}"
                diskURI: diskURI
                fsType: fsType
              cinder:
                secretRef:
                  name: name
                volumeID: volumeID
                readOnly: true
                fsType: fsType
              downwardAPI:
                defaultMode: 6
                items:
                - mode: 8
                  path: path
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
                - mode: 8
                  path: path
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              awsElasticBlockStore:
                partition: 5
                volumeID: volumeID
                readOnly: true
                fsType: fsType
              flocker:
                datasetName: datasetName
                datasetUUID: datasetUUID
              iscsi:
                chapAuthSession: true
                iscsiInterface: iscsiInterface
                lun: 3
                chapAuthDiscovery: true
                iqn: iqn
                portals:
                - portals
                - portals
                secretRef:
                  name: name
                initiatorName: initiatorName
                readOnly: true
                fsType: fsType
                targetPortal: targetPortal
              rbd:
                image: image
                pool: pool
                secretRef:
                  name: name
                readOnly: true
                fsType: fsType
                keyring: keyring
                user: user
                monitors:
                - monitors
                - monitors
              configMap:
                defaultMode: 9
                name: name
                optional: true
                items:
                - mode: 9
                  path: path
                  key: key
                - mode: 9
                  path: path
                  key: key
              storageos:
                volumeNamespace: volumeNamespace
                volumeName: volumeName
                secretRef:
                  name: name
                readOnly: true
                fsType: fsType
              name: name
              nfs:
                path: path
                server: server
                readOnly: true
              persistentVolumeClaim:
                claimName: claimName
                readOnly: true
              gitRepo:
                repository: repository
                directory: directory
                revision: revision
              portworxVolume:
                volumeID: volumeID
                readOnly: true
                fsType: fsType
              vsphereVolume:
                storagePolicyName: storagePolicyName
                storagePolicyID: storagePolicyID
                volumePath: volumePath
                fsType: fsType
              fc:
                lun: 9
                targetWWNs:
                - targetWWNs
                - targetWWNs
                readOnly: true
                wwids:
                - wwids
                - wwids
                fsType: fsType
              hostPath:
                path: path
                type: "{}"
            serviceAccount: serviceAccount
            priority: 1
            restartPolicy: restartPolicy
            shareProcessNamespace: true
            subdomain: subdomain
            containers:
            - volumeDevices:
              - devicePath: devicePath
                name: name
              - devicePath: devicePath
                name: name
              image: image
              imagePullPolicy: imagePullPolicy
              livenessProbe:
                failureThreshold: 5
                periodSeconds: 2
                tcpSocket:
                  port: port
                  host: host
                timeoutSeconds: 9
                successThreshold: 7
                initialDelaySeconds: 5
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: port
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              stdin: true
              terminationMessagePolicy: terminationMessagePolicy
              terminationMessagePath: terminationMessagePath
              workingDir: workingDir
              resources:
                requests: "{}"
                limits: "{}"
              securityContext:
                privileged: true
                runAsUser: 7
                capabilities:
                  add:
                  - "{}"
                  - "{}"
                  drop:
                  - "{}"
                  - "{}"
                seLinuxOptions:
                  role: role
                  level: level
                  type: type
                  user: user
                allowPrivilegeEscalation: true
                runAsGroup: 4
                runAsNonRoot: true
                readOnlyRootFilesystem: true
              env:
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    name: name
                    optional: true
                    key: key
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  configMapKeyRef:
                    name: name
                    optional: true
                    key: key
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    name: name
                    optional: true
                    key: key
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  configMapKeyRef:
                    name: name
                    optional: true
                    key: key
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              ports:
              - protocol: protocol
                hostIP: hostIP
                name: name
                containerPort: 3
                hostPort: 2
              - protocol: protocol
                hostIP: hostIP
                name: name
                containerPort: 3
                hostPort: 2
              command:
              - command
              - command
              volumeMounts:
              - mountPath: mountPath
                mountPropagation: "{}"
                name: name
                readOnly: true
                subPath: subPath
              - mountPath: mountPath
                mountPropagation: "{}"
                name: name
                readOnly: true
                subPath: subPath
              args:
              - args
              - args
              lifecycle:
                postStart:
                  tcpSocket:
                    port: port
                    host: host
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: port
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
                preStop:
                  tcpSocket:
                    port: port
                    host: host
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: port
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
              name: name
              tty: true
              readinessProbe:
                failureThreshold: 5
                periodSeconds: 2
                tcpSocket:
                  port: port
                  host: host
                timeoutSeconds: 9
                successThreshold: 7
                initialDelaySeconds: 5
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: port
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              stdinOnce: true
              envFrom:
              - configMapRef:
                  name: name
                  optional: true
                prefix: prefix
                secretRef:
                  name: name
                  optional: true
              - configMapRef:
                  name: name
                  optional: true
                prefix: prefix
                secretRef:
                  name: name
                  optional: true
            - volumeDevices:
              - devicePath: devicePath
                name: name
              - devicePath: devicePath
                name: name
              image: image
              imagePullPolicy: imagePullPolicy
              livenessProbe:
                failureThreshold: 5
                periodSeconds: 2
                tcpSocket:
                  port: port
                  host: host
                timeoutSeconds: 9
                successThreshold: 7
                initialDelaySeconds: 5
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: port
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              stdin: true
              terminationMessagePolicy: terminationMessagePolicy
              terminationMessagePath: terminationMessagePath
              workingDir: workingDir
              resources:
                requests: "{}"
                limits: "{}"
              securityContext:
                privileged: true
                runAsUser: 7
                capabilities:
                  add:
                  - "{}"
                  - "{}"
                  drop:
                  - "{}"
                  - "{}"
                seLinuxOptions:
                  role: role
                  level: level
                  type: type
                  user: user
                allowPrivilegeEscalation: true
                runAsGroup: 4
                runAsNonRoot: true
                readOnlyRootFilesystem: true
              env:
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    name: name
                    optional: true
                    key: key
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  configMapKeyRef:
                    name: name
                    optional: true
                    key: key
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    name: name
                    optional: true
                    key: key
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  configMapKeyRef:
                    name: name
                    optional: true
                    key: key
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              ports:
              - protocol: protocol
                hostIP: hostIP
                name: name
                containerPort: 3
                hostPort: 2
              - protocol: protocol
                hostIP: hostIP
                name: name
                containerPort: 3
                hostPort: 2
              command:
              - command
              - command
              volumeMounts:
              - mountPath: mountPath
                mountPropagation: "{}"
                name: name
                readOnly: true
                subPath: subPath
              - mountPath: mountPath
                mountPropagation: "{}"
                name: name
                readOnly: true
                subPath: subPath
              args:
              - args
              - args
              lifecycle:
                postStart:
                  tcpSocket:
                    port: port
                    host: host
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: port
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
                preStop:
                  tcpSocket:
                    port: port
                    host: host
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: port
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
              name: name
              tty: true
              readinessProbe:
                failureThreshold: 5
                periodSeconds: 2
                tcpSocket:
                  port: port
                  host: host
                timeoutSeconds: 9
                successThreshold: 7
                initialDelaySeconds: 5
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: port
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              stdinOnce: true
              envFrom:
              - configMapRef:
                  name: name
                  optional: true
                prefix: prefix
                secretRef:
                  name: name
                  optional: true
              - configMapRef:
                  name: name
                  optional: true
                prefix: prefix
                secretRef:
                  name: name
                  optional: true
            initContainers:
            - volumeDevices:
              - devicePath: devicePath
                name: name
              - devicePath: devicePath
                name: name
              image: image
              imagePullPolicy: imagePullPolicy
              livenessProbe:
                failureThreshold: 5
                periodSeconds: 2
                tcpSocket:
                  port: port
                  host: host
                timeoutSeconds: 9
                successThreshold: 7
                initialDelaySeconds: 5
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: port
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              stdin: true
              terminationMessagePolicy: terminationMessagePolicy
              terminationMessagePath: terminationMessagePath
              workingDir: workingDir
              resources:
                requests: "{}"
                limits: "{}"
              securityContext:
                privileged: true
                runAsUser: 7
                capabilities:
                  add:
                  - "{}"
                  - "{}"
                  drop:
                  - "{}"
                  - "{}"
                seLinuxOptions:
                  role: role
                  level: level
                  type: type
                  user: user
                allowPrivilegeEscalation: true
                runAsGroup: 4
                runAsNonRoot: true
                readOnlyRootFilesystem: true
              env:
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    name: name
                    optional: true
                    key: key
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  configMapKeyRef:
                    name: name
                    optional: true
                    key: key
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    name: name
                    optional: true
                    key: key
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  configMapKeyRef:
                    name: name
                    optional: true
                    key: key
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              ports:
              - protocol: protocol
                hostIP: hostIP
                name: name
                containerPort: 3
                hostPort: 2
              - protocol: protocol
                hostIP: hostIP
                name: name
                containerPort: 3
                hostPort: 2
              command:
              - command
              - command
              volumeMounts:
              - mountPath: mountPath
                mountPropagation: "{}"
                name: name
                readOnly: true
                subPath: subPath
              - mountPath: mountPath
                mountPropagation: "{}"
                name: name
                readOnly: true
                subPath: subPath
              args:
              - args
              - args
              lifecycle:
                postStart:
                  tcpSocket:
                    port: port
                    host: host
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: port
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
                preStop:
                  tcpSocket:
                    port: port
                    host: host
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: port
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
              name: name
              tty: true
              readinessProbe:
                failureThreshold: 5
                periodSeconds: 2
                tcpSocket:
                  port: port
                  host: host
                timeoutSeconds: 9
                successThreshold: 7
                initialDelaySeconds: 5
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: port
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              stdinOnce: true
              envFrom:
              - configMapRef:
                  name: name
                  optional: true
                prefix: prefix
                secretRef:
                  name: name
                  optional: true
              - configMapRef:
                  name: name
                  optional: true
                prefix: prefix
                secretRef:
                  name: name
                  optional: true
            - volumeDevices:
              - devicePath: devicePath
                name: name
              - devicePath: devicePath
                name: name
              image: image
              imagePullPolicy: imagePullPolicy
              livenessProbe:
                failureThreshold: 5
                periodSeconds: 2
                tcpSocket:
                  port: port
                  host: host
                timeoutSeconds: 9
                successThreshold: 7
                initialDelaySeconds: 5
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: port
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              stdin: true
              terminationMessagePolicy: terminationMessagePolicy
              terminationMessagePath: terminationMessagePath
              workingDir: workingDir
              resources:
                requests: "{}"
                limits: "{}"
              securityContext:
                privileged: true
                runAsUser: 7
                capabilities:
                  add:
                  - "{}"
                  - "{}"
                  drop:
                  - "{}"
                  - "{}"
                seLinuxOptions:
                  role: role
                  level: level
                  type: type
                  user: user
                allowPrivilegeEscalation: true
                runAsGroup: 4
                runAsNonRoot: true
                readOnlyRootFilesystem: true
              env:
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    name: name
                    optional: true
                    key: key
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  configMapKeyRef:
                    name: name
                    optional: true
                    key: key
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    name: name
                    optional: true
                    key: key
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  configMapKeyRef:
                    name: name
                    optional: true
                    key: key
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              ports:
              - protocol: protocol
                hostIP: hostIP
                name: name
                containerPort: 3
                hostPort: 2
              - protocol: protocol
                hostIP: hostIP
                name: name
                containerPort: 3
                hostPort: 2
              command:
              - command
              - command
              volumeMounts:
              - mountPath: mountPath
                mountPropagation: "{}"
                name: name
                readOnly: true
                subPath: subPath
              - mountPath: mountPath
                mountPropagation: "{}"
                name: name
                readOnly: true
                subPath: subPath
              args:
              - args
              - args
              lifecycle:
                postStart:
                  tcpSocket:
                    port: port
                    host: host
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: port
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
                preStop:
                  tcpSocket:
                    port: port
                    host: host
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: port
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
              name: name
              tty: true
              readinessProbe:
                failureThreshold: 5
                periodSeconds: 2
                tcpSocket:
                  port: port
                  host: host
                timeoutSeconds: 9
                successThreshold: 7
                initialDelaySeconds: 5
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: port
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              stdinOnce: true
              envFrom:
              - configMapRef:
                  name: name
                  optional: true
                prefix: prefix
                secretRef:
                  name: name
                  optional: true
              - configMapRef:
                  name: name
                  optional: true
                prefix: prefix
                secretRef:
                  name: name
                  optional: true
            affinity:
              nodeAffinity:
                requiredDuringSchedulingIgnoredDuringExecution:
                  nodeSelectorTerms:
                  - matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchFields:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                  - matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchFields:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                preferredDuringSchedulingIgnoredDuringExecution:
                - preference:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchFields:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                  weight: 6
                - preference:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchFields:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                  weight: 6
              podAffinity:
                requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchLabels: "{}"
                  topologyKey: topologyKey
                  namespaces:
                  - namespaces
                  - namespaces
                - labelSelector:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchLabels: "{}"
                  topologyKey: topologyKey
                  namespaces:
                  - namespaces
                  - namespaces
                preferredDuringSchedulingIgnoredDuringExecution:
                - podAffinityTerm:
                    labelSelector:
                      matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchLabels: "{}"
                    topologyKey: topologyKey
                    namespaces:
                    - namespaces
                    - namespaces
                  weight: 1
                - podAffinityTerm:
                    labelSelector:
                      matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchLabels: "{}"
                    topologyKey: topologyKey
                    namespaces:
                    - namespaces
                    - namespaces
                  weight: 1
              podAntiAffinity:
                requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchLabels: "{}"
                  topologyKey: topologyKey
                  namespaces:
                  - namespaces
                  - namespaces
                - labelSelector:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchLabels: "{}"
                  topologyKey: topologyKey
                  namespaces:
                  - namespaces
                  - namespaces
                preferredDuringSchedulingIgnoredDuringExecution:
                - podAffinityTerm:
                    labelSelector:
                      matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchLabels: "{}"
                    topologyKey: topologyKey
                    namespaces:
                    - namespaces
                    - namespaces
                  weight: 1
                - podAffinityTerm:
                    labelSelector:
                      matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchLabels: "{}"
                    topologyKey: topologyKey
                    namespaces:
                    - namespaces
                    - namespaces
                  weight: 1
            hostPID: true
        podManagementPolicy: podManagementPolicy
        updateStrategy:
          type: type
          rollingUpdate:
            partition: 1
        replicas: 0
        revisionHistoryLimit: 6
        selector:
          matchExpressions:
          - values:
            - values
            - values
            key: key
            operator: operator
          - values:
            - values
            - values
            key: key
            operator: operator
          matchLabels: "{}"
        serviceName: serviceName
        volumeClaimTemplates:
        - metadata:
            generation: 6
            finalizers:
            - finalizers
            - finalizers
            resourceVersion: resourceVersion
            annotations: "{}"
            generateName: generateName
            deletionTimestamp: deletionTimestamp
            labels: "{}"
            ownerReferences:
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            selfLink: selfLink
            deletionGracePeriodSeconds: 0
            uid: uid
            initializers:
              result:
                reason: reason
                metadata:
                  continue: continue
                  resourceVersion: resourceVersion
                  selfLink: selfLink
                apiVersion: apiVersion
                code: 1
                kind: kind
                details:
                  uid: uid
                  kind: kind
                  causes:
                  - reason: reason
                    field: field
                    message: message
                  - reason: reason
                    field: field
                    message: message
                  retryAfterSeconds: 5
                  name: name
                  group: group
                message: message
                status: status
              pending:
              - name: name
              - name: name
            clusterName: clusterName
            creationTimestamp: creationTimestamp
            name: name
            namespace: namespace
          apiVersion: apiVersion
          kind: kind
          spec:
            storageClassName: storageClassName
            volumeName: volumeName
            resources:
              requests: "{}"
              limits: "{}"
            selector:
              matchExpressions:
              - values:
                - values
                - values
                key: key
                operator: operator
              - values:
                - values
                - values
                key: key
                operator: operator
              matchLabels: "{}"
            accessModes:
            - "{}"
            - "{}"
            volumeMode: "{}"
          status:
            phase: phase
            accessModes:
            - "{}"
            - "{}"
            conditions:
            - reason: reason
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
              lastProbeTime: lastProbeTime
              status: status
            - reason: reason
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
              lastProbeTime: lastProbeTime
              status: status
            capacity: "{}"
        - metadata:
            generation: 6
            finalizers:
            - finalizers
            - finalizers
            resourceVersion: resourceVersion
            annotations: "{}"
            generateName: generateName
            deletionTimestamp: deletionTimestamp
            labels: "{}"
            ownerReferences:
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            selfLink: selfLink
            deletionGracePeriodSeconds: 0
            uid: uid
            initializers:
              result:
                reason: reason
                metadata:
                  continue: continue
                  resourceVersion: resourceVersion
                  selfLink: selfLink
                apiVersion: apiVersion
                code: 1
                kind: kind
                details:
                  uid: uid
                  kind: kind
                  causes:
                  - reason: reason
                    field: field
                    message: message
                  - reason: reason
                    field: field
                    message: message
                  retryAfterSeconds: 5
                  name: name
                  group: group
                message: message
                status: status
              pending:
              - name: name
              - name: name
            clusterName: clusterName
            creationTimestamp: creationTimestamp
            name: name
            namespace: namespace
          apiVersion: apiVersion
          kind: kind
          spec:
            storageClassName: storageClassName
            volumeName: volumeName
            resources:
              requests: "{}"
              limits: "{}"
            selector:
              matchExpressions:
              - values:
                - values
                - values
                key: key
                operator: operator
              - values:
                - values
                - values
                key: key
                operator: operator
              matchLabels: "{}"
            accessModes:
            - "{}"
            - "{}"
            volumeMode: "{}"
          status:
            phase: phase
            accessModes:
            - "{}"
            - "{}"
            conditions:
            - reason: reason
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
              lastProbeTime: lastProbeTime
              status: status
            - reason: reason
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
              lastProbeTime: lastProbeTime
              status: status
            capacity: "{}"
      properties:
        podManagementPolicy:
          description: "podManagementPolicy controls how pods are created during initial\
            \ scale up, when replacing pods on nodes, or when scaling down. The default\
            \ policy is `OrderedReady`, where pods are created in increasing order\
            \ (pod-0, then pod-1, etc) and the controller will wait until each pod\
            \ is ready before continuing. When scaling down, the pods are removed\
            \ in the opposite order. The alternative policy is `Parallel` which will\
            \ create pods in parallel to match the desired scale without waiting,\
            \ and on scale down will delete all pods at once."
          type: string
        replicas:
          description: "replicas is the desired number of replicas of the given Template.\
            \ These are replicas in the sense that they are instantiations of the\
            \ same Template, but individual replicas also have a consistent identity.\
            \ If unspecified, defaults to 1."
          format: int32
          type: integer
        revisionHistoryLimit:
          description: revisionHistoryLimit is the maximum number of revisions that
            will be maintained in the StatefulSet's revision history. The revision
            history consists of all revisions not represented by a currently applied
            StatefulSetSpec version. The default value is 10.
          format: int32
          type: integer
        selector:
          $ref: '#/components/schemas/v1.LabelSelector'
        serviceName:
          description: "serviceName is the name of the service that governs this StatefulSet.\
            \ This service must exist before the StatefulSet, and is responsible for\
            \ the network identity of the set. Pods get DNS/hostnames that follow\
            \ the pattern: pod-specific-string.serviceName.default.svc.cluster.local\
            \ where \"pod-specific-string\" is managed by the StatefulSet controller."
          type: string
        template:
          $ref: '#/components/schemas/v1.PodTemplateSpec'
        updateStrategy:
          $ref: '#/components/schemas/v1.StatefulSetUpdateStrategy'
        volumeClaimTemplates:
          description: "volumeClaimTemplates is a list of claims that pods are allowed\
            \ to reference. The StatefulSet controller is responsible for mapping\
            \ network identities to claims in a way that maintains the identity of\
            \ a pod. Every claim in this list must have at least one matching (by\
            \ name) volumeMount in one container in the template. A claim in this\
            \ list takes precedence over any volumes in the template, with the same\
            \ name."
          items:
            $ref: '#/components/schemas/v1.PersistentVolumeClaim'
          type: array
      required:
      - selector
      - serviceName
      - template
      type: object
    v1.StatefulSetStatus:
      description: StatefulSetStatus represents the current state of a StatefulSet.
      example:
        currentRevision: currentRevision
        replicas: 9
        updateRevision: updateRevision
        readyReplicas: 7
        collisionCount: 5
        currentReplicas: 5
        conditions:
        - reason: reason
          lastTransitionTime: lastTransitionTime
          message: message
          type: type
          status: status
        - reason: reason
          lastTransitionTime: lastTransitionTime
          message: message
          type: type
          status: status
        updatedReplicas: 3
        observedGeneration: 2
      properties:
        collisionCount:
          description: collisionCount is the count of hash collisions for the StatefulSet.
            The StatefulSet controller uses this field as a collision avoidance mechanism
            when it needs to create the name for the newest ControllerRevision.
          format: int32
          type: integer
        conditions:
          description: Represents the latest available observations of a statefulset's
            current state.
          items:
            $ref: '#/components/schemas/v1.StatefulSetCondition'
          type: array
        currentReplicas:
          description: currentReplicas is the number of Pods created by the StatefulSet
            controller from the StatefulSet version indicated by currentRevision.
          format: int32
          type: integer
        currentRevision:
          description: "currentRevision, if not empty, indicates the version of the\
            \ StatefulSet used to generate Pods in the sequence [0,currentReplicas)."
          type: string
        observedGeneration:
          description: "observedGeneration is the most recent generation observed\
            \ for this StatefulSet. It corresponds to the StatefulSet's generation,\
            \ which is updated on mutation by the API Server."
          format: int64
          type: integer
        readyReplicas:
          description: readyReplicas is the number of Pods created by the StatefulSet
            controller that have a Ready Condition.
          format: int32
          type: integer
        replicas:
          description: replicas is the number of Pods created by the StatefulSet controller.
          format: int32
          type: integer
        updateRevision:
          description: "updateRevision, if not empty, indicates the version of the\
            \ StatefulSet used to generate Pods in the sequence [replicas-updatedReplicas,replicas)"
          type: string
        updatedReplicas:
          description: updatedReplicas is the number of Pods created by the StatefulSet
            controller from the StatefulSet version indicated by updateRevision.
          format: int32
          type: integer
      required:
      - replicas
      type: object
    v1.StatefulSetUpdateStrategy:
      description: StatefulSetUpdateStrategy indicates the strategy that the StatefulSet
        controller will use to perform updates. It includes any additional parameters
        necessary to perform the update for the indicated strategy.
      example:
        type: type
        rollingUpdate:
          partition: 1
      properties:
        rollingUpdate:
          $ref: '#/components/schemas/v1.RollingUpdateStatefulSetStrategy'
        type:
          description: Type indicates the type of the StatefulSetUpdateStrategy. Default
            is RollingUpdate.
          type: string
      type: object
    v1.CustomDeploymentStrategyParams:
      description: CustomDeploymentStrategyParams are the input to the Custom deployment
        strategy.
      properties:
        command:
          description: Command is optional and overrides CMD in the container Image.
          items:
            type: string
          type: array
        environment:
          description: Environment holds the environment which will be given to the
            container for Image.
          items:
            $ref: '#/components/schemas/v1.EnvVar'
          type: array
        image:
          description: Image specifies a Docker image which can carry out a deployment.
          type: string
      type: object
    v1.DeploymentCause:
      description: DeploymentCause captures information about a particular cause of
        a deployment.
      example:
        imageTrigger:
          from:
            uid: uid
            apiVersion: apiVersion
            kind: kind
            resourceVersion: resourceVersion
            fieldPath: fieldPath
            name: name
            namespace: namespace
        type: type
      properties:
        imageTrigger:
          $ref: '#/components/schemas/v1.DeploymentCauseImageTrigger'
        type:
          description: Type of the trigger that resulted in the creation of a new
            deployment
          type: string
      required:
      - type
      type: object
    v1.DeploymentCauseImageTrigger:
      description: DeploymentCauseImageTrigger represents details about the cause
        of a deployment originating from an image change trigger
      example:
        from:
          uid: uid
          apiVersion: apiVersion
          kind: kind
          resourceVersion: resourceVersion
          fieldPath: fieldPath
          name: name
          namespace: namespace
      properties:
        from:
          $ref: '#/components/schemas/v1.ObjectReference'
      required:
      - from
      type: object
    v1.DeploymentConfig:
      description: |-
        Deployment Configs define the template for a pod and manages deploying new images or configuration changes. A single deployment configuration is usually analogous to a single micro-service. Can support many different deployment patterns, including full restart, customizable rolling updates, and  fully custom behaviors, as well as pre- and post- deployment hooks. Each individual deployment is represented as a replication controller.

        A deployment is "triggered" when its configuration is changed or a tag in an Image Stream is changed. Triggers can be disabled to allow manual control over a deployment. The "strategy" determines how the deployment is carried out and may be changed at any time. The `latestVersion` field is updated when a new deployment is triggered by any means.
      example:
        metadata:
          generation: 6
          finalizers:
          - finalizers
          - finalizers
          resourceVersion: resourceVersion
          annotations: "{}"
          generateName: generateName
          deletionTimestamp: deletionTimestamp
          labels: "{}"
          ownerReferences:
          - uid: uid
            controller: true
            apiVersion: apiVersion
            kind: kind
            name: name
            blockOwnerDeletion: true
          - uid: uid
            controller: true
            apiVersion: apiVersion
            kind: kind
            name: name
            blockOwnerDeletion: true
          selfLink: selfLink
          deletionGracePeriodSeconds: 0
          uid: uid
          initializers:
            result:
              reason: reason
              metadata:
                continue: continue
                resourceVersion: resourceVersion
                selfLink: selfLink
              apiVersion: apiVersion
              code: 1
              kind: kind
              details:
                uid: uid
                kind: kind
                causes:
                - reason: reason
                  field: field
                  message: message
                - reason: reason
                  field: field
                  message: message
                retryAfterSeconds: 5
                name: name
                group: group
              message: message
              status: status
            pending:
            - name: name
            - name: name
          clusterName: clusterName
          creationTimestamp: creationTimestamp
          name: name
          namespace: namespace
        apiVersion: apiVersion
        kind: kind
        spec:
          template:
            metadata:
              generation: 6
              finalizers:
              - finalizers
              - finalizers
              resourceVersion: resourceVersion
              annotations: "{}"
              generateName: generateName
              deletionTimestamp: deletionTimestamp
              labels: "{}"
              ownerReferences:
              - uid: uid
                controller: true
                apiVersion: apiVersion
                kind: kind
                name: name
                blockOwnerDeletion: true
              - uid: uid
                controller: true
                apiVersion: apiVersion
                kind: kind
                name: name
                blockOwnerDeletion: true
              selfLink: selfLink
              deletionGracePeriodSeconds: 0
              uid: uid
              initializers:
                result:
                  reason: reason
                  metadata:
                    continue: continue
                    resourceVersion: resourceVersion
                    selfLink: selfLink
                  apiVersion: apiVersion
                  code: 1
                  kind: kind
                  details:
                    uid: uid
                    kind: kind
                    causes:
                    - reason: reason
                      field: field
                      message: message
                    - reason: reason
                      field: field
                      message: message
                    retryAfterSeconds: 5
                    name: name
                    group: group
                  message: message
                  status: status
                pending:
                - name: name
                - name: name
              clusterName: clusterName
              creationTimestamp: creationTimestamp
              name: name
              namespace: namespace
            spec:
              dnsPolicy: dnsPolicy
              nodeName: nodeName
              terminationGracePeriodSeconds: 1
              dnsConfig:
                searches:
                - searches
                - searches
                nameservers:
                - nameservers
                - nameservers
                options:
                - name: name
                  value: value
                - name: name
                  value: value
              hostNetwork: true
              readinessGates:
              - conditionType: conditionType
              - conditionType: conditionType
              serviceAccountName: serviceAccountName
              imagePullSecrets:
              - name: name
              - name: name
              priorityClassName: priorityClassName
              hostAliases:
              - ip: ip
                hostnames:
                - hostnames
                - hostnames
              - ip: ip
                hostnames:
                - hostnames
                - hostnames
              securityContext:
                runAsUser: 6
                seLinuxOptions:
                  role: role
                  level: level
                  type: type
                  user: user
                fsGroup: 1
                supplementalGroups:
                - 7
                - 7
                runAsGroup: 1
                runAsNonRoot: true
                sysctls:
                - name: name
                  value: value
                - name: name
                  value: value
              nodeSelector: "{}"
              hostname: hostname
              tolerations:
              - effect: effect
                tolerationSeconds: 4
                value: value
                key: key
                operator: operator
              - effect: effect
                tolerationSeconds: 4
                value: value
                key: key
                operator: operator
              automountServiceAccountToken: true
              schedulerName: schedulerName
              activeDeadlineSeconds: 0
              hostIPC: true
              volumes:
              - quobyte:
                  volume: volume
                  registry: registry
                  readOnly: true
                  user: user
                  group: group
                azureFile:
                  secretName: secretName
                  readOnly: true
                  shareName: shareName
                flexVolume:
                  driver: driver
                  options: "{}"
                  secretRef:
                    name: name
                  readOnly: true
                  fsType: fsType
                secret:
                  secretName: secretName
                  defaultMode: 2
                  optional: true
                  items:
                  - mode: 9
                    path: path
                    key: key
                  - mode: 9
                    path: path
                    key: key
                projected:
                  sources:
                  - downwardAPI:
                      items:
                      - mode: 8
                        path: path
                        resourceFieldRef:
                          divisor: divisor
                          resource: resource
                          containerName: containerName
                        fieldRef:
                          apiVersion: apiVersion
                          fieldPath: fieldPath
                      - mode: 8
                        path: path
                        resourceFieldRef:
                          divisor: divisor
                          resource: resource
                          containerName: containerName
                        fieldRef:
                          apiVersion: apiVersion
                          fieldPath: fieldPath
                    configMap:
                      name: name
                      optional: true
                      items:
                      - mode: 9
                        path: path
                        key: key
                      - mode: 9
                        path: path
                        key: key
                    secret:
                      name: name
                      optional: true
                      items:
                      - mode: 9
                        path: path
                        key: key
                      - mode: 9
                        path: path
                        key: key
                    serviceAccountToken:
                      path: path
                      audience: audience
                      expirationSeconds: 1
                  - downwardAPI:
                      items:
                      - mode: 8
                        path: path
                        resourceFieldRef:
                          divisor: divisor
                          resource: resource
                          containerName: containerName
                        fieldRef:
                          apiVersion: apiVersion
                          fieldPath: fieldPath
                      - mode: 8
                        path: path
                        resourceFieldRef:
                          divisor: divisor
                          resource: resource
                          containerName: containerName
                        fieldRef:
                          apiVersion: apiVersion
                          fieldPath: fieldPath
                    configMap:
                      name: name
                      optional: true
                      items:
                      - mode: 9
                        path: path
                        key: key
                      - mode: 9
                        path: path
                        key: key
                    secret:
                      name: name
                      optional: true
                      items:
                      - mode: 9
                        path: path
                        key: key
                      - mode: 9
                        path: path
                        key: key
                    serviceAccountToken:
                      path: path
                      audience: audience
                      expirationSeconds: 1
                  defaultMode: 6
                cephfs:
                  path: path
                  secretRef:
                    name: name
                  secretFile: secretFile
                  readOnly: true
                  user: user
                  monitors:
                  - monitors
                  - monitors
                scaleIO:
                  system: system
                  protectionDomain: protectionDomain
                  sslEnabled: true
                  storageMode: storageMode
                  volumeName: volumeName
                  secretRef:
                    name: name
                  readOnly: true
                  fsType: fsType
                  storagePool: storagePool
                  gateway: gateway
                emptyDir:
                  sizeLimit: sizeLimit
                  medium: medium
                glusterfs:
                  path: path
                  endpoints: endpoints
                  readOnly: true
                gcePersistentDisk:
                  partition: 6
                  readOnly: true
                  pdName: pdName
                  fsType: fsType
                photonPersistentDisk:
                  pdID: pdID
                  fsType: fsType
                azureDisk:
                  diskName: diskName
                  kind: "{}"
                  readOnly: true
                  cachingMode: "{}"
                  diskURI: diskURI
                  fsType: fsType
                cinder:
                  secretRef:
                    name: name
                  volumeID: volumeID
                  readOnly: true
                  fsType: fsType
                downwardAPI:
                  defaultMode: 6
                  items:
                  - mode: 8
                    path: path
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                  - mode: 8
                    path: path
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                awsElasticBlockStore:
                  partition: 5
                  volumeID: volumeID
                  readOnly: true
                  fsType: fsType
                flocker:
                  datasetName: datasetName
                  datasetUUID: datasetUUID
                iscsi:
                  chapAuthSession: true
                  iscsiInterface: iscsiInterface
                  lun: 3
                  chapAuthDiscovery: true
                  iqn: iqn
                  portals:
                  - portals
                  - portals
                  secretRef:
                    name: name
                  initiatorName: initiatorName
                  readOnly: true
                  fsType: fsType
                  targetPortal: targetPortal
                rbd:
                  image: image
                  pool: pool
                  secretRef:
                    name: name
                  readOnly: true
                  fsType: fsType
                  keyring: keyring
                  user: user
                  monitors:
                  - monitors
                  - monitors
                configMap:
                  defaultMode: 9
                  name: name
                  optional: true
                  items:
                  - mode: 9
                    path: path
                    key: key
                  - mode: 9
                    path: path
                    key: key
                storageos:
                  volumeNamespace: volumeNamespace
                  volumeName: volumeName
                  secretRef:
                    name: name
                  readOnly: true
                  fsType: fsType
                name: name
                nfs:
                  path: path
                  server: server
                  readOnly: true
                persistentVolumeClaim:
                  claimName: claimName
                  readOnly: true
                gitRepo:
                  repository: repository
                  directory: directory
                  revision: revision
                portworxVolume:
                  volumeID: volumeID
                  readOnly: true
                  fsType: fsType
                vsphereVolume:
                  storagePolicyName: storagePolicyName
                  storagePolicyID: storagePolicyID
                  volumePath: volumePath
                  fsType: fsType
                fc:
                  lun: 9
                  targetWWNs:
                  - targetWWNs
                  - targetWWNs
                  readOnly: true
                  wwids:
                  - wwids
                  - wwids
                  fsType: fsType
                hostPath:
                  path: path
                  type: "{}"
              - quobyte:
                  volume: volume
                  registry: registry
                  readOnly: true
                  user: user
                  group: group
                azureFile:
                  secretName: secretName
                  readOnly: true
                  shareName: shareName
                flexVolume:
                  driver: driver
                  options: "{}"
                  secretRef:
                    name: name
                  readOnly: true
                  fsType: fsType
                secret:
                  secretName: secretName
                  defaultMode: 2
                  optional: true
                  items:
                  - mode: 9
                    path: path
                    key: key
                  - mode: 9
                    path: path
                    key: key
                projected:
                  sources:
                  - downwardAPI:
                      items:
                      - mode: 8
                        path: path
                        resourceFieldRef:
                          divisor: divisor
                          resource: resource
                          containerName: containerName
                        fieldRef:
                          apiVersion: apiVersion
                          fieldPath: fieldPath
                      - mode: 8
                        path: path
                        resourceFieldRef:
                          divisor: divisor
                          resource: resource
                          containerName: containerName
                        fieldRef:
                          apiVersion: apiVersion
                          fieldPath: fieldPath
                    configMap:
                      name: name
                      optional: true
                      items:
                      - mode: 9
                        path: path
                        key: key
                      - mode: 9
                        path: path
                        key: key
                    secret:
                      name: name
                      optional: true
                      items:
                      - mode: 9
                        path: path
                        key: key
                      - mode: 9
                        path: path
                        key: key
                    serviceAccountToken:
                      path: path
                      audience: audience
                      expirationSeconds: 1
                  - downwardAPI:
                      items:
                      - mode: 8
                        path: path
                        resourceFieldRef:
                          divisor: divisor
                          resource: resource
                          containerName: containerName
                        fieldRef:
                          apiVersion: apiVersion
                          fieldPath: fieldPath
                      - mode: 8
                        path: path
                        resourceFieldRef:
                          divisor: divisor
                          resource: resource
                          containerName: containerName
                        fieldRef:
                          apiVersion: apiVersion
                          fieldPath: fieldPath
                    configMap:
                      name: name
                      optional: true
                      items:
                      - mode: 9
                        path: path
                        key: key
                      - mode: 9
                        path: path
                        key: key
                    secret:
                      name: name
                      optional: true
                      items:
                      - mode: 9
                        path: path
                        key: key
                      - mode: 9
                        path: path
                        key: key
                    serviceAccountToken:
                      path: path
                      audience: audience
                      expirationSeconds: 1
                  defaultMode: 6
                cephfs:
                  path: path
                  secretRef:
                    name: name
                  secretFile: secretFile
                  readOnly: true
                  user: user
                  monitors:
                  - monitors
                  - monitors
                scaleIO:
                  system: system
                  protectionDomain: protectionDomain
                  sslEnabled: true
                  storageMode: storageMode
                  volumeName: volumeName
                  secretRef:
                    name: name
                  readOnly: true
                  fsType: fsType
                  storagePool: storagePool
                  gateway: gateway
                emptyDir:
                  sizeLimit: sizeLimit
                  medium: medium
                glusterfs:
                  path: path
                  endpoints: endpoints
                  readOnly: true
                gcePersistentDisk:
                  partition: 6
                  readOnly: true
                  pdName: pdName
                  fsType: fsType
                photonPersistentDisk:
                  pdID: pdID
                  fsType: fsType
                azureDisk:
                  diskName: diskName
                  kind: "{}"
                  readOnly: true
                  cachingMode: "{}"
                  diskURI: diskURI
                  fsType: fsType
                cinder:
                  secretRef:
                    name: name
                  volumeID: volumeID
                  readOnly: true
                  fsType: fsType
                downwardAPI:
                  defaultMode: 6
                  items:
                  - mode: 8
                    path: path
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                  - mode: 8
                    path: path
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                awsElasticBlockStore:
                  partition: 5
                  volumeID: volumeID
                  readOnly: true
                  fsType: fsType
                flocker:
                  datasetName: datasetName
                  datasetUUID: datasetUUID
                iscsi:
                  chapAuthSession: true
                  iscsiInterface: iscsiInterface
                  lun: 3
                  chapAuthDiscovery: true
                  iqn: iqn
                  portals:
                  - portals
                  - portals
                  secretRef:
                    name: name
                  initiatorName: initiatorName
                  readOnly: true
                  fsType: fsType
                  targetPortal: targetPortal
                rbd:
                  image: image
                  pool: pool
                  secretRef:
                    name: name
                  readOnly: true
                  fsType: fsType
                  keyring: keyring
                  user: user
                  monitors:
                  - monitors
                  - monitors
                configMap:
                  defaultMode: 9
                  name: name
                  optional: true
                  items:
                  - mode: 9
                    path: path
                    key: key
                  - mode: 9
                    path: path
                    key: key
                storageos:
                  volumeNamespace: volumeNamespace
                  volumeName: volumeName
                  secretRef:
                    name: name
                  readOnly: true
                  fsType: fsType
                name: name
                nfs:
                  path: path
                  server: server
                  readOnly: true
                persistentVolumeClaim:
                  claimName: claimName
                  readOnly: true
                gitRepo:
                  repository: repository
                  directory: directory
                  revision: revision
                portworxVolume:
                  volumeID: volumeID
                  readOnly: true
                  fsType: fsType
                vsphereVolume:
                  storagePolicyName: storagePolicyName
                  storagePolicyID: storagePolicyID
                  volumePath: volumePath
                  fsType: fsType
                fc:
                  lun: 9
                  targetWWNs:
                  - targetWWNs
                  - targetWWNs
                  readOnly: true
                  wwids:
                  - wwids
                  - wwids
                  fsType: fsType
                hostPath:
                  path: path
                  type: "{}"
              serviceAccount: serviceAccount
              priority: 1
              restartPolicy: restartPolicy
              shareProcessNamespace: true
              subdomain: subdomain
              containers:
              - volumeDevices:
                - devicePath: devicePath
                  name: name
                - devicePath: devicePath
                  name: name
                image: image
                imagePullPolicy: imagePullPolicy
                livenessProbe:
                  failureThreshold: 5
                  periodSeconds: 2
                  tcpSocket:
                    port: port
                    host: host
                  timeoutSeconds: 9
                  successThreshold: 7
                  initialDelaySeconds: 5
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: port
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
                stdin: true
                terminationMessagePolicy: terminationMessagePolicy
                terminationMessagePath: terminationMessagePath
                workingDir: workingDir
                resources:
                  requests: "{}"
                  limits: "{}"
                securityContext:
                  privileged: true
                  runAsUser: 7
                  capabilities:
                    add:
                    - "{}"
                    - "{}"
                    drop:
                    - "{}"
                    - "{}"
                  seLinuxOptions:
                    role: role
                    level: level
                    type: type
                    user: user
                  allowPrivilegeEscalation: true
                  runAsGroup: 4
                  runAsNonRoot: true
                  readOnlyRootFilesystem: true
                env:
                - name: name
                  value: value
                  valueFrom:
                    secretKeyRef:
                      name: name
                      optional: true
                      key: key
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    configMapKeyRef:
                      name: name
                      optional: true
                      key: key
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                - name: name
                  value: value
                  valueFrom:
                    secretKeyRef:
                      name: name
                      optional: true
                      key: key
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    configMapKeyRef:
                      name: name
                      optional: true
                      key: key
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                ports:
                - protocol: protocol
                  hostIP: hostIP
                  name: name
                  containerPort: 3
                  hostPort: 2
                - protocol: protocol
                  hostIP: hostIP
                  name: name
                  containerPort: 3
                  hostPort: 2
                command:
                - command
                - command
                volumeMounts:
                - mountPath: mountPath
                  mountPropagation: "{}"
                  name: name
                  readOnly: true
                  subPath: subPath
                - mountPath: mountPath
                  mountPropagation: "{}"
                  name: name
                  readOnly: true
                  subPath: subPath
                args:
                - args
                - args
                lifecycle:
                  postStart:
                    tcpSocket:
                      port: port
                      host: host
                    exec:
                      command:
                      - command
                      - command
                    httpGet:
                      path: path
                      scheme: scheme
                      port: port
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  preStop:
                    tcpSocket:
                      port: port
                      host: host
                    exec:
                      command:
                      - command
                      - command
                    httpGet:
                      path: path
                      scheme: scheme
                      port: port
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                name: name
                tty: true
                readinessProbe:
                  failureThreshold: 5
                  periodSeconds: 2
                  tcpSocket:
                    port: port
                    host: host
                  timeoutSeconds: 9
                  successThreshold: 7
                  initialDelaySeconds: 5
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: port
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
                stdinOnce: true
                envFrom:
                - configMapRef:
                    name: name
                    optional: true
                  prefix: prefix
                  secretRef:
                    name: name
                    optional: true
                - configMapRef:
                    name: name
                    optional: true
                  prefix: prefix
                  secretRef:
                    name: name
                    optional: true
              - volumeDevices:
                - devicePath: devicePath
                  name: name
                - devicePath: devicePath
                  name: name
                image: image
                imagePullPolicy: imagePullPolicy
                livenessProbe:
                  failureThreshold: 5
                  periodSeconds: 2
                  tcpSocket:
                    port: port
                    host: host
                  timeoutSeconds: 9
                  successThreshold: 7
                  initialDelaySeconds: 5
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: port
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
                stdin: true
                terminationMessagePolicy: terminationMessagePolicy
                terminationMessagePath: terminationMessagePath
                workingDir: workingDir
                resources:
                  requests: "{}"
                  limits: "{}"
                securityContext:
                  privileged: true
                  runAsUser: 7
                  capabilities:
                    add:
                    - "{}"
                    - "{}"
                    drop:
                    - "{}"
                    - "{}"
                  seLinuxOptions:
                    role: role
                    level: level
                    type: type
                    user: user
                  allowPrivilegeEscalation: true
                  runAsGroup: 4
                  runAsNonRoot: true
                  readOnlyRootFilesystem: true
                env:
                - name: name
                  value: value
                  valueFrom:
                    secretKeyRef:
                      name: name
                      optional: true
                      key: key
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    configMapKeyRef:
                      name: name
                      optional: true
                      key: key
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                - name: name
                  value: value
                  valueFrom:
                    secretKeyRef:
                      name: name
                      optional: true
                      key: key
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    configMapKeyRef:
                      name: name
                      optional: true
                      key: key
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                ports:
                - protocol: protocol
                  hostIP: hostIP
                  name: name
                  containerPort: 3
                  hostPort: 2
                - protocol: protocol
                  hostIP: hostIP
                  name: name
                  containerPort: 3
                  hostPort: 2
                command:
                - command
                - command
                volumeMounts:
                - mountPath: mountPath
                  mountPropagation: "{}"
                  name: name
                  readOnly: true
                  subPath: subPath
                - mountPath: mountPath
                  mountPropagation: "{}"
                  name: name
                  readOnly: true
                  subPath: subPath
                args:
                - args
                - args
                lifecycle:
                  postStart:
                    tcpSocket:
                      port: port
                      host: host
                    exec:
                      command:
                      - command
                      - command
                    httpGet:
                      path: path
                      scheme: scheme
                      port: port
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  preStop:
                    tcpSocket:
                      port: port
                      host: host
                    exec:
                      command:
                      - command
                      - command
                    httpGet:
                      path: path
                      scheme: scheme
                      port: port
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                name: name
                tty: true
                readinessProbe:
                  failureThreshold: 5
                  periodSeconds: 2
                  tcpSocket:
                    port: port
                    host: host
                  timeoutSeconds: 9
                  successThreshold: 7
                  initialDelaySeconds: 5
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: port
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
                stdinOnce: true
                envFrom:
                - configMapRef:
                    name: name
                    optional: true
                  prefix: prefix
                  secretRef:
                    name: name
                    optional: true
                - configMapRef:
                    name: name
                    optional: true
                  prefix: prefix
                  secretRef:
                    name: name
                    optional: true
              initContainers:
              - volumeDevices:
                - devicePath: devicePath
                  name: name
                - devicePath: devicePath
                  name: name
                image: image
                imagePullPolicy: imagePullPolicy
                livenessProbe:
                  failureThreshold: 5
                  periodSeconds: 2
                  tcpSocket:
                    port: port
                    host: host
                  timeoutSeconds: 9
                  successThreshold: 7
                  initialDelaySeconds: 5
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: port
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
                stdin: true
                terminationMessagePolicy: terminationMessagePolicy
                terminationMessagePath: terminationMessagePath
                workingDir: workingDir
                resources:
                  requests: "{}"
                  limits: "{}"
                securityContext:
                  privileged: true
                  runAsUser: 7
                  capabilities:
                    add:
                    - "{}"
                    - "{}"
                    drop:
                    - "{}"
                    - "{}"
                  seLinuxOptions:
                    role: role
                    level: level
                    type: type
                    user: user
                  allowPrivilegeEscalation: true
                  runAsGroup: 4
                  runAsNonRoot: true
                  readOnlyRootFilesystem: true
                env:
                - name: name
                  value: value
                  valueFrom:
                    secretKeyRef:
                      name: name
                      optional: true
                      key: key
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    configMapKeyRef:
                      name: name
                      optional: true
                      key: key
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                - name: name
                  value: value
                  valueFrom:
                    secretKeyRef:
                      name: name
                      optional: true
                      key: key
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    configMapKeyRef:
                      name: name
                      optional: true
                      key: key
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                ports:
                - protocol: protocol
                  hostIP: hostIP
                  name: name
                  containerPort: 3
                  hostPort: 2
                - protocol: protocol
                  hostIP: hostIP
                  name: name
                  containerPort: 3
                  hostPort: 2
                command:
                - command
                - command
                volumeMounts:
                - mountPath: mountPath
                  mountPropagation: "{}"
                  name: name
                  readOnly: true
                  subPath: subPath
                - mountPath: mountPath
                  mountPropagation: "{}"
                  name: name
                  readOnly: true
                  subPath: subPath
                args:
                - args
                - args
                lifecycle:
                  postStart:
                    tcpSocket:
                      port: port
                      host: host
                    exec:
                      command:
                      - command
                      - command
                    httpGet:
                      path: path
                      scheme: scheme
                      port: port
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  preStop:
                    tcpSocket:
                      port: port
                      host: host
                    exec:
                      command:
                      - command
                      - command
                    httpGet:
                      path: path
                      scheme: scheme
                      port: port
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                name: name
                tty: true
                readinessProbe:
                  failureThreshold: 5
                  periodSeconds: 2
                  tcpSocket:
                    port: port
                    host: host
                  timeoutSeconds: 9
                  successThreshold: 7
                  initialDelaySeconds: 5
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: port
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
                stdinOnce: true
                envFrom:
                - configMapRef:
                    name: name
                    optional: true
                  prefix: prefix
                  secretRef:
                    name: name
                    optional: true
                - configMapRef:
                    name: name
                    optional: true
                  prefix: prefix
                  secretRef:
                    name: name
                    optional: true
              - volumeDevices:
                - devicePath: devicePath
                  name: name
                - devicePath: devicePath
                  name: name
                image: image
                imagePullPolicy: imagePullPolicy
                livenessProbe:
                  failureThreshold: 5
                  periodSeconds: 2
                  tcpSocket:
                    port: port
                    host: host
                  timeoutSeconds: 9
                  successThreshold: 7
                  initialDelaySeconds: 5
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: port
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
                stdin: true
                terminationMessagePolicy: terminationMessagePolicy
                terminationMessagePath: terminationMessagePath
                workingDir: workingDir
                resources:
                  requests: "{}"
                  limits: "{}"
                securityContext:
                  privileged: true
                  runAsUser: 7
                  capabilities:
                    add:
                    - "{}"
                    - "{}"
                    drop:
                    - "{}"
                    - "{}"
                  seLinuxOptions:
                    role: role
                    level: level
                    type: type
                    user: user
                  allowPrivilegeEscalation: true
                  runAsGroup: 4
                  runAsNonRoot: true
                  readOnlyRootFilesystem: true
                env:
                - name: name
                  value: value
                  valueFrom:
                    secretKeyRef:
                      name: name
                      optional: true
                      key: key
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    configMapKeyRef:
                      name: name
                      optional: true
                      key: key
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                - name: name
                  value: value
                  valueFrom:
                    secretKeyRef:
                      name: name
                      optional: true
                      key: key
                    resourceFieldRef:
                      divisor: divisor
                      resource: resource
                      containerName: containerName
                    configMapKeyRef:
                      name: name
                      optional: true
                      key: key
                    fieldRef:
                      apiVersion: apiVersion
                      fieldPath: fieldPath
                ports:
                - protocol: protocol
                  hostIP: hostIP
                  name: name
                  containerPort: 3
                  hostPort: 2
                - protocol: protocol
                  hostIP: hostIP
                  name: name
                  containerPort: 3
                  hostPort: 2
                command:
                - command
                - command
                volumeMounts:
                - mountPath: mountPath
                  mountPropagation: "{}"
                  name: name
                  readOnly: true
                  subPath: subPath
                - mountPath: mountPath
                  mountPropagation: "{}"
                  name: name
                  readOnly: true
                  subPath: subPath
                args:
                - args
                - args
                lifecycle:
                  postStart:
                    tcpSocket:
                      port: port
                      host: host
                    exec:
                      command:
                      - command
                      - command
                    httpGet:
                      path: path
                      scheme: scheme
                      port: port
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  preStop:
                    tcpSocket:
                      port: port
                      host: host
                    exec:
                      command:
                      - command
                      - command
                    httpGet:
                      path: path
                      scheme: scheme
                      port: port
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                name: name
                tty: true
                readinessProbe:
                  failureThreshold: 5
                  periodSeconds: 2
                  tcpSocket:
                    port: port
                    host: host
                  timeoutSeconds: 9
                  successThreshold: 7
                  initialDelaySeconds: 5
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: port
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
                stdinOnce: true
                envFrom:
                - configMapRef:
                    name: name
                    optional: true
                  prefix: prefix
                  secretRef:
                    name: name
                    optional: true
                - configMapRef:
                    name: name
                    optional: true
                  prefix: prefix
                  secretRef:
                    name: name
                    optional: true
              affinity:
                nodeAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                    nodeSelectorTerms:
                    - matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchFields:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                    - matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchFields:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                  preferredDuringSchedulingIgnoredDuringExecution:
                  - preference:
                      matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchFields:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                    weight: 6
                  - preference:
                      matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchFields:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                    weight: 6
                podAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                  - labelSelector:
                      matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchLabels: "{}"
                    topologyKey: topologyKey
                    namespaces:
                    - namespaces
                    - namespaces
                  - labelSelector:
                      matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchLabels: "{}"
                    topologyKey: topologyKey
                    namespaces:
                    - namespaces
                    - namespaces
                  preferredDuringSchedulingIgnoredDuringExecution:
                  - podAffinityTerm:
                      labelSelector:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchLabels: "{}"
                      topologyKey: topologyKey
                      namespaces:
                      - namespaces
                      - namespaces
                    weight: 1
                  - podAffinityTerm:
                      labelSelector:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchLabels: "{}"
                      topologyKey: topologyKey
                      namespaces:
                      - namespaces
                      - namespaces
                    weight: 1
                podAntiAffinity:
                  requiredDuringSchedulingIgnoredDuringExecution:
                  - labelSelector:
                      matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchLabels: "{}"
                    topologyKey: topologyKey
                    namespaces:
                    - namespaces
                    - namespaces
                  - labelSelector:
                      matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchLabels: "{}"
                    topologyKey: topologyKey
                    namespaces:
                    - namespaces
                    - namespaces
                  preferredDuringSchedulingIgnoredDuringExecution:
                  - podAffinityTerm:
                      labelSelector:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchLabels: "{}"
                      topologyKey: topologyKey
                      namespaces:
                      - namespaces
                      - namespaces
                    weight: 1
                  - podAffinityTerm:
                      labelSelector:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchLabels: "{}"
                      topologyKey: topologyKey
                      namespaces:
                      - namespaces
                      - namespaces
                    weight: 1
              hostPID: true
          paused: true
          test: true
          replicas: 6
          revisionHistoryLimit: 1
          selector: "{}"
          minReadySeconds: 0
          strategy:
            type: type
            rollingUpdate:
              maxSurge: maxSurge
              maxUnavailable: maxUnavailable
          triggers:
          - imageChangeParams:
              lastTriggeredImage: lastTriggeredImage
              automatic: true
              from:
                uid: uid
                apiVersion: apiVersion
                kind: kind
                resourceVersion: resourceVersion
                fieldPath: fieldPath
                name: name
                namespace: namespace
              containerNames:
              - containerNames
              - containerNames
            type: type
          - imageChangeParams:
              lastTriggeredImage: lastTriggeredImage
              automatic: true
              from:
                uid: uid
                apiVersion: apiVersion
                kind: kind
                resourceVersion: resourceVersion
                fieldPath: fieldPath
                name: name
                namespace: namespace
              containerNames:
              - containerNames
              - containerNames
            type: type
        status:
          unavailableReplicas: 3
          latestVersion: 5
          replicas: 9
          readyReplicas: 7
          details:
            causes:
            - imageTrigger:
                from:
                  uid: uid
                  apiVersion: apiVersion
                  kind: kind
                  resourceVersion: resourceVersion
                  fieldPath: fieldPath
                  name: name
                  namespace: namespace
              type: type
            - imageTrigger:
                from:
                  uid: uid
                  apiVersion: apiVersion
                  kind: kind
                  resourceVersion: resourceVersion
                  fieldPath: fieldPath
                  name: name
                  namespace: namespace
              type: type
            message: message
          conditions:
          - reason: reason
            lastTransitionTime: lastTransitionTime
            message: message
            type: type
            lastUpdateTime: lastUpdateTime
            status: status
          - reason: reason
            lastTransitionTime: lastTransitionTime
            message: message
            type: type
            lastUpdateTime: lastUpdateTime
            status: status
          updatedReplicas: 2
          availableReplicas: 5
          observedGeneration: 2
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
          type: string
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: '#/components/schemas/v1.ObjectMeta'
        spec:
          $ref: '#/components/schemas/v1.DeploymentConfigSpec'
        status:
          $ref: '#/components/schemas/v1.DeploymentConfigStatus'
      required:
      - spec
      type: object
    v1.DeploymentConfigList:
      description: DeploymentConfigList is a collection of deployment configs.
      example:
        metadata:
          continue: continue
          resourceVersion: resourceVersion
          selfLink: selfLink
        apiVersion: apiVersion
        kind: kind
        items:
        - metadata:
            generation: 6
            finalizers:
            - finalizers
            - finalizers
            resourceVersion: resourceVersion
            annotations: "{}"
            generateName: generateName
            deletionTimestamp: deletionTimestamp
            labels: "{}"
            ownerReferences:
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            selfLink: selfLink
            deletionGracePeriodSeconds: 0
            uid: uid
            initializers:
              result:
                reason: reason
                metadata:
                  continue: continue
                  resourceVersion: resourceVersion
                  selfLink: selfLink
                apiVersion: apiVersion
                code: 1
                kind: kind
                details:
                  uid: uid
                  kind: kind
                  causes:
                  - reason: reason
                    field: field
                    message: message
                  - reason: reason
                    field: field
                    message: message
                  retryAfterSeconds: 5
                  name: name
                  group: group
                message: message
                status: status
              pending:
              - name: name
              - name: name
            clusterName: clusterName
            creationTimestamp: creationTimestamp
            name: name
            namespace: namespace
          apiVersion: apiVersion
          kind: kind
          spec:
            template:
              metadata:
                generation: 6
                finalizers:
                - finalizers
                - finalizers
                resourceVersion: resourceVersion
                annotations: "{}"
                generateName: generateName
                deletionTimestamp: deletionTimestamp
                labels: "{}"
                ownerReferences:
                - uid: uid
                  controller: true
                  apiVersion: apiVersion
                  kind: kind
                  name: name
                  blockOwnerDeletion: true
                - uid: uid
                  controller: true
                  apiVersion: apiVersion
                  kind: kind
                  name: name
                  blockOwnerDeletion: true
                selfLink: selfLink
                deletionGracePeriodSeconds: 0
                uid: uid
                initializers:
                  result:
                    reason: reason
                    metadata:
                      continue: continue
                      resourceVersion: resourceVersion
                      selfLink: selfLink
                    apiVersion: apiVersion
                    code: 1
                    kind: kind
                    details:
                      uid: uid
                      kind: kind
                      causes:
                      - reason: reason
                        field: field
                        message: message
                      - reason: reason
                        field: field
                        message: message
                      retryAfterSeconds: 5
                      name: name
                      group: group
                    message: message
                    status: status
                  pending:
                  - name: name
                  - name: name
                clusterName: clusterName
                creationTimestamp: creationTimestamp
                name: name
                namespace: namespace
              spec:
                dnsPolicy: dnsPolicy
                nodeName: nodeName
                terminationGracePeriodSeconds: 1
                dnsConfig:
                  searches:
                  - searches
                  - searches
                  nameservers:
                  - nameservers
                  - nameservers
                  options:
                  - name: name
                    value: value
                  - name: name
                    value: value
                hostNetwork: true
                readinessGates:
                - conditionType: conditionType
                - conditionType: conditionType
                serviceAccountName: serviceAccountName
                imagePullSecrets:
                - name: name
                - name: name
                priorityClassName: priorityClassName
                hostAliases:
                - ip: ip
                  hostnames:
                  - hostnames
                  - hostnames
                - ip: ip
                  hostnames:
                  - hostnames
                  - hostnames
                securityContext:
                  runAsUser: 6
                  seLinuxOptions:
                    role: role
                    level: level
                    type: type
                    user: user
                  fsGroup: 1
                  supplementalGroups:
                  - 7
                  - 7
                  runAsGroup: 1
                  runAsNonRoot: true
                  sysctls:
                  - name: name
                    value: value
                  - name: name
                    value: value
                nodeSelector: "{}"
                hostname: hostname
                tolerations:
                - effect: effect
                  tolerationSeconds: 4
                  value: value
                  key: key
                  operator: operator
                - effect: effect
                  tolerationSeconds: 4
                  value: value
                  key: key
                  operator: operator
                automountServiceAccountToken: true
                schedulerName: schedulerName
                activeDeadlineSeconds: 0
                hostIPC: true
                volumes:
                - quobyte:
                    volume: volume
                    registry: registry
                    readOnly: true
                    user: user
                    group: group
                  azureFile:
                    secretName: secretName
                    readOnly: true
                    shareName: shareName
                  flexVolume:
                    driver: driver
                    options: "{}"
                    secretRef:
                      name: name
                    readOnly: true
                    fsType: fsType
                  secret:
                    secretName: secretName
                    defaultMode: 2
                    optional: true
                    items:
                    - mode: 9
                      path: path
                      key: key
                    - mode: 9
                      path: path
                      key: key
                  projected:
                    sources:
                    - downwardAPI:
                        items:
                        - mode: 8
                          path: path
                          resourceFieldRef:
                            divisor: divisor
                            resource: resource
                            containerName: containerName
                          fieldRef:
                            apiVersion: apiVersion
                            fieldPath: fieldPath
                        - mode: 8
                          path: path
                          resourceFieldRef:
                            divisor: divisor
                            resource: resource
                            containerName: containerName
                          fieldRef:
                            apiVersion: apiVersion
                            fieldPath: fieldPath
                      configMap:
                        name: name
                        optional: true
                        items:
                        - mode: 9
                          path: path
                          key: key
                        - mode: 9
                          path: path
                          key: key
                      secret:
                        name: name
                        optional: true
                        items:
                        - mode: 9
                          path: path
                          key: key
                        - mode: 9
                          path: path
                          key: key
                      serviceAccountToken:
                        path: path
                        audience: audience
                        expirationSeconds: 1
                    - downwardAPI:
                        items:
                        - mode: 8
                          path: path
                          resourceFieldRef:
                            divisor: divisor
                            resource: resource
                            containerName: containerName
                          fieldRef:
                            apiVersion: apiVersion
                            fieldPath: fieldPath
                        - mode: 8
                          path: path
                          resourceFieldRef:
                            divisor: divisor
                            resource: resource
                            containerName: containerName
                          fieldRef:
                            apiVersion: apiVersion
                            fieldPath: fieldPath
                      configMap:
                        name: name
                        optional: true
                        items:
                        - mode: 9
                          path: path
                          key: key
                        - mode: 9
                          path: path
                          key: key
                      secret:
                        name: name
                        optional: true
                        items:
                        - mode: 9
                          path: path
                          key: key
                        - mode: 9
                          path: path
                          key: key
                      serviceAccountToken:
                        path: path
                        audience: audience
                        expirationSeconds: 1
                    defaultMode: 6
                  cephfs:
                    path: path
                    secretRef:
                      name: name
                    secretFile: secretFile
                    readOnly: true
                    user: user
                    monitors:
                    - monitors
                    - monitors
                  scaleIO:
                    system: system
                    protectionDomain: protectionDomain
                    sslEnabled: true
                    storageMode: storageMode
                    volumeName: volumeName
                    secretRef:
                      name: name
                    readOnly: true
                    fsType: fsType
                    storagePool: storagePool
                    gateway: gateway
                  emptyDir:
                    sizeLimit: sizeLimit
                    medium: medium
                  glusterfs:
                    path: path
                    endpoints: endpoints
                    readOnly: true
                  gcePersistentDisk:
                    partition: 6
                    readOnly: true
                    pdName: pdName
                    fsType: fsType
                  photonPersistentDisk:
                    pdID: pdID
                    fsType: fsType
                  azureDisk:
                    diskName: diskName
                    kind: "{}"
                    readOnly: true
                    cachingMode: "{}"
                    diskURI: diskURI
                    fsType: fsType
                  cinder:
                    secretRef:
                      name: name
                    volumeID: volumeID
                    readOnly: true
                    fsType: fsType
                  downwardAPI:
                    defaultMode: 6
                    items:
                    - mode: 8
                      path: path
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                    - mode: 8
                      path: path
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  awsElasticBlockStore:
                    partition: 5
                    volumeID: volumeID
                    readOnly: true
                    fsType: fsType
                  flocker:
                    datasetName: datasetName
                    datasetUUID: datasetUUID
                  iscsi:
                    chapAuthSession: true
                    iscsiInterface: iscsiInterface
                    lun: 3
                    chapAuthDiscovery: true
                    iqn: iqn
                    portals:
                    - portals
                    - portals
                    secretRef:
                      name: name
                    initiatorName: initiatorName
                    readOnly: true
                    fsType: fsType
                    targetPortal: targetPortal
                  rbd:
                    image: image
                    pool: pool
                    secretRef:
                      name: name
                    readOnly: true
                    fsType: fsType
                    keyring: keyring
                    user: user
                    monitors:
                    - monitors
                    - monitors
                  configMap:
                    defaultMode: 9
                    name: name
                    optional: true
                    items:
                    - mode: 9
                      path: path
                      key: key
                    - mode: 9
                      path: path
                      key: key
                  storageos:
                    volumeNamespace: volumeNamespace
                    volumeName: volumeName
                    secretRef:
                      name: name
                    readOnly: true
                    fsType: fsType
                  name: name
                  nfs:
                    path: path
                    server: server
                    readOnly: true
                  persistentVolumeClaim:
                    claimName: claimName
                    readOnly: true
                  gitRepo:
                    repository: repository
                    directory: directory
                    revision: revision
                  portworxVolume:
                    volumeID: volumeID
                    readOnly: true
                    fsType: fsType
                  vsphereVolume:
                    storagePolicyName: storagePolicyName
                    storagePolicyID: storagePolicyID
                    volumePath: volumePath
                    fsType: fsType
                  fc:
                    lun: 9
                    targetWWNs:
                    - targetWWNs
                    - targetWWNs
                    readOnly: true
                    wwids:
                    - wwids
                    - wwids
                    fsType: fsType
                  hostPath:
                    path: path
                    type: "{}"
                - quobyte:
                    volume: volume
                    registry: registry
                    readOnly: true
                    user: user
                    group: group
                  azureFile:
                    secretName: secretName
                    readOnly: true
                    shareName: shareName
                  flexVolume:
                    driver: driver
                    options: "{}"
                    secretRef:
                      name: name
                    readOnly: true
                    fsType: fsType
                  secret:
                    secretName: secretName
                    defaultMode: 2
                    optional: true
                    items:
                    - mode: 9
                      path: path
                      key: key
                    - mode: 9
                      path: path
                      key: key
                  projected:
                    sources:
                    - downwardAPI:
                        items:
                        - mode: 8
                          path: path
                          resourceFieldRef:
                            divisor: divisor
                            resource: resource
                            containerName: containerName
                          fieldRef:
                            apiVersion: apiVersion
                            fieldPath: fieldPath
                        - mode: 8
                          path: path
                          resourceFieldRef:
                            divisor: divisor
                            resource: resource
                            containerName: containerName
                          fieldRef:
                            apiVersion: apiVersion
                            fieldPath: fieldPath
                      configMap:
                        name: name
                        optional: true
                        items:
                        - mode: 9
                          path: path
                          key: key
                        - mode: 9
                          path: path
                          key: key
                      secret:
                        name: name
                        optional: true
                        items:
                        - mode: 9
                          path: path
                          key: key
                        - mode: 9
                          path: path
                          key: key
                      serviceAccountToken:
                        path: path
                        audience: audience
                        expirationSeconds: 1
                    - downwardAPI:
                        items:
                        - mode: 8
                          path: path
                          resourceFieldRef:
                            divisor: divisor
                            resource: resource
                            containerName: containerName
                          fieldRef:
                            apiVersion: apiVersion
                            fieldPath: fieldPath
                        - mode: 8
                          path: path
                          resourceFieldRef:
                            divisor: divisor
                            resource: resource
                            containerName: containerName
                          fieldRef:
                            apiVersion: apiVersion
                            fieldPath: fieldPath
                      configMap:
                        name: name
                        optional: true
                        items:
                        - mode: 9
                          path: path
                          key: key
                        - mode: 9
                          path: path
                          key: key
                      secret:
                        name: name
                        optional: true
                        items:
                        - mode: 9
                          path: path
                          key: key
                        - mode: 9
                          path: path
                          key: key
                      serviceAccountToken:
                        path: path
                        audience: audience
                        expirationSeconds: 1
                    defaultMode: 6
                  cephfs:
                    path: path
                    secretRef:
                      name: name
                    secretFile: secretFile
                    readOnly: true
                    user: user
                    monitors:
                    - monitors
                    - monitors
                  scaleIO:
                    system: system
                    protectionDomain: protectionDomain
                    sslEnabled: true
                    storageMode: storageMode
                    volumeName: volumeName
                    secretRef:
                      name: name
                    readOnly: true
                    fsType: fsType
                    storagePool: storagePool
                    gateway: gateway
                  emptyDir:
                    sizeLimit: sizeLimit
                    medium: medium
                  glusterfs:
                    path: path
                    endpoints: endpoints
                    readOnly: true
                  gcePersistentDisk:
                    partition: 6
                    readOnly: true
                    pdName: pdName
                    fsType: fsType
                  photonPersistentDisk:
                    pdID: pdID
                    fsType: fsType
                  azureDisk:
                    diskName: diskName
                    kind: "{}"
                    readOnly: true
                    cachingMode: "{}"
                    diskURI: diskURI
                    fsType: fsType
                  cinder:
                    secretRef:
                      name: name
                    volumeID: volumeID
                    readOnly: true
                    fsType: fsType
                  downwardAPI:
                    defaultMode: 6
                    items:
                    - mode: 8
                      path: path
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                    - mode: 8
                      path: path
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  awsElasticBlockStore:
                    partition: 5
                    volumeID: volumeID
                    readOnly: true
                    fsType: fsType
                  flocker:
                    datasetName: datasetName
                    datasetUUID: datasetUUID
                  iscsi:
                    chapAuthSession: true
                    iscsiInterface: iscsiInterface
                    lun: 3
                    chapAuthDiscovery: true
                    iqn: iqn
                    portals:
                    - portals
                    - portals
                    secretRef:
                      name: name
                    initiatorName: initiatorName
                    readOnly: true
                    fsType: fsType
                    targetPortal: targetPortal
                  rbd:
                    image: image
                    pool: pool
                    secretRef:
                      name: name
                    readOnly: true
                    fsType: fsType
                    keyring: keyring
                    user: user
                    monitors:
                    - monitors
                    - monitors
                  configMap:
                    defaultMode: 9
                    name: name
                    optional: true
                    items:
                    - mode: 9
                      path: path
                      key: key
                    - mode: 9
                      path: path
                      key: key
                  storageos:
                    volumeNamespace: volumeNamespace
                    volumeName: volumeName
                    secretRef:
                      name: name
                    readOnly: true
                    fsType: fsType
                  name: name
                  nfs:
                    path: path
                    server: server
                    readOnly: true
                  persistentVolumeClaim:
                    claimName: claimName
                    readOnly: true
                  gitRepo:
                    repository: repository
                    directory: directory
                    revision: revision
                  portworxVolume:
                    volumeID: volumeID
                    readOnly: true
                    fsType: fsType
                  vsphereVolume:
                    storagePolicyName: storagePolicyName
                    storagePolicyID: storagePolicyID
                    volumePath: volumePath
                    fsType: fsType
                  fc:
                    lun: 9
                    targetWWNs:
                    - targetWWNs
                    - targetWWNs
                    readOnly: true
                    wwids:
                    - wwids
                    - wwids
                    fsType: fsType
                  hostPath:
                    path: path
                    type: "{}"
                serviceAccount: serviceAccount
                priority: 1
                restartPolicy: restartPolicy
                shareProcessNamespace: true
                subdomain: subdomain
                containers:
                - volumeDevices:
                  - devicePath: devicePath
                    name: name
                  - devicePath: devicePath
                    name: name
                  image: image
                  imagePullPolicy: imagePullPolicy
                  livenessProbe:
                    failureThreshold: 5
                    periodSeconds: 2
                    tcpSocket:
                      port: port
                      host: host
                    timeoutSeconds: 9
                    successThreshold: 7
                    initialDelaySeconds: 5
                    exec:
                      command:
                      - command
                      - command
                    httpGet:
                      path: path
                      scheme: scheme
                      port: port
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  stdin: true
                  terminationMessagePolicy: terminationMessagePolicy
                  terminationMessagePath: terminationMessagePath
                  workingDir: workingDir
                  resources:
                    requests: "{}"
                    limits: "{}"
                  securityContext:
                    privileged: true
                    runAsUser: 7
                    capabilities:
                      add:
                      - "{}"
                      - "{}"
                      drop:
                      - "{}"
                      - "{}"
                    seLinuxOptions:
                      role: role
                      level: level
                      type: type
                      user: user
                    allowPrivilegeEscalation: true
                    runAsGroup: 4
                    runAsNonRoot: true
                    readOnlyRootFilesystem: true
                  env:
                  - name: name
                    value: value
                    valueFrom:
                      secretKeyRef:
                        name: name
                        optional: true
                        key: key
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      configMapKeyRef:
                        name: name
                        optional: true
                        key: key
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  - name: name
                    value: value
                    valueFrom:
                      secretKeyRef:
                        name: name
                        optional: true
                        key: key
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      configMapKeyRef:
                        name: name
                        optional: true
                        key: key
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  ports:
                  - protocol: protocol
                    hostIP: hostIP
                    name: name
                    containerPort: 3
                    hostPort: 2
                  - protocol: protocol
                    hostIP: hostIP
                    name: name
                    containerPort: 3
                    hostPort: 2
                  command:
                  - command
                  - command
                  volumeMounts:
                  - mountPath: mountPath
                    mountPropagation: "{}"
                    name: name
                    readOnly: true
                    subPath: subPath
                  - mountPath: mountPath
                    mountPropagation: "{}"
                    name: name
                    readOnly: true
                    subPath: subPath
                  args:
                  - args
                  - args
                  lifecycle:
                    postStart:
                      tcpSocket:
                        port: port
                        host: host
                      exec:
                        command:
                        - command
                        - command
                      httpGet:
                        path: path
                        scheme: scheme
                        port: port
                        host: host
                        httpHeaders:
                        - name: name
                          value: value
                        - name: name
                          value: value
                    preStop:
                      tcpSocket:
                        port: port
                        host: host
                      exec:
                        command:
                        - command
                        - command
                      httpGet:
                        path: path
                        scheme: scheme
                        port: port
                        host: host
                        httpHeaders:
                        - name: name
                          value: value
                        - name: name
                          value: value
                  name: name
                  tty: true
                  readinessProbe:
                    failureThreshold: 5
                    periodSeconds: 2
                    tcpSocket:
                      port: port
                      host: host
                    timeoutSeconds: 9
                    successThreshold: 7
                    initialDelaySeconds: 5
                    exec:
                      command:
                      - command
                      - command
                    httpGet:
                      path: path
                      scheme: scheme
                      port: port
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  stdinOnce: true
                  envFrom:
                  - configMapRef:
                      name: name
                      optional: true
                    prefix: prefix
                    secretRef:
                      name: name
                      optional: true
                  - configMapRef:
                      name: name
                      optional: true
                    prefix: prefix
                    secretRef:
                      name: name
                      optional: true
                - volumeDevices:
                  - devicePath: devicePath
                    name: name
                  - devicePath: devicePath
                    name: name
                  image: image
                  imagePullPolicy: imagePullPolicy
                  livenessProbe:
                    failureThreshold: 5
                    periodSeconds: 2
                    tcpSocket:
                      port: port
                      host: host
                    timeoutSeconds: 9
                    successThreshold: 7
                    initialDelaySeconds: 5
                    exec:
                      command:
                      - command
                      - command
                    httpGet:
                      path: path
                      scheme: scheme
                      port: port
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  stdin: true
                  terminationMessagePolicy: terminationMessagePolicy
                  terminationMessagePath: terminationMessagePath
                  workingDir: workingDir
                  resources:
                    requests: "{}"
                    limits: "{}"
                  securityContext:
                    privileged: true
                    runAsUser: 7
                    capabilities:
                      add:
                      - "{}"
                      - "{}"
                      drop:
                      - "{}"
                      - "{}"
                    seLinuxOptions:
                      role: role
                      level: level
                      type: type
                      user: user
                    allowPrivilegeEscalation: true
                    runAsGroup: 4
                    runAsNonRoot: true
                    readOnlyRootFilesystem: true
                  env:
                  - name: name
                    value: value
                    valueFrom:
                      secretKeyRef:
                        name: name
                        optional: true
                        key: key
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      configMapKeyRef:
                        name: name
                        optional: true
                        key: key
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  - name: name
                    value: value
                    valueFrom:
                      secretKeyRef:
                        name: name
                        optional: true
                        key: key
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      configMapKeyRef:
                        name: name
                        optional: true
                        key: key
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  ports:
                  - protocol: protocol
                    hostIP: hostIP
                    name: name
                    containerPort: 3
                    hostPort: 2
                  - protocol: protocol
                    hostIP: hostIP
                    name: name
                    containerPort: 3
                    hostPort: 2
                  command:
                  - command
                  - command
                  volumeMounts:
                  - mountPath: mountPath
                    mountPropagation: "{}"
                    name: name
                    readOnly: true
                    subPath: subPath
                  - mountPath: mountPath
                    mountPropagation: "{}"
                    name: name
                    readOnly: true
                    subPath: subPath
                  args:
                  - args
                  - args
                  lifecycle:
                    postStart:
                      tcpSocket:
                        port: port
                        host: host
                      exec:
                        command:
                        - command
                        - command
                      httpGet:
                        path: path
                        scheme: scheme
                        port: port
                        host: host
                        httpHeaders:
                        - name: name
                          value: value
                        - name: name
                          value: value
                    preStop:
                      tcpSocket:
                        port: port
                        host: host
                      exec:
                        command:
                        - command
                        - command
                      httpGet:
                        path: path
                        scheme: scheme
                        port: port
                        host: host
                        httpHeaders:
                        - name: name
                          value: value
                        - name: name
                          value: value
                  name: name
                  tty: true
                  readinessProbe:
                    failureThreshold: 5
                    periodSeconds: 2
                    tcpSocket:
                      port: port
                      host: host
                    timeoutSeconds: 9
                    successThreshold: 7
                    initialDelaySeconds: 5
                    exec:
                      command:
                      - command
                      - command
                    httpGet:
                      path: path
                      scheme: scheme
                      port: port
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  stdinOnce: true
                  envFrom:
                  - configMapRef:
                      name: name
                      optional: true
                    prefix: prefix
                    secretRef:
                      name: name
                      optional: true
                  - configMapRef:
                      name: name
                      optional: true
                    prefix: prefix
                    secretRef:
                      name: name
                      optional: true
                initContainers:
                - volumeDevices:
                  - devicePath: devicePath
                    name: name
                  - devicePath: devicePath
                    name: name
                  image: image
                  imagePullPolicy: imagePullPolicy
                  livenessProbe:
                    failureThreshold: 5
                    periodSeconds: 2
                    tcpSocket:
                      port: port
                      host: host
                    timeoutSeconds: 9
                    successThreshold: 7
                    initialDelaySeconds: 5
                    exec:
                      command:
                      - command
                      - command
                    httpGet:
                      path: path
                      scheme: scheme
                      port: port
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  stdin: true
                  terminationMessagePolicy: terminationMessagePolicy
                  terminationMessagePath: terminationMessagePath
                  workingDir: workingDir
                  resources:
                    requests: "{}"
                    limits: "{}"
                  securityContext:
                    privileged: true
                    runAsUser: 7
                    capabilities:
                      add:
                      - "{}"
                      - "{}"
                      drop:
                      - "{}"
                      - "{}"
                    seLinuxOptions:
                      role: role
                      level: level
                      type: type
                      user: user
                    allowPrivilegeEscalation: true
                    runAsGroup: 4
                    runAsNonRoot: true
                    readOnlyRootFilesystem: true
                  env:
                  - name: name
                    value: value
                    valueFrom:
                      secretKeyRef:
                        name: name
                        optional: true
                        key: key
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      configMapKeyRef:
                        name: name
                        optional: true
                        key: key
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  - name: name
                    value: value
                    valueFrom:
                      secretKeyRef:
                        name: name
                        optional: true
                        key: key
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      configMapKeyRef:
                        name: name
                        optional: true
                        key: key
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  ports:
                  - protocol: protocol
                    hostIP: hostIP
                    name: name
                    containerPort: 3
                    hostPort: 2
                  - protocol: protocol
                    hostIP: hostIP
                    name: name
                    containerPort: 3
                    hostPort: 2
                  command:
                  - command
                  - command
                  volumeMounts:
                  - mountPath: mountPath
                    mountPropagation: "{}"
                    name: name
                    readOnly: true
                    subPath: subPath
                  - mountPath: mountPath
                    mountPropagation: "{}"
                    name: name
                    readOnly: true
                    subPath: subPath
                  args:
                  - args
                  - args
                  lifecycle:
                    postStart:
                      tcpSocket:
                        port: port
                        host: host
                      exec:
                        command:
                        - command
                        - command
                      httpGet:
                        path: path
                        scheme: scheme
                        port: port
                        host: host
                        httpHeaders:
                        - name: name
                          value: value
                        - name: name
                          value: value
                    preStop:
                      tcpSocket:
                        port: port
                        host: host
                      exec:
                        command:
                        - command
                        - command
                      httpGet:
                        path: path
                        scheme: scheme
                        port: port
                        host: host
                        httpHeaders:
                        - name: name
                          value: value
                        - name: name
                          value: value
                  name: name
                  tty: true
                  readinessProbe:
                    failureThreshold: 5
                    periodSeconds: 2
                    tcpSocket:
                      port: port
                      host: host
                    timeoutSeconds: 9
                    successThreshold: 7
                    initialDelaySeconds: 5
                    exec:
                      command:
                      - command
                      - command
                    httpGet:
                      path: path
                      scheme: scheme
                      port: port
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  stdinOnce: true
                  envFrom:
                  - configMapRef:
                      name: name
                      optional: true
                    prefix: prefix
                    secretRef:
                      name: name
                      optional: true
                  - configMapRef:
                      name: name
                      optional: true
                    prefix: prefix
                    secretRef:
                      name: name
                      optional: true
                - volumeDevices:
                  - devicePath: devicePath
                    name: name
                  - devicePath: devicePath
                    name: name
                  image: image
                  imagePullPolicy: imagePullPolicy
                  livenessProbe:
                    failureThreshold: 5
                    periodSeconds: 2
                    tcpSocket:
                      port: port
                      host: host
                    timeoutSeconds: 9
                    successThreshold: 7
                    initialDelaySeconds: 5
                    exec:
                      command:
                      - command
                      - command
                    httpGet:
                      path: path
                      scheme: scheme
                      port: port
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  stdin: true
                  terminationMessagePolicy: terminationMessagePolicy
                  terminationMessagePath: terminationMessagePath
                  workingDir: workingDir
                  resources:
                    requests: "{}"
                    limits: "{}"
                  securityContext:
                    privileged: true
                    runAsUser: 7
                    capabilities:
                      add:
                      - "{}"
                      - "{}"
                      drop:
                      - "{}"
                      - "{}"
                    seLinuxOptions:
                      role: role
                      level: level
                      type: type
                      user: user
                    allowPrivilegeEscalation: true
                    runAsGroup: 4
                    runAsNonRoot: true
                    readOnlyRootFilesystem: true
                  env:
                  - name: name
                    value: value
                    valueFrom:
                      secretKeyRef:
                        name: name
                        optional: true
                        key: key
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      configMapKeyRef:
                        name: name
                        optional: true
                        key: key
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  - name: name
                    value: value
                    valueFrom:
                      secretKeyRef:
                        name: name
                        optional: true
                        key: key
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      configMapKeyRef:
                        name: name
                        optional: true
                        key: key
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  ports:
                  - protocol: protocol
                    hostIP: hostIP
                    name: name
                    containerPort: 3
                    hostPort: 2
                  - protocol: protocol
                    hostIP: hostIP
                    name: name
                    containerPort: 3
                    hostPort: 2
                  command:
                  - command
                  - command
                  volumeMounts:
                  - mountPath: mountPath
                    mountPropagation: "{}"
                    name: name
                    readOnly: true
                    subPath: subPath
                  - mountPath: mountPath
                    mountPropagation: "{}"
                    name: name
                    readOnly: true
                    subPath: subPath
                  args:
                  - args
                  - args
                  lifecycle:
                    postStart:
                      tcpSocket:
                        port: port
                        host: host
                      exec:
                        command:
                        - command
                        - command
                      httpGet:
                        path: path
                        scheme: scheme
                        port: port
                        host: host
                        httpHeaders:
                        - name: name
                          value: value
                        - name: name
                          value: value
                    preStop:
                      tcpSocket:
                        port: port
                        host: host
                      exec:
                        command:
                        - command
                        - command
                      httpGet:
                        path: path
                        scheme: scheme
                        port: port
                        host: host
                        httpHeaders:
                        - name: name
                          value: value
                        - name: name
                          value: value
                  name: name
                  tty: true
                  readinessProbe:
                    failureThreshold: 5
                    periodSeconds: 2
                    tcpSocket:
                      port: port
                      host: host
                    timeoutSeconds: 9
                    successThreshold: 7
                    initialDelaySeconds: 5
                    exec:
                      command:
                      - command
                      - command
                    httpGet:
                      path: path
                      scheme: scheme
                      port: port
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  stdinOnce: true
                  envFrom:
                  - configMapRef:
                      name: name
                      optional: true
                    prefix: prefix
                    secretRef:
                      name: name
                      optional: true
                  - configMapRef:
                      name: name
                      optional: true
                    prefix: prefix
                    secretRef:
                      name: name
                      optional: true
                affinity:
                  nodeAffinity:
                    requiredDuringSchedulingIgnoredDuringExecution:
                      nodeSelectorTerms:
                      - matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchFields:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                      - matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchFields:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                    preferredDuringSchedulingIgnoredDuringExecution:
                    - preference:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchFields:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                      weight: 6
                    - preference:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchFields:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                      weight: 6
                  podAffinity:
                    requiredDuringSchedulingIgnoredDuringExecution:
                    - labelSelector:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchLabels: "{}"
                      topologyKey: topologyKey
                      namespaces:
                      - namespaces
                      - namespaces
                    - labelSelector:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchLabels: "{}"
                      topologyKey: topologyKey
                      namespaces:
                      - namespaces
                      - namespaces
                    preferredDuringSchedulingIgnoredDuringExecution:
                    - podAffinityTerm:
                        labelSelector:
                          matchExpressions:
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          matchLabels: "{}"
                        topologyKey: topologyKey
                        namespaces:
                        - namespaces
                        - namespaces
                      weight: 1
                    - podAffinityTerm:
                        labelSelector:
                          matchExpressions:
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          matchLabels: "{}"
                        topologyKey: topologyKey
                        namespaces:
                        - namespaces
                        - namespaces
                      weight: 1
                  podAntiAffinity:
                    requiredDuringSchedulingIgnoredDuringExecution:
                    - labelSelector:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchLabels: "{}"
                      topologyKey: topologyKey
                      namespaces:
                      - namespaces
                      - namespaces
                    - labelSelector:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchLabels: "{}"
                      topologyKey: topologyKey
                      namespaces:
                      - namespaces
                      - namespaces
                    preferredDuringSchedulingIgnoredDuringExecution:
                    - podAffinityTerm:
                        labelSelector:
                          matchExpressions:
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          matchLabels: "{}"
                        topologyKey: topologyKey
                        namespaces:
                        - namespaces
                        - namespaces
                      weight: 1
                    - podAffinityTerm:
                        labelSelector:
                          matchExpressions:
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          matchLabels: "{}"
                        topologyKey: topologyKey
                        namespaces:
                        - namespaces
                        - namespaces
                      weight: 1
                hostPID: true
            paused: true
            test: true
            replicas: 6
            revisionHistoryLimit: 1
            selector: "{}"
            minReadySeconds: 0
            strategy:
              type: type
              rollingUpdate:
                maxSurge: maxSurge
                maxUnavailable: maxUnavailable
            triggers:
            - imageChangeParams:
                lastTriggeredImage: lastTriggeredImage
                automatic: true
                from:
                  uid: uid
                  apiVersion: apiVersion
                  kind: kind
                  resourceVersion: resourceVersion
                  fieldPath: fieldPath
                  name: name
                  namespace: namespace
                containerNames:
                - containerNames
                - containerNames
              type: type
            - imageChangeParams:
                lastTriggeredImage: lastTriggeredImage
                automatic: true
                from:
                  uid: uid
                  apiVersion: apiVersion
                  kind: kind
                  resourceVersion: resourceVersion
                  fieldPath: fieldPath
                  name: name
                  namespace: namespace
                containerNames:
                - containerNames
                - containerNames
              type: type
          status:
            unavailableReplicas: 3
            latestVersion: 5
            replicas: 9
            readyReplicas: 7
            details:
              causes:
              - imageTrigger:
                  from:
                    uid: uid
                    apiVersion: apiVersion
                    kind: kind
                    resourceVersion: resourceVersion
                    fieldPath: fieldPath
                    name: name
                    namespace: namespace
                type: type
              - imageTrigger:
                  from:
                    uid: uid
                    apiVersion: apiVersion
                    kind: kind
                    resourceVersion: resourceVersion
                    fieldPath: fieldPath
                    name: name
                    namespace: namespace
                type: type
              message: message
            conditions:
            - reason: reason
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
              lastUpdateTime: lastUpdateTime
              status: status
            - reason: reason
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
              lastUpdateTime: lastUpdateTime
              status: status
            updatedReplicas: 2
            availableReplicas: 5
            observedGeneration: 2
        - metadata:
            generation: 6
            finalizers:
            - finalizers
            - finalizers
            resourceVersion: resourceVersion
            annotations: "{}"
            generateName: generateName
            deletionTimestamp: deletionTimestamp
            labels: "{}"
            ownerReferences:
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            selfLink: selfLink
            deletionGracePeriodSeconds: 0
            uid: uid
            initializers:
              result:
                reason: reason
                metadata:
                  continue: continue
                  resourceVersion: resourceVersion
                  selfLink: selfLink
                apiVersion: apiVersion
                code: 1
                kind: kind
                details:
                  uid: uid
                  kind: kind
                  causes:
                  - reason: reason
                    field: field
                    message: message
                  - reason: reason
                    field: field
                    message: message
                  retryAfterSeconds: 5
                  name: name
                  group: group
                message: message
                status: status
              pending:
              - name: name
              - name: name
            clusterName: clusterName
            creationTimestamp: creationTimestamp
            name: name
            namespace: namespace
          apiVersion: apiVersion
          kind: kind
          spec:
            template:
              metadata:
                generation: 6
                finalizers:
                - finalizers
                - finalizers
                resourceVersion: resourceVersion
                annotations: "{}"
                generateName: generateName
                deletionTimestamp: deletionTimestamp
                labels: "{}"
                ownerReferences:
                - uid: uid
                  controller: true
                  apiVersion: apiVersion
                  kind: kind
                  name: name
                  blockOwnerDeletion: true
                - uid: uid
                  controller: true
                  apiVersion: apiVersion
                  kind: kind
                  name: name
                  blockOwnerDeletion: true
                selfLink: selfLink
                deletionGracePeriodSeconds: 0
                uid: uid
                initializers:
                  result:
                    reason: reason
                    metadata:
                      continue: continue
                      resourceVersion: resourceVersion
                      selfLink: selfLink
                    apiVersion: apiVersion
                    code: 1
                    kind: kind
                    details:
                      uid: uid
                      kind: kind
                      causes:
                      - reason: reason
                        field: field
                        message: message
                      - reason: reason
                        field: field
                        message: message
                      retryAfterSeconds: 5
                      name: name
                      group: group
                    message: message
                    status: status
                  pending:
                  - name: name
                  - name: name
                clusterName: clusterName
                creationTimestamp: creationTimestamp
                name: name
                namespace: namespace
              spec:
                dnsPolicy: dnsPolicy
                nodeName: nodeName
                terminationGracePeriodSeconds: 1
                dnsConfig:
                  searches:
                  - searches
                  - searches
                  nameservers:
                  - nameservers
                  - nameservers
                  options:
                  - name: name
                    value: value
                  - name: name
                    value: value
                hostNetwork: true
                readinessGates:
                - conditionType: conditionType
                - conditionType: conditionType
                serviceAccountName: serviceAccountName
                imagePullSecrets:
                - name: name
                - name: name
                priorityClassName: priorityClassName
                hostAliases:
                - ip: ip
                  hostnames:
                  - hostnames
                  - hostnames
                - ip: ip
                  hostnames:
                  - hostnames
                  - hostnames
                securityContext:
                  runAsUser: 6
                  seLinuxOptions:
                    role: role
                    level: level
                    type: type
                    user: user
                  fsGroup: 1
                  supplementalGroups:
                  - 7
                  - 7
                  runAsGroup: 1
                  runAsNonRoot: true
                  sysctls:
                  - name: name
                    value: value
                  - name: name
                    value: value
                nodeSelector: "{}"
                hostname: hostname
                tolerations:
                - effect: effect
                  tolerationSeconds: 4
                  value: value
                  key: key
                  operator: operator
                - effect: effect
                  tolerationSeconds: 4
                  value: value
                  key: key
                  operator: operator
                automountServiceAccountToken: true
                schedulerName: schedulerName
                activeDeadlineSeconds: 0
                hostIPC: true
                volumes:
                - quobyte:
                    volume: volume
                    registry: registry
                    readOnly: true
                    user: user
                    group: group
                  azureFile:
                    secretName: secretName
                    readOnly: true
                    shareName: shareName
                  flexVolume:
                    driver: driver
                    options: "{}"
                    secretRef:
                      name: name
                    readOnly: true
                    fsType: fsType
                  secret:
                    secretName: secretName
                    defaultMode: 2
                    optional: true
                    items:
                    - mode: 9
                      path: path
                      key: key
                    - mode: 9
                      path: path
                      key: key
                  projected:
                    sources:
                    - downwardAPI:
                        items:
                        - mode: 8
                          path: path
                          resourceFieldRef:
                            divisor: divisor
                            resource: resource
                            containerName: containerName
                          fieldRef:
                            apiVersion: apiVersion
                            fieldPath: fieldPath
                        - mode: 8
                          path: path
                          resourceFieldRef:
                            divisor: divisor
                            resource: resource
                            containerName: containerName
                          fieldRef:
                            apiVersion: apiVersion
                            fieldPath: fieldPath
                      configMap:
                        name: name
                        optional: true
                        items:
                        - mode: 9
                          path: path
                          key: key
                        - mode: 9
                          path: path
                          key: key
                      secret:
                        name: name
                        optional: true
                        items:
                        - mode: 9
                          path: path
                          key: key
                        - mode: 9
                          path: path
                          key: key
                      serviceAccountToken:
                        path: path
                        audience: audience
                        expirationSeconds: 1
                    - downwardAPI:
                        items:
                        - mode: 8
                          path: path
                          resourceFieldRef:
                            divisor: divisor
                            resource: resource
                            containerName: containerName
                          fieldRef:
                            apiVersion: apiVersion
                            fieldPath: fieldPath
                        - mode: 8
                          path: path
                          resourceFieldRef:
                            divisor: divisor
                            resource: resource
                            containerName: containerName
                          fieldRef:
                            apiVersion: apiVersion
                            fieldPath: fieldPath
                      configMap:
                        name: name
                        optional: true
                        items:
                        - mode: 9
                          path: path
                          key: key
                        - mode: 9
                          path: path
                          key: key
                      secret:
                        name: name
                        optional: true
                        items:
                        - mode: 9
                          path: path
                          key: key
                        - mode: 9
                          path: path
                          key: key
                      serviceAccountToken:
                        path: path
                        audience: audience
                        expirationSeconds: 1
                    defaultMode: 6
                  cephfs:
                    path: path
                    secretRef:
                      name: name
                    secretFile: secretFile
                    readOnly: true
                    user: user
                    monitors:
                    - monitors
                    - monitors
                  scaleIO:
                    system: system
                    protectionDomain: protectionDomain
                    sslEnabled: true
                    storageMode: storageMode
                    volumeName: volumeName
                    secretRef:
                      name: name
                    readOnly: true
                    fsType: fsType
                    storagePool: storagePool
                    gateway: gateway
                  emptyDir:
                    sizeLimit: sizeLimit
                    medium: medium
                  glusterfs:
                    path: path
                    endpoints: endpoints
                    readOnly: true
                  gcePersistentDisk:
                    partition: 6
                    readOnly: true
                    pdName: pdName
                    fsType: fsType
                  photonPersistentDisk:
                    pdID: pdID
                    fsType: fsType
                  azureDisk:
                    diskName: diskName
                    kind: "{}"
                    readOnly: true
                    cachingMode: "{}"
                    diskURI: diskURI
                    fsType: fsType
                  cinder:
                    secretRef:
                      name: name
                    volumeID: volumeID
                    readOnly: true
                    fsType: fsType
                  downwardAPI:
                    defaultMode: 6
                    items:
                    - mode: 8
                      path: path
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                    - mode: 8
                      path: path
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  awsElasticBlockStore:
                    partition: 5
                    volumeID: volumeID
                    readOnly: true
                    fsType: fsType
                  flocker:
                    datasetName: datasetName
                    datasetUUID: datasetUUID
                  iscsi:
                    chapAuthSession: true
                    iscsiInterface: iscsiInterface
                    lun: 3
                    chapAuthDiscovery: true
                    iqn: iqn
                    portals:
                    - portals
                    - portals
                    secretRef:
                      name: name
                    initiatorName: initiatorName
                    readOnly: true
                    fsType: fsType
                    targetPortal: targetPortal
                  rbd:
                    image: image
                    pool: pool
                    secretRef:
                      name: name
                    readOnly: true
                    fsType: fsType
                    keyring: keyring
                    user: user
                    monitors:
                    - monitors
                    - monitors
                  configMap:
                    defaultMode: 9
                    name: name
                    optional: true
                    items:
                    - mode: 9
                      path: path
                      key: key
                    - mode: 9
                      path: path
                      key: key
                  storageos:
                    volumeNamespace: volumeNamespace
                    volumeName: volumeName
                    secretRef:
                      name: name
                    readOnly: true
                    fsType: fsType
                  name: name
                  nfs:
                    path: path
                    server: server
                    readOnly: true
                  persistentVolumeClaim:
                    claimName: claimName
                    readOnly: true
                  gitRepo:
                    repository: repository
                    directory: directory
                    revision: revision
                  portworxVolume:
                    volumeID: volumeID
                    readOnly: true
                    fsType: fsType
                  vsphereVolume:
                    storagePolicyName: storagePolicyName
                    storagePolicyID: storagePolicyID
                    volumePath: volumePath
                    fsType: fsType
                  fc:
                    lun: 9
                    targetWWNs:
                    - targetWWNs
                    - targetWWNs
                    readOnly: true
                    wwids:
                    - wwids
                    - wwids
                    fsType: fsType
                  hostPath:
                    path: path
                    type: "{}"
                - quobyte:
                    volume: volume
                    registry: registry
                    readOnly: true
                    user: user
                    group: group
                  azureFile:
                    secretName: secretName
                    readOnly: true
                    shareName: shareName
                  flexVolume:
                    driver: driver
                    options: "{}"
                    secretRef:
                      name: name
                    readOnly: true
                    fsType: fsType
                  secret:
                    secretName: secretName
                    defaultMode: 2
                    optional: true
                    items:
                    - mode: 9
                      path: path
                      key: key
                    - mode: 9
                      path: path
                      key: key
                  projected:
                    sources:
                    - downwardAPI:
                        items:
                        - mode: 8
                          path: path
                          resourceFieldRef:
                            divisor: divisor
                            resource: resource
                            containerName: containerName
                          fieldRef:
                            apiVersion: apiVersion
                            fieldPath: fieldPath
                        - mode: 8
                          path: path
                          resourceFieldRef:
                            divisor: divisor
                            resource: resource
                            containerName: containerName
                          fieldRef:
                            apiVersion: apiVersion
                            fieldPath: fieldPath
                      configMap:
                        name: name
                        optional: true
                        items:
                        - mode: 9
                          path: path
                          key: key
                        - mode: 9
                          path: path
                          key: key
                      secret:
                        name: name
                        optional: true
                        items:
                        - mode: 9
                          path: path
                          key: key
                        - mode: 9
                          path: path
                          key: key
                      serviceAccountToken:
                        path: path
                        audience: audience
                        expirationSeconds: 1
                    - downwardAPI:
                        items:
                        - mode: 8
                          path: path
                          resourceFieldRef:
                            divisor: divisor
                            resource: resource
                            containerName: containerName
                          fieldRef:
                            apiVersion: apiVersion
                            fieldPath: fieldPath
                        - mode: 8
                          path: path
                          resourceFieldRef:
                            divisor: divisor
                            resource: resource
                            containerName: containerName
                          fieldRef:
                            apiVersion: apiVersion
                            fieldPath: fieldPath
                      configMap:
                        name: name
                        optional: true
                        items:
                        - mode: 9
                          path: path
                          key: key
                        - mode: 9
                          path: path
                          key: key
                      secret:
                        name: name
                        optional: true
                        items:
                        - mode: 9
                          path: path
                          key: key
                        - mode: 9
                          path: path
                          key: key
                      serviceAccountToken:
                        path: path
                        audience: audience
                        expirationSeconds: 1
                    defaultMode: 6
                  cephfs:
                    path: path
                    secretRef:
                      name: name
                    secretFile: secretFile
                    readOnly: true
                    user: user
                    monitors:
                    - monitors
                    - monitors
                  scaleIO:
                    system: system
                    protectionDomain: protectionDomain
                    sslEnabled: true
                    storageMode: storageMode
                    volumeName: volumeName
                    secretRef:
                      name: name
                    readOnly: true
                    fsType: fsType
                    storagePool: storagePool
                    gateway: gateway
                  emptyDir:
                    sizeLimit: sizeLimit
                    medium: medium
                  glusterfs:
                    path: path
                    endpoints: endpoints
                    readOnly: true
                  gcePersistentDisk:
                    partition: 6
                    readOnly: true
                    pdName: pdName
                    fsType: fsType
                  photonPersistentDisk:
                    pdID: pdID
                    fsType: fsType
                  azureDisk:
                    diskName: diskName
                    kind: "{}"
                    readOnly: true
                    cachingMode: "{}"
                    diskURI: diskURI
                    fsType: fsType
                  cinder:
                    secretRef:
                      name: name
                    volumeID: volumeID
                    readOnly: true
                    fsType: fsType
                  downwardAPI:
                    defaultMode: 6
                    items:
                    - mode: 8
                      path: path
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                    - mode: 8
                      path: path
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  awsElasticBlockStore:
                    partition: 5
                    volumeID: volumeID
                    readOnly: true
                    fsType: fsType
                  flocker:
                    datasetName: datasetName
                    datasetUUID: datasetUUID
                  iscsi:
                    chapAuthSession: true
                    iscsiInterface: iscsiInterface
                    lun: 3
                    chapAuthDiscovery: true
                    iqn: iqn
                    portals:
                    - portals
                    - portals
                    secretRef:
                      name: name
                    initiatorName: initiatorName
                    readOnly: true
                    fsType: fsType
                    targetPortal: targetPortal
                  rbd:
                    image: image
                    pool: pool
                    secretRef:
                      name: name
                    readOnly: true
                    fsType: fsType
                    keyring: keyring
                    user: user
                    monitors:
                    - monitors
                    - monitors
                  configMap:
                    defaultMode: 9
                    name: name
                    optional: true
                    items:
                    - mode: 9
                      path: path
                      key: key
                    - mode: 9
                      path: path
                      key: key
                  storageos:
                    volumeNamespace: volumeNamespace
                    volumeName: volumeName
                    secretRef:
                      name: name
                    readOnly: true
                    fsType: fsType
                  name: name
                  nfs:
                    path: path
                    server: server
                    readOnly: true
                  persistentVolumeClaim:
                    claimName: claimName
                    readOnly: true
                  gitRepo:
                    repository: repository
                    directory: directory
                    revision: revision
                  portworxVolume:
                    volumeID: volumeID
                    readOnly: true
                    fsType: fsType
                  vsphereVolume:
                    storagePolicyName: storagePolicyName
                    storagePolicyID: storagePolicyID
                    volumePath: volumePath
                    fsType: fsType
                  fc:
                    lun: 9
                    targetWWNs:
                    - targetWWNs
                    - targetWWNs
                    readOnly: true
                    wwids:
                    - wwids
                    - wwids
                    fsType: fsType
                  hostPath:
                    path: path
                    type: "{}"
                serviceAccount: serviceAccount
                priority: 1
                restartPolicy: restartPolicy
                shareProcessNamespace: true
                subdomain: subdomain
                containers:
                - volumeDevices:
                  - devicePath: devicePath
                    name: name
                  - devicePath: devicePath
                    name: name
                  image: image
                  imagePullPolicy: imagePullPolicy
                  livenessProbe:
                    failureThreshold: 5
                    periodSeconds: 2
                    tcpSocket:
                      port: port
                      host: host
                    timeoutSeconds: 9
                    successThreshold: 7
                    initialDelaySeconds: 5
                    exec:
                      command:
                      - command
                      - command
                    httpGet:
                      path: path
                      scheme: scheme
                      port: port
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  stdin: true
                  terminationMessagePolicy: terminationMessagePolicy
                  terminationMessagePath: terminationMessagePath
                  workingDir: workingDir
                  resources:
                    requests: "{}"
                    limits: "{}"
                  securityContext:
                    privileged: true
                    runAsUser: 7
                    capabilities:
                      add:
                      - "{}"
                      - "{}"
                      drop:
                      - "{}"
                      - "{}"
                    seLinuxOptions:
                      role: role
                      level: level
                      type: type
                      user: user
                    allowPrivilegeEscalation: true
                    runAsGroup: 4
                    runAsNonRoot: true
                    readOnlyRootFilesystem: true
                  env:
                  - name: name
                    value: value
                    valueFrom:
                      secretKeyRef:
                        name: name
                        optional: true
                        key: key
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      configMapKeyRef:
                        name: name
                        optional: true
                        key: key
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  - name: name
                    value: value
                    valueFrom:
                      secretKeyRef:
                        name: name
                        optional: true
                        key: key
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      configMapKeyRef:
                        name: name
                        optional: true
                        key: key
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  ports:
                  - protocol: protocol
                    hostIP: hostIP
                    name: name
                    containerPort: 3
                    hostPort: 2
                  - protocol: protocol
                    hostIP: hostIP
                    name: name
                    containerPort: 3
                    hostPort: 2
                  command:
                  - command
                  - command
                  volumeMounts:
                  - mountPath: mountPath
                    mountPropagation: "{}"
                    name: name
                    readOnly: true
                    subPath: subPath
                  - mountPath: mountPath
                    mountPropagation: "{}"
                    name: name
                    readOnly: true
                    subPath: subPath
                  args:
                  - args
                  - args
                  lifecycle:
                    postStart:
                      tcpSocket:
                        port: port
                        host: host
                      exec:
                        command:
                        - command
                        - command
                      httpGet:
                        path: path
                        scheme: scheme
                        port: port
                        host: host
                        httpHeaders:
                        - name: name
                          value: value
                        - name: name
                          value: value
                    preStop:
                      tcpSocket:
                        port: port
                        host: host
                      exec:
                        command:
                        - command
                        - command
                      httpGet:
                        path: path
                        scheme: scheme
                        port: port
                        host: host
                        httpHeaders:
                        - name: name
                          value: value
                        - name: name
                          value: value
                  name: name
                  tty: true
                  readinessProbe:
                    failureThreshold: 5
                    periodSeconds: 2
                    tcpSocket:
                      port: port
                      host: host
                    timeoutSeconds: 9
                    successThreshold: 7
                    initialDelaySeconds: 5
                    exec:
                      command:
                      - command
                      - command
                    httpGet:
                      path: path
                      scheme: scheme
                      port: port
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  stdinOnce: true
                  envFrom:
                  - configMapRef:
                      name: name
                      optional: true
                    prefix: prefix
                    secretRef:
                      name: name
                      optional: true
                  - configMapRef:
                      name: name
                      optional: true
                    prefix: prefix
                    secretRef:
                      name: name
                      optional: true
                - volumeDevices:
                  - devicePath: devicePath
                    name: name
                  - devicePath: devicePath
                    name: name
                  image: image
                  imagePullPolicy: imagePullPolicy
                  livenessProbe:
                    failureThreshold: 5
                    periodSeconds: 2
                    tcpSocket:
                      port: port
                      host: host
                    timeoutSeconds: 9
                    successThreshold: 7
                    initialDelaySeconds: 5
                    exec:
                      command:
                      - command
                      - command
                    httpGet:
                      path: path
                      scheme: scheme
                      port: port
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  stdin: true
                  terminationMessagePolicy: terminationMessagePolicy
                  terminationMessagePath: terminationMessagePath
                  workingDir: workingDir
                  resources:
                    requests: "{}"
                    limits: "{}"
                  securityContext:
                    privileged: true
                    runAsUser: 7
                    capabilities:
                      add:
                      - "{}"
                      - "{}"
                      drop:
                      - "{}"
                      - "{}"
                    seLinuxOptions:
                      role: role
                      level: level
                      type: type
                      user: user
                    allowPrivilegeEscalation: true
                    runAsGroup: 4
                    runAsNonRoot: true
                    readOnlyRootFilesystem: true
                  env:
                  - name: name
                    value: value
                    valueFrom:
                      secretKeyRef:
                        name: name
                        optional: true
                        key: key
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      configMapKeyRef:
                        name: name
                        optional: true
                        key: key
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  - name: name
                    value: value
                    valueFrom:
                      secretKeyRef:
                        name: name
                        optional: true
                        key: key
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      configMapKeyRef:
                        name: name
                        optional: true
                        key: key
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  ports:
                  - protocol: protocol
                    hostIP: hostIP
                    name: name
                    containerPort: 3
                    hostPort: 2
                  - protocol: protocol
                    hostIP: hostIP
                    name: name
                    containerPort: 3
                    hostPort: 2
                  command:
                  - command
                  - command
                  volumeMounts:
                  - mountPath: mountPath
                    mountPropagation: "{}"
                    name: name
                    readOnly: true
                    subPath: subPath
                  - mountPath: mountPath
                    mountPropagation: "{}"
                    name: name
                    readOnly: true
                    subPath: subPath
                  args:
                  - args
                  - args
                  lifecycle:
                    postStart:
                      tcpSocket:
                        port: port
                        host: host
                      exec:
                        command:
                        - command
                        - command
                      httpGet:
                        path: path
                        scheme: scheme
                        port: port
                        host: host
                        httpHeaders:
                        - name: name
                          value: value
                        - name: name
                          value: value
                    preStop:
                      tcpSocket:
                        port: port
                        host: host
                      exec:
                        command:
                        - command
                        - command
                      httpGet:
                        path: path
                        scheme: scheme
                        port: port
                        host: host
                        httpHeaders:
                        - name: name
                          value: value
                        - name: name
                          value: value
                  name: name
                  tty: true
                  readinessProbe:
                    failureThreshold: 5
                    periodSeconds: 2
                    tcpSocket:
                      port: port
                      host: host
                    timeoutSeconds: 9
                    successThreshold: 7
                    initialDelaySeconds: 5
                    exec:
                      command:
                      - command
                      - command
                    httpGet:
                      path: path
                      scheme: scheme
                      port: port
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  stdinOnce: true
                  envFrom:
                  - configMapRef:
                      name: name
                      optional: true
                    prefix: prefix
                    secretRef:
                      name: name
                      optional: true
                  - configMapRef:
                      name: name
                      optional: true
                    prefix: prefix
                    secretRef:
                      name: name
                      optional: true
                initContainers:
                - volumeDevices:
                  - devicePath: devicePath
                    name: name
                  - devicePath: devicePath
                    name: name
                  image: image
                  imagePullPolicy: imagePullPolicy
                  livenessProbe:
                    failureThreshold: 5
                    periodSeconds: 2
                    tcpSocket:
                      port: port
                      host: host
                    timeoutSeconds: 9
                    successThreshold: 7
                    initialDelaySeconds: 5
                    exec:
                      command:
                      - command
                      - command
                    httpGet:
                      path: path
                      scheme: scheme
                      port: port
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  stdin: true
                  terminationMessagePolicy: terminationMessagePolicy
                  terminationMessagePath: terminationMessagePath
                  workingDir: workingDir
                  resources:
                    requests: "{}"
                    limits: "{}"
                  securityContext:
                    privileged: true
                    runAsUser: 7
                    capabilities:
                      add:
                      - "{}"
                      - "{}"
                      drop:
                      - "{}"
                      - "{}"
                    seLinuxOptions:
                      role: role
                      level: level
                      type: type
                      user: user
                    allowPrivilegeEscalation: true
                    runAsGroup: 4
                    runAsNonRoot: true
                    readOnlyRootFilesystem: true
                  env:
                  - name: name
                    value: value
                    valueFrom:
                      secretKeyRef:
                        name: name
                        optional: true
                        key: key
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      configMapKeyRef:
                        name: name
                        optional: true
                        key: key
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  - name: name
                    value: value
                    valueFrom:
                      secretKeyRef:
                        name: name
                        optional: true
                        key: key
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      configMapKeyRef:
                        name: name
                        optional: true
                        key: key
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  ports:
                  - protocol: protocol
                    hostIP: hostIP
                    name: name
                    containerPort: 3
                    hostPort: 2
                  - protocol: protocol
                    hostIP: hostIP
                    name: name
                    containerPort: 3
                    hostPort: 2
                  command:
                  - command
                  - command
                  volumeMounts:
                  - mountPath: mountPath
                    mountPropagation: "{}"
                    name: name
                    readOnly: true
                    subPath: subPath
                  - mountPath: mountPath
                    mountPropagation: "{}"
                    name: name
                    readOnly: true
                    subPath: subPath
                  args:
                  - args
                  - args
                  lifecycle:
                    postStart:
                      tcpSocket:
                        port: port
                        host: host
                      exec:
                        command:
                        - command
                        - command
                      httpGet:
                        path: path
                        scheme: scheme
                        port: port
                        host: host
                        httpHeaders:
                        - name: name
                          value: value
                        - name: name
                          value: value
                    preStop:
                      tcpSocket:
                        port: port
                        host: host
                      exec:
                        command:
                        - command
                        - command
                      httpGet:
                        path: path
                        scheme: scheme
                        port: port
                        host: host
                        httpHeaders:
                        - name: name
                          value: value
                        - name: name
                          value: value
                  name: name
                  tty: true
                  readinessProbe:
                    failureThreshold: 5
                    periodSeconds: 2
                    tcpSocket:
                      port: port
                      host: host
                    timeoutSeconds: 9
                    successThreshold: 7
                    initialDelaySeconds: 5
                    exec:
                      command:
                      - command
                      - command
                    httpGet:
                      path: path
                      scheme: scheme
                      port: port
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  stdinOnce: true
                  envFrom:
                  - configMapRef:
                      name: name
                      optional: true
                    prefix: prefix
                    secretRef:
                      name: name
                      optional: true
                  - configMapRef:
                      name: name
                      optional: true
                    prefix: prefix
                    secretRef:
                      name: name
                      optional: true
                - volumeDevices:
                  - devicePath: devicePath
                    name: name
                  - devicePath: devicePath
                    name: name
                  image: image
                  imagePullPolicy: imagePullPolicy
                  livenessProbe:
                    failureThreshold: 5
                    periodSeconds: 2
                    tcpSocket:
                      port: port
                      host: host
                    timeoutSeconds: 9
                    successThreshold: 7
                    initialDelaySeconds: 5
                    exec:
                      command:
                      - command
                      - command
                    httpGet:
                      path: path
                      scheme: scheme
                      port: port
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  stdin: true
                  terminationMessagePolicy: terminationMessagePolicy
                  terminationMessagePath: terminationMessagePath
                  workingDir: workingDir
                  resources:
                    requests: "{}"
                    limits: "{}"
                  securityContext:
                    privileged: true
                    runAsUser: 7
                    capabilities:
                      add:
                      - "{}"
                      - "{}"
                      drop:
                      - "{}"
                      - "{}"
                    seLinuxOptions:
                      role: role
                      level: level
                      type: type
                      user: user
                    allowPrivilegeEscalation: true
                    runAsGroup: 4
                    runAsNonRoot: true
                    readOnlyRootFilesystem: true
                  env:
                  - name: name
                    value: value
                    valueFrom:
                      secretKeyRef:
                        name: name
                        optional: true
                        key: key
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      configMapKeyRef:
                        name: name
                        optional: true
                        key: key
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  - name: name
                    value: value
                    valueFrom:
                      secretKeyRef:
                        name: name
                        optional: true
                        key: key
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      configMapKeyRef:
                        name: name
                        optional: true
                        key: key
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  ports:
                  - protocol: protocol
                    hostIP: hostIP
                    name: name
                    containerPort: 3
                    hostPort: 2
                  - protocol: protocol
                    hostIP: hostIP
                    name: name
                    containerPort: 3
                    hostPort: 2
                  command:
                  - command
                  - command
                  volumeMounts:
                  - mountPath: mountPath
                    mountPropagation: "{}"
                    name: name
                    readOnly: true
                    subPath: subPath
                  - mountPath: mountPath
                    mountPropagation: "{}"
                    name: name
                    readOnly: true
                    subPath: subPath
                  args:
                  - args
                  - args
                  lifecycle:
                    postStart:
                      tcpSocket:
                        port: port
                        host: host
                      exec:
                        command:
                        - command
                        - command
                      httpGet:
                        path: path
                        scheme: scheme
                        port: port
                        host: host
                        httpHeaders:
                        - name: name
                          value: value
                        - name: name
                          value: value
                    preStop:
                      tcpSocket:
                        port: port
                        host: host
                      exec:
                        command:
                        - command
                        - command
                      httpGet:
                        path: path
                        scheme: scheme
                        port: port
                        host: host
                        httpHeaders:
                        - name: name
                          value: value
                        - name: name
                          value: value
                  name: name
                  tty: true
                  readinessProbe:
                    failureThreshold: 5
                    periodSeconds: 2
                    tcpSocket:
                      port: port
                      host: host
                    timeoutSeconds: 9
                    successThreshold: 7
                    initialDelaySeconds: 5
                    exec:
                      command:
                      - command
                      - command
                    httpGet:
                      path: path
                      scheme: scheme
                      port: port
                      host: host
                      httpHeaders:
                      - name: name
                        value: value
                      - name: name
                        value: value
                  stdinOnce: true
                  envFrom:
                  - configMapRef:
                      name: name
                      optional: true
                    prefix: prefix
                    secretRef:
                      name: name
                      optional: true
                  - configMapRef:
                      name: name
                      optional: true
                    prefix: prefix
                    secretRef:
                      name: name
                      optional: true
                affinity:
                  nodeAffinity:
                    requiredDuringSchedulingIgnoredDuringExecution:
                      nodeSelectorTerms:
                      - matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchFields:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                      - matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchFields:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                    preferredDuringSchedulingIgnoredDuringExecution:
                    - preference:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchFields:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                      weight: 6
                    - preference:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchFields:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                      weight: 6
                  podAffinity:
                    requiredDuringSchedulingIgnoredDuringExecution:
                    - labelSelector:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchLabels: "{}"
                      topologyKey: topologyKey
                      namespaces:
                      - namespaces
                      - namespaces
                    - labelSelector:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchLabels: "{}"
                      topologyKey: topologyKey
                      namespaces:
                      - namespaces
                      - namespaces
                    preferredDuringSchedulingIgnoredDuringExecution:
                    - podAffinityTerm:
                        labelSelector:
                          matchExpressions:
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          matchLabels: "{}"
                        topologyKey: topologyKey
                        namespaces:
                        - namespaces
                        - namespaces
                      weight: 1
                    - podAffinityTerm:
                        labelSelector:
                          matchExpressions:
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          matchLabels: "{}"
                        topologyKey: topologyKey
                        namespaces:
                        - namespaces
                        - namespaces
                      weight: 1
                  podAntiAffinity:
                    requiredDuringSchedulingIgnoredDuringExecution:
                    - labelSelector:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchLabels: "{}"
                      topologyKey: topologyKey
                      namespaces:
                      - namespaces
                      - namespaces
                    - labelSelector:
                        matchExpressions:
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        - values:
                          - values
                          - values
                          key: key
                          operator: operator
                        matchLabels: "{}"
                      topologyKey: topologyKey
                      namespaces:
                      - namespaces
                      - namespaces
                    preferredDuringSchedulingIgnoredDuringExecution:
                    - podAffinityTerm:
                        labelSelector:
                          matchExpressions:
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          matchLabels: "{}"
                        topologyKey: topologyKey
                        namespaces:
                        - namespaces
                        - namespaces
                      weight: 1
                    - podAffinityTerm:
                        labelSelector:
                          matchExpressions:
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          - values:
                            - values
                            - values
                            key: key
                            operator: operator
                          matchLabels: "{}"
                        topologyKey: topologyKey
                        namespaces:
                        - namespaces
                        - namespaces
                      weight: 1
                hostPID: true
            paused: true
            test: true
            replicas: 6
            revisionHistoryLimit: 1
            selector: "{}"
            minReadySeconds: 0
            strategy:
              type: type
              rollingUpdate:
                maxSurge: maxSurge
                maxUnavailable: maxUnavailable
            triggers:
            - imageChangeParams:
                lastTriggeredImage: lastTriggeredImage
                automatic: true
                from:
                  uid: uid
                  apiVersion: apiVersion
                  kind: kind
                  resourceVersion: resourceVersion
                  fieldPath: fieldPath
                  name: name
                  namespace: namespace
                containerNames:
                - containerNames
                - containerNames
              type: type
            - imageChangeParams:
                lastTriggeredImage: lastTriggeredImage
                automatic: true
                from:
                  uid: uid
                  apiVersion: apiVersion
                  kind: kind
                  resourceVersion: resourceVersion
                  fieldPath: fieldPath
                  name: name
                  namespace: namespace
                containerNames:
                - containerNames
                - containerNames
              type: type
          status:
            unavailableReplicas: 3
            latestVersion: 5
            replicas: 9
            readyReplicas: 7
            details:
              causes:
              - imageTrigger:
                  from:
                    uid: uid
                    apiVersion: apiVersion
                    kind: kind
                    resourceVersion: resourceVersion
                    fieldPath: fieldPath
                    name: name
                    namespace: namespace
                type: type
              - imageTrigger:
                  from:
                    uid: uid
                    apiVersion: apiVersion
                    kind: kind
                    resourceVersion: resourceVersion
                    fieldPath: fieldPath
                    name: name
                    namespace: namespace
                type: type
              message: message
            conditions:
            - reason: reason
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
              lastUpdateTime: lastUpdateTime
              status: status
            - reason: reason
              lastTransitionTime: lastTransitionTime
              message: message
              type: type
              lastUpdateTime: lastUpdateTime
              status: status
            updatedReplicas: 2
            availableReplicas: 5
            observedGeneration: 2
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
          type: string
        items:
          description: Items is a list of deployment configs
          items:
            $ref: '#/components/schemas/v1.DeploymentConfig'
          type: array
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: '#/components/schemas/v1.ListMeta'
      required:
      - items
      type: object
    v1.DeploymentConfigRollback:
      description: DeploymentConfigRollback provides the input to rollback generation.
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
          type: string
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
          type: string
        name:
          description: Name of the deployment config that will be rolled back.
          type: string
        spec:
          $ref: '#/components/schemas/v1.DeploymentConfigRollbackSpec'
        updatedAnnotations:
          description: UpdatedAnnotations is a set of new annotations that will be
            added in the deployment config.
          properties: {}
          type: object
      required:
      - name
      - spec
      type: object
    v1.DeploymentConfigRollbackSpec:
      description: DeploymentConfigRollbackSpec represents the options for rollback
        generation.
      properties:
        from:
          $ref: '#/components/schemas/v1.ObjectReference'
        includeReplicationMeta:
          description: IncludeReplicationMeta specifies whether to include the replica
            count and selector.
          type: boolean
        includeStrategy:
          description: IncludeStrategy specifies whether to include the deployment
            Strategy.
          type: boolean
        includeTemplate:
          description: IncludeTemplate specifies whether to include the PodTemplateSpec.
          type: boolean
        includeTriggers:
          description: IncludeTriggers specifies whether to include config Triggers.
          type: boolean
        revision:
          description: "Revision to rollback to. If set to 0, rollback to the last\
            \ revision."
          format: int64
          type: integer
      required:
      - from
      - includeReplicationMeta
      - includeStrategy
      - includeTemplate
      - includeTriggers
      type: object
    v1.DeploymentConfigSpec:
      description: DeploymentConfigSpec represents the desired state of the deployment.
      example:
        template:
          metadata:
            generation: 6
            finalizers:
            - finalizers
            - finalizers
            resourceVersion: resourceVersion
            annotations: "{}"
            generateName: generateName
            deletionTimestamp: deletionTimestamp
            labels: "{}"
            ownerReferences:
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            - uid: uid
              controller: true
              apiVersion: apiVersion
              kind: kind
              name: name
              blockOwnerDeletion: true
            selfLink: selfLink
            deletionGracePeriodSeconds: 0
            uid: uid
            initializers:
              result:
                reason: reason
                metadata:
                  continue: continue
                  resourceVersion: resourceVersion
                  selfLink: selfLink
                apiVersion: apiVersion
                code: 1
                kind: kind
                details:
                  uid: uid
                  kind: kind
                  causes:
                  - reason: reason
                    field: field
                    message: message
                  - reason: reason
                    field: field
                    message: message
                  retryAfterSeconds: 5
                  name: name
                  group: group
                message: message
                status: status
              pending:
              - name: name
              - name: name
            clusterName: clusterName
            creationTimestamp: creationTimestamp
            name: name
            namespace: namespace
          spec:
            dnsPolicy: dnsPolicy
            nodeName: nodeName
            terminationGracePeriodSeconds: 1
            dnsConfig:
              searches:
              - searches
              - searches
              nameservers:
              - nameservers
              - nameservers
              options:
              - name: name
                value: value
              - name: name
                value: value
            hostNetwork: true
            readinessGates:
            - conditionType: conditionType
            - conditionType: conditionType
            serviceAccountName: serviceAccountName
            imagePullSecrets:
            - name: name
            - name: name
            priorityClassName: priorityClassName
            hostAliases:
            - ip: ip
              hostnames:
              - hostnames
              - hostnames
            - ip: ip
              hostnames:
              - hostnames
              - hostnames
            securityContext:
              runAsUser: 6
              seLinuxOptions:
                role: role
                level: level
                type: type
                user: user
              fsGroup: 1
              supplementalGroups:
              - 7
              - 7
              runAsGroup: 1
              runAsNonRoot: true
              sysctls:
              - name: name
                value: value
              - name: name
                value: value
            nodeSelector: "{}"
            hostname: hostname
            tolerations:
            - effect: effect
              tolerationSeconds: 4
              value: value
              key: key
              operator: operator
            - effect: effect
              tolerationSeconds: 4
              value: value
              key: key
              operator: operator
            automountServiceAccountToken: true
            schedulerName: schedulerName
            activeDeadlineSeconds: 0
            hostIPC: true
            volumes:
            - quobyte:
                volume: volume
                registry: registry
                readOnly: true
                user: user
                group: group
              azureFile:
                secretName: secretName
                readOnly: true
                shareName: shareName
              flexVolume:
                driver: driver
                options: "{}"
                secretRef:
                  name: name
                readOnly: true
                fsType: fsType
              secret:
                secretName: secretName
                defaultMode: 2
                optional: true
                items:
                - mode: 9
                  path: path
                  key: key
                - mode: 9
                  path: path
                  key: key
              projected:
                sources:
                - downwardAPI:
                    items:
                    - mode: 8
                      path: path
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                    - mode: 8
                      path: path
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  configMap:
                    name: name
                    optional: true
                    items:
                    - mode: 9
                      path: path
                      key: key
                    - mode: 9
                      path: path
                      key: key
                  secret:
                    name: name
                    optional: true
                    items:
                    - mode: 9
                      path: path
                      key: key
                    - mode: 9
                      path: path
                      key: key
                  serviceAccountToken:
                    path: path
                    audience: audience
                    expirationSeconds: 1
                - downwardAPI:
                    items:
                    - mode: 8
                      path: path
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                    - mode: 8
                      path: path
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  configMap:
                    name: name
                    optional: true
                    items:
                    - mode: 9
                      path: path
                      key: key
                    - mode: 9
                      path: path
                      key: key
                  secret:
                    name: name
                    optional: true
                    items:
                    - mode: 9
                      path: path
                      key: key
                    - mode: 9
                      path: path
                      key: key
                  serviceAccountToken:
                    path: path
                    audience: audience
                    expirationSeconds: 1
                defaultMode: 6
              cephfs:
                path: path
                secretRef:
                  name: name
                secretFile: secretFile
                readOnly: true
                user: user
                monitors:
                - monitors
                - monitors
              scaleIO:
                system: system
                protectionDomain: protectionDomain
                sslEnabled: true
                storageMode: storageMode
                volumeName: volumeName
                secretRef:
                  name: name
                readOnly: true
                fsType: fsType
                storagePool: storagePool
                gateway: gateway
              emptyDir:
                sizeLimit: sizeLimit
                medium: medium
              glusterfs:
                path: path
                endpoints: endpoints
                readOnly: true
              gcePersistentDisk:
                partition: 6
                readOnly: true
                pdName: pdName
                fsType: fsType
              photonPersistentDisk:
                pdID: pdID
                fsType: fsType
              azureDisk:
                diskName: diskName
                kind: "{}"
                readOnly: true
                cachingMode: "{}"
                diskURI: diskURI
                fsType: fsType
              cinder:
                secretRef:
                  name: name
                volumeID: volumeID
                readOnly: true
                fsType: fsType
              downwardAPI:
                defaultMode: 6
                items:
                - mode: 8
                  path: path
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
                - mode: 8
                  path: path
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              awsElasticBlockStore:
                partition: 5
                volumeID: volumeID
                readOnly: true
                fsType: fsType
              flocker:
                datasetName: datasetName
                datasetUUID: datasetUUID
              iscsi:
                chapAuthSession: true
                iscsiInterface: iscsiInterface
                lun: 3
                chapAuthDiscovery: true
                iqn: iqn
                portals:
                - portals
                - portals
                secretRef:
                  name: name
                initiatorName: initiatorName
                readOnly: true
                fsType: fsType
                targetPortal: targetPortal
              rbd:
                image: image
                pool: pool
                secretRef:
                  name: name
                readOnly: true
                fsType: fsType
                keyring: keyring
                user: user
                monitors:
                - monitors
                - monitors
              configMap:
                defaultMode: 9
                name: name
                optional: true
                items:
                - mode: 9
                  path: path
                  key: key
                - mode: 9
                  path: path
                  key: key
              storageos:
                volumeNamespace: volumeNamespace
                volumeName: volumeName
                secretRef:
                  name: name
                readOnly: true
                fsType: fsType
              name: name
              nfs:
                path: path
                server: server
                readOnly: true
              persistentVolumeClaim:
                claimName: claimName
                readOnly: true
              gitRepo:
                repository: repository
                directory: directory
                revision: revision
              portworxVolume:
                volumeID: volumeID
                readOnly: true
                fsType: fsType
              vsphereVolume:
                storagePolicyName: storagePolicyName
                storagePolicyID: storagePolicyID
                volumePath: volumePath
                fsType: fsType
              fc:
                lun: 9
                targetWWNs:
                - targetWWNs
                - targetWWNs
                readOnly: true
                wwids:
                - wwids
                - wwids
                fsType: fsType
              hostPath:
                path: path
                type: "{}"
            - quobyte:
                volume: volume
                registry: registry
                readOnly: true
                user: user
                group: group
              azureFile:
                secretName: secretName
                readOnly: true
                shareName: shareName
              flexVolume:
                driver: driver
                options: "{}"
                secretRef:
                  name: name
                readOnly: true
                fsType: fsType
              secret:
                secretName: secretName
                defaultMode: 2
                optional: true
                items:
                - mode: 9
                  path: path
                  key: key
                - mode: 9
                  path: path
                  key: key
              projected:
                sources:
                - downwardAPI:
                    items:
                    - mode: 8
                      path: path
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                    - mode: 8
                      path: path
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  configMap:
                    name: name
                    optional: true
                    items:
                    - mode: 9
                      path: path
                      key: key
                    - mode: 9
                      path: path
                      key: key
                  secret:
                    name: name
                    optional: true
                    items:
                    - mode: 9
                      path: path
                      key: key
                    - mode: 9
                      path: path
                      key: key
                  serviceAccountToken:
                    path: path
                    audience: audience
                    expirationSeconds: 1
                - downwardAPI:
                    items:
                    - mode: 8
                      path: path
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                    - mode: 8
                      path: path
                      resourceFieldRef:
                        divisor: divisor
                        resource: resource
                        containerName: containerName
                      fieldRef:
                        apiVersion: apiVersion
                        fieldPath: fieldPath
                  configMap:
                    name: name
                    optional: true
                    items:
                    - mode: 9
                      path: path
                      key: key
                    - mode: 9
                      path: path
                      key: key
                  secret:
                    name: name
                    optional: true
                    items:
                    - mode: 9
                      path: path
                      key: key
                    - mode: 9
                      path: path
                      key: key
                  serviceAccountToken:
                    path: path
                    audience: audience
                    expirationSeconds: 1
                defaultMode: 6
              cephfs:
                path: path
                secretRef:
                  name: name
                secretFile: secretFile
                readOnly: true
                user: user
                monitors:
                - monitors
                - monitors
              scaleIO:
                system: system
                protectionDomain: protectionDomain
                sslEnabled: true
                storageMode: storageMode
                volumeName: volumeName
                secretRef:
                  name: name
                readOnly: true
                fsType: fsType
                storagePool: storagePool
                gateway: gateway
              emptyDir:
                sizeLimit: sizeLimit
                medium: medium
              glusterfs:
                path: path
                endpoints: endpoints
                readOnly: true
              gcePersistentDisk:
                partition: 6
                readOnly: true
                pdName: pdName
                fsType: fsType
              photonPersistentDisk:
                pdID: pdID
                fsType: fsType
              azureDisk:
                diskName: diskName
                kind: "{}"
                readOnly: true
                cachingMode: "{}"
                diskURI: diskURI
                fsType: fsType
              cinder:
                secretRef:
                  name: name
                volumeID: volumeID
                readOnly: true
                fsType: fsType
              downwardAPI:
                defaultMode: 6
                items:
                - mode: 8
                  path: path
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
                - mode: 8
                  path: path
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              awsElasticBlockStore:
                partition: 5
                volumeID: volumeID
                readOnly: true
                fsType: fsType
              flocker:
                datasetName: datasetName
                datasetUUID: datasetUUID
              iscsi:
                chapAuthSession: true
                iscsiInterface: iscsiInterface
                lun: 3
                chapAuthDiscovery: true
                iqn: iqn
                portals:
                - portals
                - portals
                secretRef:
                  name: name
                initiatorName: initiatorName
                readOnly: true
                fsType: fsType
                targetPortal: targetPortal
              rbd:
                image: image
                pool: pool
                secretRef:
                  name: name
                readOnly: true
                fsType: fsType
                keyring: keyring
                user: user
                monitors:
                - monitors
                - monitors
              configMap:
                defaultMode: 9
                name: name
                optional: true
                items:
                - mode: 9
                  path: path
                  key: key
                - mode: 9
                  path: path
                  key: key
              storageos:
                volumeNamespace: volumeNamespace
                volumeName: volumeName
                secretRef:
                  name: name
                readOnly: true
                fsType: fsType
              name: name
              nfs:
                path: path
                server: server
                readOnly: true
              persistentVolumeClaim:
                claimName: claimName
                readOnly: true
              gitRepo:
                repository: repository
                directory: directory
                revision: revision
              portworxVolume:
                volumeID: volumeID
                readOnly: true
                fsType: fsType
              vsphereVolume:
                storagePolicyName: storagePolicyName
                storagePolicyID: storagePolicyID
                volumePath: volumePath
                fsType: fsType
              fc:
                lun: 9
                targetWWNs:
                - targetWWNs
                - targetWWNs
                readOnly: true
                wwids:
                - wwids
                - wwids
                fsType: fsType
              hostPath:
                path: path
                type: "{}"
            serviceAccount: serviceAccount
            priority: 1
            restartPolicy: restartPolicy
            shareProcessNamespace: true
            subdomain: subdomain
            containers:
            - volumeDevices:
              - devicePath: devicePath
                name: name
              - devicePath: devicePath
                name: name
              image: image
              imagePullPolicy: imagePullPolicy
              livenessProbe:
                failureThreshold: 5
                periodSeconds: 2
                tcpSocket:
                  port: port
                  host: host
                timeoutSeconds: 9
                successThreshold: 7
                initialDelaySeconds: 5
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: port
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              stdin: true
              terminationMessagePolicy: terminationMessagePolicy
              terminationMessagePath: terminationMessagePath
              workingDir: workingDir
              resources:
                requests: "{}"
                limits: "{}"
              securityContext:
                privileged: true
                runAsUser: 7
                capabilities:
                  add:
                  - "{}"
                  - "{}"
                  drop:
                  - "{}"
                  - "{}"
                seLinuxOptions:
                  role: role
                  level: level
                  type: type
                  user: user
                allowPrivilegeEscalation: true
                runAsGroup: 4
                runAsNonRoot: true
                readOnlyRootFilesystem: true
              env:
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    name: name
                    optional: true
                    key: key
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  configMapKeyRef:
                    name: name
                    optional: true
                    key: key
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    name: name
                    optional: true
                    key: key
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  configMapKeyRef:
                    name: name
                    optional: true
                    key: key
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              ports:
              - protocol: protocol
                hostIP: hostIP
                name: name
                containerPort: 3
                hostPort: 2
              - protocol: protocol
                hostIP: hostIP
                name: name
                containerPort: 3
                hostPort: 2
              command:
              - command
              - command
              volumeMounts:
              - mountPath: mountPath
                mountPropagation: "{}"
                name: name
                readOnly: true
                subPath: subPath
              - mountPath: mountPath
                mountPropagation: "{}"
                name: name
                readOnly: true
                subPath: subPath
              args:
              - args
              - args
              lifecycle:
                postStart:
                  tcpSocket:
                    port: port
                    host: host
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: port
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
                preStop:
                  tcpSocket:
                    port: port
                    host: host
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: port
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
              name: name
              tty: true
              readinessProbe:
                failureThreshold: 5
                periodSeconds: 2
                tcpSocket:
                  port: port
                  host: host
                timeoutSeconds: 9
                successThreshold: 7
                initialDelaySeconds: 5
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: port
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              stdinOnce: true
              envFrom:
              - configMapRef:
                  name: name
                  optional: true
                prefix: prefix
                secretRef:
                  name: name
                  optional: true
              - configMapRef:
                  name: name
                  optional: true
                prefix: prefix
                secretRef:
                  name: name
                  optional: true
            - volumeDevices:
              - devicePath: devicePath
                name: name
              - devicePath: devicePath
                name: name
              image: image
              imagePullPolicy: imagePullPolicy
              livenessProbe:
                failureThreshold: 5
                periodSeconds: 2
                tcpSocket:
                  port: port
                  host: host
                timeoutSeconds: 9
                successThreshold: 7
                initialDelaySeconds: 5
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: port
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              stdin: true
              terminationMessagePolicy: terminationMessagePolicy
              terminationMessagePath: terminationMessagePath
              workingDir: workingDir
              resources:
                requests: "{}"
                limits: "{}"
              securityContext:
                privileged: true
                runAsUser: 7
                capabilities:
                  add:
                  - "{}"
                  - "{}"
                  drop:
                  - "{}"
                  - "{}"
                seLinuxOptions:
                  role: role
                  level: level
                  type: type
                  user: user
                allowPrivilegeEscalation: true
                runAsGroup: 4
                runAsNonRoot: true
                readOnlyRootFilesystem: true
              env:
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    name: name
                    optional: true
                    key: key
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  configMapKeyRef:
                    name: name
                    optional: true
                    key: key
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    name: name
                    optional: true
                    key: key
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  configMapKeyRef:
                    name: name
                    optional: true
                    key: key
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              ports:
              - protocol: protocol
                hostIP: hostIP
                name: name
                containerPort: 3
                hostPort: 2
              - protocol: protocol
                hostIP: hostIP
                name: name
                containerPort: 3
                hostPort: 2
              command:
              - command
              - command
              volumeMounts:
              - mountPath: mountPath
                mountPropagation: "{}"
                name: name
                readOnly: true
                subPath: subPath
              - mountPath: mountPath
                mountPropagation: "{}"
                name: name
                readOnly: true
                subPath: subPath
              args:
              - args
              - args
              lifecycle:
                postStart:
                  tcpSocket:
                    port: port
                    host: host
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: port
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
                preStop:
                  tcpSocket:
                    port: port
                    host: host
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: port
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
              name: name
              tty: true
              readinessProbe:
                failureThreshold: 5
                periodSeconds: 2
                tcpSocket:
                  port: port
                  host: host
                timeoutSeconds: 9
                successThreshold: 7
                initialDelaySeconds: 5
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: port
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              stdinOnce: true
              envFrom:
              - configMapRef:
                  name: name
                  optional: true
                prefix: prefix
                secretRef:
                  name: name
                  optional: true
              - configMapRef:
                  name: name
                  optional: true
                prefix: prefix
                secretRef:
                  name: name
                  optional: true
            initContainers:
            - volumeDevices:
              - devicePath: devicePath
                name: name
              - devicePath: devicePath
                name: name
              image: image
              imagePullPolicy: imagePullPolicy
              livenessProbe:
                failureThreshold: 5
                periodSeconds: 2
                tcpSocket:
                  port: port
                  host: host
                timeoutSeconds: 9
                successThreshold: 7
                initialDelaySeconds: 5
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: port
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              stdin: true
              terminationMessagePolicy: terminationMessagePolicy
              terminationMessagePath: terminationMessagePath
              workingDir: workingDir
              resources:
                requests: "{}"
                limits: "{}"
              securityContext:
                privileged: true
                runAsUser: 7
                capabilities:
                  add:
                  - "{}"
                  - "{}"
                  drop:
                  - "{}"
                  - "{}"
                seLinuxOptions:
                  role: role
                  level: level
                  type: type
                  user: user
                allowPrivilegeEscalation: true
                runAsGroup: 4
                runAsNonRoot: true
                readOnlyRootFilesystem: true
              env:
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    name: name
                    optional: true
                    key: key
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  configMapKeyRef:
                    name: name
                    optional: true
                    key: key
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    name: name
                    optional: true
                    key: key
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  configMapKeyRef:
                    name: name
                    optional: true
                    key: key
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              ports:
              - protocol: protocol
                hostIP: hostIP
                name: name
                containerPort: 3
                hostPort: 2
              - protocol: protocol
                hostIP: hostIP
                name: name
                containerPort: 3
                hostPort: 2
              command:
              - command
              - command
              volumeMounts:
              - mountPath: mountPath
                mountPropagation: "{}"
                name: name
                readOnly: true
                subPath: subPath
              - mountPath: mountPath
                mountPropagation: "{}"
                name: name
                readOnly: true
                subPath: subPath
              args:
              - args
              - args
              lifecycle:
                postStart:
                  tcpSocket:
                    port: port
                    host: host
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: port
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
                preStop:
                  tcpSocket:
                    port: port
                    host: host
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: port
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
              name: name
              tty: true
              readinessProbe:
                failureThreshold: 5
                periodSeconds: 2
                tcpSocket:
                  port: port
                  host: host
                timeoutSeconds: 9
                successThreshold: 7
                initialDelaySeconds: 5
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: port
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              stdinOnce: true
              envFrom:
              - configMapRef:
                  name: name
                  optional: true
                prefix: prefix
                secretRef:
                  name: name
                  optional: true
              - configMapRef:
                  name: name
                  optional: true
                prefix: prefix
                secretRef:
                  name: name
                  optional: true
            - volumeDevices:
              - devicePath: devicePath
                name: name
              - devicePath: devicePath
                name: name
              image: image
              imagePullPolicy: imagePullPolicy
              livenessProbe:
                failureThreshold: 5
                periodSeconds: 2
                tcpSocket:
                  port: port
                  host: host
                timeoutSeconds: 9
                successThreshold: 7
                initialDelaySeconds: 5
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: port
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              stdin: true
              terminationMessagePolicy: terminationMessagePolicy
              terminationMessagePath: terminationMessagePath
              workingDir: workingDir
              resources:
                requests: "{}"
                limits: "{}"
              securityContext:
                privileged: true
                runAsUser: 7
                capabilities:
                  add:
                  - "{}"
                  - "{}"
                  drop:
                  - "{}"
                  - "{}"
                seLinuxOptions:
                  role: role
                  level: level
                  type: type
                  user: user
                allowPrivilegeEscalation: true
                runAsGroup: 4
                runAsNonRoot: true
                readOnlyRootFilesystem: true
              env:
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    name: name
                    optional: true
                    key: key
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  configMapKeyRef:
                    name: name
                    optional: true
                    key: key
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              - name: name
                value: value
                valueFrom:
                  secretKeyRef:
                    name: name
                    optional: true
                    key: key
                  resourceFieldRef:
                    divisor: divisor
                    resource: resource
                    containerName: containerName
                  configMapKeyRef:
                    name: name
                    optional: true
                    key: key
                  fieldRef:
                    apiVersion: apiVersion
                    fieldPath: fieldPath
              ports:
              - protocol: protocol
                hostIP: hostIP
                name: name
                containerPort: 3
                hostPort: 2
              - protocol: protocol
                hostIP: hostIP
                name: name
                containerPort: 3
                hostPort: 2
              command:
              - command
              - command
              volumeMounts:
              - mountPath: mountPath
                mountPropagation: "{}"
                name: name
                readOnly: true
                subPath: subPath
              - mountPath: mountPath
                mountPropagation: "{}"
                name: name
                readOnly: true
                subPath: subPath
              args:
              - args
              - args
              lifecycle:
                postStart:
                  tcpSocket:
                    port: port
                    host: host
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: port
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
                preStop:
                  tcpSocket:
                    port: port
                    host: host
                  exec:
                    command:
                    - command
                    - command
                  httpGet:
                    path: path
                    scheme: scheme
                    port: port
                    host: host
                    httpHeaders:
                    - name: name
                      value: value
                    - name: name
                      value: value
              name: name
              tty: true
              readinessProbe:
                failureThreshold: 5
                periodSeconds: 2
                tcpSocket:
                  port: port
                  host: host
                timeoutSeconds: 9
                successThreshold: 7
                initialDelaySeconds: 5
                exec:
                  command:
                  - command
                  - command
                httpGet:
                  path: path
                  scheme: scheme
                  port: port
                  host: host
                  httpHeaders:
                  - name: name
                    value: value
                  - name: name
                    value: value
              stdinOnce: true
              envFrom:
              - configMapRef:
                  name: name
                  optional: true
                prefix: prefix
                secretRef:
                  name: name
                  optional: true
              - configMapRef:
                  name: name
                  optional: true
                prefix: prefix
                secretRef:
                  name: name
                  optional: true
            affinity:
              nodeAffinity:
                requiredDuringSchedulingIgnoredDuringExecution:
                  nodeSelectorTerms:
                  - matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchFields:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                  - matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchFields:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                preferredDuringSchedulingIgnoredDuringExecution:
                - preference:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchFields:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                  weight: 6
                - preference:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchFields:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                  weight: 6
              podAffinity:
                requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchLabels: "{}"
                  topologyKey: topologyKey
                  namespaces:
                  - namespaces
                  - namespaces
                - labelSelector:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchLabels: "{}"
                  topologyKey: topologyKey
                  namespaces:
                  - namespaces
                  - namespaces
                preferredDuringSchedulingIgnoredDuringExecution:
                - podAffinityTerm:
                    labelSelector:
                      matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchLabels: "{}"
                    topologyKey: topologyKey
                    namespaces:
                    - namespaces
                    - namespaces
                  weight: 1
                - podAffinityTerm:
                    labelSelector:
                      matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchLabels: "{}"
                    topologyKey: topologyKey
                    namespaces:
                    - namespaces
                    - namespaces
                  weight: 1
              podAntiAffinity:
                requiredDuringSchedulingIgnoredDuringExecution:
                - labelSelector:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchLabels: "{}"
                  topologyKey: topologyKey
                  namespaces:
                  - namespaces
                  - namespaces
                - labelSelector:
                    matchExpressions:
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    - values:
                      - values
                      - values
                      key: key
                      operator: operator
                    matchLabels: "{}"
                  topologyKey: topologyKey
                  namespaces:
                  - namespaces
                  - namespaces
                preferredDuringSchedulingIgnoredDuringExecution:
                - podAffinityTerm:
                    labelSelector:
                      matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchLabels: "{}"
                    topologyKey: topologyKey
                    namespaces:
                    - namespaces
                    - namespaces
                  weight: 1
                - podAffinityTerm:
                    labelSelector:
                      matchExpressions:
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      - values:
                        - values
                        - values
                        key: key
                        operator: operator
                      matchLabels: "{}"
                    topologyKey: topologyKey
                    namespaces:
                    - namespaces
                    - namespaces
                  weight: 1
            hostPID: true
        paused: true
        test: true
        replicas: 6
        revisionHistoryLimit: 1
        selector: "{}"
        minReadySeconds: 0
        strategy:
          type: type
          rollingUpdate:
            maxSurge: maxSurge
            maxUnavailable: maxUnavailable
        triggers:
        - imageChangeParams:
            lastTriggeredImage: lastTriggeredImage
            automatic: true
            from:
              uid: uid
              apiVersion: apiVersion
              kind: kind
              resourceVersion: resourceVersion
              fieldPath: fieldPath
              name: name
              namespace: namespace
            containerNames:
            - containerNames
            - containerNames
          type: type
        - imageChangeParams:
            lastTriggeredImage: lastTriggeredImage
            automatic: true
            from:
              uid: uid
              apiVersion: apiVersion
              kind: kind
              resourceVersion: resourceVersion
              fieldPath: fieldPath
              name: name
              namespace: namespace
            containerNames:
            - containerNames
            - containerNames
          type: type
      properties:
        minReadySeconds:
          description: "MinReadySeconds is the minimum number of seconds for which\
            \ a newly created pod should be ready without any of its container crashing,\
            \ for it to be considered available. Defaults to 0 (pod will be considered\
            \ available as soon as it is ready)"
          format: int32
          type: integer
        paused:
          description: Paused indicates that the deployment config is paused resulting
            in no new deployments on template changes or changes in the template caused
            by other triggers.
          type: boolean
        replicas:
          description: Replicas is the number of desired replicas.
          format: int32
          type: integer
        revisionHistoryLimit:
          description: "RevisionHistoryLimit is the number of old ReplicationControllers\
            \ to retain to allow for rollbacks. This field is a pointer to allow for\
            \ differentiation between an explicit zero and not specified. Defaults\
            \ to 10. (This only applies to DeploymentConfigs created via the new group\
            \ API resource, not the legacy resource.)"
          format: int32
          type: integer
        selector:
          description: Selector is a label query over pods that should match the Replicas
            count.
          properties: {}
          type: object
        strategy:
          $ref: '#/components/schemas/v1.DeploymentStrategy'
        template:
          $ref: '#/components/schemas/v1.PodTemplateSpec'
        test:
          description: "Test ensures that this deployment config will have zero replicas\
            \ except while a deployment is running. This allows the deployment config\
            \ to be used as a continuous deployment test - triggering on images, running\
            \ the deployment, and then succeeding or failing. Post strategy hooks\
            \ and After actions can be used to integrate successful deployment with\
            \ an action."
          type: boolean
        triggers:
          description: "Triggers determine how updates to a DeploymentConfig result\
            \ in new deployments. If no triggers are defined, a new deployment can\
            \ only occur as a result of an explicit client update to the DeploymentConfig\
            \ with a new LatestVersion. If null, defaults to having a config change\
            \ trigger."
          items:
            $ref: '#/components/schemas/v1.DeploymentTriggerPolicy'
          type: array
      required:
      - replicas
      - strategy
      - test
      - triggers
      type: object
    v1.DeploymentConfigStatus:
      description: DeploymentConfigStatus represents the current deployment state.
      example:
        unavailableReplicas: 3
        latestVersion: 5
        replicas: 9
        readyReplicas: 7
        details:
          causes:
          - imageTrigger:
              from:
                uid: uid
                apiVersion: apiVersion
                kind: kind
                resourceVersion: resourceVersion
                fieldPath: fieldPath
                name: name
                namespace: namespace
            type: type
          - imageTrigger:
              from:
                uid: uid
                apiVersion: apiVersion
                kind: kind
                resourceVersion: resourceVersion
                fieldPath: fieldPath
                name: name
                namespace: namespace
            type: type
          message: message
        conditions:
        - reason: reason
          lastTransitionTime: lastTransitionTime
          message: message
          type: type
          lastUpdateTime: lastUpdateTime
          status: status
        - reason: reason
          lastTransitionTime: lastTransitionTime
          message: message
          type: type
          lastUpdateTime: lastUpdateTime
          status: status
        updatedReplicas: 2
        availableReplicas: 5
        observedGeneration: 2
      properties:
        availableReplicas:
          description: AvailableReplicas is the total number of available pods targeted
            by this deployment config.
          format: int32
          type: integer
        conditions:
          description: Conditions represents the latest available observations of
            a deployment config's current state.
          items:
            $ref: '#/components/schemas/v1.DeploymentCondition'
          type: array
        details:
          $ref: '#/components/schemas/v1.DeploymentDetails'
        latestVersion:
          description: LatestVersion is used to determine whether the current deployment
            associated with a deployment config is out of sync.
          format: int64
          type: integer
        observedGeneration:
          description: ObservedGeneration is the most recent generation observed by
            the deployment config controller.
          format: int64
          type: integer
        readyReplicas:
          description: Total number of ready pods targeted by this deployment.
          format: int32
          type: integer
        replicas:
          description: Replicas is the total number of pods targeted by this deployment
            config.
          format: int32
          type: integer
        unavailableReplicas:
          description: UnavailableReplicas is the total number of unavailable pods
            targeted by this deployment config.
          format: int32
          type: integer
        updatedReplicas:
          description: UpdatedReplicas is the total number of non-terminated pods
            targeted by this deployment config that have the desired template spec.
          format: int32
          type: integer
      required:
      - availableReplicas
      - latestVersion
      - observedGeneration
      - replicas
      - unavailableReplicas
      - updatedReplicas
      type: object
    v1.DeploymentDetails:
      description: DeploymentDetails captures information about the causes of a deployment.
      example:
        causes:
        - imageTrigger:
            from:
              uid: uid
              apiVersion: apiVersion
              kind: kind
              resourceVersion: resourceVersion
              fieldPath: fieldPath
              name: name
              namespace: namespace
          type: type
        - imageTrigger:
            from:
              uid: uid
              apiVersion: apiVersion
              kind: kind
              resourceVersion: resourceVersion
              fieldPath: fieldPath
              name: name
              namespace: namespace
          type: type
        message: message
      properties:
        causes:
          description: Causes are extended data associated with all the causes for
            creating a new deployment
          items:
            $ref: '#/components/schemas/v1.DeploymentCause'
          type: array
        message:
          description: "Message is the user specified change message, if this deployment\
            \ was triggered manually by the user"
          type: string
      required:
      - causes
      type: object
    v1.DeploymentLog:
      description: DeploymentLog represents the logs for a deployment
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
          type: string
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
          type: string
      type: object
    v1.DeploymentRequest:
      description: DeploymentRequest is a request to a deployment config for a new
        deployment.
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
          type: string
        excludeTriggers:
          description: ExcludeTriggers instructs the instantiator to avoid processing
            the specified triggers. This field overrides the triggers from latest
            and allows clients to control specific logic. This field is ignored if
            not specified.
          items:
            $ref: '#/components/schemas/v1.DeploymentTriggerType'
          type: array
        force:
          description: "Force will try to force a new deployment to run. If the deployment\
            \ config is paused, then setting this to true will return an Invalid error."
          type: boolean
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
          type: string
        latest:
          description: Latest will update the deployment config with the latest state
            from all triggers.
          type: boolean
        name:
          description: Name of the deployment config for requesting a new deployment.
          type: string
      required:
      - force
      - latest
      - name
      type: object
    v1.DeploymentTriggerImageChangeParams:
      description: DeploymentTriggerImageChangeParams represents the parameters to
        the ImageChange trigger.
      example:
        lastTriggeredImage: lastTriggeredImage
        automatic: true
        from:
          uid: uid
          apiVersion: apiVersion
          kind: kind
          resourceVersion: resourceVersion
          fieldPath: fieldPath
          name: name
          namespace: namespace
        containerNames:
        - containerNames
        - containerNames
      properties:
        automatic:
          description: Automatic means that the detection of a new tag value should
            result in an image update inside the pod template.
          type: boolean
        containerNames:
          description: "ContainerNames is used to restrict tag updates to the specified\
            \ set of container names in a pod. If multiple triggers point to the same\
            \ containers, the resulting behavior is undefined. Future API versions\
            \ will make this a validation error. If ContainerNames does not point\
            \ to a valid container, the trigger will be ignored. Future API versions\
            \ will make this a validation error."
          items:
            type: string
          type: array
        from:
          $ref: '#/components/schemas/v1.ObjectReference'
        lastTriggeredImage:
          description: LastTriggeredImage is the last image to be triggered.
          type: string
      required:
      - from
      type: object
    v1.DeploymentTriggerPolicy:
      description: DeploymentTriggerPolicy describes a policy for a single trigger
        that results in a new deployment.
      example:
        imageChangeParams:
          lastTriggeredImage: lastTriggeredImage
          automatic: true
          from:
            uid: uid
            apiVersion: apiVersion
            kind: kind
            resourceVersion: resourceVersion
            fieldPath: fieldPath
            name: name
            namespace: namespace
          containerNames:
          - containerNames
          - containerNames
        type: type
      properties:
        imageChangeParams:
          $ref: '#/components/schemas/v1.DeploymentTriggerImageChangeParams'
        type:
          description: Type of the trigger
          type: string
      type: object
    v1.ExecNewPodHook:
      description: ExecNewPodHook is a hook implementation which runs a command in
        a new pod based on the specified container which is assumed to be part of
        the deployment template.
      properties:
        command:
          description: Command is the action command and its arguments.
          items:
            type: string
          type: array
        containerName:
          description: ContainerName is the name of a container in the deployment
            pod template whose Docker image will be used for the hook pod's container.
          type: string
        env:
          description: Env is a set of environment variables to supply to the hook
            pod's container.
          items:
            $ref: '#/components/schemas/v1.EnvVar'
          type: array
        volumes:
          description: Volumes is a list of named volumes from the pod template which
            should be copied to the hook pod. Volumes names not found in pod spec
            are ignored. An empty list means no volumes will be copied.
          items:
            type: string
          type: array
      required:
      - command
      - containerName
      type: object
    v1.LifecycleHook:
      description: LifecycleHook defines a specific deployment lifecycle action. Only
        one type of action may be specified at any time.
      properties:
        execNewPod:
          $ref: '#/components/schemas/v1.ExecNewPodHook'
        failurePolicy:
          description: FailurePolicy specifies what action to take if the hook fails.
          type: string
        tagImages:
          description: TagImages instructs the deployer to tag the current image referenced
            under a container onto an image stream tag.
          items:
            $ref: '#/components/schemas/v1.TagImageHook'
          type: array
      required:
      - failurePolicy
      type: object
    v1.RecreateDeploymentStrategyParams:
      description: RecreateDeploymentStrategyParams are the input to the Recreate
        deployment strategy.
      properties:
        mid:
          $ref: '#/components/schemas/v1.LifecycleHook'
        post:
          $ref: '#/components/schemas/v1.LifecycleHook'
        pre:
          $ref: '#/components/schemas/v1.LifecycleHook'
        timeoutSeconds:
          description: "TimeoutSeconds is the time to wait for updates before giving\
            \ up. If the value is nil, a default will be used."
          format: int64
          type: integer
      type: object
    v1.RollingDeploymentStrategyParams:
      description: RollingDeploymentStrategyParams are the input to the Rolling deployment
        strategy.
      properties:
        intervalSeconds:
          description: "IntervalSeconds is the time to wait between polling deployment\
            \ status after update. If the value is nil, a default will be used."
          format: int64
          type: integer
        maxSurge:
          description: |-
            MaxSurge is the maximum number of pods that can be scheduled above the original number of pods. Value can be an absolute number (ex: 5) or a percentage of total pods at the start of the update (ex: 10%). Absolute number is calculated from percentage by rounding up.

            This cannot be 0 if MaxUnavailable is 0. By default, 25% is used.

            Example: when this is set to 30%, the new RC can be scaled up by 30% immediately when the rolling update starts. Once old pods have been killed, new RC can be scaled up further, ensuring that total number of pods running at any time during the update is atmost 130% of original pods.
          type: string
        maxUnavailable:
          description: |-
            MaxUnavailable is the maximum number of pods that can be unavailable during the update. Value can be an absolute number (ex: 5) or a percentage of total pods at the start of update (ex: 10%). Absolute number is calculated from percentage by rounding down.

            This cannot be 0 if MaxSurge is 0. By default, 25% is used.

            Example: when this is set to 30%, the old RC can be scaled down by 30% immediately when the rolling update starts. Once new pods are ready, old RC can be scaled down further, followed by scaling up the new RC, ensuring that at least 70% of original number of pods are available at all times during the update.
          type: string
        post:
          $ref: '#/components/schemas/v1.LifecycleHook'
        pre:
          $ref: '#/components/schemas/v1.LifecycleHook'
        timeoutSeconds:
          description: "TimeoutSeconds is the time to wait for updates before giving\
            \ up. If the value is nil, a default will be used."
          format: int64
          type: integer
        updatePeriodSeconds:
          description: "UpdatePeriodSeconds is the time to wait between individual\
            \ pod updates. If the value is nil, a default will be used."
          format: int64
          type: integer
      type: object
    v1.TagImageHook:
      description: TagImageHook is a request to tag the image in a particular container
        onto an ImageStreamTag.
      properties:
        containerName:
          description: ContainerName is the name of a container in the deployment
            config whose image value will be used as the source of the tag. If there
            is only a single container this value will be defaulted to the name of
            that container.
          type: string
        to:
          $ref: '#/components/schemas/v1.ObjectReference'
      required:
      - containerName
      - to
      type: object
    v1beta1.Scale:
      description: represents a scaling request for a resource.
      example:
        metadata:
          generation: 6
          finalizers:
          - finalizers
          - finalizers
          resourceVersion: resourceVersion
          annotations: "{}"
          generateName: generateName
          deletionTimestamp: deletionTimestamp
          labels: "{}"
          ownerReferences:
          - uid: uid
            controller: true
            apiVersion: apiVersion
            kind: kind
            name: name
            blockOwnerDeletion: true
          - uid: uid
            controller: true
            apiVersion: apiVersion
            kind: kind
            name: name
            blockOwnerDeletion: true
          selfLink: selfLink
          deletionGracePeriodSeconds: 0
          uid: uid
          initializers:
            result:
              reason: reason
              metadata:
                continue: continue
                resourceVersion: resourceVersion
                selfLink: selfLink
              apiVersion: apiVersion
              code: 1
              kind: kind
              details:
                uid: uid
                kind: kind
                causes:
                - reason: reason
                  field: field
                  message: message
                - reason: reason
                  field: field
                  message: message
                retryAfterSeconds: 5
                name: name
                group: group
              message: message
              status: status
            pending:
            - name: name
            - name: name
          clusterName: clusterName
          creationTimestamp: creationTimestamp
          name: name
          namespace: namespace
        apiVersion: apiVersion
        kind: kind
        spec:
          replicas: 0
        status:
          targetSelector: targetSelector
          replicas: 6
          selector: "{}"
      properties:
        apiVersion:
          description: "APIVersion defines the versioned schema of this representation\
            \ of an object. Servers should convert recognized schemas to the latest\
            \ internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources"
          type: string
        kind:
          description: "Kind is a string value representing the REST resource this\
            \ object represents. Servers may infer this from the endpoint the client\
            \ submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds"
          type: string
        metadata:
          $ref: '#/components/schemas/v1.ObjectMeta'
        spec:
          $ref: '#/components/schemas/v1beta1.ScaleSpec'
        status:
          $ref: '#/components/schemas/v1beta1.ScaleStatus'
      type: object
    v1beta1.ScaleSpec:
      description: describes the attributes of a scale subresource
      example:
        replicas: 0
      properties:
        replicas:
          description: desired number of instances for the scaled object.
          format: int32
          type: integer
      type: object
    v1beta1.ScaleStatus:
      description: represents the current status of a scale subresource.
      example:
        targetSelector: targetSelector
        replicas: 6
        selector: "{}"
      properties:
        replicas:
          description: actual number of observed instances of the scaled object.
          format: int32
          type: integer
        selector:
          description: "label query over pods that should match the replicas count.\
            \ More info: http://kubernetes.io/docs/user-guide/labels#label-selectors"
          properties: {}
          type: object
        targetSelector:
          description: "label selector for pods that should match the replicas count.\
            \ This is a serializated version of both map-based and more expressive\
            \ set-based selectors. This is done to avoid introspection in the clients.\
            \ The string will be in the same format as the query-param syntax. If\
            \ the target type only supports map-based selectors, both this field and\
            \ map-based selector field are populated. More info: https://kubernetes.io/docs/concepts/overview/working-with-objects/labels/#label-selectors"
          type: string
      required:
      - replicas
      type: object
  securitySchemes:
    ApiKeyAuth:
      in: header
      name: Authorization
      type: apiKey
x-original-swagger-version: "2.0"
