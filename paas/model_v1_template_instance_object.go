/*
Arvancloud PaaS REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.11
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package paas

import (
	"encoding/json"
)

// checks if the V1TemplateInstanceObject type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1TemplateInstanceObject{}

// V1TemplateInstanceObject TemplateInstanceObject references an object created by a TemplateInstance.
type V1TemplateInstanceObject struct {
	Ref *V1ObjectReference `json:"ref,omitempty"`
}

// NewV1TemplateInstanceObject instantiates a new V1TemplateInstanceObject object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1TemplateInstanceObject() *V1TemplateInstanceObject {
	this := V1TemplateInstanceObject{}
	return &this
}

// NewV1TemplateInstanceObjectWithDefaults instantiates a new V1TemplateInstanceObject object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1TemplateInstanceObjectWithDefaults() *V1TemplateInstanceObject {
	this := V1TemplateInstanceObject{}
	return &this
}

// GetRef returns the Ref field value if set, zero value otherwise.
func (o *V1TemplateInstanceObject) GetRef() V1ObjectReference {
	if o == nil || IsNil(o.Ref) {
		var ret V1ObjectReference
		return ret
	}
	return *o.Ref
}

// GetRefOk returns a tuple with the Ref field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1TemplateInstanceObject) GetRefOk() (*V1ObjectReference, bool) {
	if o == nil || IsNil(o.Ref) {
		return nil, false
	}
	return o.Ref, true
}

// HasRef returns a boolean if a field has been set.
func (o *V1TemplateInstanceObject) HasRef() bool {
	if o != nil && !IsNil(o.Ref) {
		return true
	}

	return false
}

// SetRef gets a reference to the given V1ObjectReference and assigns it to the Ref field.
func (o *V1TemplateInstanceObject) SetRef(v V1ObjectReference) {
	o.Ref = &v
}

func (o V1TemplateInstanceObject) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1TemplateInstanceObject) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ref) {
		toSerialize["ref"] = o.Ref
	}
	return toSerialize, nil
}

type NullableV1TemplateInstanceObject struct {
	value *V1TemplateInstanceObject
	isSet bool
}

func (v NullableV1TemplateInstanceObject) Get() *V1TemplateInstanceObject {
	return v.value
}

func (v *NullableV1TemplateInstanceObject) Set(val *V1TemplateInstanceObject) {
	v.value = val
	v.isSet = true
}

func (v NullableV1TemplateInstanceObject) IsSet() bool {
	return v.isSet
}

func (v *NullableV1TemplateInstanceObject) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1TemplateInstanceObject(val *V1TemplateInstanceObject) *NullableV1TemplateInstanceObject {
	return &NullableV1TemplateInstanceObject{value: val, isSet: true}
}

func (v NullableV1TemplateInstanceObject) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1TemplateInstanceObject) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


