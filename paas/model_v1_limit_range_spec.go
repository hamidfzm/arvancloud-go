/*
Arvancloud PaaS REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.11
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package paas

import (
	"encoding/json"
)

// checks if the V1LimitRangeSpec type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1LimitRangeSpec{}

// V1LimitRangeSpec LimitRangeSpec defines a min/max usage limit for resources that match on kind.
type V1LimitRangeSpec struct {
	// Limits is the list of LimitRangeItem objects that are enforced.
	Limits []V1LimitRangeItem `json:"limits"`
}

// NewV1LimitRangeSpec instantiates a new V1LimitRangeSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1LimitRangeSpec(limits []V1LimitRangeItem) *V1LimitRangeSpec {
	this := V1LimitRangeSpec{}
	this.Limits = limits
	return &this
}

// NewV1LimitRangeSpecWithDefaults instantiates a new V1LimitRangeSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1LimitRangeSpecWithDefaults() *V1LimitRangeSpec {
	this := V1LimitRangeSpec{}
	return &this
}

// GetLimits returns the Limits field value
func (o *V1LimitRangeSpec) GetLimits() []V1LimitRangeItem {
	if o == nil {
		var ret []V1LimitRangeItem
		return ret
	}

	return o.Limits
}

// GetLimitsOk returns a tuple with the Limits field value
// and a boolean to check if the value has been set.
func (o *V1LimitRangeSpec) GetLimitsOk() ([]V1LimitRangeItem, bool) {
	if o == nil {
		return nil, false
	}
	return o.Limits, true
}

// SetLimits sets field value
func (o *V1LimitRangeSpec) SetLimits(v []V1LimitRangeItem) {
	o.Limits = v
}

func (o V1LimitRangeSpec) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1LimitRangeSpec) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["limits"] = o.Limits
	return toSerialize, nil
}

type NullableV1LimitRangeSpec struct {
	value *V1LimitRangeSpec
	isSet bool
}

func (v NullableV1LimitRangeSpec) Get() *V1LimitRangeSpec {
	return v.value
}

func (v *NullableV1LimitRangeSpec) Set(val *V1LimitRangeSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableV1LimitRangeSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableV1LimitRangeSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1LimitRangeSpec(val *V1LimitRangeSpec) *NullableV1LimitRangeSpec {
	return &NullableV1LimitRangeSpec{value: val, isSet: true}
}

func (v NullableV1LimitRangeSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1LimitRangeSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


