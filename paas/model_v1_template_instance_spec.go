/*
Arvancloud PaaS REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.11
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package paas

import (
	"encoding/json"
)

// checks if the V1TemplateInstanceSpec type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1TemplateInstanceSpec{}

// V1TemplateInstanceSpec TemplateInstanceSpec describes the desired state of a TemplateInstance.
type V1TemplateInstanceSpec struct {
	Requester V1TemplateInstanceRequester `json:"requester"`
	Secret *V1LocalObjectReference `json:"secret,omitempty"`
	Template V1Template `json:"template"`
}

// NewV1TemplateInstanceSpec instantiates a new V1TemplateInstanceSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1TemplateInstanceSpec(requester V1TemplateInstanceRequester, template V1Template) *V1TemplateInstanceSpec {
	this := V1TemplateInstanceSpec{}
	this.Requester = requester
	this.Template = template
	return &this
}

// NewV1TemplateInstanceSpecWithDefaults instantiates a new V1TemplateInstanceSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1TemplateInstanceSpecWithDefaults() *V1TemplateInstanceSpec {
	this := V1TemplateInstanceSpec{}
	return &this
}

// GetRequester returns the Requester field value
func (o *V1TemplateInstanceSpec) GetRequester() V1TemplateInstanceRequester {
	if o == nil {
		var ret V1TemplateInstanceRequester
		return ret
	}

	return o.Requester
}

// GetRequesterOk returns a tuple with the Requester field value
// and a boolean to check if the value has been set.
func (o *V1TemplateInstanceSpec) GetRequesterOk() (*V1TemplateInstanceRequester, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Requester, true
}

// SetRequester sets field value
func (o *V1TemplateInstanceSpec) SetRequester(v V1TemplateInstanceRequester) {
	o.Requester = v
}

// GetSecret returns the Secret field value if set, zero value otherwise.
func (o *V1TemplateInstanceSpec) GetSecret() V1LocalObjectReference {
	if o == nil || IsNil(o.Secret) {
		var ret V1LocalObjectReference
		return ret
	}
	return *o.Secret
}

// GetSecretOk returns a tuple with the Secret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1TemplateInstanceSpec) GetSecretOk() (*V1LocalObjectReference, bool) {
	if o == nil || IsNil(o.Secret) {
		return nil, false
	}
	return o.Secret, true
}

// HasSecret returns a boolean if a field has been set.
func (o *V1TemplateInstanceSpec) HasSecret() bool {
	if o != nil && !IsNil(o.Secret) {
		return true
	}

	return false
}

// SetSecret gets a reference to the given V1LocalObjectReference and assigns it to the Secret field.
func (o *V1TemplateInstanceSpec) SetSecret(v V1LocalObjectReference) {
	o.Secret = &v
}

// GetTemplate returns the Template field value
func (o *V1TemplateInstanceSpec) GetTemplate() V1Template {
	if o == nil {
		var ret V1Template
		return ret
	}

	return o.Template
}

// GetTemplateOk returns a tuple with the Template field value
// and a boolean to check if the value has been set.
func (o *V1TemplateInstanceSpec) GetTemplateOk() (*V1Template, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Template, true
}

// SetTemplate sets field value
func (o *V1TemplateInstanceSpec) SetTemplate(v V1Template) {
	o.Template = v
}

func (o V1TemplateInstanceSpec) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1TemplateInstanceSpec) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["requester"] = o.Requester
	if !IsNil(o.Secret) {
		toSerialize["secret"] = o.Secret
	}
	toSerialize["template"] = o.Template
	return toSerialize, nil
}

type NullableV1TemplateInstanceSpec struct {
	value *V1TemplateInstanceSpec
	isSet bool
}

func (v NullableV1TemplateInstanceSpec) Get() *V1TemplateInstanceSpec {
	return v.value
}

func (v *NullableV1TemplateInstanceSpec) Set(val *V1TemplateInstanceSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableV1TemplateInstanceSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableV1TemplateInstanceSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1TemplateInstanceSpec(val *V1TemplateInstanceSpec) *NullableV1TemplateInstanceSpec {
	return &NullableV1TemplateInstanceSpec{value: val, isSet: true}
}

func (v NullableV1TemplateInstanceSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1TemplateInstanceSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


