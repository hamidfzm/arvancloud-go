/*
Arvancloud PaaS REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.11
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package paas

import (
	"encoding/json"
)

// checks if the V1JenkinsPipelineBuildStrategy type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1JenkinsPipelineBuildStrategy{}

// V1JenkinsPipelineBuildStrategy JenkinsPipelineBuildStrategy holds parameters specific to a Jenkins Pipeline build.
type V1JenkinsPipelineBuildStrategy struct {
	// env contains additional environment variables you want to pass into a build pipeline.
	Env []V1EnvVar `json:"env,omitempty"`
	// Jenkinsfile defines the optional raw contents of a Jenkinsfile which defines a Jenkins pipeline build.
	Jenkinsfile *string `json:"jenkinsfile,omitempty"`
	// JenkinsfilePath is the optional path of the Jenkinsfile that will be used to configure the pipeline relative to the root of the context (contextDir). If both JenkinsfilePath & Jenkinsfile are both not specified, this defaults to Jenkinsfile in the root of the specified contextDir.
	JenkinsfilePath *string `json:"jenkinsfilePath,omitempty"`
}

// NewV1JenkinsPipelineBuildStrategy instantiates a new V1JenkinsPipelineBuildStrategy object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1JenkinsPipelineBuildStrategy() *V1JenkinsPipelineBuildStrategy {
	this := V1JenkinsPipelineBuildStrategy{}
	return &this
}

// NewV1JenkinsPipelineBuildStrategyWithDefaults instantiates a new V1JenkinsPipelineBuildStrategy object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1JenkinsPipelineBuildStrategyWithDefaults() *V1JenkinsPipelineBuildStrategy {
	this := V1JenkinsPipelineBuildStrategy{}
	return &this
}

// GetEnv returns the Env field value if set, zero value otherwise.
func (o *V1JenkinsPipelineBuildStrategy) GetEnv() []V1EnvVar {
	if o == nil || IsNil(o.Env) {
		var ret []V1EnvVar
		return ret
	}
	return o.Env
}

// GetEnvOk returns a tuple with the Env field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1JenkinsPipelineBuildStrategy) GetEnvOk() ([]V1EnvVar, bool) {
	if o == nil || IsNil(o.Env) {
		return nil, false
	}
	return o.Env, true
}

// HasEnv returns a boolean if a field has been set.
func (o *V1JenkinsPipelineBuildStrategy) HasEnv() bool {
	if o != nil && !IsNil(o.Env) {
		return true
	}

	return false
}

// SetEnv gets a reference to the given []V1EnvVar and assigns it to the Env field.
func (o *V1JenkinsPipelineBuildStrategy) SetEnv(v []V1EnvVar) {
	o.Env = v
}

// GetJenkinsfile returns the Jenkinsfile field value if set, zero value otherwise.
func (o *V1JenkinsPipelineBuildStrategy) GetJenkinsfile() string {
	if o == nil || IsNil(o.Jenkinsfile) {
		var ret string
		return ret
	}
	return *o.Jenkinsfile
}

// GetJenkinsfileOk returns a tuple with the Jenkinsfile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1JenkinsPipelineBuildStrategy) GetJenkinsfileOk() (*string, bool) {
	if o == nil || IsNil(o.Jenkinsfile) {
		return nil, false
	}
	return o.Jenkinsfile, true
}

// HasJenkinsfile returns a boolean if a field has been set.
func (o *V1JenkinsPipelineBuildStrategy) HasJenkinsfile() bool {
	if o != nil && !IsNil(o.Jenkinsfile) {
		return true
	}

	return false
}

// SetJenkinsfile gets a reference to the given string and assigns it to the Jenkinsfile field.
func (o *V1JenkinsPipelineBuildStrategy) SetJenkinsfile(v string) {
	o.Jenkinsfile = &v
}

// GetJenkinsfilePath returns the JenkinsfilePath field value if set, zero value otherwise.
func (o *V1JenkinsPipelineBuildStrategy) GetJenkinsfilePath() string {
	if o == nil || IsNil(o.JenkinsfilePath) {
		var ret string
		return ret
	}
	return *o.JenkinsfilePath
}

// GetJenkinsfilePathOk returns a tuple with the JenkinsfilePath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1JenkinsPipelineBuildStrategy) GetJenkinsfilePathOk() (*string, bool) {
	if o == nil || IsNil(o.JenkinsfilePath) {
		return nil, false
	}
	return o.JenkinsfilePath, true
}

// HasJenkinsfilePath returns a boolean if a field has been set.
func (o *V1JenkinsPipelineBuildStrategy) HasJenkinsfilePath() bool {
	if o != nil && !IsNil(o.JenkinsfilePath) {
		return true
	}

	return false
}

// SetJenkinsfilePath gets a reference to the given string and assigns it to the JenkinsfilePath field.
func (o *V1JenkinsPipelineBuildStrategy) SetJenkinsfilePath(v string) {
	o.JenkinsfilePath = &v
}

func (o V1JenkinsPipelineBuildStrategy) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1JenkinsPipelineBuildStrategy) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Env) {
		toSerialize["env"] = o.Env
	}
	if !IsNil(o.Jenkinsfile) {
		toSerialize["jenkinsfile"] = o.Jenkinsfile
	}
	if !IsNil(o.JenkinsfilePath) {
		toSerialize["jenkinsfilePath"] = o.JenkinsfilePath
	}
	return toSerialize, nil
}

type NullableV1JenkinsPipelineBuildStrategy struct {
	value *V1JenkinsPipelineBuildStrategy
	isSet bool
}

func (v NullableV1JenkinsPipelineBuildStrategy) Get() *V1JenkinsPipelineBuildStrategy {
	return v.value
}

func (v *NullableV1JenkinsPipelineBuildStrategy) Set(val *V1JenkinsPipelineBuildStrategy) {
	v.value = val
	v.isSet = true
}

func (v NullableV1JenkinsPipelineBuildStrategy) IsSet() bool {
	return v.isSet
}

func (v *NullableV1JenkinsPipelineBuildStrategy) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1JenkinsPipelineBuildStrategy(val *V1JenkinsPipelineBuildStrategy) *NullableV1JenkinsPipelineBuildStrategy {
	return &NullableV1JenkinsPipelineBuildStrategy{value: val, isSet: true}
}

func (v NullableV1JenkinsPipelineBuildStrategy) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1JenkinsPipelineBuildStrategy) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


