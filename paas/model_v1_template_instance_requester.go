/*
Arvancloud PaaS REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.11
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package paas

import (
	"encoding/json"
)

// checks if the V1TemplateInstanceRequester type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1TemplateInstanceRequester{}

// V1TemplateInstanceRequester TemplateInstanceRequester holds the identity of an agent requesting a template instantiation.
type V1TemplateInstanceRequester struct {
	// extra holds additional information provided by the authenticator.
	Extra map[string]interface{} `json:"extra,omitempty"`
	// groups represent the groups this user is a part of.
	Groups []string `json:"groups,omitempty"`
	// uid is a unique value that identifies this user across time; if this user is deleted and another user by the same name is added, they will have different UIDs.
	Uid *string `json:"uid,omitempty"`
	// username uniquely identifies this user among all active users.
	Username *string `json:"username,omitempty"`
}

// NewV1TemplateInstanceRequester instantiates a new V1TemplateInstanceRequester object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1TemplateInstanceRequester() *V1TemplateInstanceRequester {
	this := V1TemplateInstanceRequester{}
	return &this
}

// NewV1TemplateInstanceRequesterWithDefaults instantiates a new V1TemplateInstanceRequester object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1TemplateInstanceRequesterWithDefaults() *V1TemplateInstanceRequester {
	this := V1TemplateInstanceRequester{}
	return &this
}

// GetExtra returns the Extra field value if set, zero value otherwise.
func (o *V1TemplateInstanceRequester) GetExtra() map[string]interface{} {
	if o == nil || IsNil(o.Extra) {
		var ret map[string]interface{}
		return ret
	}
	return o.Extra
}

// GetExtraOk returns a tuple with the Extra field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1TemplateInstanceRequester) GetExtraOk() (map[string]interface{}, bool) {
	if o == nil || IsNil(o.Extra) {
		return map[string]interface{}{}, false
	}
	return o.Extra, true
}

// HasExtra returns a boolean if a field has been set.
func (o *V1TemplateInstanceRequester) HasExtra() bool {
	if o != nil && !IsNil(o.Extra) {
		return true
	}

	return false
}

// SetExtra gets a reference to the given map[string]interface{} and assigns it to the Extra field.
func (o *V1TemplateInstanceRequester) SetExtra(v map[string]interface{}) {
	o.Extra = v
}

// GetGroups returns the Groups field value if set, zero value otherwise.
func (o *V1TemplateInstanceRequester) GetGroups() []string {
	if o == nil || IsNil(o.Groups) {
		var ret []string
		return ret
	}
	return o.Groups
}

// GetGroupsOk returns a tuple with the Groups field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1TemplateInstanceRequester) GetGroupsOk() ([]string, bool) {
	if o == nil || IsNil(o.Groups) {
		return nil, false
	}
	return o.Groups, true
}

// HasGroups returns a boolean if a field has been set.
func (o *V1TemplateInstanceRequester) HasGroups() bool {
	if o != nil && !IsNil(o.Groups) {
		return true
	}

	return false
}

// SetGroups gets a reference to the given []string and assigns it to the Groups field.
func (o *V1TemplateInstanceRequester) SetGroups(v []string) {
	o.Groups = v
}

// GetUid returns the Uid field value if set, zero value otherwise.
func (o *V1TemplateInstanceRequester) GetUid() string {
	if o == nil || IsNil(o.Uid) {
		var ret string
		return ret
	}
	return *o.Uid
}

// GetUidOk returns a tuple with the Uid field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1TemplateInstanceRequester) GetUidOk() (*string, bool) {
	if o == nil || IsNil(o.Uid) {
		return nil, false
	}
	return o.Uid, true
}

// HasUid returns a boolean if a field has been set.
func (o *V1TemplateInstanceRequester) HasUid() bool {
	if o != nil && !IsNil(o.Uid) {
		return true
	}

	return false
}

// SetUid gets a reference to the given string and assigns it to the Uid field.
func (o *V1TemplateInstanceRequester) SetUid(v string) {
	o.Uid = &v
}

// GetUsername returns the Username field value if set, zero value otherwise.
func (o *V1TemplateInstanceRequester) GetUsername() string {
	if o == nil || IsNil(o.Username) {
		var ret string
		return ret
	}
	return *o.Username
}

// GetUsernameOk returns a tuple with the Username field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1TemplateInstanceRequester) GetUsernameOk() (*string, bool) {
	if o == nil || IsNil(o.Username) {
		return nil, false
	}
	return o.Username, true
}

// HasUsername returns a boolean if a field has been set.
func (o *V1TemplateInstanceRequester) HasUsername() bool {
	if o != nil && !IsNil(o.Username) {
		return true
	}

	return false
}

// SetUsername gets a reference to the given string and assigns it to the Username field.
func (o *V1TemplateInstanceRequester) SetUsername(v string) {
	o.Username = &v
}

func (o V1TemplateInstanceRequester) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1TemplateInstanceRequester) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Extra) {
		toSerialize["extra"] = o.Extra
	}
	if !IsNil(o.Groups) {
		toSerialize["groups"] = o.Groups
	}
	if !IsNil(o.Uid) {
		toSerialize["uid"] = o.Uid
	}
	if !IsNil(o.Username) {
		toSerialize["username"] = o.Username
	}
	return toSerialize, nil
}

type NullableV1TemplateInstanceRequester struct {
	value *V1TemplateInstanceRequester
	isSet bool
}

func (v NullableV1TemplateInstanceRequester) Get() *V1TemplateInstanceRequester {
	return v.value
}

func (v *NullableV1TemplateInstanceRequester) Set(val *V1TemplateInstanceRequester) {
	v.value = val
	v.isSet = true
}

func (v NullableV1TemplateInstanceRequester) IsSet() bool {
	return v.isSet
}

func (v *NullableV1TemplateInstanceRequester) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1TemplateInstanceRequester(val *V1TemplateInstanceRequester) *NullableV1TemplateInstanceRequester {
	return &NullableV1TemplateInstanceRequester{value: val, isSet: true}
}

func (v NullableV1TemplateInstanceRequester) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1TemplateInstanceRequester) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


