/*
Arvancloud PaaS REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.11
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package paas

import (
	"encoding/json"
)

// checks if the V1BrokerTemplateInstanceSpec type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1BrokerTemplateInstanceSpec{}

// V1BrokerTemplateInstanceSpec BrokerTemplateInstanceSpec describes the state of a BrokerTemplateInstance.
type V1BrokerTemplateInstanceSpec struct {
	// bindingids is a list of 'binding_id's provided during successive bind calls to the template service broker.
	BindingIDs []string `json:"bindingIDs,omitempty"`
	Secret V1ObjectReference `json:"secret"`
	TemplateInstance V1ObjectReference `json:"templateInstance"`
}

// NewV1BrokerTemplateInstanceSpec instantiates a new V1BrokerTemplateInstanceSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1BrokerTemplateInstanceSpec(secret V1ObjectReference, templateInstance V1ObjectReference) *V1BrokerTemplateInstanceSpec {
	this := V1BrokerTemplateInstanceSpec{}
	this.Secret = secret
	this.TemplateInstance = templateInstance
	return &this
}

// NewV1BrokerTemplateInstanceSpecWithDefaults instantiates a new V1BrokerTemplateInstanceSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1BrokerTemplateInstanceSpecWithDefaults() *V1BrokerTemplateInstanceSpec {
	this := V1BrokerTemplateInstanceSpec{}
	return &this
}

// GetBindingIDs returns the BindingIDs field value if set, zero value otherwise.
func (o *V1BrokerTemplateInstanceSpec) GetBindingIDs() []string {
	if o == nil || IsNil(o.BindingIDs) {
		var ret []string
		return ret
	}
	return o.BindingIDs
}

// GetBindingIDsOk returns a tuple with the BindingIDs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1BrokerTemplateInstanceSpec) GetBindingIDsOk() ([]string, bool) {
	if o == nil || IsNil(o.BindingIDs) {
		return nil, false
	}
	return o.BindingIDs, true
}

// HasBindingIDs returns a boolean if a field has been set.
func (o *V1BrokerTemplateInstanceSpec) HasBindingIDs() bool {
	if o != nil && !IsNil(o.BindingIDs) {
		return true
	}

	return false
}

// SetBindingIDs gets a reference to the given []string and assigns it to the BindingIDs field.
func (o *V1BrokerTemplateInstanceSpec) SetBindingIDs(v []string) {
	o.BindingIDs = v
}

// GetSecret returns the Secret field value
func (o *V1BrokerTemplateInstanceSpec) GetSecret() V1ObjectReference {
	if o == nil {
		var ret V1ObjectReference
		return ret
	}

	return o.Secret
}

// GetSecretOk returns a tuple with the Secret field value
// and a boolean to check if the value has been set.
func (o *V1BrokerTemplateInstanceSpec) GetSecretOk() (*V1ObjectReference, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Secret, true
}

// SetSecret sets field value
func (o *V1BrokerTemplateInstanceSpec) SetSecret(v V1ObjectReference) {
	o.Secret = v
}

// GetTemplateInstance returns the TemplateInstance field value
func (o *V1BrokerTemplateInstanceSpec) GetTemplateInstance() V1ObjectReference {
	if o == nil {
		var ret V1ObjectReference
		return ret
	}

	return o.TemplateInstance
}

// GetTemplateInstanceOk returns a tuple with the TemplateInstance field value
// and a boolean to check if the value has been set.
func (o *V1BrokerTemplateInstanceSpec) GetTemplateInstanceOk() (*V1ObjectReference, bool) {
	if o == nil {
		return nil, false
	}
	return &o.TemplateInstance, true
}

// SetTemplateInstance sets field value
func (o *V1BrokerTemplateInstanceSpec) SetTemplateInstance(v V1ObjectReference) {
	o.TemplateInstance = v
}

func (o V1BrokerTemplateInstanceSpec) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1BrokerTemplateInstanceSpec) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BindingIDs) {
		toSerialize["bindingIDs"] = o.BindingIDs
	}
	toSerialize["secret"] = o.Secret
	toSerialize["templateInstance"] = o.TemplateInstance
	return toSerialize, nil
}

type NullableV1BrokerTemplateInstanceSpec struct {
	value *V1BrokerTemplateInstanceSpec
	isSet bool
}

func (v NullableV1BrokerTemplateInstanceSpec) Get() *V1BrokerTemplateInstanceSpec {
	return v.value
}

func (v *NullableV1BrokerTemplateInstanceSpec) Set(val *V1BrokerTemplateInstanceSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableV1BrokerTemplateInstanceSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableV1BrokerTemplateInstanceSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1BrokerTemplateInstanceSpec(val *V1BrokerTemplateInstanceSpec) *NullableV1BrokerTemplateInstanceSpec {
	return &NullableV1BrokerTemplateInstanceSpec{value: val, isSet: true}
}

func (v NullableV1BrokerTemplateInstanceSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1BrokerTemplateInstanceSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


