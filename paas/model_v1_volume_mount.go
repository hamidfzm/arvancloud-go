/*
Arvancloud PaaS REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.11
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package paas

import (
	"encoding/json"
)

// checks if the V1VolumeMount type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1VolumeMount{}

// V1VolumeMount VolumeMount describes a mounting of a Volume within a container.
type V1VolumeMount struct {
	// Path within the container at which the volume should be mounted.  Must not contain ':'.
	MountPath string `json:"mountPath"`
	MountPropagation *V1MountPropagationMode `json:"mountPropagation,omitempty"`
	// This must match the Name of a Volume.
	Name string `json:"name"`
	// Mounted read-only if true, read-write otherwise (false or unspecified). Defaults to false.
	ReadOnly *bool `json:"readOnly,omitempty"`
	// Path within the volume from which the container's volume should be mounted. Defaults to \"\" (volume's root).
	SubPath *string `json:"subPath,omitempty"`
}

// NewV1VolumeMount instantiates a new V1VolumeMount object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1VolumeMount(mountPath string, name string) *V1VolumeMount {
	this := V1VolumeMount{}
	this.MountPath = mountPath
	this.Name = name
	return &this
}

// NewV1VolumeMountWithDefaults instantiates a new V1VolumeMount object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1VolumeMountWithDefaults() *V1VolumeMount {
	this := V1VolumeMount{}
	return &this
}

// GetMountPath returns the MountPath field value
func (o *V1VolumeMount) GetMountPath() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.MountPath
}

// GetMountPathOk returns a tuple with the MountPath field value
// and a boolean to check if the value has been set.
func (o *V1VolumeMount) GetMountPathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.MountPath, true
}

// SetMountPath sets field value
func (o *V1VolumeMount) SetMountPath(v string) {
	o.MountPath = v
}

// GetMountPropagation returns the MountPropagation field value if set, zero value otherwise.
func (o *V1VolumeMount) GetMountPropagation() V1MountPropagationMode {
	if o == nil || IsNil(o.MountPropagation) {
		var ret V1MountPropagationMode
		return ret
	}
	return *o.MountPropagation
}

// GetMountPropagationOk returns a tuple with the MountPropagation field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1VolumeMount) GetMountPropagationOk() (*V1MountPropagationMode, bool) {
	if o == nil || IsNil(o.MountPropagation) {
		return nil, false
	}
	return o.MountPropagation, true
}

// HasMountPropagation returns a boolean if a field has been set.
func (o *V1VolumeMount) HasMountPropagation() bool {
	if o != nil && !IsNil(o.MountPropagation) {
		return true
	}

	return false
}

// SetMountPropagation gets a reference to the given V1MountPropagationMode and assigns it to the MountPropagation field.
func (o *V1VolumeMount) SetMountPropagation(v V1MountPropagationMode) {
	o.MountPropagation = &v
}

// GetName returns the Name field value
func (o *V1VolumeMount) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *V1VolumeMount) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *V1VolumeMount) SetName(v string) {
	o.Name = v
}

// GetReadOnly returns the ReadOnly field value if set, zero value otherwise.
func (o *V1VolumeMount) GetReadOnly() bool {
	if o == nil || IsNil(o.ReadOnly) {
		var ret bool
		return ret
	}
	return *o.ReadOnly
}

// GetReadOnlyOk returns a tuple with the ReadOnly field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1VolumeMount) GetReadOnlyOk() (*bool, bool) {
	if o == nil || IsNil(o.ReadOnly) {
		return nil, false
	}
	return o.ReadOnly, true
}

// HasReadOnly returns a boolean if a field has been set.
func (o *V1VolumeMount) HasReadOnly() bool {
	if o != nil && !IsNil(o.ReadOnly) {
		return true
	}

	return false
}

// SetReadOnly gets a reference to the given bool and assigns it to the ReadOnly field.
func (o *V1VolumeMount) SetReadOnly(v bool) {
	o.ReadOnly = &v
}

// GetSubPath returns the SubPath field value if set, zero value otherwise.
func (o *V1VolumeMount) GetSubPath() string {
	if o == nil || IsNil(o.SubPath) {
		var ret string
		return ret
	}
	return *o.SubPath
}

// GetSubPathOk returns a tuple with the SubPath field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1VolumeMount) GetSubPathOk() (*string, bool) {
	if o == nil || IsNil(o.SubPath) {
		return nil, false
	}
	return o.SubPath, true
}

// HasSubPath returns a boolean if a field has been set.
func (o *V1VolumeMount) HasSubPath() bool {
	if o != nil && !IsNil(o.SubPath) {
		return true
	}

	return false
}

// SetSubPath gets a reference to the given string and assigns it to the SubPath field.
func (o *V1VolumeMount) SetSubPath(v string) {
	o.SubPath = &v
}

func (o V1VolumeMount) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1VolumeMount) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["mountPath"] = o.MountPath
	if !IsNil(o.MountPropagation) {
		toSerialize["mountPropagation"] = o.MountPropagation
	}
	toSerialize["name"] = o.Name
	if !IsNil(o.ReadOnly) {
		toSerialize["readOnly"] = o.ReadOnly
	}
	if !IsNil(o.SubPath) {
		toSerialize["subPath"] = o.SubPath
	}
	return toSerialize, nil
}

type NullableV1VolumeMount struct {
	value *V1VolumeMount
	isSet bool
}

func (v NullableV1VolumeMount) Get() *V1VolumeMount {
	return v.value
}

func (v *NullableV1VolumeMount) Set(val *V1VolumeMount) {
	v.value = val
	v.isSet = true
}

func (v NullableV1VolumeMount) IsSet() bool {
	return v.isSet
}

func (v *NullableV1VolumeMount) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1VolumeMount(val *V1VolumeMount) *NullableV1VolumeMount {
	return &NullableV1VolumeMount{value: val, isSet: true}
}

func (v NullableV1VolumeMount) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1VolumeMount) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


