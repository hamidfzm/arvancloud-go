/*
Arvancloud PaaS REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.11
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package paas

import (
	"encoding/json"
)

// checks if the V1BitbucketWebHookCause type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1BitbucketWebHookCause{}

// V1BitbucketWebHookCause BitbucketWebHookCause has information about a Bitbucket webhook that triggered a build.
type V1BitbucketWebHookCause struct {
	Revision *V1SourceRevision `json:"revision,omitempty"`
	// Secret is the obfuscated webhook secret that triggered a build.
	Secret *string `json:"secret,omitempty"`
}

// NewV1BitbucketWebHookCause instantiates a new V1BitbucketWebHookCause object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1BitbucketWebHookCause() *V1BitbucketWebHookCause {
	this := V1BitbucketWebHookCause{}
	return &this
}

// NewV1BitbucketWebHookCauseWithDefaults instantiates a new V1BitbucketWebHookCause object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1BitbucketWebHookCauseWithDefaults() *V1BitbucketWebHookCause {
	this := V1BitbucketWebHookCause{}
	return &this
}

// GetRevision returns the Revision field value if set, zero value otherwise.
func (o *V1BitbucketWebHookCause) GetRevision() V1SourceRevision {
	if o == nil || IsNil(o.Revision) {
		var ret V1SourceRevision
		return ret
	}
	return *o.Revision
}

// GetRevisionOk returns a tuple with the Revision field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1BitbucketWebHookCause) GetRevisionOk() (*V1SourceRevision, bool) {
	if o == nil || IsNil(o.Revision) {
		return nil, false
	}
	return o.Revision, true
}

// HasRevision returns a boolean if a field has been set.
func (o *V1BitbucketWebHookCause) HasRevision() bool {
	if o != nil && !IsNil(o.Revision) {
		return true
	}

	return false
}

// SetRevision gets a reference to the given V1SourceRevision and assigns it to the Revision field.
func (o *V1BitbucketWebHookCause) SetRevision(v V1SourceRevision) {
	o.Revision = &v
}

// GetSecret returns the Secret field value if set, zero value otherwise.
func (o *V1BitbucketWebHookCause) GetSecret() string {
	if o == nil || IsNil(o.Secret) {
		var ret string
		return ret
	}
	return *o.Secret
}

// GetSecretOk returns a tuple with the Secret field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1BitbucketWebHookCause) GetSecretOk() (*string, bool) {
	if o == nil || IsNil(o.Secret) {
		return nil, false
	}
	return o.Secret, true
}

// HasSecret returns a boolean if a field has been set.
func (o *V1BitbucketWebHookCause) HasSecret() bool {
	if o != nil && !IsNil(o.Secret) {
		return true
	}

	return false
}

// SetSecret gets a reference to the given string and assigns it to the Secret field.
func (o *V1BitbucketWebHookCause) SetSecret(v string) {
	o.Secret = &v
}

func (o V1BitbucketWebHookCause) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1BitbucketWebHookCause) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Revision) {
		toSerialize["revision"] = o.Revision
	}
	if !IsNil(o.Secret) {
		toSerialize["secret"] = o.Secret
	}
	return toSerialize, nil
}

type NullableV1BitbucketWebHookCause struct {
	value *V1BitbucketWebHookCause
	isSet bool
}

func (v NullableV1BitbucketWebHookCause) Get() *V1BitbucketWebHookCause {
	return v.value
}

func (v *NullableV1BitbucketWebHookCause) Set(val *V1BitbucketWebHookCause) {
	v.value = val
	v.isSet = true
}

func (v NullableV1BitbucketWebHookCause) IsSet() bool {
	return v.isSet
}

func (v *NullableV1BitbucketWebHookCause) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1BitbucketWebHookCause(val *V1BitbucketWebHookCause) *NullableV1BitbucketWebHookCause {
	return &NullableV1BitbucketWebHookCause{value: val, isSet: true}
}

func (v NullableV1BitbucketWebHookCause) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1BitbucketWebHookCause) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


