/*
Arvancloud PaaS REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.11
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package paas

import (
	"encoding/json"
)

// checks if the V1TemplateInstanceCondition type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1TemplateInstanceCondition{}

// V1TemplateInstanceCondition TemplateInstanceCondition contains condition information for a TemplateInstance.
type V1TemplateInstanceCondition struct {
	// LastTransitionTime is the last time a condition status transitioned from one state to another.
	LastTransitionTime string `json:"lastTransitionTime"`
	// Message is a human readable description of the details of the last transition, complementing reason.
	Message string `json:"message"`
	// Reason is a brief machine readable explanation for the condition's last transition.
	Reason string `json:"reason"`
	// Status of the condition, one of True, False or Unknown.
	Status string `json:"status"`
	// Type of the condition, currently Ready or InstantiateFailure.
	Type string `json:"type"`
}

// NewV1TemplateInstanceCondition instantiates a new V1TemplateInstanceCondition object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1TemplateInstanceCondition(lastTransitionTime string, message string, reason string, status string, type_ string) *V1TemplateInstanceCondition {
	this := V1TemplateInstanceCondition{}
	this.LastTransitionTime = lastTransitionTime
	this.Message = message
	this.Reason = reason
	this.Status = status
	this.Type = type_
	return &this
}

// NewV1TemplateInstanceConditionWithDefaults instantiates a new V1TemplateInstanceCondition object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1TemplateInstanceConditionWithDefaults() *V1TemplateInstanceCondition {
	this := V1TemplateInstanceCondition{}
	return &this
}

// GetLastTransitionTime returns the LastTransitionTime field value
func (o *V1TemplateInstanceCondition) GetLastTransitionTime() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.LastTransitionTime
}

// GetLastTransitionTimeOk returns a tuple with the LastTransitionTime field value
// and a boolean to check if the value has been set.
func (o *V1TemplateInstanceCondition) GetLastTransitionTimeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.LastTransitionTime, true
}

// SetLastTransitionTime sets field value
func (o *V1TemplateInstanceCondition) SetLastTransitionTime(v string) {
	o.LastTransitionTime = v
}

// GetMessage returns the Message field value
func (o *V1TemplateInstanceCondition) GetMessage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Message
}

// GetMessageOk returns a tuple with the Message field value
// and a boolean to check if the value has been set.
func (o *V1TemplateInstanceCondition) GetMessageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Message, true
}

// SetMessage sets field value
func (o *V1TemplateInstanceCondition) SetMessage(v string) {
	o.Message = v
}

// GetReason returns the Reason field value
func (o *V1TemplateInstanceCondition) GetReason() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Reason
}

// GetReasonOk returns a tuple with the Reason field value
// and a boolean to check if the value has been set.
func (o *V1TemplateInstanceCondition) GetReasonOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Reason, true
}

// SetReason sets field value
func (o *V1TemplateInstanceCondition) SetReason(v string) {
	o.Reason = v
}

// GetStatus returns the Status field value
func (o *V1TemplateInstanceCondition) GetStatus() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *V1TemplateInstanceCondition) GetStatusOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *V1TemplateInstanceCondition) SetStatus(v string) {
	o.Status = v
}

// GetType returns the Type field value
func (o *V1TemplateInstanceCondition) GetType() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Type
}

// GetTypeOk returns a tuple with the Type field value
// and a boolean to check if the value has been set.
func (o *V1TemplateInstanceCondition) GetTypeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Type, true
}

// SetType sets field value
func (o *V1TemplateInstanceCondition) SetType(v string) {
	o.Type = v
}

func (o V1TemplateInstanceCondition) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1TemplateInstanceCondition) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["lastTransitionTime"] = o.LastTransitionTime
	toSerialize["message"] = o.Message
	toSerialize["reason"] = o.Reason
	toSerialize["status"] = o.Status
	toSerialize["type"] = o.Type
	return toSerialize, nil
}

type NullableV1TemplateInstanceCondition struct {
	value *V1TemplateInstanceCondition
	isSet bool
}

func (v NullableV1TemplateInstanceCondition) Get() *V1TemplateInstanceCondition {
	return v.value
}

func (v *NullableV1TemplateInstanceCondition) Set(val *V1TemplateInstanceCondition) {
	v.value = val
	v.isSet = true
}

func (v NullableV1TemplateInstanceCondition) IsSet() bool {
	return v.isSet
}

func (v *NullableV1TemplateInstanceCondition) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1TemplateInstanceCondition(val *V1TemplateInstanceCondition) *NullableV1TemplateInstanceCondition {
	return &NullableV1TemplateInstanceCondition{value: val, isSet: true}
}

func (v NullableV1TemplateInstanceCondition) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1TemplateInstanceCondition) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


