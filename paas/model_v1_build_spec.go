/*
Arvancloud PaaS REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.11
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package paas

import (
	"encoding/json"
)

// checks if the V1BuildSpec type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1BuildSpec{}

// V1BuildSpec BuildSpec has the information to represent a build and also additional information about a build
type V1BuildSpec struct {
	// completionDeadlineSeconds is an optional duration in seconds, counted from the time when a build pod gets scheduled in the system, that the build may be active on a node before the system actively tries to terminate the build; value must be positive integer
	CompletionDeadlineSeconds *int64 `json:"completionDeadlineSeconds,omitempty"`
	// nodeSelector is a selector which must be true for the build pod to fit on a node If nil, it can be overridden by default build nodeselector values for the cluster. If set to an empty map or a map with any values, default build nodeselector values are ignored.
	NodeSelector map[string]interface{} `json:"nodeSelector"`
	Output *V1BuildOutput `json:"output,omitempty"`
	PostCommit *V1BuildPostCommitSpec `json:"postCommit,omitempty"`
	Resources *V1ResourceRequirements `json:"resources,omitempty"`
	Revision *V1SourceRevision `json:"revision,omitempty"`
	// serviceAccount is the name of the ServiceAccount to use to run the pod created by this build. The pod will be allowed to use secrets referenced by the ServiceAccount
	ServiceAccount *string `json:"serviceAccount,omitempty"`
	Source *V1BuildSource `json:"source,omitempty"`
	Strategy V1BuildStrategy `json:"strategy"`
	// triggeredBy describes which triggers started the most recent update to the build configuration and contains information about those triggers.
	TriggeredBy []V1BuildTriggerCause `json:"triggeredBy"`
}

// NewV1BuildSpec instantiates a new V1BuildSpec object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1BuildSpec(nodeSelector map[string]interface{}, strategy V1BuildStrategy, triggeredBy []V1BuildTriggerCause) *V1BuildSpec {
	this := V1BuildSpec{}
	this.NodeSelector = nodeSelector
	this.Strategy = strategy
	this.TriggeredBy = triggeredBy
	return &this
}

// NewV1BuildSpecWithDefaults instantiates a new V1BuildSpec object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1BuildSpecWithDefaults() *V1BuildSpec {
	this := V1BuildSpec{}
	return &this
}

// GetCompletionDeadlineSeconds returns the CompletionDeadlineSeconds field value if set, zero value otherwise.
func (o *V1BuildSpec) GetCompletionDeadlineSeconds() int64 {
	if o == nil || IsNil(o.CompletionDeadlineSeconds) {
		var ret int64
		return ret
	}
	return *o.CompletionDeadlineSeconds
}

// GetCompletionDeadlineSecondsOk returns a tuple with the CompletionDeadlineSeconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1BuildSpec) GetCompletionDeadlineSecondsOk() (*int64, bool) {
	if o == nil || IsNil(o.CompletionDeadlineSeconds) {
		return nil, false
	}
	return o.CompletionDeadlineSeconds, true
}

// HasCompletionDeadlineSeconds returns a boolean if a field has been set.
func (o *V1BuildSpec) HasCompletionDeadlineSeconds() bool {
	if o != nil && !IsNil(o.CompletionDeadlineSeconds) {
		return true
	}

	return false
}

// SetCompletionDeadlineSeconds gets a reference to the given int64 and assigns it to the CompletionDeadlineSeconds field.
func (o *V1BuildSpec) SetCompletionDeadlineSeconds(v int64) {
	o.CompletionDeadlineSeconds = &v
}

// GetNodeSelector returns the NodeSelector field value
func (o *V1BuildSpec) GetNodeSelector() map[string]interface{} {
	if o == nil {
		var ret map[string]interface{}
		return ret
	}

	return o.NodeSelector
}

// GetNodeSelectorOk returns a tuple with the NodeSelector field value
// and a boolean to check if the value has been set.
func (o *V1BuildSpec) GetNodeSelectorOk() (map[string]interface{}, bool) {
	if o == nil {
		return map[string]interface{}{}, false
	}
	return o.NodeSelector, true
}

// SetNodeSelector sets field value
func (o *V1BuildSpec) SetNodeSelector(v map[string]interface{}) {
	o.NodeSelector = v
}

// GetOutput returns the Output field value if set, zero value otherwise.
func (o *V1BuildSpec) GetOutput() V1BuildOutput {
	if o == nil || IsNil(o.Output) {
		var ret V1BuildOutput
		return ret
	}
	return *o.Output
}

// GetOutputOk returns a tuple with the Output field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1BuildSpec) GetOutputOk() (*V1BuildOutput, bool) {
	if o == nil || IsNil(o.Output) {
		return nil, false
	}
	return o.Output, true
}

// HasOutput returns a boolean if a field has been set.
func (o *V1BuildSpec) HasOutput() bool {
	if o != nil && !IsNil(o.Output) {
		return true
	}

	return false
}

// SetOutput gets a reference to the given V1BuildOutput and assigns it to the Output field.
func (o *V1BuildSpec) SetOutput(v V1BuildOutput) {
	o.Output = &v
}

// GetPostCommit returns the PostCommit field value if set, zero value otherwise.
func (o *V1BuildSpec) GetPostCommit() V1BuildPostCommitSpec {
	if o == nil || IsNil(o.PostCommit) {
		var ret V1BuildPostCommitSpec
		return ret
	}
	return *o.PostCommit
}

// GetPostCommitOk returns a tuple with the PostCommit field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1BuildSpec) GetPostCommitOk() (*V1BuildPostCommitSpec, bool) {
	if o == nil || IsNil(o.PostCommit) {
		return nil, false
	}
	return o.PostCommit, true
}

// HasPostCommit returns a boolean if a field has been set.
func (o *V1BuildSpec) HasPostCommit() bool {
	if o != nil && !IsNil(o.PostCommit) {
		return true
	}

	return false
}

// SetPostCommit gets a reference to the given V1BuildPostCommitSpec and assigns it to the PostCommit field.
func (o *V1BuildSpec) SetPostCommit(v V1BuildPostCommitSpec) {
	o.PostCommit = &v
}

// GetResources returns the Resources field value if set, zero value otherwise.
func (o *V1BuildSpec) GetResources() V1ResourceRequirements {
	if o == nil || IsNil(o.Resources) {
		var ret V1ResourceRequirements
		return ret
	}
	return *o.Resources
}

// GetResourcesOk returns a tuple with the Resources field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1BuildSpec) GetResourcesOk() (*V1ResourceRequirements, bool) {
	if o == nil || IsNil(o.Resources) {
		return nil, false
	}
	return o.Resources, true
}

// HasResources returns a boolean if a field has been set.
func (o *V1BuildSpec) HasResources() bool {
	if o != nil && !IsNil(o.Resources) {
		return true
	}

	return false
}

// SetResources gets a reference to the given V1ResourceRequirements and assigns it to the Resources field.
func (o *V1BuildSpec) SetResources(v V1ResourceRequirements) {
	o.Resources = &v
}

// GetRevision returns the Revision field value if set, zero value otherwise.
func (o *V1BuildSpec) GetRevision() V1SourceRevision {
	if o == nil || IsNil(o.Revision) {
		var ret V1SourceRevision
		return ret
	}
	return *o.Revision
}

// GetRevisionOk returns a tuple with the Revision field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1BuildSpec) GetRevisionOk() (*V1SourceRevision, bool) {
	if o == nil || IsNil(o.Revision) {
		return nil, false
	}
	return o.Revision, true
}

// HasRevision returns a boolean if a field has been set.
func (o *V1BuildSpec) HasRevision() bool {
	if o != nil && !IsNil(o.Revision) {
		return true
	}

	return false
}

// SetRevision gets a reference to the given V1SourceRevision and assigns it to the Revision field.
func (o *V1BuildSpec) SetRevision(v V1SourceRevision) {
	o.Revision = &v
}

// GetServiceAccount returns the ServiceAccount field value if set, zero value otherwise.
func (o *V1BuildSpec) GetServiceAccount() string {
	if o == nil || IsNil(o.ServiceAccount) {
		var ret string
		return ret
	}
	return *o.ServiceAccount
}

// GetServiceAccountOk returns a tuple with the ServiceAccount field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1BuildSpec) GetServiceAccountOk() (*string, bool) {
	if o == nil || IsNil(o.ServiceAccount) {
		return nil, false
	}
	return o.ServiceAccount, true
}

// HasServiceAccount returns a boolean if a field has been set.
func (o *V1BuildSpec) HasServiceAccount() bool {
	if o != nil && !IsNil(o.ServiceAccount) {
		return true
	}

	return false
}

// SetServiceAccount gets a reference to the given string and assigns it to the ServiceAccount field.
func (o *V1BuildSpec) SetServiceAccount(v string) {
	o.ServiceAccount = &v
}

// GetSource returns the Source field value if set, zero value otherwise.
func (o *V1BuildSpec) GetSource() V1BuildSource {
	if o == nil || IsNil(o.Source) {
		var ret V1BuildSource
		return ret
	}
	return *o.Source
}

// GetSourceOk returns a tuple with the Source field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1BuildSpec) GetSourceOk() (*V1BuildSource, bool) {
	if o == nil || IsNil(o.Source) {
		return nil, false
	}
	return o.Source, true
}

// HasSource returns a boolean if a field has been set.
func (o *V1BuildSpec) HasSource() bool {
	if o != nil && !IsNil(o.Source) {
		return true
	}

	return false
}

// SetSource gets a reference to the given V1BuildSource and assigns it to the Source field.
func (o *V1BuildSpec) SetSource(v V1BuildSource) {
	o.Source = &v
}

// GetStrategy returns the Strategy field value
func (o *V1BuildSpec) GetStrategy() V1BuildStrategy {
	if o == nil {
		var ret V1BuildStrategy
		return ret
	}

	return o.Strategy
}

// GetStrategyOk returns a tuple with the Strategy field value
// and a boolean to check if the value has been set.
func (o *V1BuildSpec) GetStrategyOk() (*V1BuildStrategy, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Strategy, true
}

// SetStrategy sets field value
func (o *V1BuildSpec) SetStrategy(v V1BuildStrategy) {
	o.Strategy = v
}

// GetTriggeredBy returns the TriggeredBy field value
func (o *V1BuildSpec) GetTriggeredBy() []V1BuildTriggerCause {
	if o == nil {
		var ret []V1BuildTriggerCause
		return ret
	}

	return o.TriggeredBy
}

// GetTriggeredByOk returns a tuple with the TriggeredBy field value
// and a boolean to check if the value has been set.
func (o *V1BuildSpec) GetTriggeredByOk() ([]V1BuildTriggerCause, bool) {
	if o == nil {
		return nil, false
	}
	return o.TriggeredBy, true
}

// SetTriggeredBy sets field value
func (o *V1BuildSpec) SetTriggeredBy(v []V1BuildTriggerCause) {
	o.TriggeredBy = v
}

func (o V1BuildSpec) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1BuildSpec) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.CompletionDeadlineSeconds) {
		toSerialize["completionDeadlineSeconds"] = o.CompletionDeadlineSeconds
	}
	toSerialize["nodeSelector"] = o.NodeSelector
	if !IsNil(o.Output) {
		toSerialize["output"] = o.Output
	}
	if !IsNil(o.PostCommit) {
		toSerialize["postCommit"] = o.PostCommit
	}
	if !IsNil(o.Resources) {
		toSerialize["resources"] = o.Resources
	}
	if !IsNil(o.Revision) {
		toSerialize["revision"] = o.Revision
	}
	if !IsNil(o.ServiceAccount) {
		toSerialize["serviceAccount"] = o.ServiceAccount
	}
	if !IsNil(o.Source) {
		toSerialize["source"] = o.Source
	}
	toSerialize["strategy"] = o.Strategy
	toSerialize["triggeredBy"] = o.TriggeredBy
	return toSerialize, nil
}

type NullableV1BuildSpec struct {
	value *V1BuildSpec
	isSet bool
}

func (v NullableV1BuildSpec) Get() *V1BuildSpec {
	return v.value
}

func (v *NullableV1BuildSpec) Set(val *V1BuildSpec) {
	v.value = val
	v.isSet = true
}

func (v NullableV1BuildSpec) IsSet() bool {
	return v.isSet
}

func (v *NullableV1BuildSpec) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1BuildSpec(val *V1BuildSpec) *NullableV1BuildSpec {
	return &NullableV1BuildSpec{value: val, isSet: true}
}

func (v NullableV1BuildSpec) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1BuildSpec) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


