/*
Arvancloud PaaS REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.11
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package paas

import (
	"encoding/json"
)

// checks if the V1ContainerStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1ContainerStatus{}

// V1ContainerStatus ContainerStatus contains details for the current status of this container.
type V1ContainerStatus struct {
	// Container's ID in the format 'docker://<container_id>'.
	ContainerID *string `json:"containerID,omitempty"`
	// The image the container is running. More info: https://kubernetes.io/docs/concepts/containers/images
	Image string `json:"image"`
	// ImageID of the container's image.
	ImageID string `json:"imageID"`
	LastState *V1ContainerState `json:"lastState,omitempty"`
	// This must be a DNS_LABEL. Each container in a pod must have a unique name. Cannot be updated.
	Name string `json:"name"`
	// Specifies whether the container has passed its readiness probe.
	Ready bool `json:"ready"`
	// The number of times the container has been restarted, currently based on the number of dead containers that have not yet been removed. Note that this is calculated from dead containers. But those containers are subject to garbage collection. This value will get capped at 5 by GC.
	RestartCount int32 `json:"restartCount"`
	State *V1ContainerState `json:"state,omitempty"`
}

// NewV1ContainerStatus instantiates a new V1ContainerStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1ContainerStatus(image string, imageID string, name string, ready bool, restartCount int32) *V1ContainerStatus {
	this := V1ContainerStatus{}
	this.Image = image
	this.ImageID = imageID
	this.Name = name
	this.Ready = ready
	this.RestartCount = restartCount
	return &this
}

// NewV1ContainerStatusWithDefaults instantiates a new V1ContainerStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1ContainerStatusWithDefaults() *V1ContainerStatus {
	this := V1ContainerStatus{}
	return &this
}

// GetContainerID returns the ContainerID field value if set, zero value otherwise.
func (o *V1ContainerStatus) GetContainerID() string {
	if o == nil || IsNil(o.ContainerID) {
		var ret string
		return ret
	}
	return *o.ContainerID
}

// GetContainerIDOk returns a tuple with the ContainerID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ContainerStatus) GetContainerIDOk() (*string, bool) {
	if o == nil || IsNil(o.ContainerID) {
		return nil, false
	}
	return o.ContainerID, true
}

// HasContainerID returns a boolean if a field has been set.
func (o *V1ContainerStatus) HasContainerID() bool {
	if o != nil && !IsNil(o.ContainerID) {
		return true
	}

	return false
}

// SetContainerID gets a reference to the given string and assigns it to the ContainerID field.
func (o *V1ContainerStatus) SetContainerID(v string) {
	o.ContainerID = &v
}

// GetImage returns the Image field value
func (o *V1ContainerStatus) GetImage() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Image
}

// GetImageOk returns a tuple with the Image field value
// and a boolean to check if the value has been set.
func (o *V1ContainerStatus) GetImageOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Image, true
}

// SetImage sets field value
func (o *V1ContainerStatus) SetImage(v string) {
	o.Image = v
}

// GetImageID returns the ImageID field value
func (o *V1ContainerStatus) GetImageID() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ImageID
}

// GetImageIDOk returns a tuple with the ImageID field value
// and a boolean to check if the value has been set.
func (o *V1ContainerStatus) GetImageIDOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ImageID, true
}

// SetImageID sets field value
func (o *V1ContainerStatus) SetImageID(v string) {
	o.ImageID = v
}

// GetLastState returns the LastState field value if set, zero value otherwise.
func (o *V1ContainerStatus) GetLastState() V1ContainerState {
	if o == nil || IsNil(o.LastState) {
		var ret V1ContainerState
		return ret
	}
	return *o.LastState
}

// GetLastStateOk returns a tuple with the LastState field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ContainerStatus) GetLastStateOk() (*V1ContainerState, bool) {
	if o == nil || IsNil(o.LastState) {
		return nil, false
	}
	return o.LastState, true
}

// HasLastState returns a boolean if a field has been set.
func (o *V1ContainerStatus) HasLastState() bool {
	if o != nil && !IsNil(o.LastState) {
		return true
	}

	return false
}

// SetLastState gets a reference to the given V1ContainerState and assigns it to the LastState field.
func (o *V1ContainerStatus) SetLastState(v V1ContainerState) {
	o.LastState = &v
}

// GetName returns the Name field value
func (o *V1ContainerStatus) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *V1ContainerStatus) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *V1ContainerStatus) SetName(v string) {
	o.Name = v
}

// GetReady returns the Ready field value
func (o *V1ContainerStatus) GetReady() bool {
	if o == nil {
		var ret bool
		return ret
	}

	return o.Ready
}

// GetReadyOk returns a tuple with the Ready field value
// and a boolean to check if the value has been set.
func (o *V1ContainerStatus) GetReadyOk() (*bool, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Ready, true
}

// SetReady sets field value
func (o *V1ContainerStatus) SetReady(v bool) {
	o.Ready = v
}

// GetRestartCount returns the RestartCount field value
func (o *V1ContainerStatus) GetRestartCount() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.RestartCount
}

// GetRestartCountOk returns a tuple with the RestartCount field value
// and a boolean to check if the value has been set.
func (o *V1ContainerStatus) GetRestartCountOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.RestartCount, true
}

// SetRestartCount sets field value
func (o *V1ContainerStatus) SetRestartCount(v int32) {
	o.RestartCount = v
}

// GetState returns the State field value if set, zero value otherwise.
func (o *V1ContainerStatus) GetState() V1ContainerState {
	if o == nil || IsNil(o.State) {
		var ret V1ContainerState
		return ret
	}
	return *o.State
}

// GetStateOk returns a tuple with the State field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ContainerStatus) GetStateOk() (*V1ContainerState, bool) {
	if o == nil || IsNil(o.State) {
		return nil, false
	}
	return o.State, true
}

// HasState returns a boolean if a field has been set.
func (o *V1ContainerStatus) HasState() bool {
	if o != nil && !IsNil(o.State) {
		return true
	}

	return false
}

// SetState gets a reference to the given V1ContainerState and assigns it to the State field.
func (o *V1ContainerStatus) SetState(v V1ContainerState) {
	o.State = &v
}

func (o V1ContainerStatus) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1ContainerStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ContainerID) {
		toSerialize["containerID"] = o.ContainerID
	}
	toSerialize["image"] = o.Image
	toSerialize["imageID"] = o.ImageID
	if !IsNil(o.LastState) {
		toSerialize["lastState"] = o.LastState
	}
	toSerialize["name"] = o.Name
	toSerialize["ready"] = o.Ready
	toSerialize["restartCount"] = o.RestartCount
	if !IsNil(o.State) {
		toSerialize["state"] = o.State
	}
	return toSerialize, nil
}

type NullableV1ContainerStatus struct {
	value *V1ContainerStatus
	isSet bool
}

func (v NullableV1ContainerStatus) Get() *V1ContainerStatus {
	return v.value
}

func (v *NullableV1ContainerStatus) Set(val *V1ContainerStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableV1ContainerStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableV1ContainerStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1ContainerStatus(val *V1ContainerStatus) *NullableV1ContainerStatus {
	return &NullableV1ContainerStatus{value: val, isSet: true}
}

func (v NullableV1ContainerStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1ContainerStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


