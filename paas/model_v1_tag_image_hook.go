/*
Arvancloud PaaS REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.11
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package paas

import (
	"encoding/json"
)

// checks if the V1TagImageHook type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1TagImageHook{}

// V1TagImageHook TagImageHook is a request to tag the image in a particular container onto an ImageStreamTag.
type V1TagImageHook struct {
	// ContainerName is the name of a container in the deployment config whose image value will be used as the source of the tag. If there is only a single container this value will be defaulted to the name of that container.
	ContainerName string `json:"containerName"`
	To V1ObjectReference `json:"to"`
}

// NewV1TagImageHook instantiates a new V1TagImageHook object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1TagImageHook(containerName string, to V1ObjectReference) *V1TagImageHook {
	this := V1TagImageHook{}
	this.ContainerName = containerName
	this.To = to
	return &this
}

// NewV1TagImageHookWithDefaults instantiates a new V1TagImageHook object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1TagImageHookWithDefaults() *V1TagImageHook {
	this := V1TagImageHook{}
	return &this
}

// GetContainerName returns the ContainerName field value
func (o *V1TagImageHook) GetContainerName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ContainerName
}

// GetContainerNameOk returns a tuple with the ContainerName field value
// and a boolean to check if the value has been set.
func (o *V1TagImageHook) GetContainerNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ContainerName, true
}

// SetContainerName sets field value
func (o *V1TagImageHook) SetContainerName(v string) {
	o.ContainerName = v
}

// GetTo returns the To field value
func (o *V1TagImageHook) GetTo() V1ObjectReference {
	if o == nil {
		var ret V1ObjectReference
		return ret
	}

	return o.To
}

// GetToOk returns a tuple with the To field value
// and a boolean to check if the value has been set.
func (o *V1TagImageHook) GetToOk() (*V1ObjectReference, bool) {
	if o == nil {
		return nil, false
	}
	return &o.To, true
}

// SetTo sets field value
func (o *V1TagImageHook) SetTo(v V1ObjectReference) {
	o.To = v
}

func (o V1TagImageHook) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1TagImageHook) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["containerName"] = o.ContainerName
	toSerialize["to"] = o.To
	return toSerialize, nil
}

type NullableV1TagImageHook struct {
	value *V1TagImageHook
	isSet bool
}

func (v NullableV1TagImageHook) Get() *V1TagImageHook {
	return v.value
}

func (v *NullableV1TagImageHook) Set(val *V1TagImageHook) {
	v.value = val
	v.isSet = true
}

func (v NullableV1TagImageHook) IsSet() bool {
	return v.isSet
}

func (v *NullableV1TagImageHook) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1TagImageHook(val *V1TagImageHook) *NullableV1TagImageHook {
	return &NullableV1TagImageHook{value: val, isSet: true}
}

func (v NullableV1TagImageHook) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1TagImageHook) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


