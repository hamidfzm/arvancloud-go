/*
Arvancloud PaaS REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.11
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package paas

import (
	"encoding/json"
)

// checks if the V1DeploymentDetails type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1DeploymentDetails{}

// V1DeploymentDetails DeploymentDetails captures information about the causes of a deployment.
type V1DeploymentDetails struct {
	// Causes are extended data associated with all the causes for creating a new deployment
	Causes []V1DeploymentCause `json:"causes"`
	// Message is the user specified change message, if this deployment was triggered manually by the user
	Message *string `json:"message,omitempty"`
}

// NewV1DeploymentDetails instantiates a new V1DeploymentDetails object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1DeploymentDetails(causes []V1DeploymentCause) *V1DeploymentDetails {
	this := V1DeploymentDetails{}
	this.Causes = causes
	return &this
}

// NewV1DeploymentDetailsWithDefaults instantiates a new V1DeploymentDetails object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1DeploymentDetailsWithDefaults() *V1DeploymentDetails {
	this := V1DeploymentDetails{}
	return &this
}

// GetCauses returns the Causes field value
func (o *V1DeploymentDetails) GetCauses() []V1DeploymentCause {
	if o == nil {
		var ret []V1DeploymentCause
		return ret
	}

	return o.Causes
}

// GetCausesOk returns a tuple with the Causes field value
// and a boolean to check if the value has been set.
func (o *V1DeploymentDetails) GetCausesOk() ([]V1DeploymentCause, bool) {
	if o == nil {
		return nil, false
	}
	return o.Causes, true
}

// SetCauses sets field value
func (o *V1DeploymentDetails) SetCauses(v []V1DeploymentCause) {
	o.Causes = v
}

// GetMessage returns the Message field value if set, zero value otherwise.
func (o *V1DeploymentDetails) GetMessage() string {
	if o == nil || IsNil(o.Message) {
		var ret string
		return ret
	}
	return *o.Message
}

// GetMessageOk returns a tuple with the Message field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DeploymentDetails) GetMessageOk() (*string, bool) {
	if o == nil || IsNil(o.Message) {
		return nil, false
	}
	return o.Message, true
}

// HasMessage returns a boolean if a field has been set.
func (o *V1DeploymentDetails) HasMessage() bool {
	if o != nil && !IsNil(o.Message) {
		return true
	}

	return false
}

// SetMessage gets a reference to the given string and assigns it to the Message field.
func (o *V1DeploymentDetails) SetMessage(v string) {
	o.Message = &v
}

func (o V1DeploymentDetails) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1DeploymentDetails) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["causes"] = o.Causes
	if !IsNil(o.Message) {
		toSerialize["message"] = o.Message
	}
	return toSerialize, nil
}

type NullableV1DeploymentDetails struct {
	value *V1DeploymentDetails
	isSet bool
}

func (v NullableV1DeploymentDetails) Get() *V1DeploymentDetails {
	return v.value
}

func (v *NullableV1DeploymentDetails) Set(val *V1DeploymentDetails) {
	v.value = val
	v.isSet = true
}

func (v NullableV1DeploymentDetails) IsSet() bool {
	return v.isSet
}

func (v *NullableV1DeploymentDetails) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1DeploymentDetails(val *V1DeploymentDetails) *NullableV1DeploymentDetails {
	return &NullableV1DeploymentDetails{value: val, isSet: true}
}

func (v NullableV1DeploymentDetails) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1DeploymentDetails) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


