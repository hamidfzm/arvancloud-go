/*
Arvancloud PaaS REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.11
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package paas

import (
	"encoding/json"
)

// checks if the V1DockerStrategyOptions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1DockerStrategyOptions{}

// V1DockerStrategyOptions DockerStrategyOptions contains extra strategy options for Docker builds
type V1DockerStrategyOptions struct {
	// Args contains any build arguments that are to be passed to Docker.  See https://docs.docker.com/engine/reference/builder/#/arg for more details
	BuildArgs []V1EnvVar `json:"buildArgs,omitempty"`
	// noCache overrides the docker-strategy noCache option in the build config
	NoCache *bool `json:"noCache,omitempty"`
}

// NewV1DockerStrategyOptions instantiates a new V1DockerStrategyOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1DockerStrategyOptions() *V1DockerStrategyOptions {
	this := V1DockerStrategyOptions{}
	return &this
}

// NewV1DockerStrategyOptionsWithDefaults instantiates a new V1DockerStrategyOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1DockerStrategyOptionsWithDefaults() *V1DockerStrategyOptions {
	this := V1DockerStrategyOptions{}
	return &this
}

// GetBuildArgs returns the BuildArgs field value if set, zero value otherwise.
func (o *V1DockerStrategyOptions) GetBuildArgs() []V1EnvVar {
	if o == nil || IsNil(o.BuildArgs) {
		var ret []V1EnvVar
		return ret
	}
	return o.BuildArgs
}

// GetBuildArgsOk returns a tuple with the BuildArgs field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DockerStrategyOptions) GetBuildArgsOk() ([]V1EnvVar, bool) {
	if o == nil || IsNil(o.BuildArgs) {
		return nil, false
	}
	return o.BuildArgs, true
}

// HasBuildArgs returns a boolean if a field has been set.
func (o *V1DockerStrategyOptions) HasBuildArgs() bool {
	if o != nil && !IsNil(o.BuildArgs) {
		return true
	}

	return false
}

// SetBuildArgs gets a reference to the given []V1EnvVar and assigns it to the BuildArgs field.
func (o *V1DockerStrategyOptions) SetBuildArgs(v []V1EnvVar) {
	o.BuildArgs = v
}

// GetNoCache returns the NoCache field value if set, zero value otherwise.
func (o *V1DockerStrategyOptions) GetNoCache() bool {
	if o == nil || IsNil(o.NoCache) {
		var ret bool
		return ret
	}
	return *o.NoCache
}

// GetNoCacheOk returns a tuple with the NoCache field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1DockerStrategyOptions) GetNoCacheOk() (*bool, bool) {
	if o == nil || IsNil(o.NoCache) {
		return nil, false
	}
	return o.NoCache, true
}

// HasNoCache returns a boolean if a field has been set.
func (o *V1DockerStrategyOptions) HasNoCache() bool {
	if o != nil && !IsNil(o.NoCache) {
		return true
	}

	return false
}

// SetNoCache gets a reference to the given bool and assigns it to the NoCache field.
func (o *V1DockerStrategyOptions) SetNoCache(v bool) {
	o.NoCache = &v
}

func (o V1DockerStrategyOptions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1DockerStrategyOptions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.BuildArgs) {
		toSerialize["buildArgs"] = o.BuildArgs
	}
	if !IsNil(o.NoCache) {
		toSerialize["noCache"] = o.NoCache
	}
	return toSerialize, nil
}

type NullableV1DockerStrategyOptions struct {
	value *V1DockerStrategyOptions
	isSet bool
}

func (v NullableV1DockerStrategyOptions) Get() *V1DockerStrategyOptions {
	return v.value
}

func (v *NullableV1DockerStrategyOptions) Set(val *V1DockerStrategyOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableV1DockerStrategyOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableV1DockerStrategyOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1DockerStrategyOptions(val *V1DockerStrategyOptions) *NullableV1DockerStrategyOptions {
	return &NullableV1DockerStrategyOptions{value: val, isSet: true}
}

func (v NullableV1DockerStrategyOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1DockerStrategyOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


