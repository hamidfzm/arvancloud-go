/*
Arvancloud PaaS REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.11
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package paas

import (
	"encoding/json"
)

// checks if the V1TemplateInstanceList type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1TemplateInstanceList{}

// V1TemplateInstanceList TemplateInstanceList is a list of TemplateInstance objects.
type V1TemplateInstanceList struct {
	// APIVersion defines the versioned schema of this representation of an object. Servers should convert recognized schemas to the latest internal value, and may reject unrecognized values. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#resources
	ApiVersion *string `json:"apiVersion,omitempty"`
	// items is a list of Templateinstances
	Items []V1TemplateInstance `json:"items"`
	// Kind is a string value representing the REST resource this object represents. Servers may infer this from the endpoint the client submits requests to. Cannot be updated. In CamelCase. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#types-kinds
	Kind *string `json:"kind,omitempty"`
	Metadata *V1ListMeta `json:"metadata,omitempty"`
}

// NewV1TemplateInstanceList instantiates a new V1TemplateInstanceList object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1TemplateInstanceList(items []V1TemplateInstance) *V1TemplateInstanceList {
	this := V1TemplateInstanceList{}
	this.Items = items
	return &this
}

// NewV1TemplateInstanceListWithDefaults instantiates a new V1TemplateInstanceList object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1TemplateInstanceListWithDefaults() *V1TemplateInstanceList {
	this := V1TemplateInstanceList{}
	return &this
}

// GetApiVersion returns the ApiVersion field value if set, zero value otherwise.
func (o *V1TemplateInstanceList) GetApiVersion() string {
	if o == nil || IsNil(o.ApiVersion) {
		var ret string
		return ret
	}
	return *o.ApiVersion
}

// GetApiVersionOk returns a tuple with the ApiVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1TemplateInstanceList) GetApiVersionOk() (*string, bool) {
	if o == nil || IsNil(o.ApiVersion) {
		return nil, false
	}
	return o.ApiVersion, true
}

// HasApiVersion returns a boolean if a field has been set.
func (o *V1TemplateInstanceList) HasApiVersion() bool {
	if o != nil && !IsNil(o.ApiVersion) {
		return true
	}

	return false
}

// SetApiVersion gets a reference to the given string and assigns it to the ApiVersion field.
func (o *V1TemplateInstanceList) SetApiVersion(v string) {
	o.ApiVersion = &v
}

// GetItems returns the Items field value
func (o *V1TemplateInstanceList) GetItems() []V1TemplateInstance {
	if o == nil {
		var ret []V1TemplateInstance
		return ret
	}

	return o.Items
}

// GetItemsOk returns a tuple with the Items field value
// and a boolean to check if the value has been set.
func (o *V1TemplateInstanceList) GetItemsOk() ([]V1TemplateInstance, bool) {
	if o == nil {
		return nil, false
	}
	return o.Items, true
}

// SetItems sets field value
func (o *V1TemplateInstanceList) SetItems(v []V1TemplateInstance) {
	o.Items = v
}

// GetKind returns the Kind field value if set, zero value otherwise.
func (o *V1TemplateInstanceList) GetKind() string {
	if o == nil || IsNil(o.Kind) {
		var ret string
		return ret
	}
	return *o.Kind
}

// GetKindOk returns a tuple with the Kind field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1TemplateInstanceList) GetKindOk() (*string, bool) {
	if o == nil || IsNil(o.Kind) {
		return nil, false
	}
	return o.Kind, true
}

// HasKind returns a boolean if a field has been set.
func (o *V1TemplateInstanceList) HasKind() bool {
	if o != nil && !IsNil(o.Kind) {
		return true
	}

	return false
}

// SetKind gets a reference to the given string and assigns it to the Kind field.
func (o *V1TemplateInstanceList) SetKind(v string) {
	o.Kind = &v
}

// GetMetadata returns the Metadata field value if set, zero value otherwise.
func (o *V1TemplateInstanceList) GetMetadata() V1ListMeta {
	if o == nil || IsNil(o.Metadata) {
		var ret V1ListMeta
		return ret
	}
	return *o.Metadata
}

// GetMetadataOk returns a tuple with the Metadata field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1TemplateInstanceList) GetMetadataOk() (*V1ListMeta, bool) {
	if o == nil || IsNil(o.Metadata) {
		return nil, false
	}
	return o.Metadata, true
}

// HasMetadata returns a boolean if a field has been set.
func (o *V1TemplateInstanceList) HasMetadata() bool {
	if o != nil && !IsNil(o.Metadata) {
		return true
	}

	return false
}

// SetMetadata gets a reference to the given V1ListMeta and assigns it to the Metadata field.
func (o *V1TemplateInstanceList) SetMetadata(v V1ListMeta) {
	o.Metadata = &v
}

func (o V1TemplateInstanceList) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1TemplateInstanceList) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.ApiVersion) {
		toSerialize["apiVersion"] = o.ApiVersion
	}
	toSerialize["items"] = o.Items
	if !IsNil(o.Kind) {
		toSerialize["kind"] = o.Kind
	}
	if !IsNil(o.Metadata) {
		toSerialize["metadata"] = o.Metadata
	}
	return toSerialize, nil
}

type NullableV1TemplateInstanceList struct {
	value *V1TemplateInstanceList
	isSet bool
}

func (v NullableV1TemplateInstanceList) Get() *V1TemplateInstanceList {
	return v.value
}

func (v *NullableV1TemplateInstanceList) Set(val *V1TemplateInstanceList) {
	v.value = val
	v.isSet = true
}

func (v NullableV1TemplateInstanceList) IsSet() bool {
	return v.isSet
}

func (v *NullableV1TemplateInstanceList) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1TemplateInstanceList(val *V1TemplateInstanceList) *NullableV1TemplateInstanceList {
	return &NullableV1TemplateInstanceList{value: val, isSet: true}
}

func (v NullableV1TemplateInstanceList) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1TemplateInstanceList) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


