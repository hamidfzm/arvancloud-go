/*
Arvancloud PaaS REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.11
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package paas

import (
	"encoding/json"
)

// checks if the V1AttachedVolume type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1AttachedVolume{}

// V1AttachedVolume AttachedVolume describes a volume attached to a node
type V1AttachedVolume struct {
	// DevicePath represents the device path where the volume should be available
	DevicePath string `json:"devicePath"`
	// Name of the attached volume
	Name string `json:"name"`
}

// NewV1AttachedVolume instantiates a new V1AttachedVolume object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1AttachedVolume(devicePath string, name string) *V1AttachedVolume {
	this := V1AttachedVolume{}
	this.DevicePath = devicePath
	this.Name = name
	return &this
}

// NewV1AttachedVolumeWithDefaults instantiates a new V1AttachedVolume object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1AttachedVolumeWithDefaults() *V1AttachedVolume {
	this := V1AttachedVolume{}
	return &this
}

// GetDevicePath returns the DevicePath field value
func (o *V1AttachedVolume) GetDevicePath() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.DevicePath
}

// GetDevicePathOk returns a tuple with the DevicePath field value
// and a boolean to check if the value has been set.
func (o *V1AttachedVolume) GetDevicePathOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.DevicePath, true
}

// SetDevicePath sets field value
func (o *V1AttachedVolume) SetDevicePath(v string) {
	o.DevicePath = v
}

// GetName returns the Name field value
func (o *V1AttachedVolume) GetName() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Name
}

// GetNameOk returns a tuple with the Name field value
// and a boolean to check if the value has been set.
func (o *V1AttachedVolume) GetNameOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Name, true
}

// SetName sets field value
func (o *V1AttachedVolume) SetName(v string) {
	o.Name = v
}

func (o V1AttachedVolume) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1AttachedVolume) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["devicePath"] = o.DevicePath
	toSerialize["name"] = o.Name
	return toSerialize, nil
}

type NullableV1AttachedVolume struct {
	value *V1AttachedVolume
	isSet bool
}

func (v NullableV1AttachedVolume) Get() *V1AttachedVolume {
	return v.value
}

func (v *NullableV1AttachedVolume) Set(val *V1AttachedVolume) {
	v.value = val
	v.isSet = true
}

func (v NullableV1AttachedVolume) IsSet() bool {
	return v.isSet
}

func (v *NullableV1AttachedVolume) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1AttachedVolume(val *V1AttachedVolume) *NullableV1AttachedVolume {
	return &NullableV1AttachedVolume{value: val, isSet: true}
}

func (v NullableV1AttachedVolume) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1AttachedVolume) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


