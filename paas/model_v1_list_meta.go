/*
Arvancloud PaaS REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.11
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package paas

import (
	"encoding/json"
)

// checks if the V1ListMeta type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1ListMeta{}

// V1ListMeta ListMeta describes metadata that synthetic resources must have, including lists and various status objects. A resource may have only one of {ObjectMeta, ListMeta}.
type V1ListMeta struct {
	// continue may be set if the user set a limit on the number of items returned, and indicates that the server has more data available. The value is opaque and may be used to issue another request to the endpoint that served this list to retrieve the next set of available objects. Continuing a list may not be possible if the server configuration has changed or more than a few minutes have passed. The resourceVersion field returned when using this continue value will be identical to the value in the first response.
	Continue *string `json:"continue,omitempty"`
	// String that identifies the server's internal version of this object that can be used by clients to determine when objects have changed. Value must be treated as opaque by clients and passed unmodified back to the server. Populated by the system. Read-only. More info: https://git.k8s.io/community/contributors/devel/api-conventions.md#concurrency-control-and-consistency
	ResourceVersion *string `json:"resourceVersion,omitempty"`
	// selfLink is a URL representing this object. Populated by the system. Read-only.
	SelfLink *string `json:"selfLink,omitempty"`
}

// NewV1ListMeta instantiates a new V1ListMeta object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1ListMeta() *V1ListMeta {
	this := V1ListMeta{}
	return &this
}

// NewV1ListMetaWithDefaults instantiates a new V1ListMeta object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1ListMetaWithDefaults() *V1ListMeta {
	this := V1ListMeta{}
	return &this
}

// GetContinue returns the Continue field value if set, zero value otherwise.
func (o *V1ListMeta) GetContinue() string {
	if o == nil || IsNil(o.Continue) {
		var ret string
		return ret
	}
	return *o.Continue
}

// GetContinueOk returns a tuple with the Continue field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ListMeta) GetContinueOk() (*string, bool) {
	if o == nil || IsNil(o.Continue) {
		return nil, false
	}
	return o.Continue, true
}

// HasContinue returns a boolean if a field has been set.
func (o *V1ListMeta) HasContinue() bool {
	if o != nil && !IsNil(o.Continue) {
		return true
	}

	return false
}

// SetContinue gets a reference to the given string and assigns it to the Continue field.
func (o *V1ListMeta) SetContinue(v string) {
	o.Continue = &v
}

// GetResourceVersion returns the ResourceVersion field value if set, zero value otherwise.
func (o *V1ListMeta) GetResourceVersion() string {
	if o == nil || IsNil(o.ResourceVersion) {
		var ret string
		return ret
	}
	return *o.ResourceVersion
}

// GetResourceVersionOk returns a tuple with the ResourceVersion field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ListMeta) GetResourceVersionOk() (*string, bool) {
	if o == nil || IsNil(o.ResourceVersion) {
		return nil, false
	}
	return o.ResourceVersion, true
}

// HasResourceVersion returns a boolean if a field has been set.
func (o *V1ListMeta) HasResourceVersion() bool {
	if o != nil && !IsNil(o.ResourceVersion) {
		return true
	}

	return false
}

// SetResourceVersion gets a reference to the given string and assigns it to the ResourceVersion field.
func (o *V1ListMeta) SetResourceVersion(v string) {
	o.ResourceVersion = &v
}

// GetSelfLink returns the SelfLink field value if set, zero value otherwise.
func (o *V1ListMeta) GetSelfLink() string {
	if o == nil || IsNil(o.SelfLink) {
		var ret string
		return ret
	}
	return *o.SelfLink
}

// GetSelfLinkOk returns a tuple with the SelfLink field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ListMeta) GetSelfLinkOk() (*string, bool) {
	if o == nil || IsNil(o.SelfLink) {
		return nil, false
	}
	return o.SelfLink, true
}

// HasSelfLink returns a boolean if a field has been set.
func (o *V1ListMeta) HasSelfLink() bool {
	if o != nil && !IsNil(o.SelfLink) {
		return true
	}

	return false
}

// SetSelfLink gets a reference to the given string and assigns it to the SelfLink field.
func (o *V1ListMeta) SetSelfLink(v string) {
	o.SelfLink = &v
}

func (o V1ListMeta) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1ListMeta) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Continue) {
		toSerialize["continue"] = o.Continue
	}
	if !IsNil(o.ResourceVersion) {
		toSerialize["resourceVersion"] = o.ResourceVersion
	}
	if !IsNil(o.SelfLink) {
		toSerialize["selfLink"] = o.SelfLink
	}
	return toSerialize, nil
}

type NullableV1ListMeta struct {
	value *V1ListMeta
	isSet bool
}

func (v NullableV1ListMeta) Get() *V1ListMeta {
	return v.value
}

func (v *NullableV1ListMeta) Set(val *V1ListMeta) {
	v.value = val
	v.isSet = true
}

func (v NullableV1ListMeta) IsSet() bool {
	return v.isSet
}

func (v *NullableV1ListMeta) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1ListMeta(val *V1ListMeta) *NullableV1ListMeta {
	return &NullableV1ListMeta{value: val, isSet: true}
}

func (v NullableV1ListMeta) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1ListMeta) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


