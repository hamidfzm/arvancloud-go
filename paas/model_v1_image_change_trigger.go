/*
Arvancloud PaaS REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.11
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package paas

import (
	"encoding/json"
)

// checks if the V1ImageChangeTrigger type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1ImageChangeTrigger{}

// V1ImageChangeTrigger ImageChangeTrigger allows builds to be triggered when an ImageStream changes
type V1ImageChangeTrigger struct {
	From *V1ObjectReference `json:"from,omitempty"`
	// lastTriggeredImageID is used internally by the ImageChangeController to save last used image ID for build
	LastTriggeredImageID *string `json:"lastTriggeredImageID,omitempty"`
	// paused is true if this trigger is temporarily disabled. Optional.
	Paused *bool `json:"paused,omitempty"`
}

// NewV1ImageChangeTrigger instantiates a new V1ImageChangeTrigger object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1ImageChangeTrigger() *V1ImageChangeTrigger {
	this := V1ImageChangeTrigger{}
	return &this
}

// NewV1ImageChangeTriggerWithDefaults instantiates a new V1ImageChangeTrigger object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1ImageChangeTriggerWithDefaults() *V1ImageChangeTrigger {
	this := V1ImageChangeTrigger{}
	return &this
}

// GetFrom returns the From field value if set, zero value otherwise.
func (o *V1ImageChangeTrigger) GetFrom() V1ObjectReference {
	if o == nil || IsNil(o.From) {
		var ret V1ObjectReference
		return ret
	}
	return *o.From
}

// GetFromOk returns a tuple with the From field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ImageChangeTrigger) GetFromOk() (*V1ObjectReference, bool) {
	if o == nil || IsNil(o.From) {
		return nil, false
	}
	return o.From, true
}

// HasFrom returns a boolean if a field has been set.
func (o *V1ImageChangeTrigger) HasFrom() bool {
	if o != nil && !IsNil(o.From) {
		return true
	}

	return false
}

// SetFrom gets a reference to the given V1ObjectReference and assigns it to the From field.
func (o *V1ImageChangeTrigger) SetFrom(v V1ObjectReference) {
	o.From = &v
}

// GetLastTriggeredImageID returns the LastTriggeredImageID field value if set, zero value otherwise.
func (o *V1ImageChangeTrigger) GetLastTriggeredImageID() string {
	if o == nil || IsNil(o.LastTriggeredImageID) {
		var ret string
		return ret
	}
	return *o.LastTriggeredImageID
}

// GetLastTriggeredImageIDOk returns a tuple with the LastTriggeredImageID field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ImageChangeTrigger) GetLastTriggeredImageIDOk() (*string, bool) {
	if o == nil || IsNil(o.LastTriggeredImageID) {
		return nil, false
	}
	return o.LastTriggeredImageID, true
}

// HasLastTriggeredImageID returns a boolean if a field has been set.
func (o *V1ImageChangeTrigger) HasLastTriggeredImageID() bool {
	if o != nil && !IsNil(o.LastTriggeredImageID) {
		return true
	}

	return false
}

// SetLastTriggeredImageID gets a reference to the given string and assigns it to the LastTriggeredImageID field.
func (o *V1ImageChangeTrigger) SetLastTriggeredImageID(v string) {
	o.LastTriggeredImageID = &v
}

// GetPaused returns the Paused field value if set, zero value otherwise.
func (o *V1ImageChangeTrigger) GetPaused() bool {
	if o == nil || IsNil(o.Paused) {
		var ret bool
		return ret
	}
	return *o.Paused
}

// GetPausedOk returns a tuple with the Paused field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ImageChangeTrigger) GetPausedOk() (*bool, bool) {
	if o == nil || IsNil(o.Paused) {
		return nil, false
	}
	return o.Paused, true
}

// HasPaused returns a boolean if a field has been set.
func (o *V1ImageChangeTrigger) HasPaused() bool {
	if o != nil && !IsNil(o.Paused) {
		return true
	}

	return false
}

// SetPaused gets a reference to the given bool and assigns it to the Paused field.
func (o *V1ImageChangeTrigger) SetPaused(v bool) {
	o.Paused = &v
}

func (o V1ImageChangeTrigger) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1ImageChangeTrigger) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.From) {
		toSerialize["from"] = o.From
	}
	if !IsNil(o.LastTriggeredImageID) {
		toSerialize["lastTriggeredImageID"] = o.LastTriggeredImageID
	}
	if !IsNil(o.Paused) {
		toSerialize["paused"] = o.Paused
	}
	return toSerialize, nil
}

type NullableV1ImageChangeTrigger struct {
	value *V1ImageChangeTrigger
	isSet bool
}

func (v NullableV1ImageChangeTrigger) Get() *V1ImageChangeTrigger {
	return v.value
}

func (v *NullableV1ImageChangeTrigger) Set(val *V1ImageChangeTrigger) {
	v.value = val
	v.isSet = true
}

func (v NullableV1ImageChangeTrigger) IsSet() bool {
	return v.isSet
}

func (v *NullableV1ImageChangeTrigger) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1ImageChangeTrigger(val *V1ImageChangeTrigger) *NullableV1ImageChangeTrigger {
	return &NullableV1ImageChangeTrigger{value: val, isSet: true}
}

func (v NullableV1ImageChangeTrigger) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1ImageChangeTrigger) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


