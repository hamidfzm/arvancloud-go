/*
Arvancloud PaaS REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.11
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package paas

import (
	"encoding/json"
)

// checks if the V1ImageImportStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1ImageImportStatus{}

// V1ImageImportStatus ImageImportStatus describes the result of an image import.
type V1ImageImportStatus struct {
	Image *V1Image `json:"image,omitempty"`
	Status V1Status `json:"status"`
	// Tag is the tag this image was located under, if any
	Tag *string `json:"tag,omitempty"`
}

// NewV1ImageImportStatus instantiates a new V1ImageImportStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1ImageImportStatus(status V1Status) *V1ImageImportStatus {
	this := V1ImageImportStatus{}
	this.Status = status
	return &this
}

// NewV1ImageImportStatusWithDefaults instantiates a new V1ImageImportStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1ImageImportStatusWithDefaults() *V1ImageImportStatus {
	this := V1ImageImportStatus{}
	return &this
}

// GetImage returns the Image field value if set, zero value otherwise.
func (o *V1ImageImportStatus) GetImage() V1Image {
	if o == nil || IsNil(o.Image) {
		var ret V1Image
		return ret
	}
	return *o.Image
}

// GetImageOk returns a tuple with the Image field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ImageImportStatus) GetImageOk() (*V1Image, bool) {
	if o == nil || IsNil(o.Image) {
		return nil, false
	}
	return o.Image, true
}

// HasImage returns a boolean if a field has been set.
func (o *V1ImageImportStatus) HasImage() bool {
	if o != nil && !IsNil(o.Image) {
		return true
	}

	return false
}

// SetImage gets a reference to the given V1Image and assigns it to the Image field.
func (o *V1ImageImportStatus) SetImage(v V1Image) {
	o.Image = &v
}

// GetStatus returns the Status field value
func (o *V1ImageImportStatus) GetStatus() V1Status {
	if o == nil {
		var ret V1Status
		return ret
	}

	return o.Status
}

// GetStatusOk returns a tuple with the Status field value
// and a boolean to check if the value has been set.
func (o *V1ImageImportStatus) GetStatusOk() (*V1Status, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Status, true
}

// SetStatus sets field value
func (o *V1ImageImportStatus) SetStatus(v V1Status) {
	o.Status = v
}

// GetTag returns the Tag field value if set, zero value otherwise.
func (o *V1ImageImportStatus) GetTag() string {
	if o == nil || IsNil(o.Tag) {
		var ret string
		return ret
	}
	return *o.Tag
}

// GetTagOk returns a tuple with the Tag field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ImageImportStatus) GetTagOk() (*string, bool) {
	if o == nil || IsNil(o.Tag) {
		return nil, false
	}
	return o.Tag, true
}

// HasTag returns a boolean if a field has been set.
func (o *V1ImageImportStatus) HasTag() bool {
	if o != nil && !IsNil(o.Tag) {
		return true
	}

	return false
}

// SetTag gets a reference to the given string and assigns it to the Tag field.
func (o *V1ImageImportStatus) SetTag(v string) {
	o.Tag = &v
}

func (o V1ImageImportStatus) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1ImageImportStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Image) {
		toSerialize["image"] = o.Image
	}
	toSerialize["status"] = o.Status
	if !IsNil(o.Tag) {
		toSerialize["tag"] = o.Tag
	}
	return toSerialize, nil
}

type NullableV1ImageImportStatus struct {
	value *V1ImageImportStatus
	isSet bool
}

func (v NullableV1ImageImportStatus) Get() *V1ImageImportStatus {
	return v.value
}

func (v *NullableV1ImageImportStatus) Set(val *V1ImageImportStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableV1ImageImportStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableV1ImageImportStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1ImageImportStatus(val *V1ImageImportStatus) *NullableV1ImageImportStatus {
	return &NullableV1ImageImportStatus{value: val, isSet: true}
}

func (v NullableV1ImageImportStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1ImageImportStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


