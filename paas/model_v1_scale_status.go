/*
Arvancloud PaaS REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.11
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package paas

import (
	"encoding/json"
)

// checks if the V1ScaleStatus type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1ScaleStatus{}

// V1ScaleStatus ScaleStatus represents the current status of a scale subresource.
type V1ScaleStatus struct {
	// actual number of observed instances of the scaled object.
	Replicas int32 `json:"replicas"`
	// label query over pods that should match the replicas count. This is same as the label selector but in the string format to avoid introspection by clients. The string will be in the same format as the query-param syntax. More info about label selectors: http://kubernetes.io/docs/user-guide/labels#label-selectors
	Selector *string `json:"selector,omitempty"`
}

// NewV1ScaleStatus instantiates a new V1ScaleStatus object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1ScaleStatus(replicas int32) *V1ScaleStatus {
	this := V1ScaleStatus{}
	this.Replicas = replicas
	return &this
}

// NewV1ScaleStatusWithDefaults instantiates a new V1ScaleStatus object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1ScaleStatusWithDefaults() *V1ScaleStatus {
	this := V1ScaleStatus{}
	return &this
}

// GetReplicas returns the Replicas field value
func (o *V1ScaleStatus) GetReplicas() int32 {
	if o == nil {
		var ret int32
		return ret
	}

	return o.Replicas
}

// GetReplicasOk returns a tuple with the Replicas field value
// and a boolean to check if the value has been set.
func (o *V1ScaleStatus) GetReplicasOk() (*int32, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Replicas, true
}

// SetReplicas sets field value
func (o *V1ScaleStatus) SetReplicas(v int32) {
	o.Replicas = v
}

// GetSelector returns the Selector field value if set, zero value otherwise.
func (o *V1ScaleStatus) GetSelector() string {
	if o == nil || IsNil(o.Selector) {
		var ret string
		return ret
	}
	return *o.Selector
}

// GetSelectorOk returns a tuple with the Selector field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1ScaleStatus) GetSelectorOk() (*string, bool) {
	if o == nil || IsNil(o.Selector) {
		return nil, false
	}
	return o.Selector, true
}

// HasSelector returns a boolean if a field has been set.
func (o *V1ScaleStatus) HasSelector() bool {
	if o != nil && !IsNil(o.Selector) {
		return true
	}

	return false
}

// SetSelector gets a reference to the given string and assigns it to the Selector field.
func (o *V1ScaleStatus) SetSelector(v string) {
	o.Selector = &v
}

func (o V1ScaleStatus) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1ScaleStatus) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["replicas"] = o.Replicas
	if !IsNil(o.Selector) {
		toSerialize["selector"] = o.Selector
	}
	return toSerialize, nil
}

type NullableV1ScaleStatus struct {
	value *V1ScaleStatus
	isSet bool
}

func (v NullableV1ScaleStatus) Get() *V1ScaleStatus {
	return v.value
}

func (v *NullableV1ScaleStatus) Set(val *V1ScaleStatus) {
	v.value = val
	v.isSet = true
}

func (v NullableV1ScaleStatus) IsSet() bool {
	return v.isSet
}

func (v *NullableV1ScaleStatus) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1ScaleStatus(val *V1ScaleStatus) *NullableV1ScaleStatus {
	return &NullableV1ScaleStatus{value: val, isSet: true}
}

func (v NullableV1ScaleStatus) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1ScaleStatus) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


