/*
Arvancloud PaaS REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.11
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package paas

import (
	"encoding/json"
)

// checks if the V1SecretBuildSource type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1SecretBuildSource{}

// V1SecretBuildSource SecretBuildSource describes a secret and its destination directory that will be used only at the build time. The content of the secret referenced here will be copied into the destination directory instead of mounting.
type V1SecretBuildSource struct {
	// destinationDir is the directory where the files from the secret should be available for the build time. For the Source build strategy, these will be injected into a container where the assemble script runs. Later, when the script finishes, all files injected will be truncated to zero length. For the Docker build strategy, these will be copied into the build directory, where the Dockerfile is located, so users can ADD or COPY them during docker build.
	DestinationDir *string `json:"destinationDir,omitempty"`
	Secret V1LocalObjectReference `json:"secret"`
}

// NewV1SecretBuildSource instantiates a new V1SecretBuildSource object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1SecretBuildSource(secret V1LocalObjectReference) *V1SecretBuildSource {
	this := V1SecretBuildSource{}
	this.Secret = secret
	return &this
}

// NewV1SecretBuildSourceWithDefaults instantiates a new V1SecretBuildSource object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1SecretBuildSourceWithDefaults() *V1SecretBuildSource {
	this := V1SecretBuildSource{}
	return &this
}

// GetDestinationDir returns the DestinationDir field value if set, zero value otherwise.
func (o *V1SecretBuildSource) GetDestinationDir() string {
	if o == nil || IsNil(o.DestinationDir) {
		var ret string
		return ret
	}
	return *o.DestinationDir
}

// GetDestinationDirOk returns a tuple with the DestinationDir field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1SecretBuildSource) GetDestinationDirOk() (*string, bool) {
	if o == nil || IsNil(o.DestinationDir) {
		return nil, false
	}
	return o.DestinationDir, true
}

// HasDestinationDir returns a boolean if a field has been set.
func (o *V1SecretBuildSource) HasDestinationDir() bool {
	if o != nil && !IsNil(o.DestinationDir) {
		return true
	}

	return false
}

// SetDestinationDir gets a reference to the given string and assigns it to the DestinationDir field.
func (o *V1SecretBuildSource) SetDestinationDir(v string) {
	o.DestinationDir = &v
}

// GetSecret returns the Secret field value
func (o *V1SecretBuildSource) GetSecret() V1LocalObjectReference {
	if o == nil {
		var ret V1LocalObjectReference
		return ret
	}

	return o.Secret
}

// GetSecretOk returns a tuple with the Secret field value
// and a boolean to check if the value has been set.
func (o *V1SecretBuildSource) GetSecretOk() (*V1LocalObjectReference, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Secret, true
}

// SetSecret sets field value
func (o *V1SecretBuildSource) SetSecret(v V1LocalObjectReference) {
	o.Secret = v
}

func (o V1SecretBuildSource) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1SecretBuildSource) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DestinationDir) {
		toSerialize["destinationDir"] = o.DestinationDir
	}
	toSerialize["secret"] = o.Secret
	return toSerialize, nil
}

type NullableV1SecretBuildSource struct {
	value *V1SecretBuildSource
	isSet bool
}

func (v NullableV1SecretBuildSource) Get() *V1SecretBuildSource {
	return v.value
}

func (v *NullableV1SecretBuildSource) Set(val *V1SecretBuildSource) {
	v.value = val
	v.isSet = true
}

func (v NullableV1SecretBuildSource) IsSet() bool {
	return v.isSet
}

func (v *NullableV1SecretBuildSource) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1SecretBuildSource(val *V1SecretBuildSource) *NullableV1SecretBuildSource {
	return &NullableV1SecretBuildSource{value: val, isSet: true}
}

func (v NullableV1SecretBuildSource) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1SecretBuildSource) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


