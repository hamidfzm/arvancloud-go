/*
Arvancloud PaaS REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.11
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package paas

import (
	"encoding/json"
)

// checks if the V1FSGroupStrategyOptions type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1FSGroupStrategyOptions{}

// V1FSGroupStrategyOptions FSGroupStrategyOptions defines the strategy type and options used to create the strategy.
type V1FSGroupStrategyOptions struct {
	// Ranges are the allowed ranges of fs groups.  If you would like to force a single fs group then supply a single range with the same start and end.
	Ranges []V1IDRange `json:"ranges,omitempty"`
	// Type is the strategy that will dictate what FSGroup is used in the SecurityContext.
	Type *string `json:"type,omitempty"`
}

// NewV1FSGroupStrategyOptions instantiates a new V1FSGroupStrategyOptions object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1FSGroupStrategyOptions() *V1FSGroupStrategyOptions {
	this := V1FSGroupStrategyOptions{}
	return &this
}

// NewV1FSGroupStrategyOptionsWithDefaults instantiates a new V1FSGroupStrategyOptions object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1FSGroupStrategyOptionsWithDefaults() *V1FSGroupStrategyOptions {
	this := V1FSGroupStrategyOptions{}
	return &this
}

// GetRanges returns the Ranges field value if set, zero value otherwise.
func (o *V1FSGroupStrategyOptions) GetRanges() []V1IDRange {
	if o == nil || IsNil(o.Ranges) {
		var ret []V1IDRange
		return ret
	}
	return o.Ranges
}

// GetRangesOk returns a tuple with the Ranges field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1FSGroupStrategyOptions) GetRangesOk() ([]V1IDRange, bool) {
	if o == nil || IsNil(o.Ranges) {
		return nil, false
	}
	return o.Ranges, true
}

// HasRanges returns a boolean if a field has been set.
func (o *V1FSGroupStrategyOptions) HasRanges() bool {
	if o != nil && !IsNil(o.Ranges) {
		return true
	}

	return false
}

// SetRanges gets a reference to the given []V1IDRange and assigns it to the Ranges field.
func (o *V1FSGroupStrategyOptions) SetRanges(v []V1IDRange) {
	o.Ranges = v
}

// GetType returns the Type field value if set, zero value otherwise.
func (o *V1FSGroupStrategyOptions) GetType() string {
	if o == nil || IsNil(o.Type) {
		var ret string
		return ret
	}
	return *o.Type
}

// GetTypeOk returns a tuple with the Type field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1FSGroupStrategyOptions) GetTypeOk() (*string, bool) {
	if o == nil || IsNil(o.Type) {
		return nil, false
	}
	return o.Type, true
}

// HasType returns a boolean if a field has been set.
func (o *V1FSGroupStrategyOptions) HasType() bool {
	if o != nil && !IsNil(o.Type) {
		return true
	}

	return false
}

// SetType gets a reference to the given string and assigns it to the Type field.
func (o *V1FSGroupStrategyOptions) SetType(v string) {
	o.Type = &v
}

func (o V1FSGroupStrategyOptions) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1FSGroupStrategyOptions) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Ranges) {
		toSerialize["ranges"] = o.Ranges
	}
	if !IsNil(o.Type) {
		toSerialize["type"] = o.Type
	}
	return toSerialize, nil
}

type NullableV1FSGroupStrategyOptions struct {
	value *V1FSGroupStrategyOptions
	isSet bool
}

func (v NullableV1FSGroupStrategyOptions) Get() *V1FSGroupStrategyOptions {
	return v.value
}

func (v *NullableV1FSGroupStrategyOptions) Set(val *V1FSGroupStrategyOptions) {
	v.value = val
	v.isSet = true
}

func (v NullableV1FSGroupStrategyOptions) IsSet() bool {
	return v.isSet
}

func (v *NullableV1FSGroupStrategyOptions) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1FSGroupStrategyOptions(val *V1FSGroupStrategyOptions) *NullableV1FSGroupStrategyOptions {
	return &NullableV1FSGroupStrategyOptions{value: val, isSet: true}
}

func (v NullableV1FSGroupStrategyOptions) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1FSGroupStrategyOptions) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


