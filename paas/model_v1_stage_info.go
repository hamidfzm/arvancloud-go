/*
Arvancloud PaaS REST API

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: v1.11
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package paas

import (
	"encoding/json"
)

// checks if the V1StageInfo type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &V1StageInfo{}

// V1StageInfo StageInfo contains details about a build stage.
type V1StageInfo struct {
	// durationMilliseconds identifies how long the stage took to complete in milliseconds. Note: the duration of a stage can exceed the sum of the duration of the steps within the stage as not all actions are accounted for in explicit build steps.
	DurationMilliseconds *int64 `json:"durationMilliseconds,omitempty"`
	// name is a unique identifier for each build stage that occurs.
	Name *string `json:"name,omitempty"`
	// startTime is a timestamp representing the server time when this Stage started. It is represented in RFC3339 form and is in UTC.
	StartTime *string `json:"startTime,omitempty"`
	// steps contains details about each step that occurs during a build stage including start time and duration in milliseconds.
	Steps []V1StepInfo `json:"steps,omitempty"`
}

// NewV1StageInfo instantiates a new V1StageInfo object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewV1StageInfo() *V1StageInfo {
	this := V1StageInfo{}
	return &this
}

// NewV1StageInfoWithDefaults instantiates a new V1StageInfo object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewV1StageInfoWithDefaults() *V1StageInfo {
	this := V1StageInfo{}
	return &this
}

// GetDurationMilliseconds returns the DurationMilliseconds field value if set, zero value otherwise.
func (o *V1StageInfo) GetDurationMilliseconds() int64 {
	if o == nil || IsNil(o.DurationMilliseconds) {
		var ret int64
		return ret
	}
	return *o.DurationMilliseconds
}

// GetDurationMillisecondsOk returns a tuple with the DurationMilliseconds field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1StageInfo) GetDurationMillisecondsOk() (*int64, bool) {
	if o == nil || IsNil(o.DurationMilliseconds) {
		return nil, false
	}
	return o.DurationMilliseconds, true
}

// HasDurationMilliseconds returns a boolean if a field has been set.
func (o *V1StageInfo) HasDurationMilliseconds() bool {
	if o != nil && !IsNil(o.DurationMilliseconds) {
		return true
	}

	return false
}

// SetDurationMilliseconds gets a reference to the given int64 and assigns it to the DurationMilliseconds field.
func (o *V1StageInfo) SetDurationMilliseconds(v int64) {
	o.DurationMilliseconds = &v
}

// GetName returns the Name field value if set, zero value otherwise.
func (o *V1StageInfo) GetName() string {
	if o == nil || IsNil(o.Name) {
		var ret string
		return ret
	}
	return *o.Name
}

// GetNameOk returns a tuple with the Name field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1StageInfo) GetNameOk() (*string, bool) {
	if o == nil || IsNil(o.Name) {
		return nil, false
	}
	return o.Name, true
}

// HasName returns a boolean if a field has been set.
func (o *V1StageInfo) HasName() bool {
	if o != nil && !IsNil(o.Name) {
		return true
	}

	return false
}

// SetName gets a reference to the given string and assigns it to the Name field.
func (o *V1StageInfo) SetName(v string) {
	o.Name = &v
}

// GetStartTime returns the StartTime field value if set, zero value otherwise.
func (o *V1StageInfo) GetStartTime() string {
	if o == nil || IsNil(o.StartTime) {
		var ret string
		return ret
	}
	return *o.StartTime
}

// GetStartTimeOk returns a tuple with the StartTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1StageInfo) GetStartTimeOk() (*string, bool) {
	if o == nil || IsNil(o.StartTime) {
		return nil, false
	}
	return o.StartTime, true
}

// HasStartTime returns a boolean if a field has been set.
func (o *V1StageInfo) HasStartTime() bool {
	if o != nil && !IsNil(o.StartTime) {
		return true
	}

	return false
}

// SetStartTime gets a reference to the given string and assigns it to the StartTime field.
func (o *V1StageInfo) SetStartTime(v string) {
	o.StartTime = &v
}

// GetSteps returns the Steps field value if set, zero value otherwise.
func (o *V1StageInfo) GetSteps() []V1StepInfo {
	if o == nil || IsNil(o.Steps) {
		var ret []V1StepInfo
		return ret
	}
	return o.Steps
}

// GetStepsOk returns a tuple with the Steps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *V1StageInfo) GetStepsOk() ([]V1StepInfo, bool) {
	if o == nil || IsNil(o.Steps) {
		return nil, false
	}
	return o.Steps, true
}

// HasSteps returns a boolean if a field has been set.
func (o *V1StageInfo) HasSteps() bool {
	if o != nil && !IsNil(o.Steps) {
		return true
	}

	return false
}

// SetSteps gets a reference to the given []V1StepInfo and assigns it to the Steps field.
func (o *V1StageInfo) SetSteps(v []V1StepInfo) {
	o.Steps = v
}

func (o V1StageInfo) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o V1StageInfo) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.DurationMilliseconds) {
		toSerialize["durationMilliseconds"] = o.DurationMilliseconds
	}
	if !IsNil(o.Name) {
		toSerialize["name"] = o.Name
	}
	if !IsNil(o.StartTime) {
		toSerialize["startTime"] = o.StartTime
	}
	if !IsNil(o.Steps) {
		toSerialize["steps"] = o.Steps
	}
	return toSerialize, nil
}

type NullableV1StageInfo struct {
	value *V1StageInfo
	isSet bool
}

func (v NullableV1StageInfo) Get() *V1StageInfo {
	return v.value
}

func (v *NullableV1StageInfo) Set(val *V1StageInfo) {
	v.value = val
	v.isSet = true
}

func (v NullableV1StageInfo) IsSet() bool {
	return v.isSet
}

func (v *NullableV1StageInfo) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableV1StageInfo(val *V1StageInfo) *NullableV1StageInfo {
	return &NullableV1StageInfo{value: val, isSet: true}
}

func (v NullableV1StageInfo) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableV1StageInfo) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


