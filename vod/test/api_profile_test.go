/*
Arvan VOD

Testing ProfileAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package vod

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/hamidfzm/arvancloud-go/vod"
)

func Test_vod_ProfileAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test ProfileAPIService ChannelsChannelProfilesGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var channel string

		httpRes, err := apiClient.ProfileAPI.ChannelsChannelProfilesGet(context.Background(), channel).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ProfileAPIService ChannelsChannelProfilesPost", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var channel string

		httpRes, err := apiClient.ProfileAPI.ChannelsChannelProfilesPost(context.Background(), channel).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ProfileAPIService ProfilesProfileDelete", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var profile string

		httpRes, err := apiClient.ProfileAPI.ProfilesProfileDelete(context.Background(), profile).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ProfileAPIService ProfilesProfileGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var profile string

		httpRes, err := apiClient.ProfileAPI.ProfilesProfileGet(context.Background(), profile).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ProfileAPIService ProfilesProfilePatch", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var profile string

		httpRes, err := apiClient.ProfileAPI.ProfilesProfilePatch(context.Background(), profile).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
