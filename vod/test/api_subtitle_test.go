/*
Arvan VOD

Testing SubtitleAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package vod

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/hamidfzm/arvancloud-go/vod"
)

func Test_vod_SubtitleAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test SubtitleAPIService SubtitlesSubtitleDelete", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var subtitle string

		httpRes, err := apiClient.SubtitleAPI.SubtitlesSubtitleDelete(context.Background(), subtitle).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test SubtitleAPIService SubtitlesSubtitleGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var subtitle string

		httpRes, err := apiClient.SubtitleAPI.SubtitlesSubtitleGet(context.Background(), subtitle).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test SubtitleAPIService VideosVideoSubtitlesGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var video string

		httpRes, err := apiClient.SubtitleAPI.VideosVideoSubtitlesGet(context.Background(), video).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test SubtitleAPIService VideosVideoSubtitlesPost", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var video string

		httpRes, err := apiClient.SubtitleAPI.VideosVideoSubtitlesPost(context.Background(), video).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
