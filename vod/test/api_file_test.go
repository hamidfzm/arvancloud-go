/*
Arvan VOD

Testing FileAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package vod

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/hamidfzm/arvancloud-go/vod"
)

func Test_vod_FileAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test FileAPIService ChannelsChannelFilesFileHead", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var channel string
		var file string

		httpRes, err := apiClient.FileAPI.ChannelsChannelFilesFileHead(context.Background(), channel, file).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test FileAPIService ChannelsChannelFilesFilePatch", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var channel string
		var file string

		httpRes, err := apiClient.FileAPI.ChannelsChannelFilesFilePatch(context.Background(), channel, file).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test FileAPIService ChannelsChannelFilesGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var channel string

		httpRes, err := apiClient.FileAPI.ChannelsChannelFilesGet(context.Background(), channel).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test FileAPIService ChannelsChannelFilesPost", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var channel string

		httpRes, err := apiClient.FileAPI.ChannelsChannelFilesPost(context.Background(), channel).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test FileAPIService FilesFileDelete", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var file string

		httpRes, err := apiClient.FileAPI.FilesFileDelete(context.Background(), file).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test FileAPIService FilesFileGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var file string

		httpRes, err := apiClient.FileAPI.FilesFileGet(context.Background(), file).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
