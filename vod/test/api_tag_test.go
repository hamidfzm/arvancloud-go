/*
Arvan VOD

Testing TagAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package vod

import (
	"context"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
	openapiclient "github.com/hamidfzm/arvancloud-go/vod"
)

func Test_vod_TagAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test TagAPIService TagsGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var filter2 string

		httpRes, err := apiClient.TagAPI.TagsGet(context.Background(), filter2).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test TagAPIService TagsPost", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		httpRes, err := apiClient.TagAPI.TagsPost(context.Background()).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test TagAPIService VideosVideoTagsGet", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var video string

		httpRes, err := apiClient.TagAPI.VideosVideoTagsGet(context.Background(), video).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test TagAPIService VideosVideoTagsPut", func(t *testing.T) {

		t.Skip("skip test")  // remove to run test

		var video string

		httpRes, err := apiClient.TagAPI.VideosVideoTagsPut(context.Background(), video).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
