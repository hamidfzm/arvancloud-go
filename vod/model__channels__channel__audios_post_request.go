/*
Arvan VOD

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vod

import (
	"encoding/json"
)

// checks if the ChannelsChannelAudiosPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChannelsChannelAudiosPostRequest{}

// ChannelsChannelAudiosPostRequest struct for ChannelsChannelAudiosPostRequest
type ChannelsChannelAudiosPostRequest struct {
	// Title of the audio
	Title string `json:"title"`
	// Description of the audio
	Description *string `json:"description,omitempty"`
	// Public URL of audio
	AudioUrl *string `json:"audio_url,omitempty"`
	// ID of the audio file
	FileId *string `json:"file_id,omitempty"`
	// Convert mode
	ConvertMode string `json:"convert_mode"`
	// Set this convert parallel when any audio(s) is converting. Parallel limit is 3
	ParallelConvert *bool `json:"parallel_convert,omitempty"`
	// Array of convert details
	ConvertInfo []ChannelsChannelAudiosPostRequestConvertInfoInner `json:"convert_info,omitempty"`
}

// NewChannelsChannelAudiosPostRequest instantiates a new ChannelsChannelAudiosPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChannelsChannelAudiosPostRequest(title string, convertMode string) *ChannelsChannelAudiosPostRequest {
	this := ChannelsChannelAudiosPostRequest{}
	this.Title = title
	this.ConvertMode = convertMode
	var parallelConvert bool = false
	this.ParallelConvert = &parallelConvert
	return &this
}

// NewChannelsChannelAudiosPostRequestWithDefaults instantiates a new ChannelsChannelAudiosPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChannelsChannelAudiosPostRequestWithDefaults() *ChannelsChannelAudiosPostRequest {
	this := ChannelsChannelAudiosPostRequest{}
	var parallelConvert bool = false
	this.ParallelConvert = &parallelConvert
	return &this
}

// GetTitle returns the Title field value
func (o *ChannelsChannelAudiosPostRequest) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *ChannelsChannelAudiosPostRequest) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *ChannelsChannelAudiosPostRequest) SetTitle(v string) {
	o.Title = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ChannelsChannelAudiosPostRequest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelsChannelAudiosPostRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ChannelsChannelAudiosPostRequest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ChannelsChannelAudiosPostRequest) SetDescription(v string) {
	o.Description = &v
}

// GetAudioUrl returns the AudioUrl field value if set, zero value otherwise.
func (o *ChannelsChannelAudiosPostRequest) GetAudioUrl() string {
	if o == nil || IsNil(o.AudioUrl) {
		var ret string
		return ret
	}
	return *o.AudioUrl
}

// GetAudioUrlOk returns a tuple with the AudioUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelsChannelAudiosPostRequest) GetAudioUrlOk() (*string, bool) {
	if o == nil || IsNil(o.AudioUrl) {
		return nil, false
	}
	return o.AudioUrl, true
}

// HasAudioUrl returns a boolean if a field has been set.
func (o *ChannelsChannelAudiosPostRequest) HasAudioUrl() bool {
	if o != nil && !IsNil(o.AudioUrl) {
		return true
	}

	return false
}

// SetAudioUrl gets a reference to the given string and assigns it to the AudioUrl field.
func (o *ChannelsChannelAudiosPostRequest) SetAudioUrl(v string) {
	o.AudioUrl = &v
}

// GetFileId returns the FileId field value if set, zero value otherwise.
func (o *ChannelsChannelAudiosPostRequest) GetFileId() string {
	if o == nil || IsNil(o.FileId) {
		var ret string
		return ret
	}
	return *o.FileId
}

// GetFileIdOk returns a tuple with the FileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelsChannelAudiosPostRequest) GetFileIdOk() (*string, bool) {
	if o == nil || IsNil(o.FileId) {
		return nil, false
	}
	return o.FileId, true
}

// HasFileId returns a boolean if a field has been set.
func (o *ChannelsChannelAudiosPostRequest) HasFileId() bool {
	if o != nil && !IsNil(o.FileId) {
		return true
	}

	return false
}

// SetFileId gets a reference to the given string and assigns it to the FileId field.
func (o *ChannelsChannelAudiosPostRequest) SetFileId(v string) {
	o.FileId = &v
}

// GetConvertMode returns the ConvertMode field value
func (o *ChannelsChannelAudiosPostRequest) GetConvertMode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ConvertMode
}

// GetConvertModeOk returns a tuple with the ConvertMode field value
// and a boolean to check if the value has been set.
func (o *ChannelsChannelAudiosPostRequest) GetConvertModeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ConvertMode, true
}

// SetConvertMode sets field value
func (o *ChannelsChannelAudiosPostRequest) SetConvertMode(v string) {
	o.ConvertMode = v
}

// GetParallelConvert returns the ParallelConvert field value if set, zero value otherwise.
func (o *ChannelsChannelAudiosPostRequest) GetParallelConvert() bool {
	if o == nil || IsNil(o.ParallelConvert) {
		var ret bool
		return ret
	}
	return *o.ParallelConvert
}

// GetParallelConvertOk returns a tuple with the ParallelConvert field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelsChannelAudiosPostRequest) GetParallelConvertOk() (*bool, bool) {
	if o == nil || IsNil(o.ParallelConvert) {
		return nil, false
	}
	return o.ParallelConvert, true
}

// HasParallelConvert returns a boolean if a field has been set.
func (o *ChannelsChannelAudiosPostRequest) HasParallelConvert() bool {
	if o != nil && !IsNil(o.ParallelConvert) {
		return true
	}

	return false
}

// SetParallelConvert gets a reference to the given bool and assigns it to the ParallelConvert field.
func (o *ChannelsChannelAudiosPostRequest) SetParallelConvert(v bool) {
	o.ParallelConvert = &v
}

// GetConvertInfo returns the ConvertInfo field value if set, zero value otherwise.
func (o *ChannelsChannelAudiosPostRequest) GetConvertInfo() []ChannelsChannelAudiosPostRequestConvertInfoInner {
	if o == nil || IsNil(o.ConvertInfo) {
		var ret []ChannelsChannelAudiosPostRequestConvertInfoInner
		return ret
	}
	return o.ConvertInfo
}

// GetConvertInfoOk returns a tuple with the ConvertInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelsChannelAudiosPostRequest) GetConvertInfoOk() ([]ChannelsChannelAudiosPostRequestConvertInfoInner, bool) {
	if o == nil || IsNil(o.ConvertInfo) {
		return nil, false
	}
	return o.ConvertInfo, true
}

// HasConvertInfo returns a boolean if a field has been set.
func (o *ChannelsChannelAudiosPostRequest) HasConvertInfo() bool {
	if o != nil && !IsNil(o.ConvertInfo) {
		return true
	}

	return false
}

// SetConvertInfo gets a reference to the given []ChannelsChannelAudiosPostRequestConvertInfoInner and assigns it to the ConvertInfo field.
func (o *ChannelsChannelAudiosPostRequest) SetConvertInfo(v []ChannelsChannelAudiosPostRequestConvertInfoInner) {
	o.ConvertInfo = v
}

func (o ChannelsChannelAudiosPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChannelsChannelAudiosPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["title"] = o.Title
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.AudioUrl) {
		toSerialize["audio_url"] = o.AudioUrl
	}
	if !IsNil(o.FileId) {
		toSerialize["file_id"] = o.FileId
	}
	toSerialize["convert_mode"] = o.ConvertMode
	if !IsNil(o.ParallelConvert) {
		toSerialize["parallel_convert"] = o.ParallelConvert
	}
	if !IsNil(o.ConvertInfo) {
		toSerialize["convert_info"] = o.ConvertInfo
	}
	return toSerialize, nil
}

type NullableChannelsChannelAudiosPostRequest struct {
	value *ChannelsChannelAudiosPostRequest
	isSet bool
}

func (v NullableChannelsChannelAudiosPostRequest) Get() *ChannelsChannelAudiosPostRequest {
	return v.value
}

func (v *NullableChannelsChannelAudiosPostRequest) Set(val *ChannelsChannelAudiosPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableChannelsChannelAudiosPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableChannelsChannelAudiosPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChannelsChannelAudiosPostRequest(val *ChannelsChannelAudiosPostRequest) *NullableChannelsChannelAudiosPostRequest {
	return &NullableChannelsChannelAudiosPostRequest{value: val, isSet: true}
}

func (v NullableChannelsChannelAudiosPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChannelsChannelAudiosPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


