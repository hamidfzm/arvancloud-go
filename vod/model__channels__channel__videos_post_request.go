/*
Arvan VOD

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vod

import (
	"encoding/json"
)

// checks if the ChannelsChannelVideosPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChannelsChannelVideosPostRequest{}

// ChannelsChannelVideosPostRequest struct for ChannelsChannelVideosPostRequest
type ChannelsChannelVideosPostRequest struct {
	// Title of the video
	Title string `json:"title"`
	// Description of the video
	Description *string `json:"description,omitempty"`
	// Public URL of video
	VideoUrl *string `json:"video_url,omitempty"`
	// ID of the video file
	FileId *string `json:"file_id,omitempty"`
	// Convert mode
	ConvertMode string `json:"convert_mode"`
	// The profile ID that video convert with it (priority is with video properties)
	ProfileId *string `json:"profile_id,omitempty"`
	// Set this convert parallel when any video(s) is converting. Parallel limit is 3
	ParallelConvert *bool `json:"parallel_convert,omitempty"`
	// Screenshot time for generate thumbnail for video in seconds
	ThumbnailTime *int32 `json:"thumbnail_time,omitempty"`
	// If you want to use watermark for a video, use this ID
	WatermarkId *string `json:"watermark_id,omitempty"`
	// Area of the watermark if watermark_id presents
	WatermarkArea *string `json:"watermark_area,omitempty"`
	// Array of convert details
	ConvertInfo []ChannelsChannelProfilesPostRequestConvertInfoInner `json:"convert_info,omitempty"`
	// Array of option details
	Options []ChannelsChannelProfilesPostRequestOptionsInner `json:"options,omitempty"`
}

// NewChannelsChannelVideosPostRequest instantiates a new ChannelsChannelVideosPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChannelsChannelVideosPostRequest(title string, convertMode string) *ChannelsChannelVideosPostRequest {
	this := ChannelsChannelVideosPostRequest{}
	this.Title = title
	this.ConvertMode = convertMode
	var parallelConvert bool = false
	this.ParallelConvert = &parallelConvert
	return &this
}

// NewChannelsChannelVideosPostRequestWithDefaults instantiates a new ChannelsChannelVideosPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChannelsChannelVideosPostRequestWithDefaults() *ChannelsChannelVideosPostRequest {
	this := ChannelsChannelVideosPostRequest{}
	var parallelConvert bool = false
	this.ParallelConvert = &parallelConvert
	return &this
}

// GetTitle returns the Title field value
func (o *ChannelsChannelVideosPostRequest) GetTitle() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.Title
}

// GetTitleOk returns a tuple with the Title field value
// and a boolean to check if the value has been set.
func (o *ChannelsChannelVideosPostRequest) GetTitleOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.Title, true
}

// SetTitle sets field value
func (o *ChannelsChannelVideosPostRequest) SetTitle(v string) {
	o.Title = v
}

// GetDescription returns the Description field value if set, zero value otherwise.
func (o *ChannelsChannelVideosPostRequest) GetDescription() string {
	if o == nil || IsNil(o.Description) {
		var ret string
		return ret
	}
	return *o.Description
}

// GetDescriptionOk returns a tuple with the Description field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelsChannelVideosPostRequest) GetDescriptionOk() (*string, bool) {
	if o == nil || IsNil(o.Description) {
		return nil, false
	}
	return o.Description, true
}

// HasDescription returns a boolean if a field has been set.
func (o *ChannelsChannelVideosPostRequest) HasDescription() bool {
	if o != nil && !IsNil(o.Description) {
		return true
	}

	return false
}

// SetDescription gets a reference to the given string and assigns it to the Description field.
func (o *ChannelsChannelVideosPostRequest) SetDescription(v string) {
	o.Description = &v
}

// GetVideoUrl returns the VideoUrl field value if set, zero value otherwise.
func (o *ChannelsChannelVideosPostRequest) GetVideoUrl() string {
	if o == nil || IsNil(o.VideoUrl) {
		var ret string
		return ret
	}
	return *o.VideoUrl
}

// GetVideoUrlOk returns a tuple with the VideoUrl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelsChannelVideosPostRequest) GetVideoUrlOk() (*string, bool) {
	if o == nil || IsNil(o.VideoUrl) {
		return nil, false
	}
	return o.VideoUrl, true
}

// HasVideoUrl returns a boolean if a field has been set.
func (o *ChannelsChannelVideosPostRequest) HasVideoUrl() bool {
	if o != nil && !IsNil(o.VideoUrl) {
		return true
	}

	return false
}

// SetVideoUrl gets a reference to the given string and assigns it to the VideoUrl field.
func (o *ChannelsChannelVideosPostRequest) SetVideoUrl(v string) {
	o.VideoUrl = &v
}

// GetFileId returns the FileId field value if set, zero value otherwise.
func (o *ChannelsChannelVideosPostRequest) GetFileId() string {
	if o == nil || IsNil(o.FileId) {
		var ret string
		return ret
	}
	return *o.FileId
}

// GetFileIdOk returns a tuple with the FileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelsChannelVideosPostRequest) GetFileIdOk() (*string, bool) {
	if o == nil || IsNil(o.FileId) {
		return nil, false
	}
	return o.FileId, true
}

// HasFileId returns a boolean if a field has been set.
func (o *ChannelsChannelVideosPostRequest) HasFileId() bool {
	if o != nil && !IsNil(o.FileId) {
		return true
	}

	return false
}

// SetFileId gets a reference to the given string and assigns it to the FileId field.
func (o *ChannelsChannelVideosPostRequest) SetFileId(v string) {
	o.FileId = &v
}

// GetConvertMode returns the ConvertMode field value
func (o *ChannelsChannelVideosPostRequest) GetConvertMode() string {
	if o == nil {
		var ret string
		return ret
	}

	return o.ConvertMode
}

// GetConvertModeOk returns a tuple with the ConvertMode field value
// and a boolean to check if the value has been set.
func (o *ChannelsChannelVideosPostRequest) GetConvertModeOk() (*string, bool) {
	if o == nil {
		return nil, false
	}
	return &o.ConvertMode, true
}

// SetConvertMode sets field value
func (o *ChannelsChannelVideosPostRequest) SetConvertMode(v string) {
	o.ConvertMode = v
}

// GetProfileId returns the ProfileId field value if set, zero value otherwise.
func (o *ChannelsChannelVideosPostRequest) GetProfileId() string {
	if o == nil || IsNil(o.ProfileId) {
		var ret string
		return ret
	}
	return *o.ProfileId
}

// GetProfileIdOk returns a tuple with the ProfileId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelsChannelVideosPostRequest) GetProfileIdOk() (*string, bool) {
	if o == nil || IsNil(o.ProfileId) {
		return nil, false
	}
	return o.ProfileId, true
}

// HasProfileId returns a boolean if a field has been set.
func (o *ChannelsChannelVideosPostRequest) HasProfileId() bool {
	if o != nil && !IsNil(o.ProfileId) {
		return true
	}

	return false
}

// SetProfileId gets a reference to the given string and assigns it to the ProfileId field.
func (o *ChannelsChannelVideosPostRequest) SetProfileId(v string) {
	o.ProfileId = &v
}

// GetParallelConvert returns the ParallelConvert field value if set, zero value otherwise.
func (o *ChannelsChannelVideosPostRequest) GetParallelConvert() bool {
	if o == nil || IsNil(o.ParallelConvert) {
		var ret bool
		return ret
	}
	return *o.ParallelConvert
}

// GetParallelConvertOk returns a tuple with the ParallelConvert field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelsChannelVideosPostRequest) GetParallelConvertOk() (*bool, bool) {
	if o == nil || IsNil(o.ParallelConvert) {
		return nil, false
	}
	return o.ParallelConvert, true
}

// HasParallelConvert returns a boolean if a field has been set.
func (o *ChannelsChannelVideosPostRequest) HasParallelConvert() bool {
	if o != nil && !IsNil(o.ParallelConvert) {
		return true
	}

	return false
}

// SetParallelConvert gets a reference to the given bool and assigns it to the ParallelConvert field.
func (o *ChannelsChannelVideosPostRequest) SetParallelConvert(v bool) {
	o.ParallelConvert = &v
}

// GetThumbnailTime returns the ThumbnailTime field value if set, zero value otherwise.
func (o *ChannelsChannelVideosPostRequest) GetThumbnailTime() int32 {
	if o == nil || IsNil(o.ThumbnailTime) {
		var ret int32
		return ret
	}
	return *o.ThumbnailTime
}

// GetThumbnailTimeOk returns a tuple with the ThumbnailTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelsChannelVideosPostRequest) GetThumbnailTimeOk() (*int32, bool) {
	if o == nil || IsNil(o.ThumbnailTime) {
		return nil, false
	}
	return o.ThumbnailTime, true
}

// HasThumbnailTime returns a boolean if a field has been set.
func (o *ChannelsChannelVideosPostRequest) HasThumbnailTime() bool {
	if o != nil && !IsNil(o.ThumbnailTime) {
		return true
	}

	return false
}

// SetThumbnailTime gets a reference to the given int32 and assigns it to the ThumbnailTime field.
func (o *ChannelsChannelVideosPostRequest) SetThumbnailTime(v int32) {
	o.ThumbnailTime = &v
}

// GetWatermarkId returns the WatermarkId field value if set, zero value otherwise.
func (o *ChannelsChannelVideosPostRequest) GetWatermarkId() string {
	if o == nil || IsNil(o.WatermarkId) {
		var ret string
		return ret
	}
	return *o.WatermarkId
}

// GetWatermarkIdOk returns a tuple with the WatermarkId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelsChannelVideosPostRequest) GetWatermarkIdOk() (*string, bool) {
	if o == nil || IsNil(o.WatermarkId) {
		return nil, false
	}
	return o.WatermarkId, true
}

// HasWatermarkId returns a boolean if a field has been set.
func (o *ChannelsChannelVideosPostRequest) HasWatermarkId() bool {
	if o != nil && !IsNil(o.WatermarkId) {
		return true
	}

	return false
}

// SetWatermarkId gets a reference to the given string and assigns it to the WatermarkId field.
func (o *ChannelsChannelVideosPostRequest) SetWatermarkId(v string) {
	o.WatermarkId = &v
}

// GetWatermarkArea returns the WatermarkArea field value if set, zero value otherwise.
func (o *ChannelsChannelVideosPostRequest) GetWatermarkArea() string {
	if o == nil || IsNil(o.WatermarkArea) {
		var ret string
		return ret
	}
	return *o.WatermarkArea
}

// GetWatermarkAreaOk returns a tuple with the WatermarkArea field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelsChannelVideosPostRequest) GetWatermarkAreaOk() (*string, bool) {
	if o == nil || IsNil(o.WatermarkArea) {
		return nil, false
	}
	return o.WatermarkArea, true
}

// HasWatermarkArea returns a boolean if a field has been set.
func (o *ChannelsChannelVideosPostRequest) HasWatermarkArea() bool {
	if o != nil && !IsNil(o.WatermarkArea) {
		return true
	}

	return false
}

// SetWatermarkArea gets a reference to the given string and assigns it to the WatermarkArea field.
func (o *ChannelsChannelVideosPostRequest) SetWatermarkArea(v string) {
	o.WatermarkArea = &v
}

// GetConvertInfo returns the ConvertInfo field value if set, zero value otherwise.
func (o *ChannelsChannelVideosPostRequest) GetConvertInfo() []ChannelsChannelProfilesPostRequestConvertInfoInner {
	if o == nil || IsNil(o.ConvertInfo) {
		var ret []ChannelsChannelProfilesPostRequestConvertInfoInner
		return ret
	}
	return o.ConvertInfo
}

// GetConvertInfoOk returns a tuple with the ConvertInfo field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelsChannelVideosPostRequest) GetConvertInfoOk() ([]ChannelsChannelProfilesPostRequestConvertInfoInner, bool) {
	if o == nil || IsNil(o.ConvertInfo) {
		return nil, false
	}
	return o.ConvertInfo, true
}

// HasConvertInfo returns a boolean if a field has been set.
func (o *ChannelsChannelVideosPostRequest) HasConvertInfo() bool {
	if o != nil && !IsNil(o.ConvertInfo) {
		return true
	}

	return false
}

// SetConvertInfo gets a reference to the given []ChannelsChannelProfilesPostRequestConvertInfoInner and assigns it to the ConvertInfo field.
func (o *ChannelsChannelVideosPostRequest) SetConvertInfo(v []ChannelsChannelProfilesPostRequestConvertInfoInner) {
	o.ConvertInfo = v
}

// GetOptions returns the Options field value if set, zero value otherwise.
func (o *ChannelsChannelVideosPostRequest) GetOptions() []ChannelsChannelProfilesPostRequestOptionsInner {
	if o == nil || IsNil(o.Options) {
		var ret []ChannelsChannelProfilesPostRequestOptionsInner
		return ret
	}
	return o.Options
}

// GetOptionsOk returns a tuple with the Options field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelsChannelVideosPostRequest) GetOptionsOk() ([]ChannelsChannelProfilesPostRequestOptionsInner, bool) {
	if o == nil || IsNil(o.Options) {
		return nil, false
	}
	return o.Options, true
}

// HasOptions returns a boolean if a field has been set.
func (o *ChannelsChannelVideosPostRequest) HasOptions() bool {
	if o != nil && !IsNil(o.Options) {
		return true
	}

	return false
}

// SetOptions gets a reference to the given []ChannelsChannelProfilesPostRequestOptionsInner and assigns it to the Options field.
func (o *ChannelsChannelVideosPostRequest) SetOptions(v []ChannelsChannelProfilesPostRequestOptionsInner) {
	o.Options = v
}

func (o ChannelsChannelVideosPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChannelsChannelVideosPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	toSerialize["title"] = o.Title
	if !IsNil(o.Description) {
		toSerialize["description"] = o.Description
	}
	if !IsNil(o.VideoUrl) {
		toSerialize["video_url"] = o.VideoUrl
	}
	if !IsNil(o.FileId) {
		toSerialize["file_id"] = o.FileId
	}
	toSerialize["convert_mode"] = o.ConvertMode
	if !IsNil(o.ProfileId) {
		toSerialize["profile_id"] = o.ProfileId
	}
	if !IsNil(o.ParallelConvert) {
		toSerialize["parallel_convert"] = o.ParallelConvert
	}
	if !IsNil(o.ThumbnailTime) {
		toSerialize["thumbnail_time"] = o.ThumbnailTime
	}
	if !IsNil(o.WatermarkId) {
		toSerialize["watermark_id"] = o.WatermarkId
	}
	if !IsNil(o.WatermarkArea) {
		toSerialize["watermark_area"] = o.WatermarkArea
	}
	if !IsNil(o.ConvertInfo) {
		toSerialize["convert_info"] = o.ConvertInfo
	}
	if !IsNil(o.Options) {
		toSerialize["options"] = o.Options
	}
	return toSerialize, nil
}

type NullableChannelsChannelVideosPostRequest struct {
	value *ChannelsChannelVideosPostRequest
	isSet bool
}

func (v NullableChannelsChannelVideosPostRequest) Get() *ChannelsChannelVideosPostRequest {
	return v.value
}

func (v *NullableChannelsChannelVideosPostRequest) Set(val *ChannelsChannelVideosPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableChannelsChannelVideosPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableChannelsChannelVideosPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChannelsChannelVideosPostRequest(val *ChannelsChannelVideosPostRequest) *NullableChannelsChannelVideosPostRequest {
	return &NullableChannelsChannelVideosPostRequest{value: val, isSet: true}
}

func (v NullableChannelsChannelVideosPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChannelsChannelVideosPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


