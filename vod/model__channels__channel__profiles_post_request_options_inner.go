/*
Arvan VOD

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vod

import (
	"encoding/json"
)

// checks if the ChannelsChannelProfilesPostRequestOptionsInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChannelsChannelProfilesPostRequestOptionsInner{}

// ChannelsChannelProfilesPostRequestOptionsInner struct for ChannelsChannelProfilesPostRequestOptionsInner
type ChannelsChannelProfilesPostRequestOptionsInner struct {
	// minimum: 0 maximum: 16, Sets the amount of b frames.
	Bframe *int32 `json:"bframe,omitempty"`
	// If three-pass encoding is used and a level is set for the encoder,      *                          the bitrate for some segments may exceed the bitrate limit which is      *                          defined by the level.      *                          Accepted values: 1,2,3,4,5,1.1,1.2,1.3,2.1,2.2,3.1,3.2,4.1,4.2,5.1,5.2
	Level *string `json:"level,omitempty"`
	// Enable or disable CABAC and it should be boolean
	Cabac *bool `json:"cabac,omitempty"`
	// Sets the constant rate factor for quality-based variable bitrate.      *                          Either bitrate or crf is required.      *                          Minimum value should be 0 and the maximum would be 51
	Crf *int32 `json:"crf,omitempty"`
	// Minimum GOP length, the minimum distance between I-frames.      *                          Minimum value should be 1 and the maximum would be 6
	MinGop *int32 `json:"minGop,omitempty"`
	// Minimum interval in seconds between key frames.      *                          Minimum value should be 1 and the maximum would be 6
	MinKeyframeInterval *int32 `json:"minKeyframeInterval,omitempty"`
	// bitrate_tolerance
	BitrateTolerance *string `json:"bitrate_tolerance,omitempty"`
	// Minimum value should be 1 and the maximum would be 60
	Fps *int32 `json:"fps,omitempty"`
	// When setting a profile, all other settings must not exceed the limits      *                          which are defined in the profile. Otherwise, a higher profile may      *                          be automatically chosen.
	Profile *string `json:"profile,omitempty"`
}

// NewChannelsChannelProfilesPostRequestOptionsInner instantiates a new ChannelsChannelProfilesPostRequestOptionsInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChannelsChannelProfilesPostRequestOptionsInner() *ChannelsChannelProfilesPostRequestOptionsInner {
	this := ChannelsChannelProfilesPostRequestOptionsInner{}
	return &this
}

// NewChannelsChannelProfilesPostRequestOptionsInnerWithDefaults instantiates a new ChannelsChannelProfilesPostRequestOptionsInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChannelsChannelProfilesPostRequestOptionsInnerWithDefaults() *ChannelsChannelProfilesPostRequestOptionsInner {
	this := ChannelsChannelProfilesPostRequestOptionsInner{}
	return &this
}

// GetBframe returns the Bframe field value if set, zero value otherwise.
func (o *ChannelsChannelProfilesPostRequestOptionsInner) GetBframe() int32 {
	if o == nil || IsNil(o.Bframe) {
		var ret int32
		return ret
	}
	return *o.Bframe
}

// GetBframeOk returns a tuple with the Bframe field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelsChannelProfilesPostRequestOptionsInner) GetBframeOk() (*int32, bool) {
	if o == nil || IsNil(o.Bframe) {
		return nil, false
	}
	return o.Bframe, true
}

// HasBframe returns a boolean if a field has been set.
func (o *ChannelsChannelProfilesPostRequestOptionsInner) HasBframe() bool {
	if o != nil && !IsNil(o.Bframe) {
		return true
	}

	return false
}

// SetBframe gets a reference to the given int32 and assigns it to the Bframe field.
func (o *ChannelsChannelProfilesPostRequestOptionsInner) SetBframe(v int32) {
	o.Bframe = &v
}

// GetLevel returns the Level field value if set, zero value otherwise.
func (o *ChannelsChannelProfilesPostRequestOptionsInner) GetLevel() string {
	if o == nil || IsNil(o.Level) {
		var ret string
		return ret
	}
	return *o.Level
}

// GetLevelOk returns a tuple with the Level field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelsChannelProfilesPostRequestOptionsInner) GetLevelOk() (*string, bool) {
	if o == nil || IsNil(o.Level) {
		return nil, false
	}
	return o.Level, true
}

// HasLevel returns a boolean if a field has been set.
func (o *ChannelsChannelProfilesPostRequestOptionsInner) HasLevel() bool {
	if o != nil && !IsNil(o.Level) {
		return true
	}

	return false
}

// SetLevel gets a reference to the given string and assigns it to the Level field.
func (o *ChannelsChannelProfilesPostRequestOptionsInner) SetLevel(v string) {
	o.Level = &v
}

// GetCabac returns the Cabac field value if set, zero value otherwise.
func (o *ChannelsChannelProfilesPostRequestOptionsInner) GetCabac() bool {
	if o == nil || IsNil(o.Cabac) {
		var ret bool
		return ret
	}
	return *o.Cabac
}

// GetCabacOk returns a tuple with the Cabac field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelsChannelProfilesPostRequestOptionsInner) GetCabacOk() (*bool, bool) {
	if o == nil || IsNil(o.Cabac) {
		return nil, false
	}
	return o.Cabac, true
}

// HasCabac returns a boolean if a field has been set.
func (o *ChannelsChannelProfilesPostRequestOptionsInner) HasCabac() bool {
	if o != nil && !IsNil(o.Cabac) {
		return true
	}

	return false
}

// SetCabac gets a reference to the given bool and assigns it to the Cabac field.
func (o *ChannelsChannelProfilesPostRequestOptionsInner) SetCabac(v bool) {
	o.Cabac = &v
}

// GetCrf returns the Crf field value if set, zero value otherwise.
func (o *ChannelsChannelProfilesPostRequestOptionsInner) GetCrf() int32 {
	if o == nil || IsNil(o.Crf) {
		var ret int32
		return ret
	}
	return *o.Crf
}

// GetCrfOk returns a tuple with the Crf field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelsChannelProfilesPostRequestOptionsInner) GetCrfOk() (*int32, bool) {
	if o == nil || IsNil(o.Crf) {
		return nil, false
	}
	return o.Crf, true
}

// HasCrf returns a boolean if a field has been set.
func (o *ChannelsChannelProfilesPostRequestOptionsInner) HasCrf() bool {
	if o != nil && !IsNil(o.Crf) {
		return true
	}

	return false
}

// SetCrf gets a reference to the given int32 and assigns it to the Crf field.
func (o *ChannelsChannelProfilesPostRequestOptionsInner) SetCrf(v int32) {
	o.Crf = &v
}

// GetMinGop returns the MinGop field value if set, zero value otherwise.
func (o *ChannelsChannelProfilesPostRequestOptionsInner) GetMinGop() int32 {
	if o == nil || IsNil(o.MinGop) {
		var ret int32
		return ret
	}
	return *o.MinGop
}

// GetMinGopOk returns a tuple with the MinGop field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelsChannelProfilesPostRequestOptionsInner) GetMinGopOk() (*int32, bool) {
	if o == nil || IsNil(o.MinGop) {
		return nil, false
	}
	return o.MinGop, true
}

// HasMinGop returns a boolean if a field has been set.
func (o *ChannelsChannelProfilesPostRequestOptionsInner) HasMinGop() bool {
	if o != nil && !IsNil(o.MinGop) {
		return true
	}

	return false
}

// SetMinGop gets a reference to the given int32 and assigns it to the MinGop field.
func (o *ChannelsChannelProfilesPostRequestOptionsInner) SetMinGop(v int32) {
	o.MinGop = &v
}

// GetMinKeyframeInterval returns the MinKeyframeInterval field value if set, zero value otherwise.
func (o *ChannelsChannelProfilesPostRequestOptionsInner) GetMinKeyframeInterval() int32 {
	if o == nil || IsNil(o.MinKeyframeInterval) {
		var ret int32
		return ret
	}
	return *o.MinKeyframeInterval
}

// GetMinKeyframeIntervalOk returns a tuple with the MinKeyframeInterval field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelsChannelProfilesPostRequestOptionsInner) GetMinKeyframeIntervalOk() (*int32, bool) {
	if o == nil || IsNil(o.MinKeyframeInterval) {
		return nil, false
	}
	return o.MinKeyframeInterval, true
}

// HasMinKeyframeInterval returns a boolean if a field has been set.
func (o *ChannelsChannelProfilesPostRequestOptionsInner) HasMinKeyframeInterval() bool {
	if o != nil && !IsNil(o.MinKeyframeInterval) {
		return true
	}

	return false
}

// SetMinKeyframeInterval gets a reference to the given int32 and assigns it to the MinKeyframeInterval field.
func (o *ChannelsChannelProfilesPostRequestOptionsInner) SetMinKeyframeInterval(v int32) {
	o.MinKeyframeInterval = &v
}

// GetBitrateTolerance returns the BitrateTolerance field value if set, zero value otherwise.
func (o *ChannelsChannelProfilesPostRequestOptionsInner) GetBitrateTolerance() string {
	if o == nil || IsNil(o.BitrateTolerance) {
		var ret string
		return ret
	}
	return *o.BitrateTolerance
}

// GetBitrateToleranceOk returns a tuple with the BitrateTolerance field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelsChannelProfilesPostRequestOptionsInner) GetBitrateToleranceOk() (*string, bool) {
	if o == nil || IsNil(o.BitrateTolerance) {
		return nil, false
	}
	return o.BitrateTolerance, true
}

// HasBitrateTolerance returns a boolean if a field has been set.
func (o *ChannelsChannelProfilesPostRequestOptionsInner) HasBitrateTolerance() bool {
	if o != nil && !IsNil(o.BitrateTolerance) {
		return true
	}

	return false
}

// SetBitrateTolerance gets a reference to the given string and assigns it to the BitrateTolerance field.
func (o *ChannelsChannelProfilesPostRequestOptionsInner) SetBitrateTolerance(v string) {
	o.BitrateTolerance = &v
}

// GetFps returns the Fps field value if set, zero value otherwise.
func (o *ChannelsChannelProfilesPostRequestOptionsInner) GetFps() int32 {
	if o == nil || IsNil(o.Fps) {
		var ret int32
		return ret
	}
	return *o.Fps
}

// GetFpsOk returns a tuple with the Fps field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelsChannelProfilesPostRequestOptionsInner) GetFpsOk() (*int32, bool) {
	if o == nil || IsNil(o.Fps) {
		return nil, false
	}
	return o.Fps, true
}

// HasFps returns a boolean if a field has been set.
func (o *ChannelsChannelProfilesPostRequestOptionsInner) HasFps() bool {
	if o != nil && !IsNil(o.Fps) {
		return true
	}

	return false
}

// SetFps gets a reference to the given int32 and assigns it to the Fps field.
func (o *ChannelsChannelProfilesPostRequestOptionsInner) SetFps(v int32) {
	o.Fps = &v
}

// GetProfile returns the Profile field value if set, zero value otherwise.
func (o *ChannelsChannelProfilesPostRequestOptionsInner) GetProfile() string {
	if o == nil || IsNil(o.Profile) {
		var ret string
		return ret
	}
	return *o.Profile
}

// GetProfileOk returns a tuple with the Profile field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelsChannelProfilesPostRequestOptionsInner) GetProfileOk() (*string, bool) {
	if o == nil || IsNil(o.Profile) {
		return nil, false
	}
	return o.Profile, true
}

// HasProfile returns a boolean if a field has been set.
func (o *ChannelsChannelProfilesPostRequestOptionsInner) HasProfile() bool {
	if o != nil && !IsNil(o.Profile) {
		return true
	}

	return false
}

// SetProfile gets a reference to the given string and assigns it to the Profile field.
func (o *ChannelsChannelProfilesPostRequestOptionsInner) SetProfile(v string) {
	o.Profile = &v
}

func (o ChannelsChannelProfilesPostRequestOptionsInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChannelsChannelProfilesPostRequestOptionsInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Bframe) {
		toSerialize["bframe"] = o.Bframe
	}
	if !IsNil(o.Level) {
		toSerialize["level"] = o.Level
	}
	if !IsNil(o.Cabac) {
		toSerialize["cabac"] = o.Cabac
	}
	if !IsNil(o.Crf) {
		toSerialize["crf"] = o.Crf
	}
	if !IsNil(o.MinGop) {
		toSerialize["minGop"] = o.MinGop
	}
	if !IsNil(o.MinKeyframeInterval) {
		toSerialize["minKeyframeInterval"] = o.MinKeyframeInterval
	}
	if !IsNil(o.BitrateTolerance) {
		toSerialize["bitrate_tolerance"] = o.BitrateTolerance
	}
	if !IsNil(o.Fps) {
		toSerialize["fps"] = o.Fps
	}
	if !IsNil(o.Profile) {
		toSerialize["profile"] = o.Profile
	}
	return toSerialize, nil
}

type NullableChannelsChannelProfilesPostRequestOptionsInner struct {
	value *ChannelsChannelProfilesPostRequestOptionsInner
	isSet bool
}

func (v NullableChannelsChannelProfilesPostRequestOptionsInner) Get() *ChannelsChannelProfilesPostRequestOptionsInner {
	return v.value
}

func (v *NullableChannelsChannelProfilesPostRequestOptionsInner) Set(val *ChannelsChannelProfilesPostRequestOptionsInner) {
	v.value = val
	v.isSet = true
}

func (v NullableChannelsChannelProfilesPostRequestOptionsInner) IsSet() bool {
	return v.isSet
}

func (v *NullableChannelsChannelProfilesPostRequestOptionsInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChannelsChannelProfilesPostRequestOptionsInner(val *ChannelsChannelProfilesPostRequestOptionsInner) *NullableChannelsChannelProfilesPostRequestOptionsInner {
	return &NullableChannelsChannelProfilesPostRequestOptionsInner{value: val, isSet: true}
}

func (v NullableChannelsChannelProfilesPostRequestOptionsInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChannelsChannelProfilesPostRequestOptionsInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


