/*
Arvan VOD

No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)

API version: 2.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package vod

import (
	"encoding/json"
)

// checks if the ChannelsChannelAudiosPostRequestConvertInfoInner type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &ChannelsChannelAudiosPostRequestConvertInfoInner{}

// ChannelsChannelAudiosPostRequestConvertInfoInner struct for ChannelsChannelAudiosPostRequestConvertInfoInner
type ChannelsChannelAudiosPostRequestConvertInfoInner struct {
	// Audio bitrate in kilobit
	AudioBitrate *int32 `json:"audio_bitrate,omitempty"`
}

// NewChannelsChannelAudiosPostRequestConvertInfoInner instantiates a new ChannelsChannelAudiosPostRequestConvertInfoInner object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewChannelsChannelAudiosPostRequestConvertInfoInner() *ChannelsChannelAudiosPostRequestConvertInfoInner {
	this := ChannelsChannelAudiosPostRequestConvertInfoInner{}
	return &this
}

// NewChannelsChannelAudiosPostRequestConvertInfoInnerWithDefaults instantiates a new ChannelsChannelAudiosPostRequestConvertInfoInner object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewChannelsChannelAudiosPostRequestConvertInfoInnerWithDefaults() *ChannelsChannelAudiosPostRequestConvertInfoInner {
	this := ChannelsChannelAudiosPostRequestConvertInfoInner{}
	return &this
}

// GetAudioBitrate returns the AudioBitrate field value if set, zero value otherwise.
func (o *ChannelsChannelAudiosPostRequestConvertInfoInner) GetAudioBitrate() int32 {
	if o == nil || IsNil(o.AudioBitrate) {
		var ret int32
		return ret
	}
	return *o.AudioBitrate
}

// GetAudioBitrateOk returns a tuple with the AudioBitrate field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *ChannelsChannelAudiosPostRequestConvertInfoInner) GetAudioBitrateOk() (*int32, bool) {
	if o == nil || IsNil(o.AudioBitrate) {
		return nil, false
	}
	return o.AudioBitrate, true
}

// HasAudioBitrate returns a boolean if a field has been set.
func (o *ChannelsChannelAudiosPostRequestConvertInfoInner) HasAudioBitrate() bool {
	if o != nil && !IsNil(o.AudioBitrate) {
		return true
	}

	return false
}

// SetAudioBitrate gets a reference to the given int32 and assigns it to the AudioBitrate field.
func (o *ChannelsChannelAudiosPostRequestConvertInfoInner) SetAudioBitrate(v int32) {
	o.AudioBitrate = &v
}

func (o ChannelsChannelAudiosPostRequestConvertInfoInner) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o ChannelsChannelAudiosPostRequestConvertInfoInner) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.AudioBitrate) {
		toSerialize["audio_bitrate"] = o.AudioBitrate
	}
	return toSerialize, nil
}

type NullableChannelsChannelAudiosPostRequestConvertInfoInner struct {
	value *ChannelsChannelAudiosPostRequestConvertInfoInner
	isSet bool
}

func (v NullableChannelsChannelAudiosPostRequestConvertInfoInner) Get() *ChannelsChannelAudiosPostRequestConvertInfoInner {
	return v.value
}

func (v *NullableChannelsChannelAudiosPostRequestConvertInfoInner) Set(val *ChannelsChannelAudiosPostRequestConvertInfoInner) {
	v.value = val
	v.isSet = true
}

func (v NullableChannelsChannelAudiosPostRequestConvertInfoInner) IsSet() bool {
	return v.isSet
}

func (v *NullableChannelsChannelAudiosPostRequestConvertInfoInner) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableChannelsChannelAudiosPostRequestConvertInfoInner(val *ChannelsChannelAudiosPostRequestConvertInfoInner) *NullableChannelsChannelAudiosPostRequestConvertInfoInner {
	return &NullableChannelsChannelAudiosPostRequestConvertInfoInner{value: val, isSet: true}
}

func (v NullableChannelsChannelAudiosPostRequestConvertInfoInner) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableChannelsChannelAudiosPostRequestConvertInfoInner) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


