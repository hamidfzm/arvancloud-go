/*
ArvanCloud Video Advertising Service

Testing CampaignsAdAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package vads

import (
	"context"
	openapiclient "github.com/hamidfzm/arvancloud-go/vads"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
)

func Test_vads_CampaignsAdAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test CampaignsAdAPIService CampaignsCampaignAdsAdDelete", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var campaign string
		var ad string

		httpRes, err := apiClient.CampaignsAdAPI.CampaignsCampaignAdsAdDelete(context.Background(), campaign, ad).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CampaignsAdAPIService CampaignsCampaignAdsAdGet", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var campaign string
		var ad string

		httpRes, err := apiClient.CampaignsAdAPI.CampaignsCampaignAdsAdGet(context.Background(), campaign, ad).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CampaignsAdAPIService CampaignsCampaignAdsAdPut", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var campaign string
		var ad string

		httpRes, err := apiClient.CampaignsAdAPI.CampaignsCampaignAdsAdPut(context.Background(), campaign, ad).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CampaignsAdAPIService CampaignsCampaignAdsGet", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var campaign string

		httpRes, err := apiClient.CampaignsAdAPI.CampaignsCampaignAdsGet(context.Background(), campaign).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CampaignsAdAPIService CampaignsCampaignAdsPost", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var campaign string

		httpRes, err := apiClient.CampaignsAdAPI.CampaignsCampaignAdsPost(context.Background(), campaign).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
