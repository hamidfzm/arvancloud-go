/*
ArvanCloud Video Advertising Service

Testing ReportAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package vads

import (
	"context"
	openapiclient "github.com/hamidfzm/arvancloud-go/vads"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
)

func Test_vads_ReportAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test ReportAPIService AdsAdReportsTrackEventPeriodGet", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var ad string
		var event string
		var period string

		httpRes, err := apiClient.ReportAPI.AdsAdReportsTrackEventPeriodGet(context.Background(), ad, event, period).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ReportAPIService CampaignsCampaignAdsAdReportsTrackEventPeriodGet", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var campaign string
		var ad string
		var event string
		var period string

		httpRes, err := apiClient.ReportAPI.CampaignsCampaignAdsAdReportsTrackEventPeriodGet(context.Background(), campaign, ad, event, period).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ReportAPIService CampaignsCampaignReportsTrackEventPeriodGet", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var campaign string
		var event string
		var period string

		httpRes, err := apiClient.ReportAPI.CampaignsCampaignReportsTrackEventPeriodGet(context.Background(), campaign, event, period).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
