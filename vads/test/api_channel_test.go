/*
ArvanCloud Video Advertising Service

Testing ChannelAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package vads

import (
	"context"
	openapiclient "github.com/hamidfzm/arvancloud-go/vads"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
)

func Test_vads_ChannelAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test ChannelAPIService ChannelsChannelDelete", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var channel string

		httpRes, err := apiClient.ChannelAPI.ChannelsChannelDelete(context.Background(), channel).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ChannelAPIService ChannelsChannelGet", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var channel string

		httpRes, err := apiClient.ChannelAPI.ChannelsChannelGet(context.Background(), channel).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ChannelAPIService ChannelsChannelPut", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var channel string

		httpRes, err := apiClient.ChannelAPI.ChannelsChannelPut(context.Background(), channel).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ChannelAPIService ChannelsGet", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		httpRes, err := apiClient.ChannelAPI.ChannelsGet(context.Background()).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test ChannelAPIService ChannelsPost", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		httpRes, err := apiClient.ChannelAPI.ChannelsPost(context.Background()).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
