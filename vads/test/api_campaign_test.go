/*
ArvanCloud Video Advertising Service

Testing CampaignAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package vads

import (
	"context"
	openapiclient "github.com/hamidfzm/arvancloud-go/vads"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
)

func Test_vads_CampaignAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test CampaignAPIService CampaignsCampaignDelete", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var campaign string

		httpRes, err := apiClient.CampaignAPI.CampaignsCampaignDelete(context.Background(), campaign).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CampaignAPIService CampaignsCampaignGet", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var campaign string

		httpRes, err := apiClient.CampaignAPI.CampaignsCampaignGet(context.Background(), campaign).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CampaignAPIService CampaignsCampaignPut", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var campaign string

		httpRes, err := apiClient.CampaignAPI.CampaignsCampaignPut(context.Background(), campaign).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CampaignAPIService ChannelsChannelCampaignsGet", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var channel string

		httpRes, err := apiClient.CampaignAPI.ChannelsChannelCampaignsGet(context.Background(), channel).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test CampaignAPIService ChannelsChannelCampaignsPost", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var channel string

		httpRes, err := apiClient.CampaignAPI.ChannelsChannelCampaignsPost(context.Background(), channel).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
