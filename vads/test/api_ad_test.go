/*
ArvanCloud Video Advertising Service

Testing AdAPIService

*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech);

package vads

import (
	"context"
	openapiclient "github.com/hamidfzm/arvancloud-go/vads"
	"github.com/stretchr/testify/assert"
	"github.com/stretchr/testify/require"
	"testing"
)

func Test_vads_AdAPIService(t *testing.T) {

	configuration := openapiclient.NewConfiguration()
	apiClient := openapiclient.NewAPIClient(configuration)

	t.Run("Test AdAPIService AdsAdDelete", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var ad string

		httpRes, err := apiClient.AdAPI.AdsAdDelete(context.Background(), ad).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AdAPIService AdsAdGet", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var ad string

		httpRes, err := apiClient.AdAPI.AdsAdGet(context.Background(), ad).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AdAPIService AdsAdPut", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var ad string

		httpRes, err := apiClient.AdAPI.AdsAdPut(context.Background(), ad).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AdAPIService ChannelsChannelAdsGet", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var channel string

		httpRes, err := apiClient.AdAPI.ChannelsChannelAdsGet(context.Background(), channel).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

	t.Run("Test AdAPIService ChannelsChannelAdsPost", func(t *testing.T) {

		t.Skip("skip test") // remove to run test

		var channel string

		httpRes, err := apiClient.AdAPI.ChannelsChannelAdsPost(context.Background(), channel).Execute()

		require.Nil(t, err)
		assert.Equal(t, 200, httpRes.StatusCode)

	})

}
